//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]




/// <summary>
/// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
/// <para>Display Name: Account</para>
/// </summary>
[EntityLogicalName("account")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
    
    public const string EntityLogicalName = "account";
    
    public const int EntityTypeCode = 1;
    
    public Account() : 
            base(EntityLogicalName) {
    }
    
    public Account(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("accountid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public Guid? AccountId {
        get {
            return GetAttributeValue<Guid?>("accountid");
        }
        set {
            SetId("accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("accountcategorycode")]
    [DisplayName("Category")]
    public Account_AccountCategoryCode? AccountCategoryCode {
        get {
            return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
        }
        set {
            SetOptionSetValue("accountcategorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
    /// <para>Display Name: Classification</para>
    /// </summary>
    [AttributeLogicalName("accountclassificationcode")]
    [DisplayName("Classification")]
    public Account_AccountClassificationCode? AccountClassificationCode {
        get {
            return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
        }
        set {
            SetOptionSetValue("accountclassificationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
    /// <para>Display Name: Account Number</para>
    /// </summary>
    [AttributeLogicalName("accountnumber")]
    [DisplayName("Account Number")]
    [MaxLength(20)]
    public string AccountNumber {
        get {
            return GetAttributeValue<string>("accountnumber");
        }
        set {
            SetAttributeValue("accountnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select a rating to indicate the value of the customer account.</para>
    /// <para>Display Name: Account Rating</para>
    /// </summary>
    [AttributeLogicalName("accountratingcode")]
    [DisplayName("Account Rating")]
    public Account_AccountRatingCode? AccountRatingCode {
        get {
            return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
        }
        set {
            SetOptionSetValue("accountratingcode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 1.</para>
    /// <para>Display Name: Address 1: ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Address 1: ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary address type.</para>
    /// <para>Display Name: Address 1: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Address 1: Address Type")]
    public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the primary address.</para>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("City")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete primary address.</para>
    /// <para>Display Name: Address 1</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Address 1")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the primary address.</para>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Country")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the primary address.</para>
    /// <para>Display Name: Address 1: County</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Address 1: County")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Fax</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Address 1: Fax")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Address 1: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("address1_freighttermscode")]
    [DisplayName("Address 1: Freight Terms")]
    public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
        get {
            return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
        }
        set {
            SetOptionSetValue("address1_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the primary address.</para>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Street 1")]
    [MaxLength(250)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the primary address.</para>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Street 2")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the primary address.</para>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("Street 3")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 1: Name</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Address 1: Name")]
    [MaxLength(200)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the primary address.</para>
    /// <para>Display Name: Address 1: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Address 1: Post Office Box")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the primary address.</para>
    /// <para>Display Name: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the main contact at the account's primary address.</para>
    /// <para>Display Name: Address 1: Primary Contact Name</para>
    /// </summary>
    [AttributeLogicalName("address1_primarycontactname")]
    [DisplayName("Address 1: Primary Contact Name")]
    [MaxLength(100)]
    public string Address1_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address1_primarycontactname");
        }
        set {
            SetAttributeValue("address1_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 1: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Address 1: Shipping Method")]
    public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the primary address.</para>
    /// <para>Display Name: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("State/Province")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the primary address.</para>
    /// <para>Display Name: Address Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Address Phone")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Address 1: Telephone 2")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Address 1: Telephone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 1: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Address 1: UPS Zone")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 1: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Address 1: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 2.</para>
    /// <para>Display Name: Address 2: ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Address 2: ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the secondary address type.</para>
    /// <para>Display Name: Address 2: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Address 2: Address Type")]
    public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the secondary address.</para>
    /// <para>Display Name: Address 2: City</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Address 2: City")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete secondary address.</para>
    /// <para>Display Name: Address 2</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Address 2")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the secondary address.</para>
    /// <para>Display Name: Address 2: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Address 2: Country/Region")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the secondary address.</para>
    /// <para>Display Name: Address 2: County</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Address 2: County")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Fax</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Address 2: Fax")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Address 2: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("address2_freighttermscode")]
    [DisplayName("Address 2: Freight Terms")]
    public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
        get {
            return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
        }
        set {
            SetOptionSetValue("address2_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Address 2: Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Address 2: Street 1")]
    [MaxLength(250)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Address 2: Street 2")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("Address 2: Street 3")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Address 2: Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 2: Name</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Address 2: Name")]
    [MaxLength(200)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the secondary address.</para>
    /// <para>Display Name: Address 2: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Address 2: Post Office Box")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the secondary address.</para>
    /// <para>Display Name: Address 2: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Address 2: ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the main contact at the account's secondary address.</para>
    /// <para>Display Name: Address 2: Primary Contact Name</para>
    /// </summary>
    [AttributeLogicalName("address2_primarycontactname")]
    [DisplayName("Address 2: Primary Contact Name")]
    [MaxLength(100)]
    public string Address2_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address2_primarycontactname");
        }
        set {
            SetAttributeValue("address2_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 2: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Address 2: Shipping Method")]
    public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the secondary address.</para>
    /// <para>Display Name: Address 2: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Address 2: State/Province")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Address 2: Telephone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Address 2: Telephone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Address 2: Telephone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 2: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Address 2: UPS Zone")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 2: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Address 2: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 30</para>
    /// </summary>
    [AttributeLogicalName("aging30")]
    [DisplayName("Aging 30")]
    public decimal? Aging30 {
        get {
            return GetMoneyValue("aging30");
        }
    }
    
    /// <summary>
    /// <para>The base currency equivalent of the aging 30 field.</para>
    /// <para>Display Name: Aging 30 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging30_base")]
    [DisplayName("Aging 30 (Base)")]
    public decimal? Aging30_Base {
        get {
            return GetMoneyValue("aging30_base");
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 60</para>
    /// </summary>
    [AttributeLogicalName("aging60")]
    [DisplayName("Aging 60")]
    public decimal? Aging60 {
        get {
            return GetMoneyValue("aging60");
        }
    }
    
    /// <summary>
    /// <para>The base currency equivalent of the aging 60 field.</para>
    /// <para>Display Name: Aging 60 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging60_base")]
    [DisplayName("Aging 60 (Base)")]
    public decimal? Aging60_Base {
        get {
            return GetMoneyValue("aging60_base");
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 90</para>
    /// </summary>
    [AttributeLogicalName("aging90")]
    [DisplayName("Aging 90")]
    public decimal? Aging90 {
        get {
            return GetMoneyValue("aging90");
        }
    }
    
    /// <summary>
    /// <para>The base currency equivalent of the aging 90 field.</para>
    /// <para>Display Name: Aging 90 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging90_base")]
    [DisplayName("Aging 90 (Base)")]
    public decimal? Aging90_Base {
        get {
            return GetMoneyValue("aging90_base");
        }
    }
    
    /// <summary>
    /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
    /// <para>Display Name: Business Type</para>
    /// </summary>
    [AttributeLogicalName("businesstypecode")]
    [DisplayName("Business Type")]
    public Account_BusinessTypeCode? BusinessTypeCode {
        get {
            return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
        }
        set {
            SetOptionSetValue("businesstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who created the record.</para>
    /// <para>Display Name: Created By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Created By (External Party)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
    /// <para>Display Name: Credit Limit</para>
    /// </summary>
    [AttributeLogicalName("creditlimit")]
    [DisplayName("Credit Limit")]
    public decimal? CreditLimit {
        get {
            return GetMoneyValue("creditlimit");
        }
        set {
            SetMoneyValue("creditlimit", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
    /// <para>Display Name: Credit Limit (Base)</para>
    /// </summary>
    [AttributeLogicalName("creditlimit_base")]
    [DisplayName("Credit Limit (Base)")]
    public decimal? CreditLimit_Base {
        get {
            return GetMoneyValue("creditlimit_base");
        }
    }
    
    /// <summary>
    /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
    /// <para>Display Name: Credit Hold</para>
    /// </summary>
    [AttributeLogicalName("creditonhold")]
    [DisplayName("Credit Hold")]
    public bool? CreditOnHold {
        get {
            return GetAttributeValue<bool?>("creditonhold");
        }
        set {
            SetAttributeValue("creditonhold", value);
        }
    }
    
    /// <summary>
    /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
    /// <para>Display Name: Customer Size</para>
    /// </summary>
    [AttributeLogicalName("customersizecode")]
    [DisplayName("Customer Size")]
    public Account_CustomerSizeCode? CustomerSizeCode {
        get {
            return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
        }
        set {
            SetOptionSetValue("customersizecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the category that best describes the relationship between the account and your organization.</para>
    /// <para>Display Name: Relationship Type</para>
    /// </summary>
    [AttributeLogicalName("customertypecode")]
    [DisplayName("Relationship Type")]
    public Account_CustomerTypeCode? CustomerTypeCode {
        get {
            return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
        }
        set {
            SetOptionSetValue("customertypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("defaultpricelevelid")]
    [DisplayName("Price List")]
    public EntityReference DefaultPriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("defaultpricelevelid");
        }
        set {
            SetAttributeValue("defaultpricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
    /// <para>Display Name: Do not allow Bulk Emails</para>
    /// </summary>
    [AttributeLogicalName("donotbulkemail")]
    [DisplayName("Do not allow Bulk Emails")]
    public bool? DoNotBulkEMail {
        get {
            return GetAttributeValue<bool?>("donotbulkemail");
        }
        set {
            SetAttributeValue("donotbulkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
    /// <para>Display Name: Do not allow Bulk Mails</para>
    /// </summary>
    [AttributeLogicalName("donotbulkpostalmail")]
    [DisplayName("Do not allow Bulk Mails")]
    public bool? DoNotBulkPostalMail {
        get {
            return GetAttributeValue<bool?>("donotbulkpostalmail");
        }
        set {
            SetAttributeValue("donotbulkpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
    /// <para>Display Name: Do not allow Emails</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Do not allow Emails")]
    public bool? DoNotEMail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
        set {
            SetAttributeValue("donotemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Faxes</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Do not allow Faxes")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
        set {
            SetAttributeValue("donotfax", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Phone Calls</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Do not allow Phone Calls")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
        set {
            SetAttributeValue("donotphone", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Mails</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Do not allow Mails")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
        set {
            SetAttributeValue("donotpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
    /// <para>Display Name: Send Marketing Materials</para>
    /// </summary>
    [AttributeLogicalName("donotsendmm")]
    [DisplayName("Send Marketing Materials")]
    public bool? DoNotSendMM {
        get {
            return GetAttributeValue<bool?>("donotsendmm");
        }
        set {
            SetAttributeValue("donotsendmm", value);
        }
    }
    
    /// <summary>
    /// <para>Type the primary email address for the account.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [AttributeLogicalName("emailaddress1")]
    [DisplayName("Email")]
    [MaxLength(100)]
    public string EMailAddress1 {
        get {
            return GetAttributeValue<string>("emailaddress1");
        }
        set {
            SetAttributeValue("emailaddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the secondary email address for the account.</para>
    /// <para>Display Name: Email Address 2</para>
    /// </summary>
    [AttributeLogicalName("emailaddress2")]
    [DisplayName("Email Address 2")]
    [MaxLength(100)]
    public string EMailAddress2 {
        get {
            return GetAttributeValue<string>("emailaddress2");
        }
        set {
            SetAttributeValue("emailaddress2", value);
        }
    }
    
    /// <summary>
    /// <para>Type an alternate email address for the account.</para>
    /// <para>Display Name: Email Address 3</para>
    /// </summary>
    [AttributeLogicalName("emailaddress3")]
    [DisplayName("Email Address 3")]
    [MaxLength(100)]
    public string EMailAddress3 {
        get {
            return GetAttributeValue<string>("emailaddress3");
        }
        set {
            SetAttributeValue("emailaddress3", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Entity Image Id")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the account.</para>
    /// <para>Display Name: Fax</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Fax")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
    /// <para>Display Name: Follow Email Activity</para>
    /// </summary>
    [AttributeLogicalName("followemail")]
    [DisplayName("Follow Email Activity")]
    public bool? FollowEmail {
        get {
            return GetAttributeValue<bool?>("followemail");
        }
        set {
            SetAttributeValue("followemail", value);
        }
    }
    
    /// <summary>
    /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
    /// <para>Display Name: FTP Site</para>
    /// </summary>
    [AttributeLogicalName("ftpsiteurl")]
    [DisplayName("FTP Site")]
    [MaxLength(200)]
    public string FtpSiteURL {
        get {
            return GetAttributeValue<string>("ftpsiteurl");
        }
        set {
            SetAttributeValue("ftpsiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: Industry</para>
    /// </summary>
    [AttributeLogicalName("industrycode")]
    [DisplayName("Industry")]
    public Account_IndustryCode? IndustryCode {
        get {
            return GetOptionSetValue<Account_IndustryCode>("industrycode");
        }
        set {
            SetOptionSetValue("industrycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
    /// <para>Display Name: Last Date Included in Campaign</para>
    /// </summary>
    [AttributeLogicalName("lastusedincampaign")]
    [DisplayName("Last Date Included in Campaign")]
    public DateTime? LastUsedInCampaign {
        get {
            return GetAttributeValue<DateTime?>("lastusedincampaign");
        }
        set {
            SetAttributeValue("lastusedincampaign", value);
        }
    }
    
    /// <summary>
    /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
    /// <para>Display Name: Market Capitalization</para>
    /// </summary>
    [AttributeLogicalName("marketcap")]
    [DisplayName("Market Capitalization")]
    public decimal? MarketCap {
        get {
            return GetMoneyValue("marketcap");
        }
        set {
            SetMoneyValue("marketcap", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the market capitalization converted to the system's default base currency.</para>
    /// <para>Display Name: Market Capitalization (Base)</para>
    /// </summary>
    [AttributeLogicalName("marketcap_base")]
    [DisplayName("Market Capitalization (Base)")]
    public decimal? MarketCap_Base {
        get {
            return GetMoneyValue("marketcap_base");
        }
    }
    
    /// <summary>
    /// <para>Whether is only for marketing</para>
    /// <para>Display Name: Marketing Only</para>
    /// </summary>
    [AttributeLogicalName("marketingonly")]
    [DisplayName("Marketing Only")]
    public bool? MarketingOnly {
        get {
            return GetAttributeValue<bool?>("marketingonly");
        }
        set {
            SetAttributeValue("marketingonly", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the master account that the account was merged with.</para>
    /// <para>Display Name: Master ID</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("Master ID")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
    }
    
    /// <summary>
    /// <para>Shows whether the account has been merged with another account.</para>
    /// <para>Display Name: Merged</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Merged")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who modified the record.</para>
    /// <para>Display Name: Modified By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modified By (External Party)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type the company or business name.</para>
    /// <para>Display Name: Account Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Account Name")]
    [MaxLength(160)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: Number of Employees</para>
    /// </summary>
    [AttributeLogicalName("numberofemployees")]
    [DisplayName("Number of Employees")]
    [Range(0, 1000000000)]
    public int? NumberOfEmployees {
        get {
            return GetAttributeValue<int?>("numberofemployees");
        }
        set {
            SetAttributeValue("numberofemployees", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Number of open opportunities against an account and its child accounts.</para>
    /// <para>Display Name: Open Deals</para>
    /// </summary>
    [AttributeLogicalName("opendeals")]
    [DisplayName("Open Deals")]
    [Range(-2147483648, 2147483647)]
    public int? OpenDeals {
        get {
            return GetAttributeValue<int?>("opendeals");
        }
    }
    
    /// <summary>
    /// <para>Last Updated time of rollup field Open Deals.</para>
    /// <para>Display Name: Open Deals (Last Updated On)</para>
    /// </summary>
    [AttributeLogicalName("opendeals_date")]
    [DisplayName("Open Deals (Last Updated On)")]
    public DateTime? OpenDeals_Date {
        get {
            return GetAttributeValue<DateTime?>("opendeals_date");
        }
    }
    
    /// <summary>
    /// <para>State of rollup field Open Deals.</para>
    /// <para>Display Name: Open Deals (State)</para>
    /// </summary>
    [AttributeLogicalName("opendeals_state")]
    [DisplayName("Open Deals (State)")]
    [Range(-2147483648, 2147483647)]
    public int? OpenDeals_State {
        get {
            return GetAttributeValue<int?>("opendeals_state");
        }
    }
    
    /// <summary>
    /// <para>Sum of open revenue against an account and its child accounts.</para>
    /// <para>Display Name: Open Revenue</para>
    /// </summary>
    [AttributeLogicalName("openrevenue")]
    [DisplayName("Open Revenue")]
    public decimal? OpenRevenue {
        get {
            return GetMoneyValue("openrevenue");
        }
    }
    
    /// <summary>
    /// <para>Value of the Open Revenue in base currency.</para>
    /// <para>Display Name: Open Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_base")]
    [DisplayName("Open Revenue (Base)")]
    public decimal? OpenRevenue_Base {
        get {
            return GetMoneyValue("openrevenue_base");
        }
    }
    
    /// <summary>
    /// <para>Last Updated time of rollup field Open Revenue.</para>
    /// <para>Display Name: Open Revenue (Last Updated On)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_date")]
    [DisplayName("Open Revenue (Last Updated On)")]
    public DateTime? OpenRevenue_Date {
        get {
            return GetAttributeValue<DateTime?>("openrevenue_date");
        }
    }
    
    /// <summary>
    /// <para>State of rollup field Open Revenue.</para>
    /// <para>Display Name: Open Revenue (State)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_state")]
    [DisplayName("Open Revenue (State)")]
    [Range(-2147483648, 2147483647)]
    public int? OpenRevenue_State {
        get {
            return GetAttributeValue<int?>("openrevenue_state");
        }
    }
    
    /// <summary>
    /// <para>Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.</para>
    /// <para>Display Name: Originating Lead</para>
    /// </summary>
    [AttributeLogicalName("originatingleadid")]
    [DisplayName("Originating Lead")]
    public EntityReference OriginatingLeadId {
        get {
            return GetAttributeValue<EntityReference>("originatingleadid");
        }
        set {
            SetAttributeValue("originatingleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the account's ownership structure, such as public or private.</para>
    /// <para>Display Name: Ownership</para>
    /// </summary>
    [AttributeLogicalName("ownershipcode")]
    [DisplayName("Ownership")]
    public Account_OwnershipCode? OwnershipCode {
        get {
            return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
        }
        set {
            SetOptionSetValue("ownershipcode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the business unit that the record owner belongs to.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the account.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the account.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
    /// <para>Display Name: Parent Account</para>
    /// </summary>
    [AttributeLogicalName("parentaccountid")]
    [DisplayName("Parent Account")]
    public EntityReference ParentAccountId {
        get {
            return GetAttributeValue<EntityReference>("parentaccountid");
        }
        set {
            SetAttributeValue("parentaccountid", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
    /// <para>Display Name: Participates in Workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participates in Workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
    /// <para>Display Name: Payment Terms</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Payment Terms")]
    public Account_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred day of the week for service appointments.</para>
    /// <para>Display Name: Preferred Day</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmentdaycode")]
    [DisplayName("Preferred Day")]
    public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
        get {
            return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
        }
        set {
            SetOptionSetValue("preferredappointmentdaycode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred time of day for service appointments.</para>
    /// <para>Display Name: Preferred Time</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmenttimecode")]
    [DisplayName("Preferred Time")]
    public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
        get {
            return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
        }
        set {
            SetOptionSetValue("preferredappointmenttimecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred method of contact.</para>
    /// <para>Display Name: Preferred Method of Contact</para>
    /// </summary>
    [AttributeLogicalName("preferredcontactmethodcode")]
    [DisplayName("Preferred Method of Contact")]
    public Account_PreferredContactMethodCode? PreferredContactMethodCode {
        get {
            return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
        }
        set {
            SetOptionSetValue("preferredcontactmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
    /// <para>Display Name: Preferred Facility/Equipment</para>
    /// </summary>
    [AttributeLogicalName("preferredequipmentid")]
    [DisplayName("Preferred Facility/Equipment")]
    public EntityReference PreferredEquipmentId {
        get {
            return GetAttributeValue<EntityReference>("preferredequipmentid");
        }
        set {
            SetAttributeValue("preferredequipmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the account's preferred service for reference when you schedule service activities.</para>
    /// <para>Display Name: Preferred Service</para>
    /// </summary>
    [AttributeLogicalName("preferredserviceid")]
    [DisplayName("Preferred Service")]
    public EntityReference PreferredServiceId {
        get {
            return GetAttributeValue<EntityReference>("preferredserviceid");
        }
        set {
            SetAttributeValue("preferredserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
    /// <para>Display Name: Preferred User</para>
    /// </summary>
    [AttributeLogicalName("preferredsystemuserid")]
    [DisplayName("Preferred User")]
    public EntityReference PreferredSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("preferredsystemuserid");
        }
        set {
            SetAttributeValue("preferredsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
    /// <para>Display Name: Primary Contact</para>
    /// </summary>
    [AttributeLogicalName("primarycontactid")]
    [DisplayName("Primary Contact")]
    public EntityReference PrimaryContactId {
        get {
            return GetAttributeValue<EntityReference>("primarycontactid");
        }
        set {
            SetAttributeValue("primarycontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Primary Satori ID for Account</para>
    /// <para>Display Name: Primary Satori ID</para>
    /// </summary>
    [AttributeLogicalName("primarysatoriid")]
    [DisplayName("Primary Satori ID")]
    [MaxLength(200)]
    public string PrimarySatoriId {
        get {
            return GetAttributeValue<string>("primarysatoriid");
        }
        set {
            SetAttributeValue("primarysatoriid", value);
        }
    }
    
    /// <summary>
    /// <para>Primary Twitter ID for Account</para>
    /// <para>Display Name: Primary Twitter ID</para>
    /// </summary>
    [AttributeLogicalName("primarytwitterid")]
    [DisplayName("Primary Twitter ID")]
    [MaxLength(128)]
    public string PrimaryTwitterId {
        get {
            return GetAttributeValue<string>("primarytwitterid");
        }
        set {
            SetAttributeValue("primarytwitterid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
    /// <para>Display Name: Annual Revenue</para>
    /// </summary>
    [AttributeLogicalName("revenue")]
    [DisplayName("Annual Revenue")]
    public decimal? Revenue {
        get {
            return GetMoneyValue("revenue");
        }
        set {
            SetMoneyValue("revenue", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Annual Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("revenue_base")]
    [DisplayName("Annual Revenue (Base)")]
    public decimal? Revenue_Base {
        get {
            return GetMoneyValue("revenue_base");
        }
    }
    
    /// <summary>
    /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: SIC Code</para>
    /// </summary>
    [AttributeLogicalName("sic")]
    [DisplayName("SIC Code")]
    [MaxLength(20)]
    public string SIC {
        get {
            return GetAttributeValue<string>("sic");
        }
        set {
            SetAttributeValue("sic", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
    /// <para>Display Name: Shares Outstanding</para>
    /// </summary>
    [AttributeLogicalName("sharesoutstanding")]
    [DisplayName("Shares Outstanding")]
    [Range(0, 1000000000)]
    public int? SharesOutstanding {
        get {
            return GetAttributeValue<int?>("sharesoutstanding");
        }
        set {
            SetAttributeValue("sharesoutstanding", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
    /// <para>Display Name: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Shipping Method")]
    public Account_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public AccountState? StateCode {
        get {
            return GetOptionSetValue<AccountState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the account's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Account_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Account_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
    /// <para>Display Name: Stock Exchange</para>
    /// </summary>
    [AttributeLogicalName("stockexchange")]
    [DisplayName("Stock Exchange")]
    [MaxLength(20)]
    public string StockExchange {
        get {
            return GetAttributeValue<string>("stockexchange");
        }
        set {
            SetAttributeValue("stockexchange", value);
        }
    }
    
    /// <summary>
    /// <para>Number of users or conversations followed the record</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number for this account.</para>
    /// <para>Display Name: Main Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone1")]
    [DisplayName("Main Phone")]
    [MaxLength(50)]
    public string Telephone1 {
        get {
            return GetAttributeValue<string>("telephone1");
        }
        set {
            SetAttributeValue("telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number for this account.</para>
    /// <para>Display Name: Other Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone2")]
    [DisplayName("Other Phone")]
    [MaxLength(50)]
    public string Telephone2 {
        get {
            return GetAttributeValue<string>("telephone2");
        }
        set {
            SetAttributeValue("telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number for this account.</para>
    /// <para>Display Name: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("telephone3")]
    [DisplayName("Telephone 3")]
    [MaxLength(50)]
    public string Telephone3 {
        get {
            return GetAttributeValue<string>("telephone3");
        }
        set {
            SetAttributeValue("telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
    /// <para>Display Name: Territory Code</para>
    /// </summary>
    [AttributeLogicalName("territorycode")]
    [DisplayName("Territory Code")]
    public Account_TerritoryCode? TerritoryCode {
        get {
            return GetOptionSetValue<Account_TerritoryCode>("territorycode");
        }
        set {
            SetOptionSetValue("territorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.</para>
    /// <para>Display Name: Territory</para>
    /// </summary>
    [AttributeLogicalName("territoryid")]
    [DisplayName("Territory")]
    public EntityReference TerritoryId {
        get {
            return GetAttributeValue<EntityReference>("territoryid");
        }
        set {
            SetAttributeValue("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
    /// <para>Display Name: Ticker Symbol</para>
    /// </summary>
    [AttributeLogicalName("tickersymbol")]
    [DisplayName("Ticker Symbol")]
    [MaxLength(10)]
    public string TickerSymbol {
        get {
            return GetAttributeValue<string>("tickersymbol");
        }
        set {
            SetAttributeValue("tickersymbol", value);
        }
    }
    
    /// <summary>
    /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
    /// <para>Display Name: Time Spent by me</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Time Spent by me")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the account.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Type the account's website URL to get quick details about the company profile.</para>
    /// <para>Display Name: Website</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Website")]
    [MaxLength(200)]
    public string WebSiteURL {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
    /// <para>Display Name: Yomi Account Name</para>
    /// </summary>
    [AttributeLogicalName("yominame")]
    [DisplayName("Yomi Account Name")]
    [MaxLength(160)]
    public string YomiName {
        get {
            return GetAttributeValue<string>("yominame");
        }
        set {
            SetAttributeValue("yominame", value);
        }
    }
    
    /// <summary>
    /// <para>Reference to an other account to be used for billing (only to be used if billing account differs)</para>
    /// <para>Display Name: Billing Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_billingaccount")]
    [DisplayName("Billing Account")]
    public EntityReference msdyn_BillingAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_billingaccount");
        }
        set {
            SetAttributeValue("msdyn_billingaccount", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Preferred Resource (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_preferredresource")]
    [DisplayName("Preferred Resource (Deprecated)")]
    public EntityReference msdyn_PreferredResource {
        get {
            return GetAttributeValue<EntityReference>("msdyn_preferredresource");
        }
        set {
            SetAttributeValue("msdyn_preferredresource", value);
        }
    }
    
    /// <summary>
    /// <para>Default Sales Tax Code</para>
    /// <para>Display Name: Sales Tax Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_salestaxcode")]
    [DisplayName("Sales Tax Code")]
    public EntityReference msdyn_SalesTaxCode {
        get {
            return GetAttributeValue<EntityReference>("msdyn_salestaxcode");
        }
        set {
            SetAttributeValue("msdyn_salestaxcode", value);
        }
    }
    
    /// <summary>
    /// <para>The Service Territory this account belongs to. This is used to optimize scheduling and routing</para>
    /// <para>Display Name: Service Territory</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceterritory")]
    [DisplayName("Service Territory")]
    public EntityReference msdyn_ServiceTerritory {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceterritory");
        }
        set {
            SetAttributeValue("msdyn_serviceterritory", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the account is tax exempt.</para>
    /// <para>Display Name: Tax Exempt</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxexempt")]
    [DisplayName("Tax Exempt")]
    public bool? msdyn_TaxExempt {
        get {
            return GetAttributeValue<bool?>("msdyn_taxexempt");
        }
        set {
            SetAttributeValue("msdyn_taxexempt", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the government tax exempt number.</para>
    /// <para>Display Name: Tax Exempt Number</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxexemptnumber")]
    [DisplayName("Tax Exempt Number")]
    [MaxLength(20)]
    public string msdyn_TaxExemptNumber {
        get {
            return GetAttributeValue<string>("msdyn_taxexemptnumber");
        }
        set {
            SetAttributeValue("msdyn_taxexemptnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the travel charge to include on work orders. This value will be multiplied by the travel charge type.</para>
    /// <para>Display Name: Travel Charge</para>
    /// </summary>
    [AttributeLogicalName("msdyn_travelcharge")]
    [DisplayName("Travel Charge")]
    public decimal? msdyn_TravelCharge {
        get {
            return GetMoneyValue("msdyn_travelcharge");
        }
        set {
            SetMoneyValue("msdyn_travelcharge", value);
        }
    }
    
    /// <summary>
    /// <para>Specify how travel is charged for this account.</para>
    /// <para>Display Name: Travel Charge Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_travelchargetype")]
    [DisplayName("Travel Charge Type")]
    public msdyn_travelchargetype? msdyn_TravelChargeType {
        get {
            return GetOptionSetValue<msdyn_travelchargetype>("msdyn_travelchargetype");
        }
        set {
            SetOptionSetValue("msdyn_travelchargetype", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the default instructions to show on new work orders.</para>
    /// <para>Display Name: Work Order Instructions</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderinstructions")]
    [DisplayName("Work Order Instructions")]
    public string msdyn_WorkOrderInstructions {
        get {
            return GetAttributeValue<string>("msdyn_workorderinstructions");
        }
        set {
            SetAttributeValue("msdyn_workorderinstructions", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Travel Charge in base currency.</para>
    /// <para>Display Name: Travel Charge (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_travelcharge_base")]
    [DisplayName("Travel Charge (Base)")]
    public decimal? msdyn_travelcharge_Base {
        get {
            return GetMoneyValue("msdyn_travelcharge_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Hour Template</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workhourtemplate")]
    [DisplayName("Work Hour Template")]
    public EntityReference msdyn_workhourtemplate {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workhourtemplate");
        }
        set {
            SetAttributeValue("msdyn_workhourtemplate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Account Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_accountnameenglish")]
    [DisplayName("Account Name (English)")]
    [MaxLength(100)]
    public string ovs_AccountNameEnglish {
        get {
            return GetAttributeValue<string>("ovs_accountnameenglish");
        }
        set {
            SetAttributeValue("ovs_accountnameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Account Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_accountnamefrench")]
    [DisplayName("Account Name (French)")]
    [MaxLength(100)]
    public string ovs_AccountNameFrench {
        get {
            return GetAttributeValue<string>("ovs_accountnamefrench");
        }
        set {
            SetAttributeValue("ovs_accountnamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>The North American Industry Classification System (NAICS) has been developed by the statistical agencies of Canada, Mexico and the United States.</para>
    /// <para>Display Name: NAICS Code</para>
    /// </summary>
    [AttributeLogicalName("ovs_naicscode")]
    [DisplayName("NAICS Code")]
    [MaxLength(6)]
    public string ovs_NAICSCode {
        get {
            return GetAttributeValue<string>("ovs_naicscode");
        }
        set {
            SetAttributeValue("ovs_naicscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site Type</para>
    /// </summary>
    [AttributeLogicalName("ovs_sitetype")]
    [DisplayName("Site Type")]
    public EntityReference ovs_SiteType {
        get {
            return GetAttributeValue<EntityReference>("ovs_sitetype");
        }
        set {
            SetAttributeValue("ovs_sitetype", value);
        }
    }
    
    /// <summary>
    /// <para>legal name of a Regulated Entity or Site</para>
    /// <para>Display Name: Legal Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_legalname")]
    [DisplayName("Legal Name")]
    [MaxLength(250)]
    public string ovs_legalname {
        get {
            return GetAttributeValue<string>("ovs_legalname");
        }
        set {
            SetAttributeValue("ovs_legalname", value);
        }
    }
    
    /// <summary>
    /// <para>Read-only field on account to show on quick view form.</para>
    /// <para>Display Name: Primary Contact Email</para>
    /// </summary>
    [AttributeLogicalName("ovs_primarycontactemail")]
    [DisplayName("Primary Contact Email")]
    [MaxLength(100)]
    public string ovs_primarycontactemail {
        get {
            return GetAttributeValue<string>("ovs_primarycontactemail");
        }
        set {
            SetAttributeValue("ovs_primarycontactemail", value);
        }
    }
    
    /// <summary>
    /// <para>Read-only field on account to show on quick view form.</para>
    /// <para>Display Name: Primary Contact Phone</para>
    /// </summary>
    [AttributeLogicalName("ovs_primarycontactphone")]
    [DisplayName("Primary Contact Phone")]
    [MaxLength(100)]
    public string ovs_primarycontactphone {
        get {
            return GetAttributeValue<string>("ovs_primarycontactphone");
        }
        set {
            SetAttributeValue("ovs_primarycontactphone", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_country")]
    [DisplayName("Country")]
    public EntityReference ts_Country {
        get {
            return GetAttributeValue<EntityReference>("ts_country");
        }
        set {
            SetAttributeValue("ts_country", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("ts_msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference ts_msdyn_workorder {
        get {
            return GetAttributeValue<EntityReference>("ts_msdyn_workorder");
        }
        set {
            SetAttributeValue("ts_msdyn_workorder", value);
        }
    }
    
    [RelationshipSchemaName("Account_ActivityPointers")]
    public IEnumerable<ActivityPointer> Account_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Account_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Account_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Appointments")]
    public IEnumerable<Appointment> Account_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Account_Appointments", null);
        }
        set {
            SetRelatedEntities("Account_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Email_EmailSender")]
    public IEnumerable<Email> Account_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Account_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Account_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Email_SendersAccount")]
    public IEnumerable<Email> Account_Email_SendersAccount {
        get {
            return GetRelatedEntities<Email>("Account_Email_SendersAccount", null);
        }
        set {
            SetRelatedEntities("Account_Email_SendersAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Emails")]
    public IEnumerable<Email> Account_Emails {
        get {
            return GetRelatedEntities<Email>("Account_Emails", null);
        }
        set {
            SetRelatedEntities("Account_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Phonecalls")]
    public IEnumerable<PhoneCall> Account_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Account_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Account_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_ProcessSessions")]
    public IEnumerable<ProcessSession> Account_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Account_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Account_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Account_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Account_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Account_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Account_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Account_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Account_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_SyncErrors")]
    public IEnumerable<SyncError> Account_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Account_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Account_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Tasks")]
    public IEnumerable<Task> Account_Tasks {
        get {
            return GetRelatedEntities<Task>("Account_Tasks", null);
        }
        set {
            SetRelatedEntities("Account_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Accounts")]
    public IEnumerable<CampaignActivity> CampaignActivity_Accounts {
        get {
            return GetRelatedEntities<CampaignActivity>("CampaignActivity_Accounts", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("CreatedAccount_BulkOperationLogs2")]
    public IEnumerable<BulkOperationLog> CreatedAccount_BulkOperationLogs2 {
        get {
            return GetRelatedEntities<BulkOperationLog>("CreatedAccount_BulkOperationLogs2", null);
        }
        set {
            SetRelatedEntities("CreatedAccount_BulkOperationLogs2", null, value);
        }
    }
    
    [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedaccount_master_account {
        get {
            return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedaccount_parent_account {
        get {
            return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_account_BillingAccount", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedmsdyn_account_account_BillingAccount {
        get {
            return GetRelatedEntities<Account>("msdyn_account_account_BillingAccount", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_account_account_BillingAccount", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
    public Account Referencingaccount_master_account {
        get {
            return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentaccountid")]
    [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
    public Account Referencingaccount_parent_account {
        get {
            return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("msdyn_billingaccount")]
    [RelationshipSchemaName("msdyn_account_account_BillingAccount", EntityRole.Referencing)]
    public Account Referencingmsdyn_account_account_BillingAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_account_BillingAccount", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_account_account_BillingAccount", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("SourceAccount_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> SourceAccount_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("SourceAccount_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("SourceAccount_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("account_CampaignResponses")]
    public IEnumerable<CampaignResponse> account_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("account_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("account_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("account_activity_parties")]
    public IEnumerable<ActivityParty> account_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("account_activity_parties", null);
        }
        set {
            SetRelatedEntities("account_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("account_bookableresource_AccountId")]
    public IEnumerable<BookableResource> account_bookableresource_AccountId {
        get {
            return GetRelatedEntities<BookableResource>("account_bookableresource_AccountId", null);
        }
        set {
            SetRelatedEntities("account_bookableresource_AccountId", null, value);
        }
    }
    
    [RelationshipSchemaName("account_entitlement_Account")]
    public IEnumerable<Entitlement> account_entitlement_Account {
        get {
            return GetRelatedEntities<Entitlement>("account_entitlement_Account", null);
        }
        set {
            SetRelatedEntities("account_entitlement_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("account_entitlement_Customer")]
    public IEnumerable<Entitlement> account_entitlement_Customer {
        get {
            return GetRelatedEntities<Entitlement>("account_entitlement_Customer", null);
        }
        set {
            SetRelatedEntities("account_entitlement_Customer", null, value);
        }
    }
    
    [RelationshipSchemaName("account_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> account_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("account_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("account_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("account_msfp_alerts")]
    public IEnumerable<msfp_alert> account_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("account_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("account_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("originatingleadid")]
    [RelationshipSchemaName("account_originating_lead")]
    public Lead account_originating_lead {
        get {
            return GetRelatedEntity<Lead>("account_originating_lead", null);
        }
        set {
            SetRelatedEntity("account_originating_lead", null, value);
        }
    }
    
    [AttributeLogicalName("primarycontactid")]
    [RelationshipSchemaName("account_primary_contact")]
    public Contact account_primary_contact {
        get {
            return GetRelatedEntity<Contact>("account_primary_contact", null);
        }
        set {
            SetRelatedEntity("account_primary_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("accountleads_association")]
    public IEnumerable<Lead> accountleads_association {
        get {
            return GetRelatedEntities<Lead>("accountleads_association", null);
        }
        set {
            SetRelatedEntities("accountleads_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_customer_accounts")]
    public IEnumerable<Contact> contact_customer_accounts {
        get {
            return GetRelatedEntities<Contact>("contact_customer_accounts", null);
        }
        set {
            SetRelatedEntities("contact_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_billingcustomer_accounts")]
    public IEnumerable<Contract> contract_billingcustomer_accounts {
        get {
            return GetRelatedEntities<Contract>("contract_billingcustomer_accounts", null);
        }
        set {
            SetRelatedEntities("contract_billingcustomer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_customer_accounts")]
    public IEnumerable<Contract> contract_customer_accounts {
        get {
            return GetRelatedEntities<Contract>("contract_customer_accounts", null);
        }
        set {
            SetRelatedEntities("contract_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contractlineitem_customer_accounts")]
    public IEnumerable<ContractDetail> contractlineitem_customer_accounts {
        get {
            return GetRelatedEntities<ContractDetail>("contractlineitem_customer_accounts", null);
        }
        set {
            SetRelatedEntities("contractlineitem_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_customer_accounts")]
    public IEnumerable<Incident> incident_customer_accounts {
        get {
            return GetRelatedEntities<Incident>("incident_customer_accounts", null);
        }
        set {
            SetRelatedEntities("incident_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_customer_accounts")]
    public IEnumerable<Invoice> invoice_customer_accounts {
        get {
            return GetRelatedEntities<Invoice>("invoice_customer_accounts", null);
        }
        set {
            SetRelatedEntities("invoice_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_customer_accounts")]
    public IEnumerable<Lead> lead_customer_accounts {
        get {
            return GetRelatedEntities<Lead>("lead_customer_accounts", null);
        }
        set {
            SetRelatedEntities("lead_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_parent_account")]
    public IEnumerable<Lead> lead_parent_account {
        get {
            return GetRelatedEntities<Lead>("lead_parent_account", null);
        }
        set {
            SetRelatedEntities("lead_parent_account", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_accountbase_createdby")]
    public SystemUser lk_accountbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
    public SystemUser lk_accountbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_accountbase_modifiedby")]
    public SystemUser lk_accountbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
    public SystemUser lk_accountbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_agreement_BillingAccount")]
    public IEnumerable<msdyn_agreement> msdyn_account_msdyn_agreement_BillingAccount {
        get {
            return GetRelatedEntities<msdyn_agreement>("msdyn_account_msdyn_agreement_BillingAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_agreement_BillingAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_agreement_ServiceAccount")]
    public IEnumerable<msdyn_agreement> msdyn_account_msdyn_agreement_ServiceAccount {
        get {
            return GetRelatedEntities<msdyn_agreement>("msdyn_account_msdyn_agreement_ServiceAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_agreement_ServiceAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_customerasset_Account")]
    public IEnumerable<msdyn_customerasset> msdyn_account_msdyn_customerasset_Account {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_account_msdyn_customerasset_Account", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_customerasset_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_purchaseorder_Vendor")]
    public IEnumerable<msdyn_purchaseorder> msdyn_account_msdyn_purchaseorder_Vendor {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_account_msdyn_purchaseorder_Vendor", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_purchaseorder_Vendor", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_rma_BillingAccount")]
    public IEnumerable<msdyn_rma> msdyn_account_msdyn_rma_BillingAccount {
        get {
            return GetRelatedEntities<msdyn_rma>("msdyn_account_msdyn_rma_BillingAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_rma_BillingAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_rma_ServiceAccount")]
    public IEnumerable<msdyn_rma> msdyn_account_msdyn_rma_ServiceAccount {
        get {
            return GetRelatedEntities<msdyn_rma>("msdyn_account_msdyn_rma_ServiceAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_rma_ServiceAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_workorder_BillingAccount")]
    public IEnumerable<msdyn_workorder> msdyn_account_msdyn_workorder_BillingAccount {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_account_msdyn_workorder_BillingAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_workorder_BillingAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_msdyn_workorder_ServiceAccount")]
    public IEnumerable<msdyn_workorder> msdyn_account_msdyn_workorder_ServiceAccount {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_account_msdyn_workorder_ServiceAccount", null);
        }
        set {
            SetRelatedEntities("msdyn_account_msdyn_workorder_ServiceAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_product_DefaultVendor")]
    public IEnumerable<Product> msdyn_account_product_DefaultVendor {
        get {
            return GetRelatedEntities<Product>("msdyn_account_product_DefaultVendor", null);
        }
        set {
            SetRelatedEntities("msdyn_account_product_DefaultVendor", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_quote_Account")]
    public IEnumerable<Quote> msdyn_account_quote_Account {
        get {
            return GetRelatedEntities<Quote>("msdyn_account_quote_Account", null);
        }
        set {
            SetRelatedEntities("msdyn_account_quote_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_account_salesorder_Account")]
    public IEnumerable<SalesOrder> msdyn_account_salesorder_Account {
        get {
            return GetRelatedEntities<SalesOrder>("msdyn_account_salesorder_Account", null);
        }
        set {
            SetRelatedEntities("msdyn_account_salesorder_Account", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_preferredresource")]
    [RelationshipSchemaName("msdyn_bookableresource_account_PreferredResource")]
    public BookableResource msdyn_bookableresource_account_PreferredResource {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_account_PreferredResource", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_account_PreferredResource", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_account")]
    public IEnumerable<msdyn_FunctionalLocation> msdyn_msdyn_functionallocation_account {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("msdyn_msdyn_functionallocation_account", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_functionallocation_account", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceterritory")]
    [RelationshipSchemaName("msdyn_territory_account_ServiceTerritory")]
    public Territory msdyn_territory_account_ServiceTerritory {
        get {
            return GetRelatedEntity<Territory>("msdyn_territory_account_ServiceTerritory", null);
        }
        set {
            SetRelatedEntity("msdyn_territory_account_ServiceTerritory", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_customer_accounts")]
    public IEnumerable<Opportunity> opportunity_customer_accounts {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_customer_accounts", null);
        }
        set {
            SetRelatedEntities("opportunity_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_parent_account")]
    public IEnumerable<Opportunity> opportunity_parent_account {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_parent_account", null);
        }
        set {
            SetRelatedEntities("opportunity_parent_account", null, value);
        }
    }
    
    [RelationshipSchemaName("order_customer_accounts")]
    public IEnumerable<SalesOrder> order_customer_accounts {
        get {
            return GetRelatedEntities<SalesOrder>("order_customer_accounts", null);
        }
        set {
            SetRelatedEntities("order_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_sitetype")]
    [RelationshipSchemaName("ovs_Account_SiteType_ovs_SiteType")]
    public ovs_SiteType ovs_Account_SiteType_ovs_SiteType {
        get {
            return GetRelatedEntity<ovs_SiteType>("ovs_Account_SiteType_ovs_SiteType", null);
        }
        set {
            SetRelatedEntity("ovs_Account_SiteType_ovs_SiteType", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_AirCarrier_Organization_Account")]
    public IEnumerable<ovs_AirCarrier> ovs_AirCarrier_Organization_Account {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("ovs_AirCarrier_Organization_Account", null);
        }
        set {
            SetRelatedEntities("ovs_AirCarrier_Organization_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_regulatedentity_account")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_regulatedentity_account {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_regulatedentity_account", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_regulatedentity_account", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_workorder_SiteofViolation_Account")]
    public IEnumerable<msdyn_workorder> ovs_workorder_SiteofViolation_Account {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_workorder_SiteofViolation_Account", null);
        }
        set {
            SetRelatedEntities("ovs_workorder_SiteofViolation_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_account_tylegislationcharacteristic")]
    public IEnumerable<qm_tylegislationcharacteristic> qm_account_tylegislationcharacteristic {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("qm_account_tylegislationcharacteristic", null);
        }
        set {
            SetRelatedEntities("qm_account_tylegislationcharacteristic", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_customer_accounts")]
    public IEnumerable<Quote> quote_customer_accounts {
        get {
            return GetRelatedEntities<Quote>("quote_customer_accounts", null);
        }
        set {
            SetRelatedEntities("quote_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("preferredsystemuserid")]
    [RelationshipSchemaName("system_user_accounts")]
    public SystemUser system_user_accounts {
        get {
            return GetRelatedEntity<SystemUser>("system_user_accounts", null);
        }
        set {
            SetRelatedEntity("system_user_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("territoryid")]
    [RelationshipSchemaName("territory_accounts")]
    public Territory territory_accounts {
        get {
            return GetRelatedEntity<Territory>("territory_accounts", null);
        }
        set {
            SetRelatedEntity("territory_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_Incident_Stakeholder_Account")]
    public IEnumerable<Incident> ts_Incident_Stakeholder_Account {
        get {
            return GetRelatedEntities<Incident>("ts_Incident_Stakeholder_Account", null);
        }
        set {
            SetRelatedEntities("ts_Incident_Stakeholder_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_account_ts_workordercreationwizard")]
    public IEnumerable<ts_workordercreationwizard> ts_account_ts_workordercreationwizard {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_account_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntities("ts_account_ts_workordercreationwizard", null, value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_workorder")]
    [RelationshipSchemaName("ts_msdyn_workorder_msdyn_workorder_Account")]
    public msdyn_workorder ts_msdyn_workorder_msdyn_workorder_Account {
        get {
            return GetRelatedEntity<msdyn_workorder>("ts_msdyn_workorder_msdyn_workorder_Account", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_workorder_msdyn_workorder_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_Finding_accountid_Account")]
    public IEnumerable<ovs_Finding> ts_ovs_Finding_accountid_Account {
        get {
            return GetRelatedEntities<ovs_Finding>("ts_ovs_Finding_accountid_Account", null);
        }
        set {
            SetRelatedEntities("ts_ovs_Finding_accountid_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operation_stakeholder_account")]
    public IEnumerable<ovs_operation> ts_ovs_operation_stakeholder_account {
        get {
            return GetRelatedEntities<ovs_operation>("ts_ovs_operation_stakeholder_account", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operation_stakeholder_account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_tradename_StakeholderId_Account")]
    public IEnumerable<ts_tradename> ts_tradename_StakeholderId_Account {
        get {
            return GetRelatedEntities<ts_tradename>("ts_tradename_StakeholderId_Account", null);
        }
        set {
            SetRelatedEntities("ts_tradename_StakeholderId_Account", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_accounts")]
    public SystemUser user_accounts {
        get {
            return GetRelatedEntity<SystemUser>("user_accounts", null);
        }
        set {
            SetRelatedEntity("user_accounts", null, value);
        }
    }
    
    public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>description.</para>
/// <para>Display Name: AccountLeads</para>
/// </summary>
[EntityLogicalName("accountleads")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class AccountLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "accountleads";
    
    public const int EntityTypeCode = 16;
    
    public AccountLeads() : 
            base(EntityLogicalName) {
    }
    
    public AccountLeads(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("accountleadid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("accountleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the lead for the account.</para>
    /// </summary>
    [AttributeLogicalName("accountleadid")]
    public Guid? AccountLeadId {
        get {
            return GetAttributeValue<Guid?>("accountleadid");
        }
        set {
            SetId("accountleadid", value);
        }
    }
    
    [AttributeLogicalName("accountid")]
    public Guid? AccountId {
        get {
            return GetAttributeValue<Guid?>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    [AttributeLogicalName("leadid")]
    public Guid? LeadId {
        get {
            return GetAttributeValue<Guid?>("leadid");
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static AccountLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<AccountLeads,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Person or group associated with an activity. An activity can have multiple activity parties.</para>
/// <para>Display Name: Activity Party</para>
/// </summary>
[EntityLogicalName("activityparty")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ActivityParty : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "activityparty";
    
    public const int EntityTypeCode = 135;
    
    public ActivityParty() : 
            base(EntityLogicalName) {
    }
    
    public ActivityParty(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("partyidname");
        }
    }
    
    [AttributeLogicalName("activitypartyid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activitypartyid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the activity party.</para>
    /// <para>Display Name: Activity Party</para>
    /// </summary>
    [AttributeLogicalName("activitypartyid")]
    [DisplayName("Activity Party")]
    public Guid? ActivityPartyId {
        get {
            return GetAttributeValue<Guid?>("activitypartyid");
        }
        set {
            SetId("activitypartyid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the activity associated with the activity party. (A "party" is any person who is associated with an activity.)</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Activity")]
    public EntityReference ActivityId {
        get {
            return GetAttributeValue<EntityReference>("activityid");
        }
        set {
            SetAttributeValue("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Email address to which an email is delivered, and which is associated with the target entity.</para>
    /// <para>Display Name: Address </para>
    /// </summary>
    [AttributeLogicalName("addressused")]
    [DisplayName("Address ")]
    [MaxLength(200)]
    public string AddressUsed {
        get {
            return GetAttributeValue<string>("addressused");
        }
        set {
            SetAttributeValue("addressused", value);
        }
    }
    
    /// <summary>
    /// <para>Email address column number from associated party.</para>
    /// <para>Display Name: Email column number of party</para>
    /// </summary>
    [AttributeLogicalName("addressusedemailcolumnnumber")]
    [DisplayName("Email column number of party")]
    [Range(1, 2147483647)]
    public int? AddressUsedEmailColumnNumber {
        get {
            return GetAttributeValue<int?>("addressusedemailcolumnnumber");
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow sending email to the activity party.</para>
    /// <para>Display Name: Do not allow Emails</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Do not allow Emails")]
    public bool? DoNotEmail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow sending faxes to the activity party.</para>
    /// <para>Display Name: Do not allow Faxes</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Do not allow Faxes")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow phone calls to the lead.</para>
    /// <para>Display Name: Do not allow Phone Calls</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Do not allow Phone Calls")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow sending postal mail to the lead.</para>
    /// <para>Display Name: Do not allow Postal Mails</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Do not allow Postal Mails")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
    }
    
    /// <summary>
    /// <para>Amount of effort used by the resource in a service appointment activity.</para>
    /// <para>Display Name: Effort</para>
    /// </summary>
    [AttributeLogicalName("effort")]
    [DisplayName("Effort")]
    public double? Effort {
        get {
            return GetAttributeValue<double?>("effort");
        }
        set {
            SetAttributeValue("effort", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Exchange Entry</para>
    /// </summary>
    [AttributeLogicalName("exchangeentryid")]
    [DisplayName("Exchange Entry")]
    [MaxLength(1024)]
    public string ExchangeEntryId {
        get {
            return GetAttributeValue<string>("exchangeentryid");
        }
        set {
            SetAttributeValue("exchangeentryid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Appointment Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Appointment Type")]
    public ActivityParty_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<ActivityParty_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Information about whether the underlying entity record is deleted.</para>
    /// <para>Display Name: Is Party Deleted</para>
    /// </summary>
    [AttributeLogicalName("ispartydeleted")]
    [DisplayName("Is Party Deleted")]
    public bool? IsPartyDeleted {
        get {
            return GetAttributeValue<bool?>("ispartydeleted");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity_party.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.</para>
    /// <para>Display Name: Participation Type</para>
    /// </summary>
    [AttributeLogicalName("participationtypemask")]
    [DisplayName("Participation Type")]
    public ActivityParty_ParticipationTypeMask? ParticipationTypeMask {
        get {
            return GetOptionSetValue<ActivityParty_ParticipationTypeMask>("participationtypemask");
        }
        set {
            SetOptionSetValue("participationtypemask", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the party associated with the activity.</para>
    /// <para>Display Name: Party</para>
    /// </summary>
    [AttributeLogicalName("partyid")]
    [DisplayName("Party")]
    public EntityReference PartyId {
        get {
            return GetAttributeValue<EntityReference>("partyid");
        }
        set {
            SetAttributeValue("partyid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the resource specification for the activity party.</para>
    /// <para>Display Name: Resource Specification</para>
    /// </summary>
    [AttributeLogicalName("resourcespecid")]
    [DisplayName("Resource Specification")]
    public EntityReference ResourceSpecId {
        get {
            return GetAttributeValue<EntityReference>("resourcespecid");
        }
        set {
            SetAttributeValue("resourcespecid", value);
        }
    }
    
    /// <summary>
    /// <para>Scheduled end time of the activity.</para>
    /// <para>Display Name: Scheduled End</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Scheduled End")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
    }
    
    /// <summary>
    /// <para>Scheduled start time of the activity.</para>
    /// <para>Display Name: Scheduled Start</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Scheduled Start")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("ActivityParty_SyncErrors")]
    public IEnumerable<SyncError> ActivityParty_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ActivityParty_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ActivityParty_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("account_activity_parties")]
    public Account account_activity_parties {
        get {
            return GetRelatedEntity<Account>("account_activity_parties", null);
        }
        set {
            SetRelatedEntity("account_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activitypointer_activity_parties")]
    public ActivityPointer activitypointer_activity_parties {
        get {
            return GetRelatedEntity<ActivityPointer>("activitypointer_activity_parties", null);
        }
        set {
            SetRelatedEntity("activitypointer_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("appointment_activity_parties")]
    public Appointment appointment_activity_parties {
        get {
            return GetRelatedEntity<Appointment>("appointment_activity_parties", null);
        }
        set {
            SetRelatedEntity("appointment_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("campaign_activity_parties")]
    public Campaign campaign_activity_parties {
        get {
            return GetRelatedEntity<Campaign>("campaign_activity_parties", null);
        }
        set {
            SetRelatedEntity("campaign_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("campaignactivity_activity_parties")]
    public CampaignActivity campaignactivity_activity_parties {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_activity_parties", null);
        }
        set {
            SetRelatedEntity("campaignactivity_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("campaignactivity_activityparties")]
    public CampaignActivity campaignactivity_activityparties {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_activityparties", null);
        }
        set {
            SetRelatedEntity("campaignactivity_activityparties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("campaignresponse_activity_parties")]
    public CampaignResponse campaignresponse_activity_parties {
        get {
            return GetRelatedEntity<CampaignResponse>("campaignresponse_activity_parties", null);
        }
        set {
            SetRelatedEntity("campaignresponse_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("contact_activity_parties")]
    public Contact contact_activity_parties {
        get {
            return GetRelatedEntity<Contact>("contact_activity_parties", null);
        }
        set {
            SetRelatedEntity("contact_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("contract_activity_parties")]
    public Contract contract_activity_parties {
        get {
            return GetRelatedEntity<Contract>("contract_activity_parties", null);
        }
        set {
            SetRelatedEntity("contract_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("email_activity_parties")]
    public Email email_activity_parties {
        get {
            return GetRelatedEntity<Email>("email_activity_parties", null);
        }
        set {
            SetRelatedEntity("email_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("entitlement_ActivityParties")]
    public Entitlement entitlement_ActivityParties {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_ActivityParties", null);
        }
        set {
            SetRelatedEntity("entitlement_ActivityParties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("incident_activity_parties")]
    public Incident incident_activity_parties {
        get {
            return GetRelatedEntity<Incident>("incident_activity_parties", null);
        }
        set {
            SetRelatedEntity("incident_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("invoice_activity_parties")]
    public Invoice invoice_activity_parties {
        get {
            return GetRelatedEntity<Invoice>("invoice_activity_parties", null);
        }
        set {
            SetRelatedEntity("invoice_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("lead_activity_parties")]
    public Lead lead_activity_parties {
        get {
            return GetRelatedEntity<Lead>("lead_activity_parties", null);
        }
        set {
            SetRelatedEntity("lead_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("msdyn_bookingalert_activity_parties")]
    public msdyn_bookingalert msdyn_bookingalert_activity_parties {
        get {
            return GetRelatedEntity<msdyn_bookingalert>("msdyn_bookingalert_activity_parties", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("msfp_alert_activity_parties")]
    public msfp_alert msfp_alert_activity_parties {
        get {
            return GetRelatedEntity<msfp_alert>("msfp_alert_activity_parties", null);
        }
        set {
            SetRelatedEntity("msfp_alert_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("opportunity_activity_parties")]
    public Opportunity opportunity_activity_parties {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_activity_parties", null);
        }
        set {
            SetRelatedEntity("opportunity_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("phonecall_activity_parties")]
    public PhoneCall phonecall_activity_parties {
        get {
            return GetRelatedEntity<PhoneCall>("phonecall_activity_parties", null);
        }
        set {
            SetRelatedEntity("phonecall_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("queue_activity_parties")]
    public Queue queue_activity_parties {
        get {
            return GetRelatedEntity<Queue>("queue_activity_parties", null);
        }
        set {
            SetRelatedEntity("queue_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("quote_activity_parties")]
    public Quote quote_activity_parties {
        get {
            return GetRelatedEntity<Quote>("quote_activity_parties", null);
        }
        set {
            SetRelatedEntity("quote_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("recurringappointmentmaster_activity_parties")]
    public RecurringAppointmentMaster recurringappointmentmaster_activity_parties {
        get {
            return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_activity_parties", null);
        }
        set {
            SetRelatedEntity("recurringappointmentmaster_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("salesorder_activity_parties")]
    public SalesOrder salesorder_activity_parties {
        get {
            return GetRelatedEntity<SalesOrder>("salesorder_activity_parties", null);
        }
        set {
            SetRelatedEntity("salesorder_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("serviceappointment_activity_parties")]
    public ServiceAppointment serviceappointment_activity_parties {
        get {
            return GetRelatedEntity<ServiceAppointment>("serviceappointment_activity_parties", null);
        }
        set {
            SetRelatedEntity("serviceappointment_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("partyid")]
    [RelationshipSchemaName("system_user_activity_parties")]
    public SystemUser system_user_activity_parties {
        get {
            return GetRelatedEntity<SystemUser>("system_user_activity_parties", null);
        }
        set {
            SetRelatedEntity("system_user_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("task_activity_parties")]
    public Task task_activity_parties {
        get {
            return GetRelatedEntity<Task>("task_activity_parties", null);
        }
        set {
            SetRelatedEntity("task_activity_parties", null, value);
        }
    }
    
    public static ActivityParty Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityParty,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Task performed, or to be performed, by a user. An activity is any action for which an entry can be made on a calendar.</para>
/// <para>Display Name: Activity</para>
/// </summary>
[EntityLogicalName("activitypointer")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ActivityPointer : ExtendedEntity<ActivityPointerState, ActivityPointer_StatusCode> {
    
    public const string EntityLogicalName = "activitypointer";
    
    public const int EntityTypeCode = 4200;
    
    public ActivityPointer() : 
            base(EntityLogicalName) {
    }
    
    public ActivityPointer(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the activity.</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Activity")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
    /// <para>Display Name: Activity Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Activity Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Actual duration of the activity in minutes.</para>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Actual end time of the activity.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Actual start time of the activity.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was created.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Description of the activity.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public ActivityPointer_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<ActivityPointer_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Left the voice mail</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when activity was last modified.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Priority of the activity.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public ActivityPointer_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<ActivityPointer_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the object with which the activity is associated.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the activity, specified in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Scheduled end time of the activity.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due Date")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Scheduled start time of the activity.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the activity.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public ActivityPointerState? StateCode {
        get {
            return GetOptionSetValue<ActivityPointerState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the activity.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ActivityPointer_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<ActivityPointer_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Subject associated with the activity.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(400)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the activitypointer.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>All activity parties associated with this activity.</para>
    /// <para>Display Name: All Activity Parties</para>
    /// </summary>
    [AttributeLogicalName("allparties")]
    [DisplayName("All Activity Parties")]
    public IEnumerable<ActivityParty> allparties {
        get {
            return GetEntityCollection<ActivityParty>("allparties");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_ActivityPointers")]
    public Account Account_ActivityPointers {
        get {
            return GetRelatedEntity<Account>("Account_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Account_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("ActivityPointer_CampaignActivityItems")]
    public IEnumerable<CampaignActivityItem> ActivityPointer_CampaignActivityItems {
        get {
            return GetRelatedEntities<CampaignActivityItem>("ActivityPointer_CampaignActivityItems", null);
        }
        set {
            SetRelatedEntities("ActivityPointer_CampaignActivityItems", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_ActivityPointers")]
    public CampaignActivity CampaignActivity_ActivityPointers {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_ActivityPointers")]
    public Campaign Campaign_ActivityPointers {
        get {
            return GetRelatedEntity<Campaign>("Campaign_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Campaign_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_ActivityPointers")]
    public Contact Contact_ActivityPointers {
        get {
            return GetRelatedEntity<Contact>("Contact_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Contact_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_ActivityPointers")]
    public Contract Contract_ActivityPointers {
        get {
            return GetRelatedEntity<Contract>("Contract_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Contract_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("CreatedActivity_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> CreatedActivity_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("CreatedActivity_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("CreatedActivity_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_ActivityPointers")]
    public Incident Incident_ActivityPointers {
        get {
            return GetRelatedEntity<Incident>("Incident_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Incident_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_ActivityPointers")]
    public Invoice Invoice_ActivityPointers {
        get {
            return GetRelatedEntity<Invoice>("Invoice_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Invoice_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_ActivityPointers")]
    public Lead Lead_ActivityPointers {
        get {
            return GetRelatedEntity<Lead>("Lead_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Lead_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_ActivityPointers")]
    public Opportunity Opportunity_ActivityPointers {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Opportunity_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_ActivityPointers")]
    public Quote Quote_ActivityPointers {
        get {
            return GetRelatedEntity<Quote>("Quote_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("Quote_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_ActivityPointers")]
    public SalesOrder SalesOrder_ActivityPointers {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("SalesOrder_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_campaignresponse")]
    public IEnumerable<CampaignResponse> activity_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("activity_campaignresponse", null);
        }
        set {
            SetRelatedEntities("activity_campaignresponse", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_BulkOperation_logs")]
    public IEnumerable<BulkOperationLog> activity_pointer_BulkOperation_logs {
        get {
            return GetRelatedEntities<BulkOperationLog>("activity_pointer_BulkOperation_logs", null);
        }
        set {
            SetRelatedEntities("activity_pointer_BulkOperation_logs", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_appointment")]
    public IEnumerable<Appointment> activity_pointer_appointment {
        get {
            return GetRelatedEntities<Appointment>("activity_pointer_appointment", null);
        }
        set {
            SetRelatedEntities("activity_pointer_appointment", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_campaignactivity")]
    public IEnumerable<CampaignActivity> activity_pointer_campaignactivity {
        get {
            return GetRelatedEntities<CampaignActivity>("activity_pointer_campaignactivity", null);
        }
        set {
            SetRelatedEntities("activity_pointer_campaignactivity", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_campaignresponse")]
    public IEnumerable<CampaignResponse> activity_pointer_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("activity_pointer_campaignresponse", null);
        }
        set {
            SetRelatedEntities("activity_pointer_campaignresponse", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_email")]
    public IEnumerable<Email> activity_pointer_email {
        get {
            return GetRelatedEntities<Email>("activity_pointer_email", null);
        }
        set {
            SetRelatedEntities("activity_pointer_email", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_msdyn_bookingalert")]
    public IEnumerable<msdyn_bookingalert> activity_pointer_msdyn_bookingalert {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("activity_pointer_msdyn_bookingalert", null);
        }
        set {
            SetRelatedEntities("activity_pointer_msdyn_bookingalert", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_msfp_alert")]
    public IEnumerable<msfp_alert> activity_pointer_msfp_alert {
        get {
            return GetRelatedEntities<msfp_alert>("activity_pointer_msfp_alert", null);
        }
        set {
            SetRelatedEntities("activity_pointer_msfp_alert", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_phonecall")]
    public IEnumerable<PhoneCall> activity_pointer_phonecall {
        get {
            return GetRelatedEntities<PhoneCall>("activity_pointer_phonecall", null);
        }
        set {
            SetRelatedEntities("activity_pointer_phonecall", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_recurringappointmentmaster")]
    public IEnumerable<RecurringAppointmentMaster> activity_pointer_recurringappointmentmaster {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("activity_pointer_recurringappointmentmaster", null);
        }
        set {
            SetRelatedEntities("activity_pointer_recurringappointmentmaster", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_service_appointment")]
    public IEnumerable<ServiceAppointment> activity_pointer_service_appointment {
        get {
            return GetRelatedEntities<ServiceAppointment>("activity_pointer_service_appointment", null);
        }
        set {
            SetRelatedEntities("activity_pointer_service_appointment", null, value);
        }
    }
    
    [RelationshipSchemaName("activity_pointer_task")]
    public IEnumerable<Task> activity_pointer_task {
        get {
            return GetRelatedEntities<Task>("activity_pointer_task", null);
        }
        set {
            SetRelatedEntities("activity_pointer_task", null, value);
        }
    }
    
    [RelationshipSchemaName("activitypointer_activity_parties")]
    public IEnumerable<ActivityParty> activitypointer_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("activitypointer_activity_parties", null);
        }
        set {
            SetRelatedEntities("activitypointer_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_ActivityPointers")]
    public BookableResourceBooking bookableresourcebooking_ActivityPointers {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_ActivityPointers")]
    public Entitlement entitlement_ActivityPointers {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("entitlement_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_ActivityPointers")]
    public EntitlementTemplate entitlementtemplate_ActivityPointers {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_activitypointer_createdby")]
    public SystemUser lk_activitypointer_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_activitypointer_createdby", null);
        }
        set {
            SetRelatedEntity("lk_activitypointer_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
    public SystemUser lk_activitypointer_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_activitypointer_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_activitypointer_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_activitypointer_modifiedby")]
    public SystemUser lk_activitypointer_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_activitypointer_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
    public SystemUser lk_activitypointer_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_activitypointer_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_ActivityPointers")]
    public msdyn_agreement msdyn_agreement_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ActivityPointers")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_ActivityPointers")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ActivityPointers")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_ActivityPointers")]
    public msdyn_customerasset msdyn_customerasset_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ActivityPointers")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_ActivityPointers")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_ActivityPointers")]
    public msdyn_purchaseorder msdyn_purchaseorder_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ActivityPointers")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_ActivityPointers")]
    public msdyn_rma msdyn_rma_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_ActivityPointers")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_ActivityPointers")]
    public msdyn_workorder msdyn_workorder_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_ActivityPointers")]
    public msdyn_workorderincident msdyn_workorderincident_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_ActivityPointers")]
    public msdyn_workorderproduct msdyn_workorderproduct_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_ActivityPointers")]
    public msdyn_workorderservice msdyn_workorderservice_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_ActivityPointers")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_ActivityPointers {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_ActivityPointers")]
    public ppp_Traveller ppp_traveller_ActivityPointers {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_ActivityPointers")]
    public ts_request ts_request_ActivityPointers {
        get {
            return GetRelatedEntity<ts_request>("ts_request_ActivityPointers", null);
        }
        set {
            SetRelatedEntity("ts_request_ActivityPointers", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_activity")]
    public SystemUser user_activity {
        get {
            return GetRelatedEntity<SystemUser>("user_activity", null);
        }
        set {
            SetRelatedEntity("user_activity", null, value);
        }
    }
    
    public static ActivityPointer Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityPointer,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Commitment representing a time interval with start/end times and duration.</para>
/// <para>Display Name: Appointment</para>
/// </summary>
[EntityLogicalName("appointment")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Appointment : ExtendedEntity<AppointmentState, Appointment_StatusCode> {
    
    public const string EntityLogicalName = "appointment";
    
    public const int EntityTypeCode = 4201;
    
    public Appointment() : 
            base(EntityLogicalName) {
    }
    
    public Appointment(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the appointment.</para>
    /// <para>Display Name: Appointment</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Appointment")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Shows the value selected in the Duration field on the appointment at the time that the appointment is closed as completed. The duration is used to report the time spent on the activity.</para>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual end date and time of the appointment. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the appointment.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the appointment. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the appointment.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the number of attachments on the appointment.</para>
    /// <para>Display Name: Attachment Count</para>
    /// </summary>
    [AttributeLogicalName("attachmentcount")]
    [DisplayName("Attachment Count")]
    [Range(0, 2147483647)]
    public int? AttachmentCount {
        get {
            return GetAttributeValue<int?>("attachmentcount");
        }
    }
    
    /// <summary>
    /// <para>Select the error code to identify issues with the outlook item recipients or attachments, such as blocked attachments.</para>
    /// <para>Display Name: AttachmentErrors</para>
    /// </summary>
    [AttributeLogicalName("attachmenterrors")]
    [DisplayName("AttachmentErrors")]
    public Appointment_AttachmentErrors? AttachmentErrors {
        get {
            return GetOptionSetValue<Appointment_AttachmentErrors>("attachmenterrors");
        }
        set {
            SetOptionSetValue("attachmenterrors", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the appointment type, such as sales demo, prospect call, or service call, to tie the appointment to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the purpose of the appointment.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the appointment in Microsoft Office Outlook. The ID is used to synchronize the appointment between Microsoft Dynamics 365 and the correct Exchange account.</para>
    /// <para>Display Name: Outlook Appointment</para>
    /// </summary>
    [AttributeLogicalName("globalobjectid")]
    [DisplayName("Outlook Appointment")]
    [MaxLength(300)]
    public string GlobalObjectId {
        get {
            return GetAttributeValue<string>("globalobjectid");
        }
        set {
            SetAttributeValue("globalobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Appointment Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Appointment Type")]
    public Appointment_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<Appointment_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Select whether the appointment is an all-day event to make sure that the required resources are scheduled for the full day.</para>
    /// <para>Display Name: All Day Event</para>
    /// </summary>
    [AttributeLogicalName("isalldayevent")]
    [DisplayName("All Day Event")]
    public bool? IsAllDayEvent {
        get {
            return GetAttributeValue<bool?>("isalldayevent");
        }
        set {
            SetAttributeValue("isalldayevent", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the appointment was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the appointment is a draft.</para>
    /// <para>Display Name: IsDraft</para>
    /// </summary>
    [AttributeLogicalName("isdraft")]
    [DisplayName("IsDraft")]
    public bool? IsDraft {
        get {
            return GetAttributeValue<bool?>("isdraft");
        }
        set {
            SetAttributeValue("isdraft", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: IsUnsafe</para>
    /// </summary>
    [AttributeLogicalName("isunsafe")]
    [DisplayName("IsUnsafe")]
    [Range(0, 2147483647)]
    public int? IsUnsafe {
        get {
            return GetAttributeValue<int?>("isunsafe");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the appointment was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Type the location where the appointment will take place, such as a conference room or customer office.</para>
    /// <para>Display Name: Location</para>
    /// </summary>
    [AttributeLogicalName("location")]
    [DisplayName("Location")]
    [MaxLength(200)]
    public string Location {
        get {
            return GetAttributeValue<string>("location");
        }
        set {
            SetAttributeValue("location", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>For internal use only. </para>
    /// <para>Display Name: Modified Fields Mask</para>
    /// </summary>
    [AttributeLogicalName("modifiedfieldsmask")]
    [DisplayName("Modified Fields Mask")]
    public string ModifiedFieldsMask {
        get {
            return GetAttributeValue<string>("modifiedfieldsmask");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, user, or other equipment resources that are not needed at the appointment, but can optionally attend.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user who is in charge of coordinating or leading the appointment to make sure the appointment is displayed in the user's My Activities view.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>The original start date of the appointment.</para>
    /// <para>Display Name: Original Start Date</para>
    /// </summary>
    [AttributeLogicalName("originalstartdate")]
    [DisplayName("Original Start Date")]
    public DateTime? OriginalStartDate {
        get {
            return GetAttributeValue<DateTime?>("originalstartdate");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Microsoft Office Outlook appointment owner that correlates to the PR_OWNER_APPT_ID MAPI property.</para>
    /// <para>Display Name: Outlook Appointment Owner</para>
    /// </summary>
    [AttributeLogicalName("outlookownerapptid")]
    [DisplayName("Outlook Appointment Owner")]
    [Range(-2147483648, 2147483647)]
    public int? OutlookOwnerApptId {
        get {
            return GetAttributeValue<int?>("outlookownerapptid");
        }
        set {
            SetAttributeValue("outlookownerapptid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the business unit that the record owner belongs to.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the appointment.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the appointment.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Appointment_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Appointment_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the appointment relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, user, or other equipment resources that are required to attend the appointment.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the appointment record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this appointment. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Shows the expected duration of the appointment, in minutes.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the appointment.</para>
    /// <para>Display Name: End Time</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("End Time")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected start date and time for the activity to provide details about the timing of the appointment.</para>
    /// <para>Display Name: Start Time</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Time")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the appointment is open, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public AppointmentState? StateCode {
        get {
            return GetOptionSetValue<AppointmentState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the appointment's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Appointment_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Appointment_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the appointment type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the appointment.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Subscription</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Subscription")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the appointment.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Appointments")]
    public Account Account_Appointments {
        get {
            return GetRelatedEntity<Account>("Account_Appointments", null);
        }
        set {
            SetRelatedEntity("Account_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Appointment_ProcessSessions")]
    public IEnumerable<ProcessSession> Appointment_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Appointment_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Appointment_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Appointment_SyncErrors")]
    public IEnumerable<SyncError> Appointment_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Appointment_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Appointment_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_Appointments")]
    public CampaignActivity CampaignActivity_Appointments {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_Appointments", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_Appointments")]
    public Campaign Campaign_Appointments {
        get {
            return GetRelatedEntity<Campaign>("Campaign_Appointments", null);
        }
        set {
            SetRelatedEntity("Campaign_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Appointments")]
    public Contact Contact_Appointments {
        get {
            return GetRelatedEntity<Contact>("Contact_Appointments", null);
        }
        set {
            SetRelatedEntity("Contact_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_Appointments")]
    public Contract Contract_Appointments {
        get {
            return GetRelatedEntity<Contract>("Contract_Appointments", null);
        }
        set {
            SetRelatedEntity("Contract_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Appointments")]
    public Incident Incident_Appointments {
        get {
            return GetRelatedEntity<Incident>("Incident_Appointments", null);
        }
        set {
            SetRelatedEntity("Incident_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Appointments")]
    public Invoice Invoice_Appointments {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Appointments", null);
        }
        set {
            SetRelatedEntity("Invoice_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_Appointments")]
    public Lead Lead_Appointments {
        get {
            return GetRelatedEntity<Lead>("Lead_Appointments", null);
        }
        set {
            SetRelatedEntity("Lead_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_Appointments")]
    public Opportunity Opportunity_Appointments {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_Appointments", null);
        }
        set {
            SetRelatedEntity("Opportunity_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Appointments")]
    public Quote Quote_Appointments {
        get {
            return GetRelatedEntity<Quote>("Quote_Appointments", null);
        }
        set {
            SetRelatedEntity("Quote_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Appointments")]
    public SalesOrder SalesOrder_Appointments {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Appointments", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_appointment")]
    public ActivityPointer activity_pointer_appointment {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_appointment", null);
        }
        set {
            SetRelatedEntity("activity_pointer_appointment", null, value);
        }
    }
    
    [RelationshipSchemaName("appointment_activity_parties")]
    public IEnumerable<ActivityParty> appointment_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("appointment_activity_parties", null);
        }
        set {
            SetRelatedEntities("appointment_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("appointment_campaignresponse")]
    public IEnumerable<CampaignResponse> appointment_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("appointment_campaignresponse", null);
        }
        set {
            SetRelatedEntities("appointment_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_Appointments")]
    public BookableResourceBooking bookableresourcebooking_Appointments {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Appointments", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_Appointments")]
    public Entitlement entitlement_Appointments {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_Appointments", null);
        }
        set {
            SetRelatedEntity("entitlement_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_Appointments")]
    public EntitlementTemplate entitlementtemplate_Appointments {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_Appointments", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_appointment_createdby")]
    public SystemUser lk_appointment_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_appointment_createdby", null);
        }
        set {
            SetRelatedEntity("lk_appointment_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
    public SystemUser lk_appointment_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_appointment_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_appointment_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_appointment_modifiedby")]
    public SystemUser lk_appointment_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_appointment_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_appointment_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
    public SystemUser lk_appointment_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_appointment_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_appointment_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_Appointments")]
    public msdyn_agreement msdyn_agreement_Appointments {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Appointments")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_Appointments {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_Appointments")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_Appointments {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Appointments")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_Appointments {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_appointment_bookableresourcebooking")]
    public IEnumerable<BookableResourceBooking> msdyn_appointment_bookableresourcebooking {
        get {
            return GetRelatedEntities<BookableResourceBooking>("msdyn_appointment_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntities("msdyn_appointment_bookableresourcebooking", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_Appointments")]
    public msdyn_customerasset msdyn_customerasset_Appointments {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Appointments")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_Appointments {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_Appointments")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_Appointments {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_Appointments")]
    public msdyn_purchaseorder msdyn_purchaseorder_Appointments {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Appointments")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_Appointments {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_Appointments")]
    public msdyn_rma msdyn_rma_Appointments {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_Appointments")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_Appointments {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_Appointments")]
    public msdyn_workorder msdyn_workorder_Appointments {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_Appointments")]
    public msdyn_workorderincident msdyn_workorderincident_Appointments {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_Appointments")]
    public msdyn_workorderproduct msdyn_workorderproduct_Appointments {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_Appointments")]
    public msdyn_workorderservice msdyn_workorderservice_Appointments {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_Appointments")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_Appointments {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_Appointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_Appointments")]
    public ppp_Traveller ppp_traveller_Appointments {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_Appointments", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("seriesid")]
    [RelationshipSchemaName("recurringappointmentmaster_appointment")]
    public RecurringAppointmentMaster recurringappointmentmaster_appointment {
        get {
            return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_appointment", null);
        }
        set {
            SetRelatedEntity("recurringappointmentmaster_appointment", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_Appointments")]
    public ts_request ts_request_Appointments {
        get {
            return GetRelatedEntity<ts_request>("ts_request_Appointments", null);
        }
        set {
            SetRelatedEntity("ts_request_Appointments", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_appointment")]
    public SystemUser user_appointment {
        get {
            return GetRelatedEntity<SystemUser>("user_appointment", null);
        }
        set {
            SetRelatedEntity("user_appointment", null, value);
        }
    }
    
    public static Appointment Retrieve(IOrganizationService service, Guid id, params Expression<Func<Appointment,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Resource that has capacity which can be allocated to work.</para>
/// <para>Display Name: Bookable Resource</para>
/// </summary>
[EntityLogicalName("bookableresource")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class BookableResource : ExtendedEntity<BookableResourceState, BookableResource_StatusCode> {
    
    public const string EntityLogicalName = "bookableresource";
    
    public const int EntityTypeCode = 1150;
    
    public BookableResource() : 
            base(EntityLogicalName) {
    }
    
    public BookableResource(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("bookableresourceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("bookableresourceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the resource.</para>
    /// <para>Display Name: Bookable Resource</para>
    /// </summary>
    [AttributeLogicalName("bookableresourceid")]
    [DisplayName("Bookable Resource")]
    public Guid? BookableResourceId {
        get {
            return GetAttributeValue<Guid?>("bookableresourceid");
        }
        set {
            SetId("bookableresourceid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the account that represents this resource.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
        set {
            SetAttributeValue("accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies the working days and hours of the resource.</para>
    /// <para>Display Name: Calendar</para>
    /// </summary>
    [AttributeLogicalName("calendarid")]
    [DisplayName("Calendar")]
    public EntityReference CalendarId {
        get {
            return GetAttributeValue<EntityReference>("calendarid");
        }
        set {
            SetAttributeValue("calendarid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the contact that represents this resource.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
        set {
            SetAttributeValue("contactid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the bookableresource with respect to the base currency.</para>
    /// <para>Display Name: ExchangeRate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("ExchangeRate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type the name of the resource.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the resource is a user, equipment, contact, account, generic resource or a group of resources.</para>
    /// <para>Display Name: Resource Type</para>
    /// </summary>
    [AttributeLogicalName("resourcetype")]
    [DisplayName("Resource Type")]
    public BookableResource_ResourceType? ResourceType {
        get {
            return GetOptionSetValue<BookableResource_ResourceType>("resourcetype");
        }
        set {
            SetOptionSetValue("resourcetype", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Bookable Resource</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public BookableResourceState? StateCode {
        get {
            return GetOptionSetValue<BookableResourceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Bookable Resource</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public BookableResource_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<BookableResource_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies the timezone for the resource's working hours.</para>
    /// <para>Display Name: Time Zone</para>
    /// </summary>
    [AttributeLogicalName("timezone")]
    [DisplayName("Time Zone")]
    [Range(-1500, 1500)]
    public int? TimeZone {
        get {
            return GetAttributeValue<int?>("timezone");
        }
        set {
            SetAttributeValue("timezone", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the BookableResource with respect to the base currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the user who represents this resource.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [AttributeLogicalName("userid")]
    [DisplayName("User")]
    public EntityReference UserId {
        get {
            return GetAttributeValue<EntityReference>("userid");
        }
        set {
            SetAttributeValue("userid", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The number of bookings to drip on the Mobile . This field is disabled/enabled based on Enable Drip Scheduling field</para>
    /// <para>Display Name: Bookings To Drip</para>
    /// </summary>
    [AttributeLogicalName("msdyn_bookingstodrip")]
    [DisplayName("Bookings To Drip")]
    [Range(1, 50)]
    public int? msdyn_BookingsToDrip {
        get {
            return GetAttributeValue<int?>("msdyn_bookingstodrip");
        }
        set {
            SetAttributeValue("msdyn_bookingstodrip", value);
        }
    }
    
    /// <summary>
    /// <para>Crew Strategy</para>
    /// <para>Display Name: Crew Strategy</para>
    /// </summary>
    [AttributeLogicalName("msdyn_crewstrategy")]
    [DisplayName("Crew Strategy")]
    public msdyn_crewstrategy? msdyn_CrewStrategy {
        get {
            return GetOptionSetValue<msdyn_crewstrategy>("msdyn_crewstrategy");
        }
        set {
            SetOptionSetValue("msdyn_crewstrategy", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Derive Capacity From Group Members</para>
    /// </summary>
    [AttributeLogicalName("msdyn_derivecapacity")]
    [DisplayName("Derive Capacity From Group Members")]
    public bool? msdyn_DeriveCapacity {
        get {
            return GetAttributeValue<bool?>("msdyn_derivecapacity");
        }
        set {
            SetAttributeValue("msdyn_derivecapacity", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if this resource should be enabled for availablity search.</para>
    /// <para>Display Name: Enable for Availability Search</para>
    /// </summary>
    [AttributeLogicalName("msdyn_displayonscheduleassistant")]
    [DisplayName("Enable for Availability Search")]
    public bool? msdyn_DisplayOnScheduleAssistant {
        get {
            return GetAttributeValue<bool?>("msdyn_displayonscheduleassistant");
        }
        set {
            SetAttributeValue("msdyn_displayonscheduleassistant", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if this resource should be displayed on the schedule board.</para>
    /// <para>Display Name: Display On Schedule Board</para>
    /// </summary>
    [AttributeLogicalName("msdyn_displayonscheduleboard")]
    [DisplayName("Display On Schedule Board")]
    public bool? msdyn_DisplayOnScheduleBoard {
        get {
            return GetAttributeValue<bool?>("msdyn_displayonscheduleboard");
        }
        set {
            SetAttributeValue("msdyn_displayonscheduleboard", value);
        }
    }
    
    /// <summary>
    /// <para>Enable appointments to display on the new schedule board and be considered in availability search for resources.</para>
    /// <para>Display Name: Include Appointments</para>
    /// </summary>
    [AttributeLogicalName("msdyn_enableappointments")]
    [DisplayName("Include Appointments")]
    public msdyn_enableappointmentsoption? msdyn_EnableAppointments {
        get {
            return GetOptionSetValue<msdyn_enableappointmentsoption>("msdyn_enableappointments");
        }
        set {
            SetOptionSetValue("msdyn_enableappointments", value);
        }
    }
    
    /// <summary>
    /// <para>Enables drip scheduling on the mobile app.</para>
    /// <para>Display Name: Enable Drip Scheduling</para>
    /// </summary>
    [AttributeLogicalName("msdyn_enabledripscheduling")]
    [DisplayName("Enable Drip Scheduling")]
    public bool? msdyn_EnableDripScheduling {
        get {
            return GetAttributeValue<bool?>("msdyn_enabledripscheduling");
        }
        set {
            SetAttributeValue("msdyn_enabledripscheduling", value);
        }
    }
    
    /// <summary>
    /// <para>Set this field to Yes if this resource requires access to the Field Service Mobile application.</para>
    /// <para>Display Name: Enabled for Field Service Mobile</para>
    /// </summary>
    [AttributeLogicalName("msdyn_enabledforfieldservicemobile")]
    [DisplayName("Enabled for Field Service Mobile")]
    public bool? msdyn_EnabledForFieldServiceMobile {
        get {
            return GetAttributeValue<bool?>("msdyn_enabledforfieldservicemobile");
        }
        set {
            SetAttributeValue("msdyn_enabledforfieldservicemobile", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the default ending location type when booking daily schedules for this resource.</para>
    /// <para>Display Name: End Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_endlocation")]
    [DisplayName("End Location")]
    public msdyn_workstartlocationtype? msdyn_EndLocation {
        get {
            return GetOptionSetValue<msdyn_workstartlocationtype>("msdyn_endlocation");
        }
        set {
            SetOptionSetValue("msdyn_endlocation", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Generic Type (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_generictype")]
    [DisplayName("Generic Type (Deprecated)")]
    public msdyn_generictype? msdyn_GenericType {
        get {
            return GetOptionSetValue<msdyn_generictype>("msdyn_generictype");
        }
        set {
            SetOptionSetValue("msdyn_generictype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Hourly Rate</para>
    /// </summary>
    [AttributeLogicalName("msdyn_hourlyrate")]
    [DisplayName("Hourly Rate")]
    public decimal? msdyn_HourlyRate {
        get {
            return GetMoneyValue("msdyn_hourlyrate");
        }
        set {
            SetMoneyValue("msdyn_hourlyrate", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the pool is an account, contact, user, equipment or a facility of resources.</para>
    /// <para>Display Name: Pool Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pooltype")]
    [DisplayName("Pool Type")]
    public IEnumerable<msdyn_pooltype> msdyn_PoolType {
        get {
            return GetOptionSetCollectionValue<msdyn_pooltype>("msdyn_pooltype");
        }
        set {
            SetOptionSetCollectionValue("msdyn_pooltype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Primary Email</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryemail")]
    [DisplayName("Primary Email")]
    [MaxLength(100)]
    public string msdyn_PrimaryEMail {
        get {
            return GetAttributeValue<string>("msdyn_primaryemail");
        }
        set {
            SetAttributeValue("msdyn_primaryemail", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the default starting location type when booking daily schedules for this resource.</para>
    /// <para>Display Name: Start Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_startlocation")]
    [DisplayName("Start Location")]
    public msdyn_workstartlocationtype? msdyn_StartLocation {
        get {
            return GetOptionSetValue<msdyn_workstartlocationtype>("msdyn_startlocation");
        }
        set {
            SetOptionSetValue("msdyn_startlocation", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies if approval required for Time Off Requests.</para>
    /// <para>Display Name: Time Off Approval Required</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timeoffapprovalrequired")]
    [DisplayName("Time Off Approval Required")]
    public bool? msdyn_TimeOffApprovalRequired {
        get {
            return GetAttributeValue<bool?>("msdyn_timeoffapprovalrequired");
        }
        set {
            SetAttributeValue("msdyn_timeoffapprovalrequired", value);
        }
    }
    
    /// <summary>
    /// <para>Default Warehouse for this resource.</para>
    /// <para>Display Name: Warehouse</para>
    /// </summary>
    [AttributeLogicalName("msdyn_warehouse")]
    [DisplayName("Warehouse")]
    public EntityReference msdyn_Warehouse {
        get {
            return GetAttributeValue<EntityReference>("msdyn_warehouse");
        }
        set {
            SetAttributeValue("msdyn_warehouse", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Facility Equipment</para>
    /// <para>Display Name: Facility Equipment</para>
    /// </summary>
    [AttributeLogicalName("msdyn_facilityequipmentid")]
    [DisplayName("Facility Equipment")]
    public EntityReference msdyn_facilityequipmentid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_facilityequipmentid");
        }
        set {
            SetAttributeValue("msdyn_facilityequipmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Hourly Rate in base currency.</para>
    /// <para>Display Name: Hourly Rate (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_hourlyrate_base")]
    [DisplayName("Hourly Rate (Base)")]
    public decimal? msdyn_hourlyrate_Base {
        get {
            return GetMoneyValue("msdyn_hourlyrate_base");
        }
    }
    
    /// <summary>
    /// <para>The location timestamp.</para>
    /// <para>Display Name: Location Timestamp</para>
    /// </summary>
    [AttributeLogicalName("msdyn_locationtimestamp")]
    [DisplayName("Location Timestamp")]
    public DateTime? msdyn_locationtimestamp {
        get {
            return GetAttributeValue<DateTime?>("msdyn_locationtimestamp");
        }
        set {
            SetAttributeValue("msdyn_locationtimestamp", value);
        }
    }
    
    /// <summary>
    /// <para>Organizational Unit that resource belong to</para>
    /// <para>Display Name: Organizational Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_organizationalunit")]
    [DisplayName("Organizational Unit")]
    public EntityReference msdyn_organizationalunit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_organizationalunit");
        }
        set {
            SetAttributeValue("msdyn_organizationalunit", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the target utilization for the resource.</para>
    /// <para>Display Name: Target Utilization</para>
    /// </summary>
    [AttributeLogicalName("msdyn_targetutilization")]
    [DisplayName("Target Utilization")]
    [Range(1, 100)]
    public int? msdyn_targetutilization {
        get {
            return GetAttributeValue<int?>("msdyn_targetutilization");
        }
        set {
            SetAttributeValue("msdyn_targetutilization", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Badge Number</para>
    /// </summary>
    [AttributeLogicalName("ovs_badgenumber")]
    [DisplayName("Badge Number")]
    [MaxLength(100)]
    public string ovs_BadgeNumber {
        get {
            return GetAttributeValue<string>("ovs_badgenumber");
        }
        set {
            SetAttributeValue("ovs_badgenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Registered Inspector Number (RIN)</para>
    /// </summary>
    [AttributeLogicalName("ovs_registeredinspectornumberrin")]
    [DisplayName("Registered Inspector Number (RIN)")]
    [MaxLength(100)]
    public string ovs_RegisteredInspectorNumberRIN {
        get {
            return GetAttributeValue<string>("ovs_registeredinspectornumberrin");
        }
        set {
            SetAttributeValue("ovs_registeredinspectornumberrin", value);
        }
    }
    
    [RelationshipSchemaName("BookableResource_SyncErrors")]
    public IEnumerable<SyncError> BookableResource_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("BookableResource_SyncErrors", null);
        }
        set {
            SetRelatedEntities("BookableResource_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("accountid")]
    [RelationshipSchemaName("account_bookableresource_AccountId")]
    public Account account_bookableresource_AccountId {
        get {
            return GetRelatedEntity<Account>("account_bookableresource_AccountId", null);
        }
        set {
            SetRelatedEntity("account_bookableresource_AccountId", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresource_ProcessSession")]
    public IEnumerable<ProcessSession> bookableresource_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("bookableresource_ProcessSession", null);
        }
        set {
            SetRelatedEntities("bookableresource_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresource_bookableresourcebooking_Resource")]
    public IEnumerable<BookableResourceBooking> bookableresource_bookableresourcebooking_Resource {
        get {
            return GetRelatedEntities<BookableResourceBooking>("bookableresource_bookableresourcebooking_Resource", null);
        }
        set {
            SetRelatedEntities("bookableresource_bookableresourcebooking_Resource", null, value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    [RelationshipSchemaName("contact_bookableresource_ContactId")]
    public Contact contact_bookableresource_ContactId {
        get {
            return GetRelatedEntity<Contact>("contact_bookableresource_ContactId", null);
        }
        set {
            SetRelatedEntity("contact_bookableresource_ContactId", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_bookableresource_createdby")]
    public SystemUser lk_bookableresource_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresource_createdby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresource_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_bookableresource_createdonbehalfby")]
    public SystemUser lk_bookableresource_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresource_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresource_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_bookableresource_modifiedby")]
    public SystemUser lk_bookableresource_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresource_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresource_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_bookableresource_modifiedonbehalfby")]
    public SystemUser lk_bookableresource_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresource_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresource_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_account_PreferredResource")]
    public IEnumerable<Account> msdyn_bookableresource_account_PreferredResource {
        get {
            return GetRelatedEntities<Account>("msdyn_bookableresource_account_PreferredResource", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_account_PreferredResource", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_Crew")]
    public IEnumerable<BookableResourceBooking> msdyn_bookableresource_bookableresourcebooking_Crew {
        get {
            return GetRelatedEntities<BookableResourceBooking>("msdyn_bookableresource_bookableresourcebooking_Crew", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_bookableresourcebooking_Crew", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_ResourceGroup")]
    public IEnumerable<BookableResourceBooking> msdyn_bookableresource_bookableresourcebooking_ResourceGroup {
        get {
            return GetRelatedEntities<BookableResourceBooking>("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource")]
    public IEnumerable<msdyn_purchaseorder> msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_timeoffrequest_Resource")]
    public IEnumerable<msdyn_timeoffrequest> msdyn_bookableresource_msdyn_timeoffrequest_Resource {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("msdyn_bookableresource_msdyn_timeoffrequest_Resource", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_msdyn_timeoffrequest_Resource", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_workorder_PreferredResource")]
    public IEnumerable<msdyn_workorder> msdyn_bookableresource_msdyn_workorder_PreferredResource {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_bookableresource_msdyn_workorder_PreferredResource", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_msdyn_workorder_PreferredResource", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_workorder_SupportContact")]
    public IEnumerable<msdyn_workorder> msdyn_bookableresource_msdyn_workorder_SupportContact {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_bookableresource_msdyn_workorder_SupportContact", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresource_msdyn_workorder_SupportContact", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_PrimaryInspector_Bookable")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_PrimaryInspector_Bookable {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_PrimaryInspector_Bookable", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_PrimaryInspector_Bookable", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_SecondaryInspector_Bookab")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_SecondaryInspector_Bookab {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_SecondaryInspector_Bookab", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_SecondaryInspector_Bookab", null, value);
        }
    }
    
    [AttributeLogicalName("userid")]
    [RelationshipSchemaName("systemuser_bookableresource_UserId")]
    public SystemUser systemuser_bookableresource_UserId {
        get {
            return GetRelatedEntity<SystemUser>("systemuser_bookableresource_UserId", null);
        }
        set {
            SetRelatedEntity("systemuser_bookableresource_UserId", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_bookableresource")]
    public SystemUser user_bookableresource {
        get {
            return GetRelatedEntity<SystemUser>("user_bookableresource", null);
        }
        set {
            SetRelatedEntity("user_bookableresource", null, value);
        }
    }
    
    public static BookableResource Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResource,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Represents the line details of a resource booking.</para>
/// <para>Display Name: Bookable Resource Booking</para>
/// </summary>
[EntityLogicalName("bookableresourcebooking")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class BookableResourceBooking : ExtendedEntity<BookableResourceBookingState, BookableResourceBooking_StatusCode> {
    
    public const string EntityLogicalName = "bookableresourcebooking";
    
    public const int EntityTypeCode = 1145;
    
    public BookableResourceBooking() : 
            base(EntityLogicalName) {
    }
    
    public BookableResourceBooking(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("bookableresourcebookingid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("bookableresourcebookingid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the resource booking.</para>
    /// <para>Display Name: Bookable Resource Booking</para>
    /// </summary>
    [AttributeLogicalName("bookableresourcebookingid")]
    [DisplayName("Bookable Resource Booking")]
    public Guid? BookableResourceBookingId {
        get {
            return GetAttributeValue<Guid?>("bookableresourcebookingid");
        }
        set {
            SetId("bookableresourcebookingid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the status of the booking.</para>
    /// <para>Display Name: Booking Status</para>
    /// </summary>
    [AttributeLogicalName("bookingstatus")]
    [DisplayName("Booking Status")]
    public EntityReference BookingStatus {
        get {
            return GetAttributeValue<EntityReference>("bookingstatus");
        }
        set {
            SetAttributeValue("bookingstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the booking is solid or liquid. Solid bookings are firm and cannot be changed whereas liquid bookings can be changed.</para>
    /// <para>Display Name: Booking Type</para>
    /// </summary>
    [AttributeLogicalName("bookingtype")]
    [DisplayName("Booking Type")]
    public BookableResourceBooking_BookingType? BookingType {
        get {
            return GetOptionSetValue<BookableResourceBooking_BookingType>("bookingtype");
        }
        set {
            SetOptionSetValue("bookingtype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter the duration of the booking.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? Duration {
        get {
            return GetAttributeValue<int?>("duration");
        }
        set {
            SetAttributeValue("duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the end date and time of the booking.</para>
    /// <para>Display Name: End Time</para>
    /// </summary>
    [AttributeLogicalName("endtime")]
    [DisplayName("End Time")]
    public DateTime? EndTime {
        get {
            return GetAttributeValue<DateTime?>("endtime");
        }
        set {
            SetAttributeValue("endtime", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the bookableresourcebooking with respect to the base currency.</para>
    /// <para>Display Name: ExchangeRate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("ExchangeRate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the reference to the booking header record that represents the summary of bookings.</para>
    /// <para>Display Name: Header</para>
    /// </summary>
    [AttributeLogicalName("header")]
    [DisplayName("Header")]
    public EntityReference Header {
        get {
            return GetAttributeValue<EntityReference>("header");
        }
        set {
            SetAttributeValue("header", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a name for the booking.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the resource that is booked.</para>
    /// <para>Display Name: Resource</para>
    /// </summary>
    [AttributeLogicalName("resource")]
    [DisplayName("Resource")]
    public EntityReference Resource {
        get {
            return GetAttributeValue<EntityReference>("resource");
        }
        set {
            SetAttributeValue("resource", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the start date and time of the booking.</para>
    /// <para>Display Name: Start Time</para>
    /// </summary>
    [AttributeLogicalName("starttime")]
    [DisplayName("Start Time")]
    public DateTime? StartTime {
        get {
            return GetAttributeValue<DateTime?>("starttime");
        }
        set {
            SetAttributeValue("starttime", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Bookable Resource Booking</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public BookableResourceBookingState? StateCode {
        get {
            return GetOptionSetValue<BookableResourceBookingState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Bookable Resource Booking</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public BookableResourceBooking_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<BookableResourceBooking_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the BookableResourceBooking with respect to the base currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Defines whether this booking accepts changes propagated as cascading changes</para>
    /// <para>Display Name: Accept Cascade Crew Changes</para>
    /// </summary>
    [AttributeLogicalName("msdyn_acceptcascadecrewchanges")]
    [DisplayName("Accept Cascade Crew Changes")]
    public bool? msdyn_AcceptCascadeCrewChanges {
        get {
            return GetAttributeValue<bool?>("msdyn_acceptcascadecrewchanges");
        }
        set {
            SetAttributeValue("msdyn_acceptcascadecrewchanges", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time that work started.</para>
    /// <para>Display Name: Actual Arrival Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_actualarrivaltime")]
    [DisplayName("Actual Arrival Time")]
    public DateTime? msdyn_ActualArrivalTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_actualarrivaltime");
        }
        set {
            SetAttributeValue("msdyn_actualarrivaltime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total travel duration. Calculated based on the difference between the Bookable Resource Booking's start time and actual arrival time.</para>
    /// <para>Display Name: Actual Travel Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_actualtravelduration")]
    [DisplayName("Actual Travel Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_ActualTravelDuration {
        get {
            return GetAttributeValue<int?>("msdyn_actualtravelduration");
        }
        set {
            SetAttributeValue("msdyn_actualtravelduration", value);
        }
    }
    
    /// <summary>
    /// <para>Agreement Booking Date from where this Booking was generated</para>
    /// <para>Display Name: Agreement Booking Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingdate")]
    [DisplayName("Agreement Booking Date")]
    public EntityReference msdyn_AgreementBookingDate {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingdate");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingdate", value);
        }
    }
    
    /// <summary>
    /// <para>Allow the time of this booking to be displayed on the schedule assistant as available.</para>
    /// <para>Display Name: Allow Overlapping</para>
    /// </summary>
    [AttributeLogicalName("msdyn_allowoverlapping")]
    [DisplayName("Allow Overlapping")]
    public bool? msdyn_AllowOverlapping {
        get {
            return GetAttributeValue<bool?>("msdyn_allowoverlapping");
        }
        set {
            SetAttributeValue("msdyn_allowoverlapping", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Appointment associated with Bookable Resource Booking.</para>
    /// <para>Display Name: Appointment Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_appointmentbookingid")]
    [DisplayName("Appointment Booking")]
    public EntityReference msdyn_AppointmentBookingId {
        get {
            return GetAttributeValue<EntityReference>("msdyn_appointmentbookingid");
        }
        set {
            SetAttributeValue("msdyn_appointmentbookingid", value);
        }
    }
    
    /// <summary>
    /// <para>The Base travel duration indicates the travel time without traffic</para>
    /// <para>Display Name: Base Travel Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_basetravelduration")]
    [DisplayName("Base Travel Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_BaseTravelDuration {
        get {
            return GetAttributeValue<int?>("msdyn_basetravelduration");
        }
        set {
            SetAttributeValue("msdyn_basetravelduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the method used to create this booking.</para>
    /// <para>Display Name: Booking Method</para>
    /// </summary>
    [AttributeLogicalName("msdyn_bookingmethod")]
    [DisplayName("Booking Method")]
    public msdyn_resourceschedulesource? msdyn_BookingMethod {
        get {
            return GetOptionSetValue<msdyn_resourceschedulesource>("msdyn_bookingmethod");
        }
        set {
            SetOptionSetValue("msdyn_bookingmethod", value);
        }
    }
    
    /// <summary>
    /// <para>A unique identifier for the booking setup metadata that is associated with a bookable resource booking.</para>
    /// <para>Display Name: Booking Setup Metadata</para>
    /// </summary>
    [AttributeLogicalName("msdyn_bookingsetupmetadataid")]
    [DisplayName("Booking Setup Metadata")]
    public EntityReference msdyn_BookingSetupMetadataId {
        get {
            return GetAttributeValue<EntityReference>("msdyn_bookingsetupmetadataid");
        }
        set {
            SetAttributeValue("msdyn_bookingsetupmetadataid", value);
        }
    }
    
    /// <summary>
    /// <para>Defines whether changing any of the following fields (Start Time, End Time, Status) should cascade the changes to other bookings on this requirement that have the same start and end time.</para>
    /// <para>Display Name: Cascade Crew Changes</para>
    /// </summary>
    [AttributeLogicalName("msdyn_cascadecrewchanges")]
    [DisplayName("Cascade Crew Changes")]
    public bool? msdyn_CascadeCrewChanges {
        get {
            return GetAttributeValue<bool?>("msdyn_cascadecrewchanges");
        }
        set {
            SetAttributeValue("msdyn_cascadecrewchanges", value);
        }
    }
    
    /// <summary>
    /// <para>This field is populated by the Field Service solution to define to which crew a booking is connected.</para>
    /// <para>Display Name: Crew</para>
    /// </summary>
    [AttributeLogicalName("msdyn_crew")]
    [DisplayName("Crew")]
    public EntityReference msdyn_Crew {
        get {
            return GetAttributeValue<EntityReference>("msdyn_crew");
        }
        set {
            SetAttributeValue("msdyn_crew", value);
        }
    }
    
    /// <summary>
    /// <para>Crew Member Type</para>
    /// <para>Display Name: Crew Member Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_crewmembertype")]
    [DisplayName("Crew Member Type")]
    public msdyn_crewmembertype? msdyn_CrewMemberType {
        get {
            return GetOptionSetValue<msdyn_crewmembertype>("msdyn_crewmembertype");
        }
        set {
            SetOptionSetValue("msdyn_crewmembertype", value);
        }
    }
    
    /// <summary>
    /// <para>Estimated Arrival Time</para>
    /// <para>Display Name: Estimated Arrival Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedarrivaltime")]
    [DisplayName("Estimated Arrival Time")]
    public DateTime? msdyn_EstimatedArrivalTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_estimatedarrivaltime");
        }
        set {
            SetAttributeValue("msdyn_estimatedarrivaltime", value);
        }
    }
    
    /// <summary>
    /// <para>Estimated Travel Duration</para>
    /// <para>Display Name: Estimated Travel Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedtravelduration")]
    [DisplayName("Estimated Travel Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedTravelDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedtravelduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedtravelduration", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>In this field you can enter the total miles the resource drove to the job site</para>
    /// <para>Display Name: Miles Traveled</para>
    /// </summary>
    [AttributeLogicalName("msdyn_milestraveled")]
    [DisplayName("Miles Traveled")]
    public double? msdyn_MilesTraveled {
        get {
            return GetAttributeValue<double?>("msdyn_milestraveled");
        }
        set {
            SetAttributeValue("msdyn_milestraveled", value);
        }
    }
    
    /// <summary>
    /// <para>Internal Use. This field is used to capture the time when the Booking was updated on mobile offline.</para>
    /// <para>Display Name: Offline Timestamp</para>
    /// </summary>
    [AttributeLogicalName("msdyn_offlinetimestamp")]
    [DisplayName("Offline Timestamp")]
    public DateTime? msdyn_OfflineTimestamp {
        get {
            return GetAttributeValue<DateTime?>("msdyn_offlinetimestamp");
        }
        set {
            SetAttributeValue("msdyn_offlinetimestamp", value);
        }
    }
    
    /// <summary>
    /// <para>Prevents time stamp creation if the time stamp was already created on a mobile device.</para>
    /// <para>Display Name: Prevent Timestamp Creation</para>
    /// </summary>
    [AttributeLogicalName("msdyn_preventtimestampcreation")]
    [DisplayName("Prevent Timestamp Creation")]
    public bool? msdyn_PreventTimestampCreation {
        get {
            return GetAttributeValue<bool?>("msdyn_preventtimestampcreation");
        }
        set {
            SetAttributeValue("msdyn_preventtimestampcreation", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Resource associated with Resource Booking</para>
    /// <para>Display Name: Resource Group</para>
    /// </summary>
    [AttributeLogicalName("msdyn_resourcegroup")]
    [DisplayName("Resource Group")]
    public EntityReference msdyn_ResourceGroup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_resourcegroup");
        }
        set {
            SetAttributeValue("msdyn_resourcegroup", value);
        }
    }
    
    /// <summary>
    /// <para>Resource Requirement</para>
    /// <para>Display Name: Resource Requirement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_resourcerequirement")]
    [DisplayName("Resource Requirement")]
    public EntityReference msdyn_ResourceRequirement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_resourcerequirement");
        }
        set {
            SetAttributeValue("msdyn_resourcerequirement", value);
        }
    }
    
    /// <summary>
    /// <para>This field is used for capturing signature on Mobile (using the Pen Control)</para>
    /// <para>Display Name: Signature</para>
    /// </summary>
    [AttributeLogicalName("msdyn_signature")]
    [DisplayName("Signature")]
    public string msdyn_Signature {
        get {
            return GetAttributeValue<string>("msdyn_signature");
        }
        set {
            SetAttributeValue("msdyn_signature", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the automatically generated text of the time slot on the schedule board.</para>
    /// <para>Display Name: Slot Text</para>
    /// </summary>
    [AttributeLogicalName("msdyn_slottext")]
    [DisplayName("Slot Text")]
    public string msdyn_SlotText {
        get {
            return GetAttributeValue<string>("msdyn_slottext");
        }
        set {
            SetAttributeValue("msdyn_slottext", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Time Group Detail Selected</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timegroupdetailselected")]
    [DisplayName("Time Group Detail Selected")]
    public EntityReference msdyn_TimeGroupDetailSelected {
        get {
            return GetAttributeValue<EntityReference>("msdyn_timegroupdetailselected");
        }
        set {
            SetAttributeValue("msdyn_timegroupdetailselected", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total billable duration. If you leave this field blank the system automatically determines the billable duration by calculating the resource journal details.</para>
    /// <para>Display Name: Total Billable Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalbillableduration")]
    [DisplayName("Total Billable Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_TotalBillableDuration {
        get {
            return GetAttributeValue<int?>("msdyn_totalbillableduration");
        }
        set {
            SetAttributeValue("msdyn_totalbillableduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total break duration. If you leave this field blank the system automatically determines the break duration by calculating the resource journal details.</para>
    /// <para>Display Name: Total Break Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalbreakduration")]
    [DisplayName("Total Break Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_TotalBreakDuration {
        get {
            return GetAttributeValue<int?>("msdyn_totalbreakduration");
        }
        set {
            SetAttributeValue("msdyn_totalbreakduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total cost for this booking.</para>
    /// <para>Display Name: Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost")]
    [DisplayName("Total Cost")]
    public decimal? msdyn_TotalCost {
        get {
            return GetMoneyValue("msdyn_totalcost");
        }
        set {
            SetMoneyValue("msdyn_totalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total duration that this booking was in progress.</para>
    /// <para>Display Name: Total Duration In Progress</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totaldurationinprogress")]
    [DisplayName("Total Duration In Progress")]
    [Range(0, 2147483647)]
    public int? msdyn_TotalDurationInProgress {
        get {
            return GetAttributeValue<int?>("msdyn_totaldurationinprogress");
        }
        set {
            SetAttributeValue("msdyn_totaldurationinprogress", value);
        }
    }
    
    /// <summary>
    /// <para>Travel Time Calculation</para>
    /// <para>Display Name: Travel Time Calculation</para>
    /// </summary>
    [AttributeLogicalName("msdyn_traveltimecalculationtype")]
    [DisplayName("Travel Time Calculation")]
    public msdyn_traveltimetype? msdyn_TravelTimeCalculationType {
        get {
            return GetOptionSetValue<msdyn_traveltimetype>("msdyn_traveltimecalculationtype");
        }
        set {
            SetOptionSetValue("msdyn_traveltimecalculationtype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Travel Time Rescheduling (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_traveltimerescheduling")]
    [DisplayName("Travel Time Rescheduling (Deprecated)")]
    public bool? msdyn_TravelTimeRescheduling {
        get {
            return GetAttributeValue<bool?>("msdyn_traveltimerescheduling");
        }
        set {
            SetAttributeValue("msdyn_traveltimerescheduling", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ursinternalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_URSInternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_ursinternalflags");
        }
        set {
            SetAttributeValue("msdyn_ursinternalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_worklocation")]
    [DisplayName("Work Location")]
    public msdyn_worklocation? msdyn_WorkLocation {
        get {
            return GetOptionSetValue<msdyn_worklocation>("msdyn_worklocation");
        }
        set {
            SetOptionSetValue("msdyn_worklocation", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order associated with Resource Booking.</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Capacity that needs to take from resource capacity</para>
    /// <para>Display Name: Capacity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_effort")]
    [DisplayName("Capacity")]
    public decimal? msdyn_effort {
        get {
            return GetAttributeValue<decimal?>("msdyn_effort");
        }
        set {
            SetAttributeValue("msdyn_effort", value);
        }
    }
    
    /// <summary>
    /// <para>Internal For Quick note pcf control actions</para>
    /// <para>Display Name: Quick note actions</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quickNoteAction")]
    [DisplayName("Quick note actions")]
    public msdyn_quicknote_type? msdyn_quickNoteAction {
        get {
            return GetOptionSetValue<msdyn_quicknote_type>("msdyn_quickNoteAction");
        }
        set {
            SetOptionSetValue("msdyn_quickNoteAction", value);
        }
    }
    
    /// <summary>
    /// <para>Requirement Group</para>
    /// <para>Display Name: Requirement Group</para>
    /// </summary>
    [AttributeLogicalName("msdyn_requirementgroupid")]
    [DisplayName("Requirement Group")]
    public EntityReference msdyn_requirementgroupid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_requirementgroupid");
        }
        set {
            SetAttributeValue("msdyn_requirementgroupid", value);
        }
    }
    
    /// <summary>
    /// <para>Requirement Group Set</para>
    /// <para>Display Name: Requirement Group Set</para>
    /// </summary>
    [AttributeLogicalName("msdyn_requirementgroupset")]
    [DisplayName("Requirement Group Set")]
    [MaxLength(40)]
    public string msdyn_requirementgroupset {
        get {
            return GetAttributeValue<string>("msdyn_requirementgroupset");
        }
        set {
            SetAttributeValue("msdyn_requirementgroupset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Service Appointment associated with Resource Booking.</para>
    /// <para>Display Name: Service Activity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceappointment")]
    [DisplayName("Service Activity")]
    public EntityReference msdyn_serviceappointment {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceappointment");
        }
        set {
            SetAttributeValue("msdyn_serviceappointment", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Cost in base currency.</para>
    /// <para>Display Name: Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost_base")]
    [DisplayName("Total Cost (Base)")]
    public decimal? msdyn_totalcost_Base {
        get {
            return GetMoneyValue("msdyn_totalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Planned Fiscal Quarter</para>
    /// </summary>
    [AttributeLogicalName("ovs_plannedfiscalquarter")]
    [DisplayName("Planned Fiscal Quarter")]
    public EntityReference ovs_PlannedFiscalQuarter {
        get {
            return GetAttributeValue<EntityReference>("ovs_plannedfiscalquarter");
        }
        set {
            SetAttributeValue("ovs_plannedfiscalquarter", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for TCFiscalYear associated with Bookable Resource Booking.</para>
    /// <para>Display Name: Planned Fiscal Year</para>
    /// </summary>
    [AttributeLogicalName("ovs_plannedfiscalyearid")]
    [DisplayName("Planned Fiscal Year")]
    public EntityReference ovs_PlannedFiscalYearId {
        get {
            return GetAttributeValue<EntityReference>("ovs_plannedfiscalyearid");
        }
        set {
            SetAttributeValue("ovs_plannedfiscalyearid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Revised Quarter</para>
    /// </summary>
    [AttributeLogicalName("ovs_revisedquarter")]
    [DisplayName("Revised Quarter")]
    public EntityReference ovs_RevisedQuarter {
        get {
            return GetAttributeValue<EntityReference>("ovs_revisedquarter");
        }
        set {
            SetAttributeValue("ovs_revisedquarter", value);
        }
    }
    
    [RelationshipSchemaName("BookableResourceBooking_SyncErrors")]
    public IEnumerable<SyncError> BookableResourceBooking_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("BookableResourceBooking_SyncErrors", null);
        }
        set {
            SetRelatedEntities("BookableResourceBooking_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("resource")]
    [RelationshipSchemaName("bookableresource_bookableresourcebooking_Resource")]
    public BookableResource bookableresource_bookableresourcebooking_Resource {
        get {
            return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcebooking_Resource", null);
        }
        set {
            SetRelatedEntity("bookableresource_bookableresourcebooking_Resource", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_ActivityPointers")]
    public IEnumerable<ActivityPointer> bookableresourcebooking_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("bookableresourcebooking_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_Appointments")]
    public IEnumerable<Appointment> bookableresourcebooking_Appointments {
        get {
            return GetRelatedEntities<Appointment>("bookableresourcebooking_Appointments", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_CampaignActivities")]
    public IEnumerable<CampaignActivity> bookableresourcebooking_CampaignActivities {
        get {
            return GetRelatedEntities<CampaignActivity>("bookableresourcebooking_CampaignActivities", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_CampaignActivities", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_CampaignResponses")]
    public IEnumerable<CampaignResponse> bookableresourcebooking_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("bookableresourcebooking_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_Emails")]
    public IEnumerable<Email> bookableresourcebooking_Emails {
        get {
            return GetRelatedEntities<Email>("bookableresourcebooking_Emails", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_PhoneCalls")]
    public IEnumerable<PhoneCall> bookableresourcebooking_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("bookableresourcebooking_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_ProcessSession")]
    public IEnumerable<ProcessSession> bookableresourcebooking_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("bookableresourcebooking_ProcessSession", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> bookableresourcebooking_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("bookableresourcebooking_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> bookableresourcebooking_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("bookableresourcebooking_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_Tasks")]
    public IEnumerable<Task> bookableresourcebooking_Tasks {
        get {
            return GetRelatedEntities<Task>("bookableresourcebooking_Tasks", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> bookableresourcebooking_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("bookableresourcebooking_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("bookableresourcebooking_msfp_alerts")]
    public IEnumerable<msfp_alert> bookableresourcebooking_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("bookableresourcebooking_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("bookableresourcebooking_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_bookableresourcebooking_createdby")]
    public SystemUser lk_bookableresourcebooking_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_createdby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresourcebooking_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_bookableresourcebooking_createdonbehalfby")]
    public SystemUser lk_bookableresourcebooking_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresourcebooking_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_bookableresourcebooking_modifiedby")]
    public SystemUser lk_bookableresourcebooking_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresourcebooking_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_bookableresourcebooking_modifiedonbehalfby")]
    public SystemUser lk_bookableresourcebooking_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_bookableresourcebooking_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_appointmentbookingid")]
    [RelationshipSchemaName("msdyn_appointment_bookableresourcebooking")]
    public Appointment msdyn_appointment_bookableresourcebooking {
        get {
            return GetRelatedEntity<Appointment>("msdyn_appointment_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntity("msdyn_appointment_bookableresourcebooking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_crew")]
    [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_Crew")]
    public BookableResource msdyn_bookableresource_bookableresourcebooking_Crew {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_bookableresourcebooking_Crew", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_bookableresourcebooking_Crew", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_resourcegroup")]
    [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_ResourceGroup")]
    public BookableResource msdyn_bookableresource_bookableresourcebooking_ResourceGroup {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking")]
    public IEnumerable<msdyn_bookingjournal> msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking")]
    public IEnumerable<msdyn_purchaseorder> msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking")]
    public IEnumerable<msdyn_purchaseorderproduct> msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking")]
    public IEnumerable<msdyn_workorderproduct> msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking")]
    public IEnumerable<msdyn_workorderservice> msdyn_bookableresourcebooking_msdyn_workorderservice_Booking {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking")]
    public IEnumerable<msdyn_workorderservicetask> msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking", null);
        }
        set {
            SetRelatedEntities("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceappointment")]
    [RelationshipSchemaName("msdyn_serviceappointment_bookableresourcebooking_serviceappointment")]
    public ServiceAppointment msdyn_serviceappointment_bookableresourcebooking_serviceappointment {
        get {
            return GetRelatedEntity<ServiceAppointment>("msdyn_serviceappointment_bookableresourcebooking_serviceappointment", null);
        }
        set {
            SetRelatedEntity("msdyn_serviceappointment_bookableresourcebooking_serviceappointment", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_plannedfiscalquarter")]
    [RelationshipSchemaName("ovs_BookableResourceBooking_PlannedFiscalQuar")]
    public tc_TCFiscalQuarter ovs_BookableResourceBooking_PlannedFiscalQuar {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("ovs_BookableResourceBooking_PlannedFiscalQuar", null);
        }
        set {
            SetRelatedEntity("ovs_BookableResourceBooking_PlannedFiscalQuar", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_revisedquarter")]
    [RelationshipSchemaName("ovs_BookableResourceBooking_RevisedQuarter_tc")]
    public tc_TCFiscalQuarter ovs_BookableResourceBooking_RevisedQuarter_tc {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("ovs_BookableResourceBooking_RevisedQuarter_tc", null);
        }
        set {
            SetRelatedEntity("ovs_BookableResourceBooking_RevisedQuarter_tc", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_plannedfiscalyearid")]
    [RelationshipSchemaName("ovs_tc_tcfiscalyear_bookableresourcebooking")]
    public tc_TCFiscalYear ovs_tc_tcfiscalyear_bookableresourcebooking {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("ovs_tc_tcfiscalyear_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntity("ovs_tc_tcfiscalyear_bookableresourcebooking", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_bookableresourcebooking")]
    public SystemUser user_bookableresourcebooking {
        get {
            return GetRelatedEntity<SystemUser>("user_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntity("user_bookableresourcebooking", null, value);
        }
    }
    
    public static BookableResourceBooking Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceBooking,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Log used to track bulk operation execution, successes, and failures.</para>
/// <para>Display Name: Bulk Operation Log</para>
/// </summary>
[EntityLogicalName("bulkoperationlog")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class BulkOperationLog : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "bulkoperationlog";
    
    public const int EntityTypeCode = 4405;
    
    public BulkOperationLog() : 
            base(EntityLogicalName) {
    }
    
    public BulkOperationLog(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("bulkoperationlogid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("bulkoperationlogid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the bulk operation log.</para>
    /// <para>Display Name: Bulk Operation Log Number</para>
    /// </summary>
    [AttributeLogicalName("bulkoperationlogid")]
    [DisplayName("Bulk Operation Log Number")]
    public Guid? BulkOperationLogId {
        get {
            return GetAttributeValue<Guid?>("bulkoperationlogid");
        }
        set {
            SetId("bulkoperationlogid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the data value at which an error occurred during the quick campaign.</para>
    /// <para>Display Name: Failed on Line</para>
    /// </summary>
    [AttributeLogicalName("additionalinfo")]
    [DisplayName("Failed on Line")]
    public string AdditionalInfo {
        get {
            return GetAttributeValue<string>("additionalinfo");
        }
        set {
            SetAttributeValue("additionalinfo", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the quick campaign record that the log applies to. This information is used to relate log data to the parent quick campaign.</para>
    /// <para>Display Name: Bulk Operation Number</para>
    /// </summary>
    [AttributeLogicalName("bulkoperationid")]
    [DisplayName("Bulk Operation Number")]
    public EntityReference BulkOperationId {
        get {
            return GetAttributeValue<EntityReference>("bulkoperationid");
        }
        set {
            SetAttributeValue("bulkoperationid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the campaign activity record that the log applies to. This information is used to relate log data to the parent campaign activity.</para>
    /// <para>Display Name: Campaign Activity Number</para>
    /// </summary>
    [AttributeLogicalName("campaignactivityid")]
    [DisplayName("Campaign Activity Number")]
    public EntityReference CampaignActivityId {
        get {
            return GetAttributeValue<EntityReference>("campaignactivityid");
        }
        set {
            SetAttributeValue("campaignactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the activity or other item created by the bulk operation.</para>
    /// <para>Display Name: Created Object</para>
    /// </summary>
    [AttributeLogicalName("createdobjectid")]
    [DisplayName("Created Object")]
    public EntityReference CreatedObjectId {
        get {
            return GetAttributeValue<EntityReference>("createdobjectid");
        }
        set {
            SetAttributeValue("createdobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>The error description formatted.</para>
    /// <para>Display Name: Error description</para>
    /// </summary>
    [AttributeLogicalName("errordescriptionformatted")]
    [DisplayName("Error description")]
    public string ErrorDescriptionFormatted {
        get {
            return GetAttributeValue<string>("errordescriptionformatted");
        }
        set {
            SetAttributeValue("errordescriptionformatted", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the error code that is used to troubleshoot issues in the bulk operation.</para>
    /// <para>Display Name: Reason Id</para>
    /// </summary>
    [AttributeLogicalName("errornumber")]
    [DisplayName("Reason Id")]
    [Range(-2147483648, 2147483647)]
    public int? ErrorNumber {
        get {
            return GetAttributeValue<int?>("errornumber");
        }
    }
    
    /// <summary>
    /// <para>The error number formatted.</para>
    /// <para>Display Name: Error number</para>
    /// </summary>
    [AttributeLogicalName("errornumberformatted")]
    [DisplayName("Error number")]
    public string ErrorNumberFormatted {
        get {
            return GetAttributeValue<string>("errornumberformatted");
        }
        set {
            SetAttributeValue("errornumberformatted", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the account, contact, lead, or list that the bulk operation log item applies to.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Customers")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("campaignactivityid")]
    [RelationshipSchemaName("CampaignActivity_logs")]
    public CampaignActivity CampaignActivity_logs {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_logs", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_logs", null, value);
        }
    }
    
    [AttributeLogicalName("createdobjectid")]
    [RelationshipSchemaName("CreatedAccount_BulkOperationLogs2")]
    public Account CreatedAccount_BulkOperationLogs2 {
        get {
            return GetRelatedEntity<Account>("CreatedAccount_BulkOperationLogs2", null);
        }
        set {
            SetRelatedEntity("CreatedAccount_BulkOperationLogs2", null, value);
        }
    }
    
    [AttributeLogicalName("createdobjectid")]
    [RelationshipSchemaName("CreatedActivity_BulkOperationLogs")]
    public ActivityPointer CreatedActivity_BulkOperationLogs {
        get {
            return GetRelatedEntity<ActivityPointer>("CreatedActivity_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("CreatedActivity_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("createdobjectid")]
    [RelationshipSchemaName("CreatedContact_BulkOperationLogs")]
    public Contact CreatedContact_BulkOperationLogs {
        get {
            return GetRelatedEntity<Contact>("CreatedContact_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("CreatedContact_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("createdobjectid")]
    [RelationshipSchemaName("CreatedLead_BulkOperationLogs")]
    public Lead CreatedLead_BulkOperationLogs {
        get {
            return GetRelatedEntity<Lead>("CreatedLead_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("CreatedLead_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("createdobjectid")]
    [RelationshipSchemaName("CreatedOpportunity_BulkOperationLogs")]
    public Opportunity CreatedOpportunity_BulkOperationLogs {
        get {
            return GetRelatedEntity<Opportunity>("CreatedOpportunity_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("CreatedOpportunity_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SourceAccount_BulkOperationLogs")]
    public Account SourceAccount_BulkOperationLogs {
        get {
            return GetRelatedEntity<Account>("SourceAccount_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("SourceAccount_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SourceContact_BulkOperationLogs")]
    public Contact SourceContact_BulkOperationLogs {
        get {
            return GetRelatedEntity<Contact>("SourceContact_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("SourceContact_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SourceLead_BulkOperationLogs")]
    public Lead SourceLead_BulkOperationLogs {
        get {
            return GetRelatedEntity<Lead>("SourceLead_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntity("SourceLead_BulkOperationLogs", null, value);
        }
    }
    
    [AttributeLogicalName("bulkoperationid")]
    [RelationshipSchemaName("activity_pointer_BulkOperation_logs")]
    public ActivityPointer activity_pointer_BulkOperation_logs {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_BulkOperation_logs", null);
        }
        set {
            SetRelatedEntity("activity_pointer_BulkOperation_logs", null, value);
        }
    }
    
    [RelationshipSchemaName("bulkoperationlog_SyncErrors")]
    public IEnumerable<SyncError> bulkoperationlog_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("bulkoperationlog_SyncErrors", null);
        }
        set {
            SetRelatedEntities("bulkoperationlog_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_bulkoperationlog")]
    public SystemUser user_bulkoperationlog {
        get {
            return GetRelatedEntity<SystemUser>("user_bulkoperationlog", null);
        }
        set {
            SetRelatedEntity("user_bulkoperationlog", null, value);
        }
    }
    
    public static BulkOperationLog Retrieve(IOrganizationService service, Guid id, params Expression<Func<BulkOperationLog,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Container for campaign activities and responses, sales literature, products, and lists to create, plan, execute, and track the results of a specific marketing campaign through its life.</para>
/// <para>Display Name: Campaign</para>
/// </summary>
[EntityLogicalName("campaign")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Campaign : ExtendedEntity<CampaignState, Campaign_StatusCode> {
    
    public const string EntityLogicalName = "campaign";
    
    public const int EntityTypeCode = 4400;
    
    public Campaign() : 
            base(EntityLogicalName) {
    }
    
    public Campaign(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("campaignid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign.</para>
    /// <para>Display Name: Campaign</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Campaign")]
    public Guid? CampaignId {
        get {
            return GetAttributeValue<Guid?>("campaignid");
        }
        set {
            SetId("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign was closed or completed.</para>
    /// <para>Display Name: Actual End Date</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End Date")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the campaign.</para>
    /// <para>Display Name: Actual Start Date</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start Date")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Type the amount budgeted for the campaign to define a limit for how much you can spend.</para>
    /// <para>Display Name: Budget Allocated</para>
    /// </summary>
    [AttributeLogicalName("budgetedcost")]
    [DisplayName("Budget Allocated")]
    public decimal? BudgetedCost {
        get {
            return GetMoneyValue("budgetedcost");
        }
        set {
            SetMoneyValue("budgetedcost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Budget Allocated in base currency.</para>
    /// <para>Display Name: Budget Allocated (Base)</para>
    /// </summary>
    [AttributeLogicalName("budgetedcost_base")]
    [DisplayName("Budget Allocated (Base)")]
    public decimal? BudgetedCost_Base {
        get {
            return GetMoneyValue("budgetedcost_base");
        }
    }
    
    /// <summary>
    /// <para>Type a number or other tracking code to identify the campaign. If no value is entered, a code will be generated automatically.</para>
    /// <para>Display Name: Campaign Code</para>
    /// </summary>
    [AttributeLogicalName("codename")]
    [DisplayName("Campaign Code")]
    [MaxLength(32)]
    public string CodeName {
        get {
            return GetAttributeValue<string>("codename");
        }
        set {
            SetAttributeValue("codename", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the campaign, such as the products or services offered or the targeted audience.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Type the expected response rate for the campaign as a full number between 0 and 100.</para>
    /// <para>Display Name: Expected Response Percentage</para>
    /// </summary>
    [AttributeLogicalName("expectedresponse")]
    [DisplayName("Expected Response Percentage")]
    [Range(0, 100)]
    public int? ExpectedResponse {
        get {
            return GetAttributeValue<int?>("expectedresponse");
        }
        set {
            SetAttributeValue("expectedresponse", value);
        }
    }
    
    /// <summary>
    /// <para>Type the expected revenue for the campaign for return on investment projections and post-campaign reporting.</para>
    /// <para>Display Name: Estimated Revenue</para>
    /// </summary>
    [AttributeLogicalName("expectedrevenue")]
    [DisplayName("Estimated Revenue")]
    public decimal? ExpectedRevenue {
        get {
            return GetMoneyValue("expectedrevenue");
        }
        set {
            SetMoneyValue("expectedrevenue", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Estimated Revenue in base currency.</para>
    /// <para>Display Name: Estimated Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("expectedrevenue_base")]
    [DisplayName("Estimated Revenue (Base)")]
    public decimal? ExpectedRevenue_Base {
        get {
            return GetMoneyValue("expectedrevenue_base");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the campaign is a template that can be copied when you create future campaigns.</para>
    /// <para>Display Name: Template</para>
    /// </summary>
    [AttributeLogicalName("istemplate")]
    [DisplayName("Template")]
    public bool? IsTemplate {
        get {
            return GetAttributeValue<bool?>("istemplate");
        }
        set {
            SetAttributeValue("istemplate", value);
        }
    }
    
    /// <summary>
    /// <para>Type the promotional message or marketing copy for the campaign.</para>
    /// <para>Display Name: Message</para>
    /// </summary>
    [AttributeLogicalName("message")]
    [DisplayName("Message")]
    [MaxLength(256)]
    public string Message {
        get {
            return GetAttributeValue<string>("message");
        }
        set {
            SetAttributeValue("message", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a name for the campaign so that it is identified correctly in lists.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(128)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the objective of the campaign, including products, services, discounts, and pricing.</para>
    /// <para>Display Name: Offer</para>
    /// </summary>
    [AttributeLogicalName("objective")]
    [DisplayName("Offer")]
    public string Objective {
        get {
            return GetAttributeValue<string>("objective");
        }
        set {
            SetAttributeValue("objective", value);
        }
    }
    
    /// <summary>
    /// <para>Type the sum of any miscellaneous campaign costs not included in the campaign activities to make sure the actual cost of the campaign is calculated correctly.</para>
    /// <para>Display Name: Miscellaneous Costs</para>
    /// </summary>
    [AttributeLogicalName("othercost")]
    [DisplayName("Miscellaneous Costs")]
    public decimal? OtherCost {
        get {
            return GetMoneyValue("othercost");
        }
        set {
            SetMoneyValue("othercost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Miscellaneous Costs in base currency.</para>
    /// <para>Display Name: Miscellaneous Costs (Base)</para>
    /// </summary>
    [AttributeLogicalName("othercost_base")]
    [DisplayName("Miscellaneous Costs (Base)")]
    public decimal? OtherCost_Base {
        get {
            return GetMoneyValue("othercost_base");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the price list associated with this item to make sure the products associated with the campaign are offered at the correct prices.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelistid")]
    [DisplayName("Price List")]
    public EntityReference PriceListId {
        get {
            return GetAttributeValue<EntityReference>("pricelistid");
        }
        set {
            SetAttributeValue("pricelistid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Type a promotional code to track sales related to the campaign or allow customers to redeem a discount offer.</para>
    /// <para>Display Name: Promotion Code</para>
    /// </summary>
    [AttributeLogicalName("promotioncodename")]
    [DisplayName("Promotion Code")]
    [MaxLength(128)]
    public string PromotionCodeName {
        get {
            return GetAttributeValue<string>("promotioncodename");
        }
        set {
            SetAttributeValue("promotioncodename", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign is scheduled to end.</para>
    /// <para>Display Name: Proposed End Date</para>
    /// </summary>
    [AttributeLogicalName("proposedend")]
    [DisplayName("Proposed End Date")]
    public DateTime? ProposedEnd {
        get {
            return GetAttributeValue<DateTime?>("proposedend");
        }
        set {
            SetAttributeValue("proposedend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign is scheduled to start.</para>
    /// <para>Display Name: Proposed Start Date</para>
    /// </summary>
    [AttributeLogicalName("proposedstart")]
    [DisplayName("Proposed Start Date")]
    public DateTime? ProposedStart {
        get {
            return GetAttributeValue<DateTime?>("proposedstart");
        }
        set {
            SetAttributeValue("proposedstart", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the campaign. By default, campaigns are active and can't be deactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public CampaignState? StateCode {
        get {
            return GetOptionSetValue<CampaignState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the campaign's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Campaign_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Campaign_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TmpRegardingObjectId</para>
    /// </summary>
    [AttributeLogicalName("tmpregardingobjectid")]
    [DisplayName("TmpRegardingObjectId")]
    [MaxLength(100)]
    public string TmpRegardingObjectId {
        get {
            return GetAttributeValue<string>("tmpregardingobjectid");
        }
        set {
            SetAttributeValue("tmpregardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of the amounts entered in the Total Cost of Campaign Activities and Miscellaneous Costs fields.</para>
    /// <para>Display Name: Total Cost of Campaign</para>
    /// </summary>
    [AttributeLogicalName("totalactualcost")]
    [DisplayName("Total Cost of Campaign")]
    public decimal? TotalActualCost {
        get {
            return GetMoneyValue("totalactualcost");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Cost of Campaign in base currency.</para>
    /// <para>Display Name: Total Cost of Campaign (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalactualcost_base")]
    [DisplayName("Total Cost of Campaign (Base)")]
    public decimal? TotalActualCost_Base {
        get {
            return GetMoneyValue("totalactualcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of the values entered in the Actual Cost field on all campaign activities related to the campaign.</para>
    /// <para>Display Name: Total Cost of Campaign Activities</para>
    /// </summary>
    [AttributeLogicalName("totalcampaignactivityactualcost")]
    [DisplayName("Total Cost of Campaign Activities")]
    public decimal? TotalCampaignActivityActualCost {
        get {
            return GetMoneyValue("totalcampaignactivityactualcost");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Cost of Campaign Activities in base currency.</para>
    /// <para>Display Name: Total Cost of Campaign Activities (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalcampaignactivityactualcost_base")]
    [DisplayName("Total Cost of Campaign Activities (Base)")]
    public decimal? TotalCampaignActivityActualCost_Base {
        get {
            return GetMoneyValue("totalcampaignactivityactualcost_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of the campaign.</para>
    /// <para>Display Name: Campaign Type</para>
    /// </summary>
    [AttributeLogicalName("typecode")]
    [DisplayName("Campaign Type")]
    public Campaign_TypeCode? TypeCode {
        get {
            return GetOptionSetValue<Campaign_TypeCode>("typecode");
        }
        set {
            SetOptionSetValue("typecode", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("Campaign_ActivityPointers")]
    public IEnumerable<ActivityPointer> Campaign_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Campaign_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Campaign_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_Appointments")]
    public IEnumerable<Appointment> Campaign_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Campaign_Appointments", null);
        }
        set {
            SetRelatedEntities("Campaign_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_CampaignActivities")]
    public IEnumerable<CampaignActivity> Campaign_CampaignActivities {
        get {
            return GetRelatedEntities<CampaignActivity>("Campaign_CampaignActivities", null);
        }
        set {
            SetRelatedEntities("Campaign_CampaignActivities", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_CampaignResponses")]
    public IEnumerable<CampaignResponse> Campaign_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("Campaign_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("Campaign_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_Emails")]
    public IEnumerable<Email> Campaign_Emails {
        get {
            return GetRelatedEntities<Email>("Campaign_Emails", null);
        }
        set {
            SetRelatedEntities("Campaign_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_Phonecalls")]
    public IEnumerable<PhoneCall> Campaign_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Campaign_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Campaign_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_ProcessSessions")]
    public IEnumerable<ProcessSession> Campaign_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Campaign_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Campaign_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Campaign_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Campaign_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Campaign_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Campaign_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Campaign_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Campaign_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_SyncErrors")]
    public IEnumerable<SyncError> Campaign_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Campaign_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Campaign_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Campaign_Tasks")]
    public IEnumerable<Task> Campaign_Tasks {
        get {
            return GetRelatedEntities<Task>("Campaign_Tasks", null);
        }
        set {
            SetRelatedEntities("Campaign_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("SystemUser_Campaigns")]
    public SystemUser SystemUser_Campaigns {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_Campaigns", null);
        }
        set {
            SetRelatedEntity("SystemUser_Campaigns", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_activity_parties")]
    public IEnumerable<ActivityParty> campaign_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("campaign_activity_parties", null);
        }
        set {
            SetRelatedEntities("campaign_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_leads")]
    public IEnumerable<Lead> campaign_leads {
        get {
            return GetRelatedEntities<Lead>("campaign_leads", null);
        }
        set {
            SetRelatedEntities("campaign_leads", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> campaign_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("campaign_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("campaign_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_msfp_alerts")]
    public IEnumerable<msfp_alert> campaign_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("campaign_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("campaign_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_opportunities")]
    public IEnumerable<Opportunity> campaign_opportunities {
        get {
            return GetRelatedEntities<Opportunity>("campaign_opportunities", null);
        }
        set {
            SetRelatedEntities("campaign_opportunities", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_orders")]
    public IEnumerable<SalesOrder> campaign_orders {
        get {
            return GetRelatedEntities<SalesOrder>("campaign_orders", null);
        }
        set {
            SetRelatedEntities("campaign_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("campaign_quotes")]
    public IEnumerable<Quote> campaign_quotes {
        get {
            return GetRelatedEntities<Quote>("campaign_quotes", null);
        }
        set {
            SetRelatedEntities("campaign_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("campaigncampaign_association")]
    public IEnumerable<Campaign> campaigncampaign_association {
        get {
            return GetRelatedEntities<Campaign>("campaigncampaign_association", null);
        }
        set {
            SetRelatedEntities("campaigncampaign_association", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignproduct_association")]
    public IEnumerable<Product> campaignproduct_association {
        get {
            return GetRelatedEntities<Product>("campaignproduct_association", null);
        }
        set {
            SetRelatedEntities("campaignproduct_association", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignsalesliterature_association")]
    public IEnumerable<SalesLiterature> campaignsalesliterature_association {
        get {
            return GetRelatedEntities<SalesLiterature>("campaignsalesliterature_association", null);
        }
        set {
            SetRelatedEntities("campaignsalesliterature_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_campaign_createdby")]
    public SystemUser lk_campaign_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaign_createdby", null);
        }
        set {
            SetRelatedEntity("lk_campaign_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_campaign_createdonbehalfby")]
    public SystemUser lk_campaign_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaign_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaign_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_campaign_modifiedby")]
    public SystemUser lk_campaign_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaign_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_campaign_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_campaign_modifiedonbehalfby")]
    public SystemUser lk_campaign_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaign_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaign_modifiedonbehalfby", null, value);
        }
    }
    
    public static Campaign Retrieve(IOrganizationService service, Guid id, params Expression<Func<Campaign,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Task performed, or to be performed, by a user for planning or running a campaign.</para>
/// <para>Display Name: Campaign Activity</para>
/// </summary>
[EntityLogicalName("campaignactivity")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class CampaignActivity : ExtendedEntity<CampaignActivityState, CampaignActivity_StatusCode> {
    
    public const string EntityLogicalName = "campaignactivity";
    
    public const int EntityTypeCode = 4402;
    
    public CampaignActivity() : 
            base(EntityLogicalName) {
    }
    
    public CampaignActivity(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign activity.</para>
    /// <para>Display Name: Campaign Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Campaign Activity")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
    /// <para>Display Name: Activity Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Activity Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type the actual cost of the campaign activity. The value entered is rolled up to the related campaign in the total cost calculations.</para>
    /// <para>Display Name: Actual Cost</para>
    /// </summary>
    [AttributeLogicalName("actualcost")]
    [DisplayName("Actual Cost")]
    public decimal? ActualCost {
        get {
            return GetMoneyValue("actualcost");
        }
        set {
            SetMoneyValue("actualcost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Actual Cost in base currency.</para>
    /// <para>Display Name: Actual Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("actualcost_base")]
    [DisplayName("Actual Cost (Base)")]
    public decimal? ActualCost_Base {
        get {
            return GetMoneyValue("actualcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value selected in the Duration field on the campaign activity. The duration is used to report the time spent on the activity.</para>
    /// <para>Display Name: Actual Duration </para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration ")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign activity was actually  completed.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the campaign activity to determine if the campaign activity started on the scheduled time.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
    /// <para>Display Name: BCC</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("BCC")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Type the allocated budget of the campaign activity for estimated versus actual cost reporting.</para>
    /// <para>Display Name: Budget Allocated</para>
    /// </summary>
    [AttributeLogicalName("budgetedcost")]
    [DisplayName("Budget Allocated")]
    public decimal? BudgetedCost {
        get {
            return GetMoneyValue("budgetedcost");
        }
        set {
            SetMoneyValue("budgetedcost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Budget Allocated in base currency.</para>
    /// <para>Display Name: Budget Allocated (Base)</para>
    /// </summary>
    [AttributeLogicalName("budgetedcost_base")]
    [DisplayName("Budget Allocated (Base)")]
    public decimal? BudgetedCost_Base {
        get {
            return GetMoneyValue("budgetedcost_base");
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the campaign activity type, such as new business development or customer retention, to tie the campaign activity to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Carbon-copy (cc) recipients of the activity.</para>
    /// <para>Display Name: CC</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("CC")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Select how communications for this activity will be sent, such as phone, letter, fax, or email.</para>
    /// <para>Display Name: Channel</para>
    /// </summary>
    [AttributeLogicalName("channeltypecode")]
    [DisplayName("Channel")]
    public CampaignActivity_ChannelTypeCode? ChannelTypeCode {
        get {
            return GetOptionSetValue<CampaignActivity_ChannelTypeCode>("channeltypecode");
        }
        set {
            SetOptionSetValue("channeltypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was created.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Customer with which the activity is associated.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Customers")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the campaign activity, such as key talking points, objectives, or details about the target audience.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, marketing materials will be sent to members who have opted out.</para>
    /// <para>Display Name: Exclude Members Who Opt Out</para>
    /// </summary>
    [AttributeLogicalName("donotsendonoptout")]
    [DisplayName("Exclude Members Who Opt Out")]
    public bool? DoNotSendOnOptOut {
        get {
            return GetAttributeValue<bool?>("donotsendonoptout");
        }
        set {
            SetAttributeValue("donotsendonoptout", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Limits the frequency (in days) of marketing activities directed at any contact. Contacts that have been contacted more recently than this will be excluded from new campaign activity distributions. Enter a value of zero to disable the limit.</para>
    /// <para>Display Name: No. of Days</para>
    /// </summary>
    [AttributeLogicalName("excludeifcontactedinxdays")]
    [DisplayName("No. of Days")]
    [Range(0, 9999)]
    public int? ExcludeIfContactedInXDays {
        get {
            return GetAttributeValue<int?>("excludeifcontactedinxdays");
        }
        set {
            SetAttributeValue("excludeifcontactedinxdays", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether inactive marketing list members will be excluded from the campaign activity distribution.</para>
    /// <para>Display Name: Ignore Inactive Marketing List Members</para>
    /// </summary>
    [AttributeLogicalName("ignoreinactivelistmembers")]
    [DisplayName("Ignore Inactive Marketing List Members")]
    public bool? IgnoreInactiveListMembers {
        get {
            return GetAttributeValue<bool?>("ignoreinactivelistmembers");
        }
        set {
            SetAttributeValue("ignoreinactivelistmembers", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public CampaignActivity_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<CampaignActivity_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the campaign activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information about whether the campaign activity is created by a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Left the voice mail</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when activity was last modified.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>List of optional attendees for the activity.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Person who organized the activity.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Outsource vendor with which activity is associated.</para>
    /// <para>Display Name: Outsource Vendors</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Outsource Vendors")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public CampaignActivity_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<CampaignActivity_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the parent campaign so that the campaign activity costs reflect in the correct campaign for reporting.</para>
    /// <para>Display Name: Parent Campaign</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Parent Campaign")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>List of required attendees for the activity.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Users or facility/equipment that are required for the activity.</para>
    /// <para>Display Name: Resources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Resources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration, specified in minutes, of the campaign activity.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the campaign activity.</para>
    /// <para>Display Name: Scheduled End</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Scheduled End")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected start date and time for the activity to provide details about timing of the campaign activity.</para>
    /// <para>Display Name: Scheduled Start</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Scheduled Start")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the campaign activity is open, completed, or canceled. Completed and canceled campaign activities are read-only and can't be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public CampaignActivityState? StateCode {
        get {
            return GetOptionSetValue<CampaignActivityState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the campaign activity's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public CampaignActivity_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<CampaignActivity_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the campaign activity type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the campaign activity.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Person who is the receiver of the activity.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of campaign activity to indicate the purpose of the activity.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("typecode")]
    [DisplayName("Type")]
    public CampaignActivity_TypeCode? TypeCode {
        get {
            return GetOptionSetValue<CampaignActivity_TypeCode>("typecode");
        }
        set {
            SetOptionSetValue("typecode", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Accounts")]
    public IEnumerable<Account> CampaignActivity_Accounts {
        get {
            return GetRelatedEntities<Account>("CampaignActivity_Accounts", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_ActivityPointers")]
    public IEnumerable<ActivityPointer> CampaignActivity_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("CampaignActivity_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Appointments")]
    public IEnumerable<Appointment> CampaignActivity_Appointments {
        get {
            return GetRelatedEntities<Appointment>("CampaignActivity_Appointments", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Contacts")]
    public IEnumerable<Contact> CampaignActivity_Contacts {
        get {
            return GetRelatedEntities<Contact>("CampaignActivity_Contacts", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Emails")]
    public IEnumerable<Email> CampaignActivity_Emails {
        get {
            return GetRelatedEntities<Email>("CampaignActivity_Emails", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Leads")]
    public IEnumerable<Lead> CampaignActivity_Leads {
        get {
            return GetRelatedEntities<Lead>("CampaignActivity_Leads", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Leads", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Phonecalls")]
    public IEnumerable<PhoneCall> CampaignActivity_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("CampaignActivity_Phonecalls", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_ProcessSessions")]
    public IEnumerable<ProcessSession> CampaignActivity_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("CampaignActivity_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> CampaignActivity_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("CampaignActivity_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_SyncErrors")]
    public IEnumerable<SyncError> CampaignActivity_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("CampaignActivity_SyncErrors", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Tasks")]
    public IEnumerable<Task> CampaignActivity_Tasks {
        get {
            return GetRelatedEntities<Task>("CampaignActivity_Tasks", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_logs")]
    public IEnumerable<BulkOperationLog> CampaignActivity_logs {
        get {
            return GetRelatedEntities<BulkOperationLog>("CampaignActivity_logs", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_logs", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_CampaignActivities")]
    public Campaign Campaign_CampaignActivities {
        get {
            return GetRelatedEntity<Campaign>("Campaign_CampaignActivities", null);
        }
        set {
            SetRelatedEntity("Campaign_CampaignActivities", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_campaignactivity")]
    public ActivityPointer activity_pointer_campaignactivity {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_campaignactivity", null);
        }
        set {
            SetRelatedEntity("activity_pointer_campaignactivity", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_CampaignActivities")]
    public BookableResourceBooking bookableresourcebooking_CampaignActivities {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignActivities", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_CampaignActivities", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_CampaignResponses")]
    public IEnumerable<CampaignResponse> campaignactivity_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("campaignactivity_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("campaignactivity_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> campaignactivity_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("campaignactivity_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("campaignactivity_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_activity_parties")]
    public IEnumerable<ActivityParty> campaignactivity_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("campaignactivity_activity_parties", null);
        }
        set {
            SetRelatedEntities("campaignactivity_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_activityparties")]
    public IEnumerable<ActivityParty> campaignactivity_activityparties {
        get {
            return GetRelatedEntities<ActivityParty>("campaignactivity_activityparties", null);
        }
        set {
            SetRelatedEntities("campaignactivity_activityparties", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> campaignactivity_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("campaignactivity_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("campaignactivity_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivity_msfp_alerts")]
    public IEnumerable<msfp_alert> campaignactivity_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("campaignactivity_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("campaignactivity_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivitysalesliterature_association")]
    public IEnumerable<SalesLiterature> campaignactivitysalesliterature_association {
        get {
            return GetRelatedEntities<SalesLiterature>("campaignactivitysalesliterature_association", null);
        }
        set {
            SetRelatedEntities("campaignactivitysalesliterature_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_campaignactivity_createdby")]
    public SystemUser lk_campaignactivity_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignactivity_createdby", null);
        }
        set {
            SetRelatedEntity("lk_campaignactivity_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_campaignactivity_createdonbehalfby")]
    public SystemUser lk_campaignactivity_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignactivity_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaignactivity_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_campaignactivity_modifiedby")]
    public SystemUser lk_campaignactivity_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_campaignactivity_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_campaignactivity_modifiedonbehalfby")]
    public SystemUser lk_campaignactivity_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaignactivity_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_campaignactivity")]
    public SystemUser user_campaignactivity {
        get {
            return GetRelatedEntity<SystemUser>("user_campaignactivity", null);
        }
        set {
            SetRelatedEntity("user_campaignactivity", null, value);
        }
    }
    
    public static CampaignActivity Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignActivity,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Work item of a campaign activity, such as a list or sales literature.</para>
/// <para>Display Name: Campaign Activity Item</para>
/// </summary>
[EntityLogicalName("campaignactivityitem")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class CampaignActivityItem : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "campaignactivityitem";
    
    public const int EntityTypeCode = 4404;
    
    public CampaignActivityItem() : 
            base(EntityLogicalName) {
    }
    
    public CampaignActivityItem(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("campaignactivityitemid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("campaignactivityitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign activity item.</para>
    /// </summary>
    [AttributeLogicalName("campaignactivityitemid")]
    public Guid? CampaignActivityItemId {
        get {
            return GetAttributeValue<Guid?>("campaignactivityitemid");
        }
        set {
            SetId("campaignactivityitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign activity for the item.</para>
    /// </summary>
    [AttributeLogicalName("campaignactivityid")]
    public EntityReference CampaignActivityId {
        get {
            return GetAttributeValue<EntityReference>("campaignactivityid");
        }
        set {
            SetAttributeValue("campaignactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the item.</para>
    /// </summary>
    [AttributeLogicalName("itemid")]
    public Guid? ItemId {
        get {
            return GetAttributeValue<Guid?>("itemid");
        }
        set {
            SetAttributeValue("itemid", value);
        }
    }
    
    /// <summary>
    /// <para>Identification of the type of the campaign activity item.</para>
    /// </summary>
    [AttributeLogicalName("itemobjecttypecode")]
    public string ItemObjectTypeCode {
        get {
            return GetAttributeValue<string>("itemobjecttypecode");
        }
        set {
            SetAttributeValue("itemobjecttypecode", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the campaign activity item.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the campaign activity item.</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    public Guid? OwningBusinessUnit {
        get {
            return GetAttributeValue<Guid?>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the campaign activity item.</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    public Guid? OwningUser {
        get {
            return GetAttributeValue<Guid?>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("campaignactivityid")]
    [RelationshipSchemaName("ActivityPointer_CampaignActivityItems")]
    public ActivityPointer ActivityPointer_CampaignActivityItems {
        get {
            return GetRelatedEntity<ActivityPointer>("ActivityPointer_CampaignActivityItems", null);
        }
        set {
            SetRelatedEntity("ActivityPointer_CampaignActivityItems", null, value);
        }
    }
    
    public static CampaignActivityItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignActivityItem,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Work item in a campaign, a list or sales literature.</para>
/// <para>Display Name: Campaign Item</para>
/// </summary>
[EntityLogicalName("campaignitem")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class CampaignItem : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "campaignitem";
    
    public const int EntityTypeCode = 4403;
    
    public CampaignItem() : 
            base(EntityLogicalName) {
    }
    
    public CampaignItem(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("campaignitemid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("campaignitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign item.</para>
    /// </summary>
    [AttributeLogicalName("campaignitemid")]
    public Guid? CampaignItemId {
        get {
            return GetAttributeValue<Guid?>("campaignitemid");
        }
        set {
            SetId("campaignitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign that is associated with the individual item.</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the entity for the campaign item.</para>
    /// </summary>
    [AttributeLogicalName("entityid")]
    public Guid? EntityId {
        get {
            return GetAttributeValue<Guid?>("entityid");
        }
        set {
            SetAttributeValue("entityid", value);
        }
    }
    
    /// <summary>
    /// <para>Object type of entity for the campaign item.</para>
    /// </summary>
    [AttributeLogicalName("entitytype")]
    public string EntityType {
        get {
            return GetAttributeValue<string>("entitytype");
        }
        set {
            SetAttributeValue("entitytype", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the campaign item.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the campaign item.</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    public Guid? OwningBusinessUnit {
        get {
            return GetAttributeValue<Guid?>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the campaign item.</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    public Guid? OwningUser {
        get {
            return GetAttributeValue<Guid?>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static CampaignItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignItem,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Response from an existing or a potential new customer for a campaign.</para>
/// <para>Display Name: Campaign Response</para>
/// </summary>
[EntityLogicalName("campaignresponse")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class CampaignResponse : ExtendedEntity<CampaignResponseState, CampaignResponse_StatusCode> {
    
    public const string EntityLogicalName = "campaignresponse";
    
    public const int EntityTypeCode = 4401;
    
    public CampaignResponse() : 
            base(EntityLogicalName) {
    }
    
    public CampaignResponse(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the campaign response.</para>
    /// <para>Display Name: Campaign Response</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Campaign Response")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type the number of minutes spent on this activity. The duration is used in reporting.</para>
    /// <para>Display Name: Actual Duration </para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration ")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign response was actually completed.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the campaign response.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
    /// <para>Display Name: BCC</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("BCC")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the campaign response type, such as new business development or customer retention, to tie the campaign response to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Carbon-copy (cc) recipients of the activity.</para>
    /// <para>Display Name: CC</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("CC")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Select how the response was received, such as phone, letter, fax, or email.</para>
    /// <para>Display Name: Channel</para>
    /// </summary>
    [AttributeLogicalName("channeltypecode")]
    [DisplayName("Channel")]
    public CampaignResponse_ChannelTypeCode? ChannelTypeCode {
        get {
            return GetOptionSetValue<CampaignResponse_ChannelTypeCode>("channeltypecode");
        }
        set {
            SetOptionSetValue("channeltypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the company if the campaign response was received from a new prospect or customer.</para>
    /// <para>Display Name: Company Name</para>
    /// </summary>
    [AttributeLogicalName("companyname")]
    [DisplayName("Company Name")]
    [MaxLength(100)]
    public string CompanyName {
        get {
            return GetAttributeValue<string>("companyname");
        }
        set {
            SetAttributeValue("companyname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was created.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, or lead that submitted the campaign response, if it was received from an existing prospect or customer.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customer")]
    [DisplayName("Customer")]
    public IEnumerable<ActivityParty> Customer {
        get {
            return GetEntityCollection<ActivityParty>("customer");
        }
        set {
            SetEntityCollection("customer", value);
        }
    }
    
    /// <summary>
    /// <para>Customer with which the activity is associated.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Customers")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the campaign response, such as key discussion points or objectives.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Type the responder's email address.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email")]
    [MaxLength(100)]
    public string EMailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Type the responder's fax number.</para>
    /// <para>Display Name: Fax</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Fax")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the responder's first name if the campaign response was received from a new prospect or customer.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    [DisplayName("First Name")]
    [MaxLength(50)]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public CampaignResponse_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<CampaignResponse_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Specifies whether the campaign response was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Specifies whether the campaign response is created by a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Type the responder's last name if the campaign response was received from a new prospect or customer.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    [DisplayName("Last Name")]
    [MaxLength(50)]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Left the voice mail</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when activity was last modified.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>List of optional attendees for the activity.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Person who organized the activity.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the phone call, email, fax, letter, or appointment activity that led the prospect or customer to respond to the campaign.</para>
    /// <para>Display Name: Originating Activity</para>
    /// </summary>
    [AttributeLogicalName("originatingactivityid")]
    [DisplayName("Originating Activity")]
    public EntityReference OriginatingActivityId {
        get {
            return GetAttributeValue<EntityReference>("originatingactivityid");
        }
        set {
            SetAttributeValue("originatingactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Enter the vendor account or contact to capture any third-party used to obtain the campaign response.</para>
    /// <para>Display Name: Outsource Vendor</para>
    /// </summary>
    [AttributeLogicalName("partner")]
    [DisplayName("Outsource Vendor")]
    public IEnumerable<ActivityParty> Partner {
        get {
            return GetEntityCollection<ActivityParty>("partner");
        }
        set {
            SetEntityCollection("partner", value);
        }
    }
    
    /// <summary>
    /// <para>Outsource vendor with which activity is associated.</para>
    /// <para>Display Name: Outsource Vendors</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Outsource Vendors")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public CampaignResponse_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<CampaignResponse_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Type a promotional code to track sales related to the campaign response or to allow the responder to redeem a discount offer.</para>
    /// <para>Display Name: Promotion Code</para>
    /// </summary>
    [AttributeLogicalName("promotioncodename")]
    [DisplayName("Promotion Code")]
    [MaxLength(250)]
    public string PromotionCodeName {
        get {
            return GetAttributeValue<string>("promotioncodename");
        }
        set {
            SetAttributeValue("promotioncodename", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the campaign response was received.</para>
    /// <para>Display Name: Received On</para>
    /// </summary>
    [AttributeLogicalName("receivedon")]
    [DisplayName("Received On")]
    public DateTime? ReceivedOn {
        get {
            return GetAttributeValue<DateTime?>("receivedon");
        }
        set {
            SetAttributeValue("receivedon", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the parent campaign so that the campaign's response rate is tracked correctly.</para>
    /// <para>Display Name: Parent Campaign</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Parent Campaign")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>List of required attendees for the activity.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Users or facility/equipment that are required for the activity.</para>
    /// <para>Display Name: Resources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Resources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of response from the prospect or customer to indicate their interest in the campaign.</para>
    /// <para>Display Name: Response Code</para>
    /// </summary>
    [AttributeLogicalName("responsecode")]
    [DisplayName("Response Code")]
    public CampaignResponse_ResponseCode? ResponseCode {
        get {
            return GetOptionSetValue<CampaignResponse_ResponseCode>("responsecode");
        }
        set {
            SetOptionSetValue("responsecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the campaign response in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the campaign response.</para>
    /// <para>Display Name: Close By</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Close By")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected start date and time for the activity to provide details about the timing of the campaign response.</para>
    /// <para>Display Name: Scheduled Start</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Scheduled Start")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the campaign response is open, closed, or canceled. Closed and canceled campaign responses are read-only and can't be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public CampaignResponseState? StateCode {
        get {
            return GetOptionSetValue<CampaignResponseState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the campaign response's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public CampaignResponse_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<CampaignResponse_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the campaign response type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the campaign response.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Type the responder's primary phone number.</para>
    /// <para>Display Name: Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone")]
    [DisplayName("Phone")]
    [MaxLength(50)]
    public string Telephone {
        get {
            return GetAttributeValue<string>("telephone");
        }
        set {
            SetAttributeValue("telephone", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Person who is the receiver of the activity.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
    /// <para>Display Name: Yomi Company Name</para>
    /// </summary>
    [AttributeLogicalName("yomicompanyname")]
    [DisplayName("Yomi Company Name")]
    [MaxLength(100)]
    public string YomiCompanyName {
        get {
            return GetAttributeValue<string>("yomicompanyname");
        }
        set {
            SetAttributeValue("yomicompanyname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the campaign responder's first name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
    /// <para>Display Name: Yomi First Name</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    [DisplayName("Yomi First Name")]
    [MaxLength(150)]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the campaign responder's last name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
    /// <para>Display Name: Yomi Last Name</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    [DisplayName("Yomi Last Name")]
    [MaxLength(150)]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_Lead")]
    public IEnumerable<Lead> CampaignResponse_Lead {
        get {
            return GetRelatedEntities<Lead>("CampaignResponse_Lead", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_Lead", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_ProcessSessions")]
    public IEnumerable<ProcessSession> CampaignResponse_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("CampaignResponse_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("CampaignResponse_ServiceAppointments")]
    public ServiceAppointment CampaignResponse_ServiceAppointments {
        get {
            return GetRelatedEntity<ServiceAppointment>("CampaignResponse_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_SyncErrors")]
    public IEnumerable<SyncError> CampaignResponse_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("CampaignResponse_SyncErrors", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("CampaignResponse_msdyn_bookingalerts")]
    public msdyn_bookingalert CampaignResponse_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_bookingalert>("CampaignResponse_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("CampaignResponse_msfp_alerts")]
    public msfp_alert CampaignResponse_msfp_alerts {
        get {
            return GetRelatedEntity<msfp_alert>("CampaignResponse_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_CampaignResponses")]
    public Campaign Campaign_CampaignResponses {
        get {
            return GetRelatedEntity<Campaign>("Campaign_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("Campaign_CampaignResponses", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("account_CampaignResponses")]
    public Account account_CampaignResponses {
        get {
            return GetRelatedEntity<Account>("account_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("account_CampaignResponses", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("activity_campaignresponse")]
    public ActivityPointer activity_campaignresponse {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_campaignresponse", null);
        }
        set {
            SetRelatedEntity("activity_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_campaignresponse")]
    public ActivityPointer activity_pointer_campaignresponse {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_campaignresponse", null);
        }
        set {
            SetRelatedEntity("activity_pointer_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("appointment_campaignresponse")]
    public Appointment appointment_campaignresponse {
        get {
            return GetRelatedEntity<Appointment>("appointment_campaignresponse", null);
        }
        set {
            SetRelatedEntity("appointment_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_CampaignResponses")]
    public BookableResourceBooking bookableresourcebooking_CampaignResponses {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_CampaignResponses", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaignactivity_CampaignResponses")]
    public CampaignActivity campaignactivity_CampaignResponses {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("campaignactivity_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignresponse_activity_parties")]
    public IEnumerable<ActivityParty> campaignresponse_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("campaignresponse_activity_parties", null);
        }
        set {
            SetRelatedEntities("campaignresponse_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contact_CampaignResponses")]
    public Contact contact_CampaignResponses {
        get {
            return GetRelatedEntity<Contact>("contact_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("contact_CampaignResponses", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("email_campaignresponse")]
    public Email email_campaignresponse {
        get {
            return GetRelatedEntity<Email>("email_campaignresponse", null);
        }
        set {
            SetRelatedEntity("email_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("lead_CampaignResponses")]
    public Lead lead_CampaignResponses {
        get {
            return GetRelatedEntity<Lead>("lead_CampaignResponses", null);
        }
        set {
            SetRelatedEntity("lead_CampaignResponses", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_campaignresponse_createdby")]
    public SystemUser lk_campaignresponse_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignresponse_createdby", null);
        }
        set {
            SetRelatedEntity("lk_campaignresponse_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_campaignresponse_createdonbehalfby")]
    public SystemUser lk_campaignresponse_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignresponse_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaignresponse_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_campaignresponse_modifiedby")]
    public SystemUser lk_campaignresponse_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignresponse_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_campaignresponse_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_campaignresponse_modifiedonbehalfby")]
    public SystemUser lk_campaignresponse_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_campaignresponse_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_campaignresponse_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("phonecall_campaignresponse")]
    public PhoneCall phonecall_campaignresponse {
        get {
            return GetRelatedEntity<PhoneCall>("phonecall_campaignresponse", null);
        }
        set {
            SetRelatedEntity("phonecall_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("originatingactivityid")]
    [RelationshipSchemaName("recurringappointmentmaster_campaignresponse")]
    public RecurringAppointmentMaster recurringappointmentmaster_campaignresponse {
        get {
            return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_campaignresponse", null);
        }
        set {
            SetRelatedEntity("recurringappointmentmaster_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_campaignresponse")]
    public SystemUser user_campaignresponse {
        get {
            return GetRelatedEntity<SystemUser>("user_campaignresponse", null);
        }
        set {
            SetRelatedEntity("user_campaignresponse", null, value);
        }
    }
    
    public static CampaignResponse Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignResponse,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
/// <para>Display Name: Contact</para>
/// </summary>
[EntityLogicalName("contact")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
    
    public const string EntityLogicalName = "contact";
    
    public const int EntityTypeCode = 2;
    
    public Contact() : 
            base(EntityLogicalName) {
    }
    
    public Contact(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("fullname");
        }
    }
    
    [AttributeLogicalName("contactid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
        set {
            SetId("contactid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the contact is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
    /// <para>Display Name: Role</para>
    /// </summary>
    [AttributeLogicalName("accountrolecode")]
    [DisplayName("Role")]
    public Contact_AccountRoleCode? AccountRoleCode {
        get {
            return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
        }
        set {
            SetOptionSetValue("accountrolecode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 1.</para>
    /// <para>Display Name: Address 1: ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Address 1: ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary address type.</para>
    /// <para>Display Name: Address 1: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Address 1: Address Type")]
    public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the primary address.</para>
    /// <para>Display Name: Address 1: City</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("Address 1: City")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete primary address.</para>
    /// <para>Display Name: Address 1</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Address 1")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the primary address.</para>
    /// <para>Display Name: Address 1: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Address 1: Country/Region")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the primary address.</para>
    /// <para>Display Name: Address 1: County</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Address 1: County")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Fax</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Address 1: Fax")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Address 1: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("address1_freighttermscode")]
    [DisplayName("Address 1: Freight Terms")]
    public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
        }
        set {
            SetOptionSetValue("address1_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 1: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Address 1: Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the primary address.</para>
    /// <para>Display Name: Address 1: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Address 1: Street 1")]
    [MaxLength(250)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the primary address.</para>
    /// <para>Display Name: Address 1: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Address 1: Street 2")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the primary address.</para>
    /// <para>Display Name: Address 1: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("Address 1: Street 3")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 1: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Address 1: Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 1: Name</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Address 1: Name")]
    [MaxLength(200)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the primary address.</para>
    /// <para>Display Name: Address 1: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Address 1: Post Office Box")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the primary address.</para>
    /// <para>Display Name: Address 1: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("Address 1: ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the main contact at the account's primary address.</para>
    /// <para>Display Name: Address 1: Primary Contact Name</para>
    /// </summary>
    [AttributeLogicalName("address1_primarycontactname")]
    [DisplayName("Address 1: Primary Contact Name")]
    [MaxLength(100)]
    public string Address1_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address1_primarycontactname");
        }
        set {
            SetAttributeValue("address1_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 1: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Address 1: Shipping Method")]
    public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the primary address.</para>
    /// <para>Display Name: Address 1: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("Address 1: State/Province")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Address 1: Phone")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Address 1: Telephone 2")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Address 1: Telephone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 1: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Address 1: UPS Zone")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 1: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Address 1: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 2.</para>
    /// <para>Display Name: Address 2: ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Address 2: ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the secondary address type.</para>
    /// <para>Display Name: Address 2: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Address 2: Address Type")]
    public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the secondary address.</para>
    /// <para>Display Name: Address 2: City</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Address 2: City")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete secondary address.</para>
    /// <para>Display Name: Address 2</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Address 2")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the secondary address.</para>
    /// <para>Display Name: Address 2: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Address 2: Country/Region")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the secondary address.</para>
    /// <para>Display Name: Address 2: County</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Address 2: County")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Fax</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Address 2: Fax")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Address 2: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("address2_freighttermscode")]
    [DisplayName("Address 2: Freight Terms")]
    public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
        }
        set {
            SetOptionSetValue("address2_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Address 2: Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Address 2: Street 1")]
    [MaxLength(250)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Address 2: Street 2")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("Address 2: Street 3")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Address 2: Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 2: Name</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Address 2: Name")]
    [MaxLength(100)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the secondary address.</para>
    /// <para>Display Name: Address 2: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Address 2: Post Office Box")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the secondary address.</para>
    /// <para>Display Name: Address 2: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Address 2: ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the main contact at the account's secondary address.</para>
    /// <para>Display Name: Address 2: Primary Contact Name</para>
    /// </summary>
    [AttributeLogicalName("address2_primarycontactname")]
    [DisplayName("Address 2: Primary Contact Name")]
    [MaxLength(100)]
    public string Address2_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address2_primarycontactname");
        }
        set {
            SetAttributeValue("address2_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 2: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Address 2: Shipping Method")]
    public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the secondary address.</para>
    /// <para>Display Name: Address 2: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Address 2: State/Province")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Address 2: Telephone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Address 2: Telephone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Address 2: Telephone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 2: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Address 2: UPS Zone")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 2: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Address 2: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 3.</para>
    /// <para>Display Name: Address 3: ID</para>
    /// </summary>
    [AttributeLogicalName("address3_addressid")]
    [DisplayName("Address 3: ID")]
    public Guid? Address3_AddressId {
        get {
            return GetAttributeValue<Guid?>("address3_addressid");
        }
        set {
            SetAttributeValue("address3_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the third address type.</para>
    /// <para>Display Name: Address 3: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address3_addresstypecode")]
    [DisplayName("Address 3: Address Type")]
    public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
        }
        set {
            SetOptionSetValue("address3_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the 3rd address.</para>
    /// <para>Display Name: Address 3: City</para>
    /// </summary>
    [AttributeLogicalName("address3_city")]
    [DisplayName("Address 3: City")]
    [MaxLength(80)]
    public string Address3_City {
        get {
            return GetAttributeValue<string>("address3_city");
        }
        set {
            SetAttributeValue("address3_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete third address.</para>
    /// <para>Display Name: Address 3</para>
    /// </summary>
    [AttributeLogicalName("address3_composite")]
    [DisplayName("Address 3")]
    public string Address3_Composite {
        get {
            return GetAttributeValue<string>("address3_composite");
        }
    }
    
    /// <summary>
    /// <para>the country or region for the 3rd address.</para>
    /// <para>Display Name: Address3: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address3_country")]
    [DisplayName("Address3: Country/Region")]
    [MaxLength(80)]
    public string Address3_Country {
        get {
            return GetAttributeValue<string>("address3_country");
        }
        set {
            SetAttributeValue("address3_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the third address.</para>
    /// <para>Display Name: Address 3: County</para>
    /// </summary>
    [AttributeLogicalName("address3_county")]
    [DisplayName("Address 3: County")]
    [MaxLength(50)]
    public string Address3_County {
        get {
            return GetAttributeValue<string>("address3_county");
        }
        set {
            SetAttributeValue("address3_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the third address.</para>
    /// <para>Display Name: Address 3: Fax</para>
    /// </summary>
    [AttributeLogicalName("address3_fax")]
    [DisplayName("Address 3: Fax")]
    [MaxLength(50)]
    public string Address3_Fax {
        get {
            return GetAttributeValue<string>("address3_fax");
        }
        set {
            SetAttributeValue("address3_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Address 3: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("address3_freighttermscode")]
    [DisplayName("Address 3: Freight Terms")]
    public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
        }
        set {
            SetOptionSetValue("address3_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 3: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address3_latitude")]
    [DisplayName("Address 3: Latitude")]
    public double? Address3_Latitude {
        get {
            return GetAttributeValue<double?>("address3_latitude");
        }
        set {
            SetAttributeValue("address3_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>the first line of the 3rd address.</para>
    /// <para>Display Name: Address3: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address3_line1")]
    [DisplayName("Address3: Street 1")]
    [MaxLength(250)]
    public string Address3_Line1 {
        get {
            return GetAttributeValue<string>("address3_line1");
        }
        set {
            SetAttributeValue("address3_line1", value);
        }
    }
    
    /// <summary>
    /// <para>the second line of the 3rd address.</para>
    /// <para>Display Name: Address3: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address3_line2")]
    [DisplayName("Address3: Street 2")]
    [MaxLength(250)]
    public string Address3_Line2 {
        get {
            return GetAttributeValue<string>("address3_line2");
        }
        set {
            SetAttributeValue("address3_line2", value);
        }
    }
    
    /// <summary>
    /// <para>the third line of the 3rd address.</para>
    /// <para>Display Name: Address3: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address3_line3")]
    [DisplayName("Address3: Street 3")]
    [MaxLength(250)]
    public string Address3_Line3 {
        get {
            return GetAttributeValue<string>("address3_line3");
        }
        set {
            SetAttributeValue("address3_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 3: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address3_longitude")]
    [DisplayName("Address 3: Longitude")]
    public double? Address3_Longitude {
        get {
            return GetAttributeValue<double?>("address3_longitude");
        }
        set {
            SetAttributeValue("address3_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 3: Name</para>
    /// </summary>
    [AttributeLogicalName("address3_name")]
    [DisplayName("Address 3: Name")]
    [MaxLength(200)]
    public string Address3_Name {
        get {
            return GetAttributeValue<string>("address3_name");
        }
        set {
            SetAttributeValue("address3_name", value);
        }
    }
    
    /// <summary>
    /// <para>the post office box number of the 3rd address.</para>
    /// <para>Display Name: Address 3: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address3_postofficebox")]
    [DisplayName("Address 3: Post Office Box")]
    [MaxLength(20)]
    public string Address3_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address3_postofficebox");
        }
        set {
            SetAttributeValue("address3_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>the ZIP Code or postal code for the 3rd address.</para>
    /// <para>Display Name: Address3: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address3_postalcode")]
    [DisplayName("Address3: ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address3_PostalCode {
        get {
            return GetAttributeValue<string>("address3_postalcode");
        }
        set {
            SetAttributeValue("address3_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the main contact at the account's third address.</para>
    /// <para>Display Name: Address 3: Primary Contact Name</para>
    /// </summary>
    [AttributeLogicalName("address3_primarycontactname")]
    [DisplayName("Address 3: Primary Contact Name")]
    [MaxLength(100)]
    public string Address3_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address3_primarycontactname");
        }
        set {
            SetAttributeValue("address3_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 3: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address3_shippingmethodcode")]
    [DisplayName("Address 3: Shipping Method")]
    public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address3_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>the state or province of the third address.</para>
    /// <para>Display Name: Address3: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address3_stateorprovince")]
    [DisplayName("Address3: State/Province")]
    [MaxLength(50)]
    public string Address3_StateOrProvince {
        get {
            return GetAttributeValue<string>("address3_stateorprovince");
        }
        set {
            SetAttributeValue("address3_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the third address.</para>
    /// <para>Display Name: Address 3: Telephone1</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone1")]
    [DisplayName("Address 3: Telephone1")]
    [MaxLength(50)]
    public string Address3_Telephone1 {
        get {
            return GetAttributeValue<string>("address3_telephone1");
        }
        set {
            SetAttributeValue("address3_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the third address.</para>
    /// <para>Display Name: Address 3: Telephone2</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone2")]
    [DisplayName("Address 3: Telephone2")]
    [MaxLength(50)]
    public string Address3_Telephone2 {
        get {
            return GetAttributeValue<string>("address3_telephone2");
        }
        set {
            SetAttributeValue("address3_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the primary address.</para>
    /// <para>Display Name: Address 3: Telephone3</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone3")]
    [DisplayName("Address 3: Telephone3")]
    [MaxLength(50)]
    public string Address3_Telephone3 {
        get {
            return GetAttributeValue<string>("address3_telephone3");
        }
        set {
            SetAttributeValue("address3_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 3: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address3_upszone")]
    [DisplayName("Address 3: UPS Zone")]
    [MaxLength(4)]
    public string Address3_UPSZone {
        get {
            return GetAttributeValue<string>("address3_upszone");
        }
        set {
            SetAttributeValue("address3_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 3: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address3_utcoffset")]
    [DisplayName("Address 3: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address3_UTCOffset {
        get {
            return GetAttributeValue<int?>("address3_utcoffset");
        }
        set {
            SetAttributeValue("address3_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 30</para>
    /// </summary>
    [AttributeLogicalName("aging30")]
    [DisplayName("Aging 30")]
    public decimal? Aging30 {
        get {
            return GetMoneyValue("aging30");
        }
    }
    
    /// <summary>
    /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Aging 30 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging30_base")]
    [DisplayName("Aging 30 (Base)")]
    public decimal? Aging30_Base {
        get {
            return GetMoneyValue("aging30_base");
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 60</para>
    /// </summary>
    [AttributeLogicalName("aging60")]
    [DisplayName("Aging 60")]
    public decimal? Aging60 {
        get {
            return GetMoneyValue("aging60");
        }
    }
    
    /// <summary>
    /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Aging 60 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging60_base")]
    [DisplayName("Aging 60 (Base)")]
    public decimal? Aging60_Base {
        get {
            return GetMoneyValue("aging60_base");
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Aging 90</para>
    /// </summary>
    [AttributeLogicalName("aging90")]
    [DisplayName("Aging 90")]
    public decimal? Aging90 {
        get {
            return GetMoneyValue("aging90");
        }
    }
    
    /// <summary>
    /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Aging 90 (Base)</para>
    /// </summary>
    [AttributeLogicalName("aging90_base")]
    [DisplayName("Aging 90 (Base)")]
    public decimal? Aging90_Base {
        get {
            return GetMoneyValue("aging90_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
    /// <para>Display Name: Anniversary</para>
    /// </summary>
    [AttributeLogicalName("anniversary")]
    [DisplayName("Anniversary")]
    public DateTime? Anniversary {
        get {
            return GetAttributeValue<DateTime?>("anniversary");
        }
        set {
            SetAttributeValue("anniversary", value);
        }
    }
    
    /// <summary>
    /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
    /// <para>Display Name: Annual Income</para>
    /// </summary>
    [AttributeLogicalName("annualincome")]
    [DisplayName("Annual Income")]
    public decimal? AnnualIncome {
        get {
            return GetMoneyValue("annualincome");
        }
        set {
            SetMoneyValue("annualincome", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Annual Income (Base)</para>
    /// </summary>
    [AttributeLogicalName("annualincome_base")]
    [DisplayName("Annual Income (Base)")]
    public decimal? AnnualIncome_Base {
        get {
            return GetMoneyValue("annualincome_base");
        }
    }
    
    /// <summary>
    /// <para>Type the name of the contact's assistant.</para>
    /// <para>Display Name: Assistant</para>
    /// </summary>
    [AttributeLogicalName("assistantname")]
    [DisplayName("Assistant")]
    [MaxLength(100)]
    public string AssistantName {
        get {
            return GetAttributeValue<string>("assistantname");
        }
        set {
            SetAttributeValue("assistantname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the contact's assistant.</para>
    /// <para>Display Name: Assistant Phone</para>
    /// </summary>
    [AttributeLogicalName("assistantphone")]
    [DisplayName("Assistant Phone")]
    [MaxLength(50)]
    public string AssistantPhone {
        get {
            return GetAttributeValue<string>("assistantphone");
        }
        set {
            SetAttributeValue("assistantphone", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
    /// <para>Display Name: Birthday</para>
    /// </summary>
    [AttributeLogicalName("birthdate")]
    [DisplayName("Birthday")]
    public DateTime? BirthDate {
        get {
            return GetAttributeValue<DateTime?>("birthdate");
        }
        set {
            SetAttributeValue("birthdate", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second business phone number for this contact.</para>
    /// <para>Display Name: Business Phone 2</para>
    /// </summary>
    [AttributeLogicalName("business2")]
    [DisplayName("Business Phone 2")]
    [MaxLength(50)]
    public string Business2 {
        get {
            return GetAttributeValue<string>("business2");
        }
        set {
            SetAttributeValue("business2", value);
        }
    }
    
    /// <summary>
    /// <para>Stores Image of the Business Card</para>
    /// <para>Display Name: Business Card</para>
    /// </summary>
    [AttributeLogicalName("businesscard")]
    [DisplayName("Business Card")]
    public string BusinessCard {
        get {
            return GetAttributeValue<string>("businesscard");
        }
        set {
            SetAttributeValue("businesscard", value);
        }
    }
    
    /// <summary>
    /// <para>Stores Business Card Control Properties.</para>
    /// <para>Display Name: BusinessCardAttributes</para>
    /// </summary>
    [AttributeLogicalName("businesscardattributes")]
    [DisplayName("BusinessCardAttributes")]
    [MaxLength(4000)]
    public string BusinessCardAttributes {
        get {
            return GetAttributeValue<string>("businesscardattributes");
        }
        set {
            SetAttributeValue("businesscardattributes", value);
        }
    }
    
    /// <summary>
    /// <para>Type a callback phone number for this contact.</para>
    /// <para>Display Name: Callback Number</para>
    /// </summary>
    [AttributeLogicalName("callback")]
    [DisplayName("Callback Number")]
    [MaxLength(50)]
    public string Callback {
        get {
            return GetAttributeValue<string>("callback");
        }
        set {
            SetAttributeValue("callback", value);
        }
    }
    
    /// <summary>
    /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
    /// <para>Display Name: Children's Names</para>
    /// </summary>
    [AttributeLogicalName("childrensnames")]
    [DisplayName("Children\'s Names")]
    [MaxLength(255)]
    public string ChildrensNames {
        get {
            return GetAttributeValue<string>("childrensnames");
        }
        set {
            SetAttributeValue("childrensnames", value);
        }
    }
    
    /// <summary>
    /// <para>Type the company phone of the contact.</para>
    /// <para>Display Name: Company Phone</para>
    /// </summary>
    [AttributeLogicalName("company")]
    [DisplayName("Company Phone")]
    [MaxLength(50)]
    public string Company {
        get {
            return GetAttributeValue<string>("company");
        }
        set {
            SetAttributeValue("company", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who created the record.</para>
    /// <para>Display Name: Created By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Created By (External Party)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
    /// <para>Display Name: Credit Limit</para>
    /// </summary>
    [AttributeLogicalName("creditlimit")]
    [DisplayName("Credit Limit")]
    public decimal? CreditLimit {
        get {
            return GetMoneyValue("creditlimit");
        }
        set {
            SetMoneyValue("creditlimit", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
    /// <para>Display Name: Credit Limit (Base)</para>
    /// </summary>
    [AttributeLogicalName("creditlimit_base")]
    [DisplayName("Credit Limit (Base)")]
    public decimal? CreditLimit_Base {
        get {
            return GetMoneyValue("creditlimit_base");
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
    /// <para>Display Name: Credit Hold</para>
    /// </summary>
    [AttributeLogicalName("creditonhold")]
    [DisplayName("Credit Hold")]
    public bool? CreditOnHold {
        get {
            return GetAttributeValue<bool?>("creditonhold");
        }
        set {
            SetAttributeValue("creditonhold", value);
        }
    }
    
    /// <summary>
    /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
    /// <para>Display Name: Customer Size</para>
    /// </summary>
    [AttributeLogicalName("customersizecode")]
    [DisplayName("Customer Size")]
    public Contact_CustomerSizeCode? CustomerSizeCode {
        get {
            return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
        }
        set {
            SetOptionSetValue("customersizecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
    /// <para>Display Name: Relationship Type</para>
    /// </summary>
    [AttributeLogicalName("customertypecode")]
    [DisplayName("Relationship Type")]
    public Contact_CustomerTypeCode? CustomerTypeCode {
        get {
            return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
        }
        set {
            SetOptionSetValue("customertypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("defaultpricelevelid")]
    [DisplayName("Price List")]
    public EntityReference DefaultPriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("defaultpricelevelid");
        }
        set {
            SetAttributeValue("defaultpricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
    /// <para>Display Name: Department</para>
    /// </summary>
    [AttributeLogicalName("department")]
    [DisplayName("Department")]
    [MaxLength(100)]
    public string Department {
        get {
            return GetAttributeValue<string>("department");
        }
        set {
            SetAttributeValue("department", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
    /// <para>Display Name: Do not allow Bulk Emails</para>
    /// </summary>
    [AttributeLogicalName("donotbulkemail")]
    [DisplayName("Do not allow Bulk Emails")]
    public bool? DoNotBulkEMail {
        get {
            return GetAttributeValue<bool?>("donotbulkemail");
        }
        set {
            SetAttributeValue("donotbulkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
    /// <para>Display Name: Do not allow Bulk Mails</para>
    /// </summary>
    [AttributeLogicalName("donotbulkpostalmail")]
    [DisplayName("Do not allow Bulk Mails")]
    public bool? DoNotBulkPostalMail {
        get {
            return GetAttributeValue<bool?>("donotbulkpostalmail");
        }
        set {
            SetAttributeValue("donotbulkpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
    /// <para>Display Name: Do not allow Emails</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Do not allow Emails")]
    public bool? DoNotEMail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
        set {
            SetAttributeValue("donotemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Faxes</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Do not allow Faxes")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
        set {
            SetAttributeValue("donotfax", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Phone Calls</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Do not allow Phone Calls")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
        set {
            SetAttributeValue("donotphone", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
    /// <para>Display Name: Do not allow Mails</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Do not allow Mails")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
        set {
            SetAttributeValue("donotpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
    /// <para>Display Name: Send Marketing Materials</para>
    /// </summary>
    [AttributeLogicalName("donotsendmm")]
    [DisplayName("Send Marketing Materials")]
    public bool? DoNotSendMM {
        get {
            return GetAttributeValue<bool?>("donotsendmm");
        }
        set {
            SetAttributeValue("donotsendmm", value);
        }
    }
    
    /// <summary>
    /// <para>Type the primary email address for the contact.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [AttributeLogicalName("emailaddress1")]
    [DisplayName("Email")]
    [MaxLength(100)]
    public string EMailAddress1 {
        get {
            return GetAttributeValue<string>("emailaddress1");
        }
        set {
            SetAttributeValue("emailaddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the secondary email address for the contact.</para>
    /// <para>Display Name: Email Address 2</para>
    /// </summary>
    [AttributeLogicalName("emailaddress2")]
    [DisplayName("Email Address 2")]
    [MaxLength(100)]
    public string EMailAddress2 {
        get {
            return GetAttributeValue<string>("emailaddress2");
        }
        set {
            SetAttributeValue("emailaddress2", value);
        }
    }
    
    /// <summary>
    /// <para>Type an alternate email address for the contact.</para>
    /// <para>Display Name: Email Address 3</para>
    /// </summary>
    [AttributeLogicalName("emailaddress3")]
    [DisplayName("Email Address 3")]
    [MaxLength(100)]
    public string EMailAddress3 {
        get {
            return GetAttributeValue<string>("emailaddress3");
        }
        set {
            SetAttributeValue("emailaddress3", value);
        }
    }
    
    /// <summary>
    /// <para>Select the contact's highest level of education for use in segmentation and analysis.</para>
    /// <para>Display Name: Education</para>
    /// </summary>
    [AttributeLogicalName("educationcode")]
    [DisplayName("Education")]
    public Contact_EducationCode? EducationCode {
        get {
            return GetOptionSetValue<Contact_EducationCode>("educationcode");
        }
        set {
            SetOptionSetValue("educationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
    /// <para>Display Name: Employee</para>
    /// </summary>
    [AttributeLogicalName("employeeid")]
    [DisplayName("Employee")]
    [MaxLength(50)]
    public string EmployeeId {
        get {
            return GetAttributeValue<string>("employeeid");
        }
        set {
            SetAttributeValue("employeeid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Entity Image Id")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Identifier for an external user.</para>
    /// <para>Display Name: External User Identifier</para>
    /// </summary>
    [AttributeLogicalName("externaluseridentifier")]
    [DisplayName("External User Identifier")]
    [MaxLength(50)]
    public string ExternalUserIdentifier {
        get {
            return GetAttributeValue<string>("externaluseridentifier");
        }
        set {
            SetAttributeValue("externaluseridentifier", value);
        }
    }
    
    /// <summary>
    /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
    /// <para>Display Name: Marital Status</para>
    /// </summary>
    [AttributeLogicalName("familystatuscode")]
    [DisplayName("Marital Status")]
    public Contact_FamilyStatusCode? FamilyStatusCode {
        get {
            return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
        }
        set {
            SetOptionSetValue("familystatuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the contact.</para>
    /// <para>Display Name: Fax</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Fax")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    [DisplayName("First Name")]
    [MaxLength(50)]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
    /// <para>Display Name: Follow Email Activity</para>
    /// </summary>
    [AttributeLogicalName("followemail")]
    [DisplayName("Follow Email Activity")]
    public bool? FollowEmail {
        get {
            return GetAttributeValue<bool?>("followemail");
        }
        set {
            SetAttributeValue("followemail", value);
        }
    }
    
    /// <summary>
    /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
    /// <para>Display Name: FTP Site</para>
    /// </summary>
    [AttributeLogicalName("ftpsiteurl")]
    [DisplayName("FTP Site")]
    [MaxLength(200)]
    public string FtpSiteUrl {
        get {
            return GetAttributeValue<string>("ftpsiteurl");
        }
        set {
            SetAttributeValue("ftpsiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
    /// <para>Display Name: Full Name</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    [DisplayName("Full Name")]
    [MaxLength(160)]
    public string FullName {
        get {
            return GetAttributeValue<string>("fullname");
        }
    }
    
    /// <summary>
    /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Gender</para>
    /// </summary>
    [AttributeLogicalName("gendercode")]
    [DisplayName("Gender")]
    public Contact_GenderCode? GenderCode {
        get {
            return GetOptionSetValue<Contact_GenderCode>("gendercode");
        }
        set {
            SetOptionSetValue("gendercode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
    /// <para>Display Name: Government</para>
    /// </summary>
    [AttributeLogicalName("governmentid")]
    [DisplayName("Government")]
    [MaxLength(50)]
    public string GovernmentId {
        get {
            return GetAttributeValue<string>("governmentid");
        }
        set {
            SetAttributeValue("governmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
    /// <para>Display Name: Has Children</para>
    /// </summary>
    [AttributeLogicalName("haschildrencode")]
    [DisplayName("Has Children")]
    public Contact_HasChildrenCode? HasChildrenCode {
        get {
            return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
        }
        set {
            SetOptionSetValue("haschildrencode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second home phone number for this contact.</para>
    /// <para>Display Name: Home Phone 2</para>
    /// </summary>
    [AttributeLogicalName("home2")]
    [DisplayName("Home Phone 2")]
    [MaxLength(50)]
    public string Home2 {
        get {
            return GetAttributeValue<string>("home2");
        }
        set {
            SetAttributeValue("home2", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
    /// <para>Display Name: Back Office Customer</para>
    /// </summary>
    [AttributeLogicalName("isbackofficecustomer")]
    [DisplayName("Back Office Customer")]
    public bool? IsBackofficeCustomer {
        get {
            return GetAttributeValue<bool?>("isbackofficecustomer");
        }
        set {
            SetAttributeValue("isbackofficecustomer", value);
        }
    }
    
    /// <summary>
    /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Job Title</para>
    /// </summary>
    [AttributeLogicalName("jobtitle")]
    [DisplayName("Job Title")]
    [MaxLength(100)]
    public string JobTitle {
        get {
            return GetAttributeValue<string>("jobtitle");
        }
        set {
            SetAttributeValue("jobtitle", value);
        }
    }
    
    /// <summary>
    /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    [DisplayName("Last Name")]
    [MaxLength(50)]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
    /// <para>Display Name: Last Date Included in Campaign</para>
    /// </summary>
    [AttributeLogicalName("lastusedincampaign")]
    [DisplayName("Last Date Included in Campaign")]
    public DateTime? LastUsedInCampaign {
        get {
            return GetAttributeValue<DateTime?>("lastusedincampaign");
        }
        set {
            SetAttributeValue("lastusedincampaign", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary marketing source that directed the contact to your organization.</para>
    /// <para>Display Name: Lead Source</para>
    /// </summary>
    [AttributeLogicalName("leadsourcecode")]
    [DisplayName("Lead Source")]
    public Contact_LeadSourceCode? LeadSourceCode {
        get {
            return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
        }
        set {
            SetOptionSetValue("leadsourcecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
    /// <para>Display Name: Manager</para>
    /// </summary>
    [AttributeLogicalName("managername")]
    [DisplayName("Manager")]
    [MaxLength(100)]
    public string ManagerName {
        get {
            return GetAttributeValue<string>("managername");
        }
        set {
            SetAttributeValue("managername", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the contact's manager.</para>
    /// <para>Display Name: Manager Phone</para>
    /// </summary>
    [AttributeLogicalName("managerphone")]
    [DisplayName("Manager Phone")]
    [MaxLength(50)]
    public string ManagerPhone {
        get {
            return GetAttributeValue<string>("managerphone");
        }
        set {
            SetAttributeValue("managerphone", value);
        }
    }
    
    /// <summary>
    /// <para>Whether is only for marketing</para>
    /// <para>Display Name: Marketing Only</para>
    /// </summary>
    [AttributeLogicalName("marketingonly")]
    [DisplayName("Marketing Only")]
    public bool? MarketingOnly {
        get {
            return GetAttributeValue<bool?>("marketingonly");
        }
        set {
            SetAttributeValue("marketingonly", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the master contact for merge.</para>
    /// <para>Display Name: Master ID</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("Master ID")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
    }
    
    /// <summary>
    /// <para>Shows whether the account has been merged with a master contact.</para>
    /// <para>Display Name: Merged</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Merged")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
    /// <para>Display Name: Middle Name</para>
    /// </summary>
    [AttributeLogicalName("middlename")]
    [DisplayName("Middle Name")]
    [MaxLength(50)]
    public string MiddleName {
        get {
            return GetAttributeValue<string>("middlename");
        }
        set {
            SetAttributeValue("middlename", value);
        }
    }
    
    /// <summary>
    /// <para>Type the mobile phone number for the contact.</para>
    /// <para>Display Name: Mobile Phone</para>
    /// </summary>
    [AttributeLogicalName("mobilephone")]
    [DisplayName("Mobile Phone")]
    [MaxLength(50)]
    public string MobilePhone {
        get {
            return GetAttributeValue<string>("mobilephone");
        }
        set {
            SetAttributeValue("mobilephone", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who modified the record.</para>
    /// <para>Display Name: Modified By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modified By (External Party)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type the contact's nickname.</para>
    /// <para>Display Name: Nickname</para>
    /// </summary>
    [AttributeLogicalName("nickname")]
    [DisplayName("Nickname")]
    [MaxLength(100)]
    public string NickName {
        get {
            return GetAttributeValue<string>("nickname");
        }
        set {
            SetAttributeValue("nickname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
    /// <para>Display Name: No. of Children</para>
    /// </summary>
    [AttributeLogicalName("numberofchildren")]
    [DisplayName("No. of Children")]
    [Range(0, 1000000000)]
    public int? NumberOfChildren {
        get {
            return GetAttributeValue<int?>("numberofchildren");
        }
        set {
            SetAttributeValue("numberofchildren", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.</para>
    /// <para>Display Name: Originating Lead</para>
    /// </summary>
    [AttributeLogicalName("originatingleadid")]
    [DisplayName("Originating Lead")]
    public EntityReference OriginatingLeadId {
        get {
            return GetAttributeValue<EntityReference>("originatingleadid");
        }
        set {
            SetAttributeValue("originatingleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the contact.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the contact.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the contact.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Type the pager number for the contact.</para>
    /// <para>Display Name: Pager</para>
    /// </summary>
    [AttributeLogicalName("pager")]
    [DisplayName("Pager")]
    [MaxLength(50)]
    public string Pager {
        get {
            return GetAttributeValue<string>("pager");
        }
        set {
            SetAttributeValue("pager", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the parent contact.</para>
    /// <para>Display Name: Parent Contact</para>
    /// </summary>
    [AttributeLogicalName("parentcontactid")]
    [DisplayName("Parent Contact")]
    public EntityReference ParentContactId {
        get {
            return GetAttributeValue<EntityReference>("parentcontactid");
        }
    }
    
    /// <summary>
    /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
    /// <para>Display Name: Company Name</para>
    /// </summary>
    [AttributeLogicalName("parentcustomerid")]
    [DisplayName("Company Name")]
    public EntityReference ParentCustomerId {
        get {
            return GetAttributeValue<EntityReference>("parentcustomerid");
        }
        set {
            SetAttributeValue("parentcustomerid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the contact participates in workflow rules.</para>
    /// <para>Display Name: Participates in Workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participates in Workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
    /// <para>Display Name: Payment Terms</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Payment Terms")]
    public Contact_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred day of the week for service appointments.</para>
    /// <para>Display Name: Preferred Day</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmentdaycode")]
    [DisplayName("Preferred Day")]
    public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
        get {
            return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
        }
        set {
            SetOptionSetValue("preferredappointmentdaycode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred time of day for service appointments.</para>
    /// <para>Display Name: Preferred Time</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmenttimecode")]
    [DisplayName("Preferred Time")]
    public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
        get {
            return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
        }
        set {
            SetOptionSetValue("preferredappointmenttimecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred method of contact.</para>
    /// <para>Display Name: Preferred Method of Contact</para>
    /// </summary>
    [AttributeLogicalName("preferredcontactmethodcode")]
    [DisplayName("Preferred Method of Contact")]
    public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
        get {
            return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
        }
        set {
            SetOptionSetValue("preferredcontactmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
    /// <para>Display Name: Preferred Facility/Equipment</para>
    /// </summary>
    [AttributeLogicalName("preferredequipmentid")]
    [DisplayName("Preferred Facility/Equipment")]
    public EntityReference PreferredEquipmentId {
        get {
            return GetAttributeValue<EntityReference>("preferredequipmentid");
        }
        set {
            SetAttributeValue("preferredequipmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the contact's preferred service to make sure services are scheduled correctly for the customer.</para>
    /// <para>Display Name: Preferred Service</para>
    /// </summary>
    [AttributeLogicalName("preferredserviceid")]
    [DisplayName("Preferred Service")]
    public EntityReference PreferredServiceId {
        get {
            return GetAttributeValue<EntityReference>("preferredserviceid");
        }
        set {
            SetAttributeValue("preferredserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
    /// <para>Display Name: Preferred User</para>
    /// </summary>
    [AttributeLogicalName("preferredsystemuserid")]
    [DisplayName("Preferred User")]
    public EntityReference PreferredSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("preferredsystemuserid");
        }
        set {
            SetAttributeValue("preferredsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
    /// <para>Display Name: Salutation</para>
    /// </summary>
    [AttributeLogicalName("salutation")]
    [DisplayName("Salutation")]
    [MaxLength(100)]
    public string Salutation {
        get {
            return GetAttributeValue<string>("salutation");
        }
        set {
            SetAttributeValue("salutation", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Shipping Method")]
    public Contact_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
    /// <para>Display Name: Spouse/Partner Name</para>
    /// </summary>
    [AttributeLogicalName("spousesname")]
    [DisplayName("Spouse/Partner Name")]
    [MaxLength(100)]
    public string SpousesName {
        get {
            return GetAttributeValue<string>("spousesname");
        }
        set {
            SetAttributeValue("spousesname", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ContactState? StateCode {
        get {
            return GetOptionSetValue<ContactState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the contact's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Contact_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Contact_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Subscription</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Subscription")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Suffix</para>
    /// </summary>
    [AttributeLogicalName("suffix")]
    [DisplayName("Suffix")]
    [MaxLength(10)]
    public string Suffix {
        get {
            return GetAttributeValue<string>("suffix");
        }
        set {
            SetAttributeValue("suffix", value);
        }
    }
    
    /// <summary>
    /// <para>Number of users or conversations followed the record</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number for this contact.</para>
    /// <para>Display Name: Business Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone1")]
    [DisplayName("Business Phone")]
    [MaxLength(50)]
    public string Telephone1 {
        get {
            return GetAttributeValue<string>("telephone1");
        }
        set {
            SetAttributeValue("telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number for this contact.</para>
    /// <para>Display Name: Home Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone2")]
    [DisplayName("Home Phone")]
    [MaxLength(50)]
    public string Telephone2 {
        get {
            return GetAttributeValue<string>("telephone2");
        }
        set {
            SetAttributeValue("telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number for this contact.</para>
    /// <para>Display Name: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("telephone3")]
    [DisplayName("Telephone 3")]
    [MaxLength(50)]
    public string Telephone3 {
        get {
            return GetAttributeValue<string>("telephone3");
        }
        set {
            SetAttributeValue("telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
    /// <para>Display Name: Territory</para>
    /// </summary>
    [AttributeLogicalName("territorycode")]
    [DisplayName("Territory")]
    public Contact_TerritoryCode? TerritoryCode {
        get {
            return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
        }
        set {
            SetOptionSetValue("territorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
    /// <para>Display Name: Time Spent by me</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Time Spent by me")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the contact.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Type the contact's professional or personal website or blog URL.</para>
    /// <para>Display Name: Website</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Website")]
    [MaxLength(200)]
    public string WebSiteUrl {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
    /// <para>Display Name: Yomi First Name</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    [DisplayName("Yomi First Name")]
    [MaxLength(150)]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
    /// <para>Display Name: Yomi Full Name</para>
    /// </summary>
    [AttributeLogicalName("yomifullname")]
    [DisplayName("Yomi Full Name")]
    [MaxLength(450)]
    public string YomiFullName {
        get {
            return GetAttributeValue<string>("yomifullname");
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
    /// <para>Display Name: Yomi Last Name</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    [DisplayName("Yomi Last Name")]
    [MaxLength(150)]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
    /// <para>Display Name: Yomi Middle Name</para>
    /// </summary>
    [AttributeLogicalName("yomimiddlename")]
    [DisplayName("Yomi Middle Name")]
    [MaxLength(150)]
    public string YomiMiddleName {
        get {
            return GetAttributeValue<string>("yomimiddlename");
        }
        set {
            SetAttributeValue("yomimiddlename", value);
        }
    }
    
    /// <summary>
    /// <para>Describes whether contact is opted out or not</para>
    /// <para>Display Name: GDPR Optout</para>
    /// </summary>
    [AttributeLogicalName("msdyn_gdproptout")]
    [DisplayName("GDPR Optout")]
    public bool? msdyn_gdproptout {
        get {
            return GetAttributeValue<bool?>("msdyn_gdproptout");
        }
        set {
            SetAttributeValue("msdyn_gdproptout", value);
        }
    }
    
    /// <summary>
    /// <para>Whether or not the contact belongs to the associated account</para>
    /// <para>Display Name: Not at Company Flag</para>
    /// </summary>
    [AttributeLogicalName("msdyn_orgchangestatus")]
    [DisplayName("Not at Company Flag")]
    public Contact_msdyn_orgchangestatus? msdyn_orgchangestatus {
        get {
            return GetOptionSetValue<Contact_msdyn_orgchangestatus>("msdyn_orgchangestatus");
        }
        set {
            SetOptionSetValue("msdyn_orgchangestatus", value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Contacts")]
    public IEnumerable<CampaignActivity> CampaignActivity_Contacts {
        get {
            return GetRelatedEntities<CampaignActivity>("CampaignActivity_Contacts", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_ActivityPointers")]
    public IEnumerable<ActivityPointer> Contact_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Contact_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Contact_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Appointments")]
    public IEnumerable<Appointment> Contact_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Contact_Appointments", null);
        }
        set {
            SetRelatedEntities("Contact_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Email_EmailSender")]
    public IEnumerable<Email> Contact_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Contact_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Contact_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Emails")]
    public IEnumerable<Email> Contact_Emails {
        get {
            return GetRelatedEntities<Email>("Contact_Emails", null);
        }
        set {
            SetRelatedEntities("Contact_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Phonecalls")]
    public IEnumerable<PhoneCall> Contact_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Contact_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Contact_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_ProcessSessions")]
    public IEnumerable<ProcessSession> Contact_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Contact_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Contact_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Contact_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Contact_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Contact_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Contact_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Contact_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Contact_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_SyncErrors")]
    public IEnumerable<SyncError> Contact_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Contact_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Contact_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Tasks")]
    public IEnumerable<Task> Contact_Tasks {
        get {
            return GetRelatedEntities<Task>("Contact_Tasks", null);
        }
        set {
            SetRelatedEntities("Contact_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("CreatedContact_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> CreatedContact_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("CreatedContact_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("CreatedContact_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
    public IEnumerable<Contact> Referencedcontact_customer_contacts {
        get {
            return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
    public IEnumerable<Contact> Referencedcontact_master_contact {
        get {
            return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentcustomerid")]
    [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
    public Contact Referencingcontact_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
    public Contact Referencingcontact_master_contact {
        get {
            return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("SourceContact_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> SourceContact_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("SourceContact_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("SourceContact_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("account_primary_contact")]
    public IEnumerable<Account> account_primary_contact {
        get {
            return GetRelatedEntities<Account>("account_primary_contact", null);
        }
        set {
            SetRelatedEntities("account_primary_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_CampaignResponses")]
    public IEnumerable<CampaignResponse> contact_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("contact_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("contact_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_activity_parties")]
    public IEnumerable<ActivityParty> contact_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("contact_activity_parties", null);
        }
        set {
            SetRelatedEntities("contact_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_as_primary_contact")]
    public IEnumerable<Incident> contact_as_primary_contact {
        get {
            return GetRelatedEntities<Incident>("contact_as_primary_contact", null);
        }
        set {
            SetRelatedEntities("contact_as_primary_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_as_responsible_contact")]
    public IEnumerable<Incident> contact_as_responsible_contact {
        get {
            return GetRelatedEntities<Incident>("contact_as_responsible_contact", null);
        }
        set {
            SetRelatedEntities("contact_as_responsible_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_bookableresource_ContactId")]
    public IEnumerable<BookableResource> contact_bookableresource_ContactId {
        get {
            return GetRelatedEntities<BookableResource>("contact_bookableresource_ContactId", null);
        }
        set {
            SetRelatedEntities("contact_bookableresource_ContactId", null, value);
        }
    }
    
    [AttributeLogicalName("parentcustomerid")]
    [RelationshipSchemaName("contact_customer_accounts")]
    public Account contact_customer_accounts {
        get {
            return GetRelatedEntity<Account>("contact_customer_accounts", null);
        }
        set {
            SetRelatedEntity("contact_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_entitlement_ContactId")]
    public IEnumerable<Entitlement> contact_entitlement_ContactId {
        get {
            return GetRelatedEntities<Entitlement>("contact_entitlement_ContactId", null);
        }
        set {
            SetRelatedEntities("contact_entitlement_ContactId", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_entitlement_Customer")]
    public IEnumerable<Entitlement> contact_entitlement_Customer {
        get {
            return GetRelatedEntities<Entitlement>("contact_entitlement_Customer", null);
        }
        set {
            SetRelatedEntities("contact_entitlement_Customer", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> contact_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("contact_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("contact_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_msfp_alerts")]
    public IEnumerable<msfp_alert> contact_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("contact_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("contact_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("originatingleadid")]
    [RelationshipSchemaName("contact_originating_lead")]
    public Lead contact_originating_lead {
        get {
            return GetRelatedEntity<Lead>("contact_originating_lead", null);
        }
        set {
            SetRelatedEntity("contact_originating_lead", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("contact_owning_user")]
    public SystemUser contact_owning_user {
        get {
            return GetRelatedEntity<SystemUser>("contact_owning_user", null);
        }
        set {
            SetRelatedEntity("contact_owning_user", null, value);
        }
    }
    
    [RelationshipSchemaName("contactinvoices_association")]
    public IEnumerable<Invoice> contactinvoices_association {
        get {
            return GetRelatedEntities<Invoice>("contactinvoices_association", null);
        }
        set {
            SetRelatedEntities("contactinvoices_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contactleads_association")]
    public IEnumerable<Lead> contactleads_association {
        get {
            return GetRelatedEntities<Lead>("contactleads_association", null);
        }
        set {
            SetRelatedEntities("contactleads_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contactorders_association")]
    public IEnumerable<SalesOrder> contactorders_association {
        get {
            return GetRelatedEntities<SalesOrder>("contactorders_association", null);
        }
        set {
            SetRelatedEntities("contactorders_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contactquotes_association")]
    public IEnumerable<Quote> contactquotes_association {
        get {
            return GetRelatedEntities<Quote>("contactquotes_association", null);
        }
        set {
            SetRelatedEntities("contactquotes_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_billingcustomer_contacts")]
    public IEnumerable<Contract> contract_billingcustomer_contacts {
        get {
            return GetRelatedEntities<Contract>("contract_billingcustomer_contacts", null);
        }
        set {
            SetRelatedEntities("contract_billingcustomer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_customer_contacts")]
    public IEnumerable<Contract> contract_customer_contacts {
        get {
            return GetRelatedEntities<Contract>("contract_customer_contacts", null);
        }
        set {
            SetRelatedEntities("contract_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("contractlineitem_customer_contacts")]
    public IEnumerable<ContractDetail> contractlineitem_customer_contacts {
        get {
            return GetRelatedEntities<ContractDetail>("contractlineitem_customer_contacts", null);
        }
        set {
            SetRelatedEntities("contractlineitem_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementcontacts_association")]
    public IEnumerable<Entitlement> entitlementcontacts_association {
        get {
            return GetRelatedEntities<Entitlement>("entitlementcontacts_association", null);
        }
        set {
            SetRelatedEntities("entitlementcontacts_association", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_customer_contacts")]
    public IEnumerable<Incident> incident_customer_contacts {
        get {
            return GetRelatedEntities<Incident>("incident_customer_contacts", null);
        }
        set {
            SetRelatedEntities("incident_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_customer_contacts")]
    public IEnumerable<Invoice> invoice_customer_contacts {
        get {
            return GetRelatedEntities<Invoice>("invoice_customer_contacts", null);
        }
        set {
            SetRelatedEntities("invoice_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_customer_contacts")]
    public IEnumerable<Lead> lead_customer_contacts {
        get {
            return GetRelatedEntities<Lead>("lead_customer_contacts", null);
        }
        set {
            SetRelatedEntities("lead_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_parent_contact")]
    public IEnumerable<Lead> lead_parent_contact {
        get {
            return GetRelatedEntities<Lead>("lead_parent_contact", null);
        }
        set {
            SetRelatedEntities("lead_parent_contact", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_contact_createdonbehalfby")]
    public SystemUser lk_contact_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
    public SystemUser lk_contact_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_contactbase_createdby")]
    public SystemUser lk_contactbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_contactbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_contactbase_modifiedby")]
    public SystemUser lk_contactbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_contactbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_contact_msdyn_rma_RequestedByContact")]
    public IEnumerable<msdyn_rma> msdyn_contact_msdyn_rma_RequestedByContact {
        get {
            return GetRelatedEntities<msdyn_rma>("msdyn_contact_msdyn_rma_RequestedByContact", null);
        }
        set {
            SetRelatedEntities("msdyn_contact_msdyn_rma_RequestedByContact", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_contact_msdyn_workorder_ReportedByContact")]
    public IEnumerable<msdyn_workorder> msdyn_contact_msdyn_workorder_ReportedByContact {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_contact_msdyn_workorder_ReportedByContact", null);
        }
        set {
            SetRelatedEntities("msdyn_contact_msdyn_workorder_ReportedByContact", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_customer_contacts")]
    public IEnumerable<Opportunity> opportunity_customer_contacts {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_customer_contacts", null);
        }
        set {
            SetRelatedEntities("opportunity_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_parent_contact")]
    public IEnumerable<Opportunity> opportunity_parent_contact {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_parent_contact", null);
        }
        set {
            SetRelatedEntities("opportunity_parent_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("order_customer_contacts")]
    public IEnumerable<SalesOrder> order_customer_contacts {
        get {
            return GetRelatedEntities<SalesOrder>("order_customer_contacts", null);
        }
        set {
            SetRelatedEntities("order_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_contact_workorder")]
    public IEnumerable<msdyn_workorder> qm_contact_workorder {
        get {
            return GetRelatedEntities<msdyn_workorder>("qm_contact_workorder", null);
        }
        set {
            SetRelatedEntities("qm_contact_workorder", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_customer_contacts")]
    public IEnumerable<Quote> quote_customer_contacts {
        get {
            return GetRelatedEntities<Quote>("quote_customer_contacts", null);
        }
        set {
            SetRelatedEntities("quote_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("servicecontractcontacts_association")]
    public IEnumerable<Contract> servicecontractcontacts_association {
        get {
            return GetRelatedEntities<Contract>("servicecontractcontacts_association", null);
        }
        set {
            SetRelatedEntities("servicecontractcontacts_association", null, value);
        }
    }
    
    [AttributeLogicalName("preferredsystemuserid")]
    [RelationshipSchemaName("system_user_contacts")]
    public SystemUser system_user_contacts {
        get {
            return GetRelatedEntity<SystemUser>("system_user_contacts", null);
        }
        set {
            SetRelatedEntity("system_user_contacts", null, value);
        }
    }
    
    public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: ContactInvoices</para>
/// </summary>
[EntityLogicalName("contactinvoices")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ContactInvoices : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "contactinvoices";
    
    public const int EntityTypeCode = 17;
    
    public ContactInvoices() : 
            base(EntityLogicalName) {
    }
    
    public ContactInvoices(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("contactinvoiceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactinvoiceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the invoices for the contact.</para>
    /// </summary>
    [AttributeLogicalName("contactinvoiceid")]
    public Guid? ContactInvoiceId {
        get {
            return GetAttributeValue<Guid?>("contactinvoiceid");
        }
        set {
            SetId("contactinvoiceid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    [AttributeLogicalName("invoiceid")]
    public Guid? InvoiceId {
        get {
            return GetAttributeValue<Guid?>("invoiceid");
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ContactInvoices Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactInvoices,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: ContactLeads</para>
/// </summary>
[EntityLogicalName("contactleads")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ContactLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "contactleads";
    
    public const int EntityTypeCode = 22;
    
    public ContactLeads() : 
            base(EntityLogicalName) {
    }
    
    public ContactLeads(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("contactleadid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the leads for the contact.</para>
    /// </summary>
    [AttributeLogicalName("contactleadid")]
    public Guid? ContactLeadId {
        get {
            return GetAttributeValue<Guid?>("contactleadid");
        }
        set {
            SetId("contactleadid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    [AttributeLogicalName("leadid")]
    public Guid? LeadId {
        get {
            return GetAttributeValue<Guid?>("leadid");
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ContactLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactLeads,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: ContactOrders</para>
/// </summary>
[EntityLogicalName("contactorders")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ContactOrders : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "contactorders";
    
    public const int EntityTypeCode = 19;
    
    public ContactOrders() : 
            base(EntityLogicalName) {
    }
    
    public ContactOrders(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("contactorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the orders for the contact.</para>
    /// </summary>
    [AttributeLogicalName("contactorderid")]
    public Guid? ContactOrderId {
        get {
            return GetAttributeValue<Guid?>("contactorderid");
        }
        set {
            SetId("contactorderid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("salesorderid")]
    public Guid? SalesOrderId {
        get {
            return GetAttributeValue<Guid?>("salesorderid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ContactOrders Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactOrders,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: ContactQuotes</para>
/// </summary>
[EntityLogicalName("contactquotes")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ContactQuotes : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "contactquotes";
    
    public const int EntityTypeCode = 18;
    
    public ContactQuotes() : 
            base(EntityLogicalName) {
    }
    
    public ContactQuotes(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("contactquoteid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactquoteid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the quotes for the contact.</para>
    /// </summary>
    [AttributeLogicalName("contactquoteid")]
    public Guid? ContactQuoteId {
        get {
            return GetAttributeValue<Guid?>("contactquoteid");
        }
        set {
            SetId("contactquoteid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("quoteid")]
    public Guid? QuoteId {
        get {
            return GetAttributeValue<Guid?>("quoteid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ContactQuotes Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactQuotes,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Agreement to provide customer service during a specified amount of time or number of cases.</para>
/// <para>Display Name: Contract</para>
/// </summary>
[EntityLogicalName("contract")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Contract : ExtendedEntity<ContractState, Contract_StatusCode> {
    
    public const string EntityLogicalName = "contract";
    
    public const int EntityTypeCode = 1010;
    
    public Contract() : 
            base(EntityLogicalName) {
    }
    
    public Contract(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("title");
        }
    }
    
    [AttributeLogicalName("contractid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contract.</para>
    /// <para>Display Name: Contract</para>
    /// </summary>
    [AttributeLogicalName("contractid")]
    [DisplayName("Contract")]
    public Guid? ContractId {
        get {
            return GetAttributeValue<Guid?>("contractid");
        }
        set {
            SetId("contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the contract is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the contract becomes active.</para>
    /// <para>Display Name: Contract Start Date</para>
    /// </summary>
    [AttributeLogicalName("activeon")]
    [DisplayName("Contract Start Date")]
    public DateTime? ActiveOn {
        get {
            return GetAttributeValue<DateTime?>("activeon");
        }
        set {
            SetAttributeValue("activeon", value);
        }
    }
    
    /// <summary>
    /// <para>Type of allotment that the contract supports.</para>
    /// <para>Display Name: Allotment Type</para>
    /// </summary>
    [AttributeLogicalName("allotmenttypecode")]
    [DisplayName("Allotment Type")]
    public Contract_AllotmentTypeCode? AllotmentTypeCode {
        get {
            return GetOptionSetValue<Contract_AllotmentTypeCode>("allotmenttypecode");
        }
        set {
            SetOptionSetValue("allotmenttypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose which address to send the invoice to.</para>
    /// <para>Display Name: Bill To Address</para>
    /// </summary>
    [AttributeLogicalName("billtoaddress")]
    [DisplayName("Bill To Address")]
    public EntityReference BillToAddress {
        get {
            return GetAttributeValue<EntityReference>("billtoaddress");
        }
        set {
            SetAttributeValue("billtoaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account to which the contract is to be billed.</para>
    /// <para>Display Name: Billing Account</para>
    /// </summary>
    [AttributeLogicalName("billingaccountid")]
    [DisplayName("Billing Account")]
    public EntityReference BillingAccountId {
        get {
            return GetAttributeValue<EntityReference>("billingaccountid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact to whom the contract is to be billed.</para>
    /// <para>Display Name: Billing Contact</para>
    /// </summary>
    [AttributeLogicalName("billingcontactid")]
    [DisplayName("Billing Contact")]
    public EntityReference BillingContactId {
        get {
            return GetAttributeValue<EntityReference>("billingcontactid");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to which the contract should be billed to provide a quick link to address and other customer details.</para>
    /// <para>Display Name: Bill To Customer</para>
    /// </summary>
    [AttributeLogicalName("billingcustomerid")]
    [DisplayName("Bill To Customer")]
    public EntityReference BillingCustomerId {
        get {
            return GetAttributeValue<EntityReference>("billingcustomerid");
        }
        set {
            SetAttributeValue("billingcustomerid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the end date for the contract's billing period to indicate the period for which the customer must pay for a service.</para>
    /// <para>Display Name: Billing End Date</para>
    /// </summary>
    [AttributeLogicalName("billingendon")]
    [DisplayName("Billing End Date")]
    public DateTime? BillingEndOn {
        get {
            return GetAttributeValue<DateTime?>("billingendon");
        }
        set {
            SetAttributeValue("billingendon", value);
        }
    }
    
    /// <summary>
    /// <para>Select the billing schedule of the contract to indicate how often the customer should be invoiced.</para>
    /// <para>Display Name: Billing Frequency</para>
    /// </summary>
    [AttributeLogicalName("billingfrequencycode")]
    [DisplayName("Billing Frequency")]
    public Contract_BillingFrequencyCode? BillingFrequencyCode {
        get {
            return GetOptionSetValue<Contract_BillingFrequencyCode>("billingfrequencycode");
        }
        set {
            SetOptionSetValue("billingfrequencycode", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the start date for the contract's billing period to indicate the period for which the customer must pay for a service. This defaults to the same date that is selected in the Contract Start Date field.</para>
    /// <para>Display Name: Billing Start Date</para>
    /// </summary>
    [AttributeLogicalName("billingstarton")]
    [DisplayName("Billing Start Date")]
    public DateTime? BillingStartOn {
        get {
            return GetAttributeValue<DateTime?>("billingstarton");
        }
        set {
            SetAttributeValue("billingstarton", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the contract was canceled.</para>
    /// <para>Display Name: Cancellation Date</para>
    /// </summary>
    [AttributeLogicalName("cancelon")]
    [DisplayName("Cancellation Date")]
    public DateTime? CancelOn {
        get {
            return GetAttributeValue<DateTime?>("cancelon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact specified for the contract.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Type additional information about the contract, such as the products or services provided to the customer.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("contractlanguage")]
    [DisplayName("Description")]
    public string ContractLanguage {
        get {
            return GetAttributeValue<string>("contractlanguage");
        }
        set {
            SetAttributeValue("contractlanguage", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the number for the contract for customer reference and searching capabilities. You cannot modify this number.</para>
    /// <para>Display Name: Contract ID</para>
    /// </summary>
    [AttributeLogicalName("contractnumber")]
    [DisplayName("Contract ID")]
    [MaxLength(100)]
    public string ContractNumber {
        get {
            return GetAttributeValue<string>("contractnumber");
        }
        set {
            SetAttributeValue("contractnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the level of service that should be provided for the contract based on your company's definition of bronze, silver, or gold.</para>
    /// <para>Display Name: Service Level</para>
    /// </summary>
    [AttributeLogicalName("contractservicelevelcode")]
    [DisplayName("Service Level")]
    public Contract_ContractServiceLevelCode? ContractServiceLevelCode {
        get {
            return GetOptionSetValue<Contract_ContractServiceLevelCode>("contractservicelevelcode");
        }
        set {
            SetOptionSetValue("contractservicelevelcode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the abbreviation of the contract template selected when the contract is created.</para>
    /// <para>Display Name: Template Abbreviation</para>
    /// </summary>
    [AttributeLogicalName("contracttemplateabbreviation")]
    [DisplayName("Template Abbreviation")]
    [MaxLength(20)]
    public string ContractTemplateAbbreviation {
        get {
            return GetAttributeValue<string>("contracttemplateabbreviation");
        }
    }
    
    /// <summary>
    /// <para>Choose the contract template that should be used to determine the terms of the contract, such as allotment type, available hours, and billing frequency.</para>
    /// <para>Display Name: Contract Template</para>
    /// </summary>
    [AttributeLogicalName("contracttemplateid")]
    [DisplayName("Contract Template")]
    public EntityReference ContractTemplateId {
        get {
            return GetAttributeValue<EntityReference>("contracttemplateid");
        }
        set {
            SetAttributeValue("contracttemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows for the duration of the contract, in days, based on the contract start and end dates.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? Duration {
        get {
            return GetAttributeValue<int?>("duration");
        }
    }
    
    /// <summary>
    /// <para>Days of the week and times during which customer service support is available for the duration of the contract.</para>
    /// <para>Display Name: Support Calendar</para>
    /// </summary>
    [AttributeLogicalName("effectivitycalendar")]
    [DisplayName("Support Calendar")]
    [MaxLength(168)]
    public string EffectivityCalendar {
        get {
            return GetAttributeValue<string>("effectivitycalendar");
        }
        set {
            SetAttributeValue("effectivitycalendar", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the contract expires.</para>
    /// <para>Display Name: Contract End Date</para>
    /// </summary>
    [AttributeLogicalName("expireson")]
    [DisplayName("Contract End Date")]
    public DateTime? ExpiresOn {
        get {
            return GetAttributeValue<DateTime?>("expireson");
        }
        set {
            SetAttributeValue("expireson", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the total charge to the customer for the service contract, calculated as the sum of values in the Net field for each existing contract line related to the contract.</para>
    /// <para>Display Name: Net Price</para>
    /// </summary>
    [AttributeLogicalName("netprice")]
    [DisplayName("Net Price")]
    public decimal? NetPrice {
        get {
            return GetMoneyValue("netprice");
        }
    }
    
    /// <summary>
    /// <para>Value of the Net Price in base currency.</para>
    /// <para>Display Name: Net Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("netprice_base")]
    [DisplayName("Net Price (Base)")]
    public decimal? NetPrice_Base {
        get {
            return GetMoneyValue("netprice_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the original contract that this contract was created from. This information is used to track renewal history.</para>
    /// <para>Display Name: Originating Contract</para>
    /// </summary>
    [AttributeLogicalName("originatingcontract")]
    [DisplayName("Originating Contract")]
    public EntityReference OriginatingContract {
        get {
            return GetAttributeValue<EntityReference>("originatingcontract");
        }
        set {
            SetAttributeValue("originatingcontract", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the address for the customer account or contact where the services are provided.</para>
    /// <para>Display Name: Contract Address</para>
    /// </summary>
    [AttributeLogicalName("serviceaddress")]
    [DisplayName("Contract Address")]
    public EntityReference ServiceAddress {
        get {
            return GetAttributeValue<EntityReference>("serviceaddress");
        }
        set {
            SetAttributeValue("serviceaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the contract is in draft, invoiced, active, on hold, canceled, or expired. You can edit only the contracts that are in draft status.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ContractState? StateCode {
        get {
            return GetOptionSetValue<ContractState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the contract's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Contract_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Contract_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type a title or name for the contract that indicates the purpose of the contract.</para>
    /// <para>Display Name: Contract Name</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Contract Name")]
    [MaxLength(100)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total discount applied to the contract's service charges, calculated as the sum of values in the Discount fields for each existing contract line related to the contract.</para>
    /// <para>Display Name: Total Discount</para>
    /// </summary>
    [AttributeLogicalName("totaldiscount")]
    [DisplayName("Total Discount")]
    public decimal? TotalDiscount {
        get {
            return GetMoneyValue("totaldiscount");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Discount in base currency.</para>
    /// <para>Display Name: Total Discount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscount_base")]
    [DisplayName("Total Discount (Base)")]
    public decimal? TotalDiscount_Base {
        get {
            return GetMoneyValue("totaldiscount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total service charge for the contract, before any discounts are credited. This is calculated as the sum of values in the Total Price field for each existing contract line related to the contract.</para>
    /// <para>Display Name: Total Price</para>
    /// </summary>
    [AttributeLogicalName("totalprice")]
    [DisplayName("Total Price")]
    public decimal? TotalPrice {
        get {
            return GetMoneyValue("totalprice");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Price in base currency.</para>
    /// <para>Display Name: Total Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalprice_base")]
    [DisplayName("Total Price (Base)")]
    public decimal? TotalPrice_Base {
        get {
            return GetMoneyValue("totalprice_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the discounts entered on contract lines for this contract should be entered as a percentage or a fixed dollar value.</para>
    /// <para>Display Name: Discount</para>
    /// </summary>
    [AttributeLogicalName("usediscountaspercentage")]
    [DisplayName("Discount")]
    public bool? UseDiscountAsPercentage {
        get {
            return GetAttributeValue<bool?>("usediscountaspercentage");
        }
        set {
            SetAttributeValue("usediscountaspercentage", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("Contract_ActivityPointers")]
    public IEnumerable<ActivityPointer> Contract_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Contract_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Contract_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_Appointments")]
    public IEnumerable<Appointment> Contract_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Contract_Appointments", null);
        }
        set {
            SetRelatedEntities("Contract_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_Emails")]
    public IEnumerable<Email> Contract_Emails {
        get {
            return GetRelatedEntities<Email>("Contract_Emails", null);
        }
        set {
            SetRelatedEntities("Contract_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_Phonecalls")]
    public IEnumerable<PhoneCall> Contract_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Contract_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Contract_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_ProcessSessions")]
    public IEnumerable<ProcessSession> Contract_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Contract_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Contract_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Contract_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Contract_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Contract_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Contract_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Contract_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Contract_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_SyncErrors")]
    public IEnumerable<SyncError> Contract_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Contract_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Contract_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Contract_Tasks")]
    public IEnumerable<Task> Contract_Tasks {
        get {
            return GetRelatedEntities<Task>("Contract_Tasks", null);
        }
        set {
            SetRelatedEntities("Contract_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_originating_contract", EntityRole.Referenced)]
    public IEnumerable<Contract> Referencedcontract_originating_contract {
        get {
            return GetRelatedEntities<Contract>("contract_originating_contract", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contract_originating_contract", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("originatingcontract")]
    [RelationshipSchemaName("contract_originating_contract", EntityRole.Referencing)]
    public Contract Referencingcontract_originating_contract {
        get {
            return GetRelatedEntity<Contract>("contract_originating_contract", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contract_originating_contract", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("contract_activity_parties")]
    public IEnumerable<ActivityParty> contract_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("contract_activity_parties", null);
        }
        set {
            SetRelatedEntities("contract_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("billingcustomerid")]
    [RelationshipSchemaName("contract_billingcustomer_accounts")]
    public Account contract_billingcustomer_accounts {
        get {
            return GetRelatedEntity<Account>("contract_billingcustomer_accounts", null);
        }
        set {
            SetRelatedEntity("contract_billingcustomer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("billingcustomerid")]
    [RelationshipSchemaName("contract_billingcustomer_contacts")]
    public Contact contract_billingcustomer_contacts {
        get {
            return GetRelatedEntity<Contact>("contract_billingcustomer_contacts", null);
        }
        set {
            SetRelatedEntity("contract_billingcustomer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_cases")]
    public IEnumerable<Incident> contract_cases {
        get {
            return GetRelatedEntities<Incident>("contract_cases", null);
        }
        set {
            SetRelatedEntities("contract_cases", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("contract_customer_accounts")]
    public Account contract_customer_accounts {
        get {
            return GetRelatedEntity<Account>("contract_customer_accounts", null);
        }
        set {
            SetRelatedEntity("contract_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("contract_customer_contacts")]
    public Contact contract_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("contract_customer_contacts", null);
        }
        set {
            SetRelatedEntity("contract_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_line_items")]
    public IEnumerable<ContractDetail> contract_line_items {
        get {
            return GetRelatedEntities<ContractDetail>("contract_line_items", null);
        }
        set {
            SetRelatedEntities("contract_line_items", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> contract_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("contract_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("contract_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_msfp_alerts")]
    public IEnumerable<msfp_alert> contract_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("contract_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("contract_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_contract_createdonbehalfby")]
    public SystemUser lk_contract_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contract_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contract_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_contract_modifiedonbehalfby")]
    public SystemUser lk_contract_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contract_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contract_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_contractbase_createdby")]
    public SystemUser lk_contractbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_contractbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_contractbase_modifiedby")]
    public SystemUser lk_contractbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_contractbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("servicecontractcontacts_association")]
    public IEnumerable<Contact> servicecontractcontacts_association {
        get {
            return GetRelatedEntities<Contact>("servicecontractcontacts_association", null);
        }
        set {
            SetRelatedEntities("servicecontractcontacts_association", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_service_contracts")]
    public SystemUser system_user_service_contracts {
        get {
            return GetRelatedEntity<SystemUser>("system_user_service_contracts", null);
        }
        set {
            SetRelatedEntity("system_user_service_contracts", null, value);
        }
    }
    
    public static Contract Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contract,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Line item in a contract that specifies the type of service a customer is entitled to.</para>
/// <para>Display Name: Contract Line</para>
/// </summary>
[EntityLogicalName("contractdetail")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ContractDetail : ExtendedEntity<ContractDetailState, ContractDetail_StatusCode> {
    
    public const string EntityLogicalName = "contractdetail";
    
    public const int EntityTypeCode = 1011;
    
    public ContractDetail() : 
            base(EntityLogicalName) {
    }
    
    public ContractDetail(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("title");
        }
    }
    
    [AttributeLogicalName("contractdetailid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contractdetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contract line.</para>
    /// <para>Display Name: Contract Line</para>
    /// </summary>
    [AttributeLogicalName("contractdetailid")]
    [DisplayName("Contract Line")]
    public Guid? ContractDetailId {
        get {
            return GetAttributeValue<Guid?>("contractdetailid");
        }
        set {
            SetId("contractdetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the contract is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the contract line becomes active.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("activeon")]
    [DisplayName("Start Date")]
    public DateTime? ActiveOn {
        get {
            return GetAttributeValue<DateTime?>("activeon");
        }
        set {
            SetAttributeValue("activeon", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the number of minutes over the Total Allotments field that have been spent on resolved cases related to the contract line.</para>
    /// <para>Display Name: Allotments Overage</para>
    /// </summary>
    [AttributeLogicalName("allotmentsoverage")]
    [DisplayName("Allotments Overage")]
    [Range(0, 1000000000)]
    public int? AllotmentsOverage {
        get {
            return GetAttributeValue<int?>("allotmentsoverage");
        }
    }
    
    /// <summary>
    /// <para>Shows the number of cases or minutes remaining, based on the resolved cases logged to the contract line.</para>
    /// <para>Display Name: Allotments Remaining</para>
    /// </summary>
    [AttributeLogicalName("allotmentsremaining")]
    [DisplayName("Allotments Remaining")]
    [Range(0, 1000000000)]
    public int? AllotmentsRemaining {
        get {
            return GetAttributeValue<int?>("allotmentsremaining");
        }
    }
    
    /// <summary>
    /// <para>Shows the number of cases or minutes used in the resolved cases on the contract line.</para>
    /// <para>Display Name: Allotments Used</para>
    /// </summary>
    [AttributeLogicalName("allotmentsused")]
    [DisplayName("Allotments Used")]
    [Range(0, 1000000000)]
    public int? AllotmentsUsed {
        get {
            return GetAttributeValue<int?>("allotmentsused");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the contact associated with the contract line.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contract associated with the contract line.</para>
    /// <para>Display Name: Contract</para>
    /// </summary>
    [AttributeLogicalName("contractid")]
    [DisplayName("Contract")]
    public EntityReference ContractId {
        get {
            return GetAttributeValue<EntityReference>("contractid");
        }
        set {
            SetAttributeValue("contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the contract.</para>
    /// <para>Display Name: Contract State</para>
    /// </summary>
    [AttributeLogicalName("contractstatecode")]
    [DisplayName("Contract State")]
    public Object ContractStateCode {
        get {
            return GetAttributeValue<Object>("contractstatecode");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount amount for the contract line to deduct any negotiated or other savings from the net amount due.</para>
    /// <para>Display Name: Discount</para>
    /// </summary>
    [AttributeLogicalName("discount")]
    [DisplayName("Discount")]
    public decimal? Discount {
        get {
            return GetMoneyValue("discount");
        }
        set {
            SetMoneyValue("discount", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount rate that should be applied to the Total Price, for use in calculating the net amount due for the contract line.</para>
    /// <para>Display Name: Discount (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Discount (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Discount in base currency.</para>
    /// <para>Display Name: Discount (Base)</para>
    /// </summary>
    [AttributeLogicalName("discount_base")]
    [DisplayName("Discount (Base)")]
    public decimal? Discount_Base {
        get {
            return GetMoneyValue("discount_base");
        }
    }
    
    /// <summary>
    /// <para>Days of the week and times for which the contract line item is effective.</para>
    /// <para>Display Name: Support Calendar</para>
    /// </summary>
    [AttributeLogicalName("effectivitycalendar")]
    [DisplayName("Support Calendar")]
    [MaxLength(168)]
    public string EffectivityCalendar {
        get {
            return GetAttributeValue<string>("effectivitycalendar");
        }
        set {
            SetAttributeValue("effectivitycalendar", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the contract line expires. The date is automatically filled with the contract date, but you can change it if required.</para>
    /// <para>Display Name: End Date</para>
    /// </summary>
    [AttributeLogicalName("expireson")]
    [DisplayName("End Date")]
    public DateTime? ExpiresOn {
        get {
            return GetAttributeValue<DateTime?>("expireson");
        }
        set {
            SetAttributeValue("expireson", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of units of the specified product or service that are eligible for support on the contract line.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("initialquantity")]
    [DisplayName("Quantity")]
    [Range(0, 1000000000)]
    public int? InitialQuantity {
        get {
            return GetAttributeValue<int?>("initialquantity");
        }
        set {
            SetAttributeValue("initialquantity", value);
        }
    }
    
    /// <summary>
    /// <para>Type the line item number for the contract line to easily identify the contract line and make sure it's listed in the correct order in the parent contract.</para>
    /// <para>Display Name: Line Item Order</para>
    /// </summary>
    [AttributeLogicalName("lineitemorder")]
    [DisplayName("Line Item Order")]
    [Range(0, 1000000000)]
    public int? LineItemOrder {
        get {
            return GetAttributeValue<int?>("lineitemorder");
        }
        set {
            SetAttributeValue("lineitemorder", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the total charge to the customer for the contract line, calculated as the Total Price minus any discounts.</para>
    /// <para>Display Name: Net</para>
    /// </summary>
    [AttributeLogicalName("net")]
    [DisplayName("Net")]
    public decimal? Net {
        get {
            return GetMoneyValue("net");
        }
    }
    
    /// <summary>
    /// <para>Value of the Net in base currency.</para>
    /// <para>Display Name: Net (Base)</para>
    /// </summary>
    [AttributeLogicalName("net_base")]
    [DisplayName("Net (Base)")]
    public decimal? Net_Base {
        get {
            return GetMoneyValue("net_base");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Type the total service charge for the contract line before any discounts are credited.</para>
    /// <para>Display Name: Total Price</para>
    /// </summary>
    [AttributeLogicalName("price")]
    [DisplayName("Total Price")]
    public decimal? Price {
        get {
            return GetMoneyValue("price");
        }
        set {
            SetMoneyValue("price", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Price in base currency.</para>
    /// <para>Display Name: Total Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("price_base")]
    [DisplayName("Total Price (Base)")]
    public decimal? Price_Base {
        get {
            return GetMoneyValue("price_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the product that is eligible for services on the contract line.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("productid")]
    [DisplayName("Product")]
    public EntityReference ProductId {
        get {
            return GetAttributeValue<EntityReference>("productid");
        }
        set {
            SetAttributeValue("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the serial number for the product that is eligible for services on the contract line.</para>
    /// <para>Display Name: Serial Number</para>
    /// </summary>
    [AttributeLogicalName("productserialnumber")]
    [DisplayName("Serial Number")]
    [MaxLength(100)]
    public string ProductSerialNumber {
        get {
            return GetAttributeValue<string>("productserialnumber");
        }
        set {
            SetAttributeValue("productserialnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the cost per case or minute, calculated by dividing the Total Price value by the total number of cases or minutes allocated to the contract line.</para>
    /// <para>Display Name: Rate</para>
    /// </summary>
    [AttributeLogicalName("rate")]
    [DisplayName("Rate")]
    public decimal? Rate {
        get {
            return GetMoneyValue("rate");
        }
    }
    
    /// <summary>
    /// <para>Value of the Rate in base currency.</para>
    /// <para>Display Name: Rate (Base)</para>
    /// </summary>
    [AttributeLogicalName("rate_base")]
    [DisplayName("Rate (Base)")]
    public decimal? Rate_Base {
        get {
            return GetMoneyValue("rate_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the address for the customer account or contact where the services are provided.</para>
    /// <para>Display Name: Location</para>
    /// </summary>
    [AttributeLogicalName("serviceaddress")]
    [DisplayName("Location")]
    public EntityReference ServiceAddress {
        get {
            return GetAttributeValue<EntityReference>("serviceaddress");
        }
        set {
            SetAttributeValue("serviceaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Select the unit type allotted in the contract line, such as cases or minutes, to determine the level of support.</para>
    /// <para>Display Name: Service Contract Units</para>
    /// </summary>
    [AttributeLogicalName("servicecontractunitscode")]
    [DisplayName("Service Contract Units")]
    public ContractDetail_ServiceContractUnitsCode? ServiceContractUnitsCode {
        get {
            return GetOptionSetValue<ContractDetail_ServiceContractUnitsCode>("servicecontractunitscode");
        }
        set {
            SetOptionSetValue("servicecontractunitscode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the contract line is existing, renewed, canceled, or expired. You can't edit a contract line after it is saved, regardless of the status.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ContractDetailState? StateCode {
        get {
            return GetOptionSetValue<ContractDetailState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the contract line's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ContractDetail_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<ContractDetail_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type a title or name that describes the contract line.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Title")]
    [MaxLength(500)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Type the total number of minutes or cases allowed for the contract line.</para>
    /// <para>Display Name: Total Allotments</para>
    /// </summary>
    [AttributeLogicalName("totalallotments")]
    [DisplayName("Total Allotments")]
    [Range(0, 1000000000)]
    public int? TotalAllotments {
        get {
            return GetAttributeValue<int?>("totalallotments");
        }
        set {
            SetAttributeValue("totalallotments", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the unit of measurement for the base unit quantity for this purchase, such as each or dozen.</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("uomid")]
    [DisplayName("Unit")]
    public EntityReference UoMId {
        get {
            return GetAttributeValue<EntityReference>("uomid");
        }
        set {
            SetAttributeValue("uomid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the unit group associated with the contract line.</para>
    /// <para>Display Name: Unit Schedule</para>
    /// </summary>
    [AttributeLogicalName("uomscheduleid")]
    [DisplayName("Unit Schedule")]
    public EntityReference UoMScheduleId {
        get {
            return GetAttributeValue<EntityReference>("uomscheduleid");
        }
        set {
            SetAttributeValue("uomscheduleid", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("ContractDetail_ProcessSessions")]
    public IEnumerable<ProcessSession> ContractDetail_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("ContractDetail_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("ContractDetail_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("ContractDetail_SyncErrors")]
    public IEnumerable<SyncError> ContractDetail_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ContractDetail_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ContractDetail_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("contract_detail_cases")]
    public IEnumerable<Incident> contract_detail_cases {
        get {
            return GetRelatedEntities<Incident>("contract_detail_cases", null);
        }
        set {
            SetRelatedEntities("contract_detail_cases", null, value);
        }
    }
    
    [AttributeLogicalName("contractid")]
    [RelationshipSchemaName("contract_line_items")]
    public Contract contract_line_items {
        get {
            return GetRelatedEntity<Contract>("contract_line_items", null);
        }
        set {
            SetRelatedEntity("contract_line_items", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("contractlineitem_customer_accounts")]
    public Account contractlineitem_customer_accounts {
        get {
            return GetRelatedEntity<Account>("contractlineitem_customer_accounts", null);
        }
        set {
            SetRelatedEntity("contractlineitem_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("contractlineitem_customer_contacts")]
    public Contact contractlineitem_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("contractlineitem_customer_contacts", null);
        }
        set {
            SetRelatedEntity("contractlineitem_customer_contacts", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_contractdetail_createdonbehalfby")]
    public SystemUser lk_contractdetail_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractdetail_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contractdetail_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_contractdetail_modifiedonbehalfby")]
    public SystemUser lk_contractdetail_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractdetail_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contractdetail_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_contractdetailbase_createdby")]
    public SystemUser lk_contractdetailbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractdetailbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_contractdetailbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_contractdetailbase_modifiedby")]
    public SystemUser lk_contractdetailbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contractdetailbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_contractdetailbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("productid")]
    [RelationshipSchemaName("product_contract_line_items")]
    public Product product_contract_line_items {
        get {
            return GetRelatedEntity<Product>("product_contract_line_items", null);
        }
        set {
            SetRelatedEntity("product_contract_line_items", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_contractdetail")]
    public SystemUser user_contractdetail {
        get {
            return GetRelatedEntity<SystemUser>("user_contractdetail", null);
        }
        set {
            SetRelatedEntity("user_contractdetail", null, value);
        }
    }
    
    public static ContractDetail Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContractDetail,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Activity that is delivered using email protocols.</para>
/// <para>Display Name: Email</para>
/// </summary>
[EntityLogicalName("email")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Email : ExtendedEntity<EmailState, Email_StatusCode> {
    
    public const string EntityLogicalName = "email";
    
    public const int EntityTypeCode = 4202;
    
    public Email() : 
            base(EntityLogicalName) {
    }
    
    public Email(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the email activity.</para>
    /// <para>Display Name: Email Message</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Email Message")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>The Entity that Accepted the Email</para>
    /// <para>Display Name: Accepting Entity</para>
    /// </summary>
    [AttributeLogicalName("acceptingentityid")]
    [DisplayName("Accepting Entity")]
    public EntityReference AcceptingEntityId {
        get {
            return GetAttributeValue<EntityReference>("acceptingentityid");
        }
        set {
            SetAttributeValue("acceptingentityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type the number of minutes spent creating and sending the email. The duration is used in reporting.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the umber of attachments of the email message.</para>
    /// <para>Display Name: Attachment Count</para>
    /// </summary>
    [AttributeLogicalName("attachmentcount")]
    [DisplayName("Attachment Count")]
    [Range(0, 2147483647)]
    public int? AttachmentCount {
        get {
            return GetAttributeValue<int?>("attachmentcount");
        }
    }
    
    /// <summary>
    /// <para>Shows the number of times an email attachment has been viewed.</para>
    /// <para>Display Name: Attachment Open Count</para>
    /// </summary>
    [AttributeLogicalName("attachmentopencount")]
    [DisplayName("Attachment Open Count")]
    [Range(0, 2147483647)]
    public int? AttachmentOpenCount {
        get {
            return GetAttributeValue<int?>("attachmentopencount");
        }
        set {
            SetAttributeValue("attachmentopencount", value);
        }
    }
    
    /// <summary>
    /// <para>Hash of base of conversation index.</para>
    /// <para>Display Name: Conversation Index (Hash)</para>
    /// </summary>
    [AttributeLogicalName("baseconversationindexhash")]
    [DisplayName("Conversation Index (Hash)")]
    [Range(-2147483648, 2147483647)]
    public int? BaseConversationIndexHash {
        get {
            return GetAttributeValue<int?>("baseconversationindexhash");
        }
        set {
            SetAttributeValue("baseconversationindexhash", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the recipients that are included on the email distribution, but are not displayed to other recipients.</para>
    /// <para>Display Name: Bcc</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("Bcc")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the recipients that should be copied on the email.</para>
    /// <para>Display Name: Cc</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("Cc")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if the body is compressed.</para>
    /// <para>Display Name: Compression</para>
    /// </summary>
    [AttributeLogicalName("compressed")]
    [DisplayName("Compression")]
    public bool? Compressed {
        get {
            return GetAttributeValue<bool?>("compressed");
        }
    }
    
    /// <summary>
    /// <para>Identifier for all the email responses for this conversation.</para>
    /// <para>Display Name: Conversation Index</para>
    /// </summary>
    [AttributeLogicalName("conversationindex")]
    [DisplayName("Conversation Index")]
    [MaxLength(2048)]
    public string ConversationIndex {
        get {
            return GetAttributeValue<string>("conversationindex");
        }
    }
    
    /// <summary>
    /// <para>Conversation Tracking Id.</para>
    /// <para>Display Name: Conversation Tracking Id</para>
    /// </summary>
    [AttributeLogicalName("conversationtrackingid")]
    [DisplayName("Conversation Tracking Id")]
    public Guid? ConversationTrackingId {
        get {
            return GetAttributeValue<Guid?>("conversationtrackingid");
        }
        set {
            SetAttributeValue("conversationtrackingid", value);
        }
    }
    
    /// <summary>
    /// <para>Correlated Activity Id</para>
    /// <para>Display Name: Correlated Activity Id</para>
    /// </summary>
    [AttributeLogicalName("correlatedactivityid")]
    [DisplayName("Correlated Activity Id")]
    public EntityReference CorrelatedActivityId {
        get {
            return GetAttributeValue<EntityReference>("correlatedactivityid");
        }
        set {
            SetAttributeValue("correlatedactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how an email is matched to an existing email in Microsoft Dynamics 365. For system use only.</para>
    /// <para>Display Name: Correlation Method</para>
    /// </summary>
    [AttributeLogicalName("correlationmethod")]
    [DisplayName("Correlation Method")]
    public Email_CorrelationMethod? CorrelationMethod {
        get {
            return GetOptionSetValue<Email_CorrelationMethod>("correlationmethod");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected date and time when email will be sent.</para>
    /// <para>Display Name: Send Later</para>
    /// </summary>
    [AttributeLogicalName("delayedemailsendtime")]
    [DisplayName("Send Later")]
    public DateTime? DelayedEmailSendTime {
        get {
            return GetAttributeValue<DateTime?>("delayedemailsendtime");
        }
        set {
            SetAttributeValue("delayedemailsendtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.</para>
    /// <para>Display Name: No. of Delivery Attempts</para>
    /// </summary>
    [AttributeLogicalName("deliveryattempts")]
    [DisplayName("No. of Delivery Attempts")]
    [Range(0, 1000000000)]
    public int? DeliveryAttempts {
        get {
            return GetAttributeValue<int?>("deliveryattempts");
        }
        set {
            SetAttributeValue("deliveryattempts", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority of delivery of the email to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the sender should receive confirmation that the email was delivered.</para>
    /// <para>Display Name: Delivery Receipt Requested</para>
    /// </summary>
    [AttributeLogicalName("deliveryreceiptrequested")]
    [DisplayName("Delivery Receipt Requested")]
    public bool? DeliveryReceiptRequested {
        get {
            return GetAttributeValue<bool?>("deliveryreceiptrequested");
        }
        set {
            SetAttributeValue("deliveryreceiptrequested", value);
        }
    }
    
    /// <summary>
    /// <para>Type the greeting and message text of the email.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select the direction of the email as incoming or outbound.</para>
    /// <para>Display Name: Direction</para>
    /// </summary>
    [AttributeLogicalName("directioncode")]
    [DisplayName("Direction")]
    public bool? DirectionCode {
        get {
            return GetAttributeValue<bool?>("directioncode");
        }
        set {
            SetAttributeValue("directioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when an email reminder expires.</para>
    /// <para>Display Name: Email Reminder Expiry Time</para>
    /// </summary>
    [AttributeLogicalName("emailreminderexpirytime")]
    [DisplayName("Email Reminder Expiry Time")]
    public DateTime? EmailReminderExpiryTime {
        get {
            return GetAttributeValue<DateTime?>("emailreminderexpirytime");
        }
        set {
            SetAttributeValue("emailreminderexpirytime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the email reminder.</para>
    /// <para>Display Name: Email Reminder Status</para>
    /// </summary>
    [AttributeLogicalName("emailreminderstatus")]
    [DisplayName("Email Reminder Status")]
    public Email_EmailReminderStatus? EmailReminderStatus {
        get {
            return GetOptionSetValue<Email_EmailReminderStatus>("emailreminderstatus");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Email Reminder Text</para>
    /// </summary>
    [AttributeLogicalName("emailremindertext")]
    [DisplayName("Email Reminder Text")]
    [MaxLength(1250)]
    public string EmailReminderText {
        get {
            return GetAttributeValue<string>("emailremindertext");
        }
        set {
            SetAttributeValue("emailremindertext", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of the email reminder.</para>
    /// <para>Display Name: Email Reminder Type</para>
    /// </summary>
    [AttributeLogicalName("emailremindertype")]
    [DisplayName("Email Reminder Type")]
    public Email_EmailReminderType? EmailReminderType {
        get {
            return GetOptionSetValue<Email_EmailReminderType>("emailremindertype");
        }
        set {
            SetOptionSetValue("emailremindertype", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the sender of the email.</para>
    /// <para>Display Name: Sender</para>
    /// </summary>
    [AttributeLogicalName("emailsender")]
    [DisplayName("Sender")]
    public EntityReference EmailSender {
        get {
            return GetAttributeValue<EntityReference>("emailsender");
        }
    }
    
    /// <summary>
    /// <para>Email Tracking Id.</para>
    /// <para>Display Name: Email Tracking Id</para>
    /// </summary>
    [AttributeLogicalName("emailtrackingid")]
    [DisplayName("Email Tracking Id")]
    public Guid? EmailTrackingId {
        get {
            return GetAttributeValue<Guid?>("emailtrackingid");
        }
        set {
            SetAttributeValue("emailtrackingid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.</para>
    /// <para>Display Name: Following</para>
    /// </summary>
    [AttributeLogicalName("followemailuserpreference")]
    [DisplayName("Following")]
    public bool? FollowEmailUserPreference {
        get {
            return GetAttributeValue<bool?>("followemailuserpreference");
        }
        set {
            SetAttributeValue("followemailuserpreference", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the sender of the email.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ID of the email message that this email activity is a response to.</para>
    /// <para>Display Name: In Reply To Message</para>
    /// </summary>
    [AttributeLogicalName("inreplyto")]
    [DisplayName("In Reply To Message")]
    [MaxLength(320)]
    public string InReplyTo {
        get {
            return GetAttributeValue<string>("inreplyto");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the email activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.</para>
    /// <para>Display Name: Followed</para>
    /// </summary>
    [AttributeLogicalName("isemailfollowed")]
    [DisplayName("Followed")]
    public bool? IsEmailFollowed {
        get {
            return GetAttributeValue<bool?>("isemailfollowed");
        }
    }
    
    /// <summary>
    /// <para>For internal use only. Shows whether this email Reminder is Set.</para>
    /// <para>Display Name: Reminder Set</para>
    /// </summary>
    [AttributeLogicalName("isemailreminderset")]
    [DisplayName("Reminder Set")]
    public bool? IsEmailReminderSet {
        get {
            return GetAttributeValue<bool?>("isemailreminderset");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: IsUnsafe</para>
    /// </summary>
    [AttributeLogicalName("isunsafe")]
    [DisplayName("IsUnsafe")]
    [Range(0, 2147483647)]
    public int? IsUnsafe {
        get {
            return GetAttributeValue<int?>("isunsafe");
        }
    }
    
    /// <summary>
    /// <para>Indication if the email was created by a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the latest date and time when email was opened.</para>
    /// <para>Display Name: Last Opened Time</para>
    /// </summary>
    [AttributeLogicalName("lastopenedtime")]
    [DisplayName("Last Opened Time")]
    public DateTime? LastOpenedTime {
        get {
            return GetAttributeValue<DateTime?>("lastopenedtime");
        }
        set {
            SetAttributeValue("lastopenedtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the number of times a link in an email has been clicked.</para>
    /// <para>Display Name: Links Clicked Count</para>
    /// </summary>
    [AttributeLogicalName("linksclickedcount")]
    [DisplayName("Links Clicked Count")]
    [Range(0, 2147483647)]
    public int? LinksClickedCount {
        get {
            return GetAttributeValue<int?>("linksclickedcount");
        }
        set {
            SetAttributeValue("linksclickedcount", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the email message. Used only for email that is received.</para>
    /// <para>Display Name: Message ID</para>
    /// </summary>
    [AttributeLogicalName("messageid")]
    [DisplayName("Message ID")]
    [MaxLength(320)]
    public string MessageId {
        get {
            return GetAttributeValue<string>("messageid");
        }
        set {
            SetAttributeValue("messageid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Message ID Dup Check</para>
    /// </summary>
    [AttributeLogicalName("messageiddupcheck")]
    [DisplayName("Message ID Dup Check")]
    public Guid? MessageIdDupCheck {
        get {
            return GetAttributeValue<Guid?>("messageiddupcheck");
        }
        set {
            SetAttributeValue("messageiddupcheck", value);
        }
    }
    
    /// <summary>
    /// <para>MIME type of the email message data.</para>
    /// <para>Display Name: Mime Type</para>
    /// </summary>
    [AttributeLogicalName("mimetype")]
    [DisplayName("Mime Type")]
    [MaxLength(256)]
    public string MimeType {
        get {
            return GetAttributeValue<string>("mimetype");
        }
        set {
            SetAttributeValue("mimetype", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.</para>
    /// <para>Display Name: Notifications</para>
    /// </summary>
    [AttributeLogicalName("notifications")]
    [DisplayName("Notifications")]
    public Email_Notifications? Notifications {
        get {
            return GetOptionSetValue<Email_Notifications>("notifications");
        }
        set {
            SetOptionSetValue("notifications", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Shows the number of times an email has been opened.</para>
    /// <para>Display Name: Open Count</para>
    /// </summary>
    [AttributeLogicalName("opencount")]
    [DisplayName("Open Count")]
    [Range(0, 2147483647)]
    public int? OpenCount {
        get {
            return GetAttributeValue<int?>("opencount");
        }
        set {
            SetAttributeValue("opencount", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the email activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the email activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the email activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Select the activity that the email is associated with.</para>
    /// <para>Display Name: Parent Activity Id</para>
    /// </summary>
    [AttributeLogicalName("parentactivityid")]
    [DisplayName("Parent Activity Id")]
    public EntityReference ParentActivityId {
        get {
            return GetAttributeValue<EntityReference>("parentactivityid");
        }
        set {
            SetAttributeValue("parentactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay email processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeemailprocessinguntil")]
    [DisplayName("Delay email processing until")]
    public DateTime? PostponeEmailProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeemailprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Email_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Email_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates that a read receipt is requested.</para>
    /// <para>Display Name: Read Receipt Requested</para>
    /// </summary>
    [AttributeLogicalName("readreceiptrequested")]
    [DisplayName("Read Receipt Requested")]
    public bool? ReadReceiptRequested {
        get {
            return GetAttributeValue<bool?>("readreceiptrequested");
        }
        set {
            SetAttributeValue("readreceiptrequested", value);
        }
    }
    
    /// <summary>
    /// <para>The Mailbox that Received the Email.</para>
    /// <para>Display Name: Receiving Mailbox</para>
    /// </summary>
    [AttributeLogicalName("receivingmailboxid")]
    [DisplayName("Receiving Mailbox")]
    public EntityReference ReceivingMailboxId {
        get {
            return GetAttributeValue<EntityReference>("receivingmailboxid");
        }
        set {
            SetAttributeValue("receivingmailboxid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the email relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Reminder Action Card Id.</para>
    /// <para>Display Name: Reminder Action Card Id.</para>
    /// </summary>
    [AttributeLogicalName("reminderactioncardid")]
    [DisplayName("Reminder Action Card Id.")]
    public Guid? ReminderActionCardId {
        get {
            return GetAttributeValue<Guid?>("reminderactioncardid");
        }
        set {
            SetAttributeValue("reminderactioncardid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the number of replies received for an email.</para>
    /// <para>Display Name: Reply Count</para>
    /// </summary>
    [AttributeLogicalName("replycount")]
    [DisplayName("Reply Count")]
    [Range(0, 2147483647)]
    public int? ReplyCount {
        get {
            return GetAttributeValue<int?>("replycount");
        }
    }
    
    /// <summary>
    /// <para>For internal use only</para>
    /// <para>Display Name: Reserved for internal use</para>
    /// </summary>
    [AttributeLogicalName("reservedforinternaluse")]
    [DisplayName("Reserved for internal use")]
    public string ReservedForInternalUse {
        get {
            return GetAttributeValue<string>("reservedforinternaluse");
        }
        set {
            SetAttributeValue("reservedforinternaluse", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the email record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the email activity, specified in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due Date")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Sender of the email.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("sender")]
    [DisplayName("From")]
    [MaxLength(250)]
    public string Sender {
        get {
            return GetAttributeValue<string>("sender");
        }
        set {
            SetAttributeValue("sender", value);
        }
    }
    
    /// <summary>
    /// <para>Select the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Shows the parent account of the sender of the email.</para>
    /// <para>Display Name: Senders Account</para>
    /// </summary>
    [AttributeLogicalName("sendersaccount")]
    [DisplayName("Senders Account")]
    public EntityReference SendersAccount {
        get {
            return GetAttributeValue<EntityReference>("sendersaccount");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the email was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public EmailState? StateCode {
        get {
            return GetOptionSetValue<EmailState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the email's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Email_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Email_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the email.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(800)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.</para>
    /// <para>Display Name: Submitted By</para>
    /// </summary>
    [AttributeLogicalName("submittedby")]
    [DisplayName("Submitted By")]
    [MaxLength(250)]
    public string SubmittedBy {
        get {
            return GetAttributeValue<string>("submittedby");
        }
        set {
            SetAttributeValue("submittedby", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only. ID for template used in email.</para>
    /// <para>Display Name: ID for template used.</para>
    /// </summary>
    [AttributeLogicalName("templateid")]
    [DisplayName("ID for template used.")]
    public EntityReference TemplateId {
        get {
            return GetAttributeValue<EntityReference>("templateid");
        }
        set {
            SetAttributeValue("templateid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, queue, or user recipients for the email.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the email addresses corresponding to the recipients.</para>
    /// <para>Display Name: To Recipients</para>
    /// </summary>
    [AttributeLogicalName("torecipients")]
    [DisplayName("To Recipients")]
    [MaxLength(500)]
    public string ToRecipients {
        get {
            return GetAttributeValue<string>("torecipients");
        }
        set {
            SetAttributeValue("torecipients", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.</para>
    /// <para>Display Name: Tracking Token</para>
    /// </summary>
    [AttributeLogicalName("trackingtoken")]
    [DisplayName("Tracking Token")]
    [MaxLength(50)]
    public string TrackingToken {
        get {
            return GetAttributeValue<string>("trackingtoken");
        }
        set {
            SetAttributeValue("trackingtoken", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the email message.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Account_Email_EmailSender")]
    public Account Account_Email_EmailSender {
        get {
            return GetRelatedEntity<Account>("Account_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Account_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("sendersaccount")]
    [RelationshipSchemaName("Account_Email_SendersAccount")]
    public Account Account_Email_SendersAccount {
        get {
            return GetRelatedEntity<Account>("Account_Email_SendersAccount", null);
        }
        set {
            SetRelatedEntity("Account_Email_SendersAccount", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Emails")]
    public Account Account_Emails {
        get {
            return GetRelatedEntity<Account>("Account_Emails", null);
        }
        set {
            SetRelatedEntity("Account_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_Emails")]
    public CampaignActivity CampaignActivity_Emails {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_Emails", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_Emails")]
    public Campaign Campaign_Emails {
        get {
            return GetRelatedEntity<Campaign>("Campaign_Emails", null);
        }
        set {
            SetRelatedEntity("Campaign_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Contact_Email_EmailSender")]
    public Contact Contact_Email_EmailSender {
        get {
            return GetRelatedEntity<Contact>("Contact_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Contact_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Emails")]
    public Contact Contact_Emails {
        get {
            return GetRelatedEntity<Contact>("Contact_Emails", null);
        }
        set {
            SetRelatedEntity("Contact_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_Emails")]
    public Contract Contract_Emails {
        get {
            return GetRelatedEntity<Contract>("Contract_Emails", null);
        }
        set {
            SetRelatedEntity("Contract_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Email_ProcessSessions")]
    public IEnumerable<ProcessSession> Email_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Email_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Email_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Email_SyncErrors")]
    public IEnumerable<SyncError> Email_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Email_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Email_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Emails")]
    public Incident Incident_Emails {
        get {
            return GetRelatedEntity<Incident>("Incident_Emails", null);
        }
        set {
            SetRelatedEntity("Incident_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Emails")]
    public Invoice Invoice_Emails {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Emails", null);
        }
        set {
            SetRelatedEntity("Invoice_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Lead_Email_EmailSender")]
    public Lead Lead_Email_EmailSender {
        get {
            return GetRelatedEntity<Lead>("Lead_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Lead_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_Emails")]
    public Lead Lead_Emails {
        get {
            return GetRelatedEntity<Lead>("Lead_Emails", null);
        }
        set {
            SetRelatedEntity("Lead_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_Emails")]
    public Opportunity Opportunity_Emails {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_Emails", null);
        }
        set {
            SetRelatedEntity("Opportunity_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Queue_Email_EmailSender")]
    public Queue Queue_Email_EmailSender {
        get {
            return GetRelatedEntity<Queue>("Queue_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Queue_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Emails")]
    public Quote Quote_Emails {
        get {
            return GetRelatedEntity<Quote>("Quote_Emails", null);
        }
        set {
            SetRelatedEntity("Quote_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referenced)]
    public IEnumerable<Email> Referencedemail_email_CorrelatedActivityId {
        get {
            return GetRelatedEntities<Email>("email_email_CorrelatedActivityId", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("email_email_CorrelatedActivityId", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referenced)]
    public IEnumerable<Email> Referencedemail_email_parentactivityid {
        get {
            return GetRelatedEntities<Email>("email_email_parentactivityid", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("email_email_parentactivityid", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("correlatedactivityid")]
    [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referencing)]
    public Email Referencingemail_email_CorrelatedActivityId {
        get {
            return GetRelatedEntity<Email>("email_email_CorrelatedActivityId", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("email_email_CorrelatedActivityId", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentactivityid")]
    [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referencing)]
    public Email Referencingemail_email_parentactivityid {
        get {
            return GetRelatedEntity<Email>("email_email_parentactivityid", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("email_email_parentactivityid", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Emails")]
    public SalesOrder SalesOrder_Emails {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Emails", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("SystemUser_Email_EmailSender")]
    public SystemUser SystemUser_Email_EmailSender {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("SystemUser_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_email")]
    public ActivityPointer activity_pointer_email {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_email", null);
        }
        set {
            SetRelatedEntity("activity_pointer_email", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_Emails")]
    public BookableResourceBooking bookableresourcebooking_Emails {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Emails", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("acceptingentityid")]
    [RelationshipSchemaName("email_acceptingentity_queue")]
    public Queue email_acceptingentity_queue {
        get {
            return GetRelatedEntity<Queue>("email_acceptingentity_queue", null);
        }
        set {
            SetRelatedEntity("email_acceptingentity_queue", null, value);
        }
    }
    
    [AttributeLogicalName("acceptingentityid")]
    [RelationshipSchemaName("email_acceptingentity_systemuser")]
    public SystemUser email_acceptingentity_systemuser {
        get {
            return GetRelatedEntity<SystemUser>("email_acceptingentity_systemuser", null);
        }
        set {
            SetRelatedEntity("email_acceptingentity_systemuser", null, value);
        }
    }
    
    [RelationshipSchemaName("email_activity_parties")]
    public IEnumerable<ActivityParty> email_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("email_activity_parties", null);
        }
        set {
            SetRelatedEntities("email_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("email_campaignresponse")]
    public IEnumerable<CampaignResponse> email_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("email_campaignresponse", null);
        }
        set {
            SetRelatedEntities("email_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_Emails")]
    public Entitlement entitlement_Emails {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_Emails", null);
        }
        set {
            SetRelatedEntity("entitlement_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_Emails")]
    public EntitlementTemplate entitlementtemplate_Emails {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_Emails", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_email_createdby")]
    public SystemUser lk_email_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_createdby", null);
        }
        set {
            SetRelatedEntity("lk_email_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_email_createdonbehalfby")]
    public SystemUser lk_email_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_email_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_email_modifiedby")]
    public SystemUser lk_email_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_email_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
    public SystemUser lk_email_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_email_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_Emails")]
    public msdyn_agreement msdyn_agreement_Emails {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Emails")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_Emails {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_Emails")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_Emails {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Emails")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_Emails {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_Emails")]
    public msdyn_customerasset msdyn_customerasset_Emails {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Emails")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_Emails {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_Emails")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_Emails {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_Emails")]
    public msdyn_purchaseorder msdyn_purchaseorder_Emails {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Emails")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_Emails {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_Emails")]
    public msdyn_rma msdyn_rma_Emails {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_Emails")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_Emails {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_Emails")]
    public msdyn_workorder msdyn_workorder_Emails {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_Emails")]
    public msdyn_workorderincident msdyn_workorderincident_Emails {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_Emails")]
    public msdyn_workorderproduct msdyn_workorderproduct_Emails {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_Emails")]
    public msdyn_workorderservice msdyn_workorderservice_Emails {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_Emails")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_Emails {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_Emails", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_Emails")]
    public ppp_Traveller ppp_traveller_Emails {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_Emails", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_Emails")]
    public ts_request ts_request_Emails {
        get {
            return GetRelatedEntity<ts_request>("ts_request_Emails", null);
        }
        set {
            SetRelatedEntity("ts_request_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_email")]
    public SystemUser user_email {
        get {
            return GetRelatedEntity<SystemUser>("user_email", null);
        }
        set {
            SetRelatedEntity("user_email", null, value);
        }
    }
    
    public static Email Retrieve(IOrganizationService service, Guid id, params Expression<Func<Email,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Defines the amount and type of support a customer should receive.</para>
/// <para>Display Name: Entitlement</para>
/// </summary>
[EntityLogicalName("entitlement")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Entitlement : ExtendedEntity<EntitlementState, Entitlement_StatusCode> {
    
    public const string EntityLogicalName = "entitlement";
    
    public const int EntityTypeCode = 9700;
    
    public Entitlement() : 
            base(EntityLogicalName) {
    }
    
    public Entitlement(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("entitlementid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("entitlementid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [AttributeLogicalName("entitlementid")]
    [DisplayName("Entitlement")]
    public Guid? EntitlementId {
        get {
            return GetAttributeValue<Guid?>("entitlementid");
        }
        set {
            SetId("entitlementid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Account associated with Entitlement.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Select the type of entitlement terms.</para>
    /// <para>Display Name: Allocation Type</para>
    /// </summary>
    [AttributeLogicalName("allocationtypecode")]
    [DisplayName("Allocation Type")]
    public Entitlement_AllocationTypeCode? AllocationTypeCode {
        get {
            return GetOptionSetValue<Entitlement_AllocationTypeCode>("allocationtypecode");
        }
        set {
            SetOptionSetValue("allocationtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Contact associated with Entitlement.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the entitlement.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Choose a contact or account for which this entitlement has been defined.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether to decrease the remaining terms when the case is created or when it is resolved.</para>
    /// <para>Display Name: Decrease Remaining On</para>
    /// </summary>
    [AttributeLogicalName("decreaseremainingon")]
    [DisplayName("Decrease Remaining On")]
    public Entitlement_DecreaseRemainingOn? DecreaseRemainingOn {
        get {
            return GetOptionSetValue<Entitlement_DecreaseRemainingOn>("decreaseremainingon");
        }
        set {
            SetOptionSetValue("decreaseremainingon", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the Entitlement</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the entitlement ends.</para>
    /// <para>Display Name: End Date</para>
    /// </summary>
    [AttributeLogicalName("enddate")]
    [DisplayName("End Date")]
    public DateTime? EndDate {
        get {
            return GetAttributeValue<DateTime?>("enddate");
        }
        set {
            SetAttributeValue("enddate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Entitlement Template associated with Entitlement.</para>
    /// <para>Display Name: Entitlement Template</para>
    /// </summary>
    [AttributeLogicalName("entitlementtemplateid")]
    [DisplayName("Entitlement Template")]
    public EntityReference EntitlementTemplateId {
        get {
            return GetAttributeValue<EntityReference>("entitlementtemplateid");
        }
        set {
            SetAttributeValue("entitlementtemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the contact with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether this entitlement is the default one for the specified customer.</para>
    /// <para>Display Name: Is Default</para>
    /// </summary>
    [AttributeLogicalName("isdefault")]
    [DisplayName("Is Default")]
    public bool? IsDefault {
        get {
            return GetAttributeValue<bool?>("isdefault");
        }
        set {
            SetAttributeValue("isdefault", value);
        }
    }
    
    /// <summary>
    /// <para>Select the access someone will have to the knowledge base on the portal.</para>
    /// <para>Display Name: KB Access Level</para>
    /// </summary>
    [AttributeLogicalName("kbaccesslevel")]
    [DisplayName("KB Access Level")]
    public Entitlement_KbAccessLevel? KbAccessLevel {
        get {
            return GetOptionSetValue<Entitlement_KbAccessLevel>("kbaccesslevel");
        }
        set {
            SetOptionSetValue("kbaccesslevel", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a meaningful name for the entitlement.</para>
    /// <para>Display Name: Entitlement Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Entitlement Name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the total number of entitlement terms that are left.</para>
    /// <para>Display Name: Remaining Terms</para>
    /// </summary>
    [AttributeLogicalName("remainingterms")]
    [DisplayName("Remaining Terms")]
    public decimal? RemainingTerms {
        get {
            return GetAttributeValue<decimal?>("remainingterms");
        }
        set {
            SetAttributeValue("remainingterms", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether case creation is restricted based on entitlement terms.</para>
    /// <para>Display Name: Restrict based on entitlement terms</para>
    /// </summary>
    [AttributeLogicalName("restrictcasecreation")]
    [DisplayName("Restrict based on entitlement terms")]
    public bool? RestrictCaseCreation {
        get {
            return GetAttributeValue<bool?>("restrictcasecreation");
        }
        set {
            SetAttributeValue("restrictcasecreation", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) associated with the entitlement.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the entitlement starts.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("startdate")]
    [DisplayName("Start Date")]
    public DateTime? StartDate {
        get {
            return GetAttributeValue<DateTime?>("startdate");
        }
        set {
            SetAttributeValue("startdate", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public EntitlementState? StateCode {
        get {
            return GetOptionSetValue<EntitlementState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the reason code that explains the status of the entitlement.</para>
    /// <para>Display Name: Status Code</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Code")]
    public Entitlement_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Entitlement_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type the total number of entitlement terms.</para>
    /// <para>Display Name: Total Terms</para>
    /// </summary>
    [AttributeLogicalName("totalterms")]
    [DisplayName("Total Terms")]
    public decimal? TotalTerms {
        get {
            return GetAttributeValue<decimal?>("totalterms");
        }
        set {
            SetAttributeValue("totalterms", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the contact.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Entity type for which the entitlement applies</para>
    /// <para>Display Name: Entity Type</para>
    /// </summary>
    [AttributeLogicalName("entitytype")]
    [DisplayName("Entity Type")]
    public entitytype? entitytype {
        get {
            return GetOptionSetValue<entitytype>("entitytype");
        }
        set {
            SetOptionSetValue("entitytype", value);
        }
    }
    
    /// <summary>
    /// <para>The work order entities to which the entitlement is applicable.</para>
    /// <para>Display Name: Applies To</para>
    /// </summary>
    [AttributeLogicalName("msdyn_appliesto")]
    [DisplayName("Applies To")]
    public msdyn_entitlementappliesto? msdyn_AppliesTo {
        get {
            return GetOptionSetValue<msdyn_entitlementappliesto>("msdyn_appliesto");
        }
        set {
            SetOptionSetValue("msdyn_appliesto", value);
        }
    }
    
    /// <summary>
    /// <para>The priority level when considering which eligible entitlement to apply, where the lower the number the higher the priority.</para>
    /// <para>Display Name: Entitlement Prioritization</para>
    /// </summary>
    [AttributeLogicalName("msdyn_entitlementprioritization")]
    [DisplayName("Entitlement Prioritization")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_EntitlementPrioritization {
        get {
            return GetAttributeValue<int?>("msdyn_entitlementprioritization");
        }
        set {
            SetAttributeValue("msdyn_entitlementprioritization", value);
        }
    }
    
    /// <summary>
    /// <para>The percent discount the entitlement applies to the work order.</para>
    /// <para>Display Name: % Discount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_percentdiscount")]
    [DisplayName("% Discount")]
    public double? msdyn_PercentDiscount {
        get {
            return GetAttributeValue<double?>("msdyn_percentdiscount");
        }
        set {
            SetAttributeValue("msdyn_percentdiscount", value);
        }
    }
    
    /// <summary>
    /// <para>The price list that the entitlement applies to the work order.</para>
    /// <para>Display Name: Price List To Apply</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelisttoapply")]
    [DisplayName("Price List To Apply")]
    public EntityReference msdyn_PriceListToApply {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelisttoapply");
        }
        set {
            SetAttributeValue("msdyn_pricelisttoapply", value);
        }
    }
    
    [RelationshipSchemaName("Entitlement_SyncErrors")]
    public IEnumerable<SyncError> Entitlement_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Entitlement_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Entitlement_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("accountid")]
    [RelationshipSchemaName("account_entitlement_Account")]
    public Account account_entitlement_Account {
        get {
            return GetRelatedEntity<Account>("account_entitlement_Account", null);
        }
        set {
            SetRelatedEntity("account_entitlement_Account", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("account_entitlement_Customer")]
    public Account account_entitlement_Customer {
        get {
            return GetRelatedEntity<Account>("account_entitlement_Customer", null);
        }
        set {
            SetRelatedEntity("account_entitlement_Customer", null, value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    [RelationshipSchemaName("contact_entitlement_ContactId")]
    public Contact contact_entitlement_ContactId {
        get {
            return GetRelatedEntity<Contact>("contact_entitlement_ContactId", null);
        }
        set {
            SetRelatedEntity("contact_entitlement_ContactId", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("contact_entitlement_Customer")]
    public Contact contact_entitlement_Customer {
        get {
            return GetRelatedEntity<Contact>("contact_entitlement_Customer", null);
        }
        set {
            SetRelatedEntity("contact_entitlement_Customer", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_ActivityParties")]
    public IEnumerable<ActivityParty> entitlement_ActivityParties {
        get {
            return GetRelatedEntities<ActivityParty>("entitlement_ActivityParties", null);
        }
        set {
            SetRelatedEntities("entitlement_ActivityParties", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_ActivityPointers")]
    public IEnumerable<ActivityPointer> entitlement_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("entitlement_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("entitlement_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_Appointments")]
    public IEnumerable<Appointment> entitlement_Appointments {
        get {
            return GetRelatedEntities<Appointment>("entitlement_Appointments", null);
        }
        set {
            SetRelatedEntities("entitlement_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_Emails")]
    public IEnumerable<Email> entitlement_Emails {
        get {
            return GetRelatedEntities<Email>("entitlement_Emails", null);
        }
        set {
            SetRelatedEntities("entitlement_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_PhoneCalls")]
    public IEnumerable<PhoneCall> entitlement_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("entitlement_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("entitlement_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_ProcessSession")]
    public IEnumerable<ProcessSession> entitlement_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("entitlement_ProcessSession", null);
        }
        set {
            SetRelatedEntities("entitlement_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> entitlement_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("entitlement_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("entitlement_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> entitlement_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("entitlement_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("entitlement_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_Tasks")]
    public IEnumerable<Task> entitlement_Tasks {
        get {
            return GetRelatedEntities<Task>("entitlement_Tasks", null);
        }
        set {
            SetRelatedEntities("entitlement_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_cases")]
    public IEnumerable<Incident> entitlement_cases {
        get {
            return GetRelatedEntities<Incident>("entitlement_cases", null);
        }
        set {
            SetRelatedEntities("entitlement_cases", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> entitlement_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("entitlement_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("entitlement_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlement_msfp_alerts")]
    public IEnumerable<msfp_alert> entitlement_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("entitlement_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("entitlement_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementcontacts_association")]
    public IEnumerable<Contact> entitlementcontacts_association {
        get {
            return GetRelatedEntities<Contact>("entitlementcontacts_association", null);
        }
        set {
            SetRelatedEntities("entitlementcontacts_association", null, value);
        }
    }
    
    [AttributeLogicalName("entitlementtemplateid")]
    [RelationshipSchemaName("entitlementtemplateid_RelationShip")]
    public EntitlementTemplate entitlementtemplateid_RelationShip {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplateid_RelationShip", null);
        }
        set {
            SetRelatedEntity("entitlementtemplateid_RelationShip", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_entitlement_createdby")]
    public SystemUser lk_entitlement_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlement_createdby", null);
        }
        set {
            SetRelatedEntity("lk_entitlement_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
    public SystemUser lk_entitlement_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlement_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_entitlement_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_entitlement_modifiedby")]
    public SystemUser lk_entitlement_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_entitlement_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
    public SystemUser lk_entitlement_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_entitlement_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_entitlement_msdyn_workorderproduct_Entitlement")]
    public IEnumerable<msdyn_workorderproduct> msdyn_entitlement_msdyn_workorderproduct_Entitlement {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_entitlement_msdyn_workorderproduct_Entitlement", null);
        }
        set {
            SetRelatedEntities("msdyn_entitlement_msdyn_workorderproduct_Entitlement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_entitlement_msdyn_workorderservice_entitlement")]
    public IEnumerable<msdyn_workorderservice> msdyn_entitlement_msdyn_workorderservice_entitlement {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_entitlement_msdyn_workorderservice_entitlement", null);
        }
        set {
            SetRelatedEntities("msdyn_entitlement_msdyn_workorderservice_entitlement", null, value);
        }
    }
    
    [RelationshipSchemaName("product_entitlement_association")]
    public IEnumerable<Product> product_entitlement_association {
        get {
            return GetRelatedEntities<Product>("product_entitlement_association", null);
        }
        set {
            SetRelatedEntities("product_entitlement_association", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_entitlement")]
    public SystemUser user_entitlement {
        get {
            return GetRelatedEntity<SystemUser>("user_entitlement", null);
        }
        set {
            SetRelatedEntity("user_entitlement", null, value);
        }
    }
    
    public static Entitlement Retrieve(IOrganizationService service, Guid id, params Expression<Func<Entitlement,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Entitlement Contact</para>
/// </summary>
[EntityLogicalName("entitlementcontacts")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EntitlementContacts : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "entitlementcontacts";
    
    public const int EntityTypeCode = 7272;
    
    public EntitlementContacts() : 
            base(EntityLogicalName) {
    }
    
    public EntitlementContacts(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("entitlementcontactid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("entitlementcontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contacts for the entitlements.</para>
    /// </summary>
    [AttributeLogicalName("entitlementcontactid")]
    public Guid? EntitlementContactId {
        get {
            return GetAttributeValue<Guid?>("entitlementcontactid");
        }
        set {
            SetId("entitlementcontactid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    [AttributeLogicalName("entitlementid")]
    public Guid? EntitlementId {
        get {
            return GetAttributeValue<Guid?>("entitlementid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static EntitlementContacts Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementContacts,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Entitlement Product</para>
/// </summary>
[EntityLogicalName("entitlementproducts")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EntitlementProducts : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "entitlementproducts";
    
    public const int EntityTypeCode = 6363;
    
    public EntitlementProducts() : 
            base(EntityLogicalName) {
    }
    
    public EntitlementProducts(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("entitlementproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("entitlementproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contacts for the entitlements.</para>
    /// </summary>
    [AttributeLogicalName("entitlementproductid")]
    public Guid? EntitlementProductId {
        get {
            return GetAttributeValue<Guid?>("entitlementproductid");
        }
        set {
            SetId("entitlementproductid", value);
        }
    }
    
    [AttributeLogicalName("entitlementid")]
    public Guid? EntitlementId {
        get {
            return GetAttributeValue<Guid?>("entitlementid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("productid")]
    public Guid? ProductId {
        get {
            return GetAttributeValue<Guid?>("productid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static EntitlementProducts Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementProducts,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Contains predefined customer support terms that can be used to created entitlements for customers.</para>
/// <para>Display Name: Entitlement Template</para>
/// </summary>
[EntityLogicalName("entitlementtemplate")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EntitlementTemplate : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "entitlementtemplate";
    
    public const int EntityTypeCode = 9702;
    
    public EntitlementTemplate() : 
            base(EntityLogicalName) {
    }
    
    public EntitlementTemplate(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("entitlementtemplateid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("entitlementtemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Entitlement Template</para>
    /// </summary>
    [AttributeLogicalName("entitlementtemplateid")]
    [DisplayName("Entitlement Template")]
    public Guid? EntitlementTemplateId {
        get {
            return GetAttributeValue<Guid?>("entitlementtemplateid");
        }
        set {
            SetId("entitlementtemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the entitlement allocation is based on number of cases or number of hours.</para>
    /// <para>Display Name: Allocation Type</para>
    /// </summary>
    [AttributeLogicalName("allocationtypecode")]
    [DisplayName("Allocation Type")]
    public EntitlementTemplate_AllocationTypeCode? AllocationTypeCode {
        get {
            return GetOptionSetValue<EntitlementTemplate_AllocationTypeCode>("allocationtypecode");
        }
        set {
            SetOptionSetValue("allocationtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Information about whether to decrease the remaining terms when the case is created or when it is resolved</para>
    /// <para>Display Name: Decrease Remaining On</para>
    /// </summary>
    [AttributeLogicalName("decreaseremainingon")]
    [DisplayName("Decrease Remaining On")]
    public EntitlementTemplate_DecreaseRemainingOn? DecreaseRemainingOn {
        get {
            return GetOptionSetValue<EntitlementTemplate_DecreaseRemainingOn>("decreaseremainingon");
        }
        set {
            SetOptionSetValue("decreaseremainingon", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the entitlement ends.</para>
    /// <para>Display Name: End Date</para>
    /// </summary>
    [AttributeLogicalName("enddate")]
    [DisplayName("End Date")]
    public DateTime? EndDate {
        get {
            return GetAttributeValue<DateTime?>("enddate");
        }
        set {
            SetAttributeValue("enddate", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the contact with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the access someone will have to the knowledge base on the portal.</para>
    /// <para>Display Name: KB Access Level</para>
    /// </summary>
    [AttributeLogicalName("kbaccesslevel")]
    [DisplayName("KB Access Level")]
    public EntitlementTemplate_KbAccessLevel? KbAccessLevel {
        get {
            return GetOptionSetValue<EntitlementTemplate_KbAccessLevel>("kbaccesslevel");
        }
        set {
            SetOptionSetValue("kbaccesslevel", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the entitlement template.</para>
    /// <para>Display Name: Entitlement Template Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Entitlement Template Name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether case creation is restricted based on entitlement terms.</para>
    /// <para>Display Name: Restrict By Entitlement Terms</para>
    /// </summary>
    [AttributeLogicalName("restrictcasecreation")]
    [DisplayName("Restrict By Entitlement Terms")]
    public bool? RestrictCaseCreation {
        get {
            return GetAttributeValue<bool?>("restrictcasecreation");
        }
        set {
            SetAttributeValue("restrictcasecreation", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) associated with the entitlement.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the entitlement begins.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("startdate")]
    [DisplayName("Start Date")]
    public DateTime? StartDate {
        get {
            return GetAttributeValue<DateTime?>("startdate");
        }
        set {
            SetAttributeValue("startdate", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type the total number of entitlement terms.</para>
    /// <para>Display Name: Total Terms</para>
    /// </summary>
    [AttributeLogicalName("totalterms")]
    [DisplayName("Total Terms")]
    public decimal? TotalTerms {
        get {
            return GetAttributeValue<decimal?>("totalterms");
        }
        set {
            SetAttributeValue("totalterms", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the contact.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Entity type for which the entitlement template applies</para>
    /// <para>Display Name: Entity Type</para>
    /// </summary>
    [AttributeLogicalName("entitytype")]
    [DisplayName("Entity Type")]
    public entitytype? entitytype {
        get {
            return GetOptionSetValue<entitytype>("entitytype");
        }
        set {
            SetOptionSetValue("entitytype", value);
        }
    }
    
    [RelationshipSchemaName("EntitlementTemplate_SyncErrors")]
    public IEnumerable<SyncError> EntitlementTemplate_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("EntitlementTemplate_SyncErrors", null);
        }
        set {
            SetRelatedEntities("EntitlementTemplate_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_ActivityPointers")]
    public IEnumerable<ActivityPointer> entitlementtemplate_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("entitlementtemplate_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_Appointments")]
    public IEnumerable<Appointment> entitlementtemplate_Appointments {
        get {
            return GetRelatedEntities<Appointment>("entitlementtemplate_Appointments", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_Emails")]
    public IEnumerable<Email> entitlementtemplate_Emails {
        get {
            return GetRelatedEntities<Email>("entitlementtemplate_Emails", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_PhoneCalls")]
    public IEnumerable<PhoneCall> entitlementtemplate_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("entitlementtemplate_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_ProcessSession")]
    public IEnumerable<ProcessSession> entitlementtemplate_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("entitlementtemplate_ProcessSession", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> entitlementtemplate_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("entitlementtemplate_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> entitlementtemplate_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("entitlementtemplate_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_Tasks")]
    public IEnumerable<Task> entitlementtemplate_Tasks {
        get {
            return GetRelatedEntities<Task>("entitlementtemplate_Tasks", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> entitlementtemplate_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("entitlementtemplate_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplate_msfp_alerts")]
    public IEnumerable<msfp_alert> entitlementtemplate_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("entitlementtemplate_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("entitlementtemplate_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("entitlementtemplateid_RelationShip")]
    public IEnumerable<Entitlement> entitlementtemplateid_RelationShip {
        get {
            return GetRelatedEntities<Entitlement>("entitlementtemplateid_RelationShip", null);
        }
        set {
            SetRelatedEntities("entitlementtemplateid_RelationShip", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_entitlementtemplate_createdby")]
    public SystemUser lk_entitlementtemplate_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlementtemplate_createdby", null);
        }
        set {
            SetRelatedEntity("lk_entitlementtemplate_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_entitlementtemplate_createdonbehalfby")]
    public SystemUser lk_entitlementtemplate_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlementtemplate_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_entitlementtemplate_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_entitlementtemplate_modifiedby")]
    public SystemUser lk_entitlementtemplate_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlementtemplate_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_entitlementtemplate_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_entitlementtemplate_modifiedonbehalfby")]
    public SystemUser lk_entitlementtemplate_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_entitlementtemplate_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_entitlementtemplate_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("product_entitlementtemplate_association")]
    public IEnumerable<Product> product_entitlementtemplate_association {
        get {
            return GetRelatedEntities<Product>("product_entitlementtemplate_association", null);
        }
        set {
            SetRelatedEntities("product_entitlementtemplate_association", null, value);
        }
    }
    
    public static EntitlementTemplate Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementTemplate,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Entitlement Template Product</para>
/// </summary>
[EntityLogicalName("entitlementtemplateproducts")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EntitlementTemplateProducts : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "entitlementtemplateproducts";
    
    public const int EntityTypeCode = 4545;
    
    public EntitlementTemplateProducts() : 
            base(EntityLogicalName) {
    }
    
    public EntitlementTemplateProducts(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("entitlementtemplateproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("entitlementtemplateproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contacts for the EntitlementTemplates.</para>
    /// </summary>
    [AttributeLogicalName("entitlementtemplateproductid")]
    public Guid? EntitlementTemplateProductId {
        get {
            return GetAttributeValue<Guid?>("entitlementtemplateproductid");
        }
        set {
            SetId("entitlementtemplateproductid", value);
        }
    }
    
    [AttributeLogicalName("entitlementtemplateid")]
    public Guid? EntitlementTemplateId {
        get {
            return GetAttributeValue<Guid?>("entitlementtemplateid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("productid")]
    public Guid? ProductId {
        get {
            return GetAttributeValue<Guid?>("productid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static EntitlementTemplateProducts Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementTemplateProducts,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Service request case associated with a contract.</para>
/// <para>Display Name: Case</para>
/// </summary>
[EntityLogicalName("incident")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Incident : ExtendedEntity<IncidentState, Incident_StatusCode> {
    
    public const string EntityLogicalName = "incident";
    
    public const int EntityTypeCode = 112;
    
    public Incident() : 
            base(EntityLogicalName) {
    }
    
    public Incident(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("title");
        }
    }
    
    [AttributeLogicalName("incidentid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the case.</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [AttributeLogicalName("incidentid")]
    [DisplayName("Case")]
    public Guid? IncidentId {
        get {
            return GetAttributeValue<Guid?>("incidentid");
        }
        set {
            SetId("incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the case is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>This attribute is used for Sample Service Business Processes.</para>
    /// <para>Display Name: Activities Complete</para>
    /// </summary>
    [AttributeLogicalName("activitiescomplete")]
    [DisplayName("Activities Complete")]
    public bool? ActivitiesComplete {
        get {
            return GetAttributeValue<bool?>("activitiescomplete");
        }
        set {
            SetAttributeValue("activitiescomplete", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of service units that were actually required to resolve the case.</para>
    /// <para>Display Name: Actual Service Units</para>
    /// </summary>
    [AttributeLogicalName("actualserviceunits")]
    [DisplayName("Actual Service Units")]
    [Range(0, 1000000000)]
    public int? ActualServiceUnits {
        get {
            return GetAttributeValue<int?>("actualserviceunits");
        }
        set {
            SetAttributeValue("actualserviceunits", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of service units that were billed to the customer for the case.</para>
    /// <para>Display Name: Billed Service Units</para>
    /// </summary>
    [AttributeLogicalName("billedserviceunits")]
    [DisplayName("Billed Service Units")]
    [Range(0, 1000000000)]
    public int? BilledServiceUnits {
        get {
            return GetAttributeValue<int?>("billedserviceunits");
        }
        set {
            SetAttributeValue("billedserviceunits", value);
        }
    }
    
    /// <summary>
    /// <para>Details whether the profile is blocked or not.</para>
    /// <para>Display Name: Blocked Profile</para>
    /// </summary>
    [AttributeLogicalName("blockedprofile")]
    [DisplayName("Blocked Profile")]
    public bool? BlockedProfile {
        get {
            return GetAttributeValue<bool?>("blockedprofile");
        }
        set {
            SetAttributeValue("blockedprofile", value);
        }
    }
    
    /// <summary>
    /// <para>Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.</para>
    /// <para>Display Name: Origin</para>
    /// </summary>
    [AttributeLogicalName("caseorigincode")]
    [DisplayName("Origin")]
    public incident_caseorigincode? CaseOriginCode {
        get {
            return GetOptionSetValue<incident_caseorigincode>("caseorigincode");
        }
        set {
            SetOptionSetValue("caseorigincode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of case to identify the incident for use in case routing and analysis.</para>
    /// <para>Display Name: Case Type</para>
    /// </summary>
    [AttributeLogicalName("casetypecode")]
    [DisplayName("Case Type")]
    public Incident_CaseTypeCode? CaseTypeCode {
        get {
            return GetOptionSetValue<Incident_CaseTypeCode>("casetypecode");
        }
        set {
            SetOptionSetValue("casetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is used for Sample Service Business Processes.</para>
    /// <para>Display Name: Check Email</para>
    /// </summary>
    [AttributeLogicalName("checkemail")]
    [DisplayName("Check Email")]
    public bool? CheckEmail {
        get {
            return GetAttributeValue<bool?>("checkemail");
        }
        set {
            SetAttributeValue("checkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact associated with the case.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Choose the contract line that the case should be logged under to make sure the customer is charged correctly.</para>
    /// <para>Display Name: Contract Line</para>
    /// </summary>
    [AttributeLogicalName("contractdetailid")]
    [DisplayName("Contract Line")]
    public EntityReference ContractDetailId {
        get {
            return GetAttributeValue<EntityReference>("contractdetailid");
        }
        set {
            SetAttributeValue("contractdetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service contract that the case should be logged under to make sure the customer is eligible for support services.</para>
    /// <para>Display Name: Contract</para>
    /// </summary>
    [AttributeLogicalName("contractid")]
    [DisplayName("Contract")]
    public EntityReference ContractId {
        get {
            return GetAttributeValue<EntityReference>("contractid");
        }
        set {
            SetAttributeValue("contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the service level for the case to make sure the case is handled correctly.</para>
    /// <para>Display Name: Service Level</para>
    /// </summary>
    [AttributeLogicalName("contractservicelevelcode")]
    [DisplayName("Service Level")]
    public Incident_ContractServiceLevelCode? ContractServiceLevelCode {
        get {
            return GetOptionSetValue<Incident_ContractServiceLevelCode>("contractservicelevelcode");
        }
        set {
            SetOptionSetValue("contractservicelevelcode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who created the record.</para>
    /// <para>Display Name: Created By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Created By (External Party)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tells whether customer service representative has contacted the customer or not.</para>
    /// <para>Display Name: Customer Contacted</para>
    /// </summary>
    [AttributeLogicalName("customercontacted")]
    [DisplayName("Customer Contacted")]
    public bool? CustomerContacted {
        get {
            return GetAttributeValue<bool?>("customercontacted");
        }
        set {
            SetAttributeValue("customercontacted", value);
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
    /// <para>Display Name: Contravenor</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Contravenor")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the customer's level of satisfaction with the handling and resolution of the case.</para>
    /// <para>Display Name: Satisfaction</para>
    /// </summary>
    [AttributeLogicalName("customersatisfactioncode")]
    [DisplayName("Satisfaction")]
    public Incident_CustomerSatisfactionCode? CustomerSatisfactionCode {
        get {
            return GetOptionSetValue<Incident_CustomerSatisfactionCode>("customersatisfactioncode");
        }
        set {
            SetOptionSetValue("customersatisfactioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether terms of the associated entitlement should be decremented or not.</para>
    /// <para>Display Name: Decrement Entitlement Terms</para>
    /// </summary>
    [AttributeLogicalName("decremententitlementterm")]
    [DisplayName("Decrement Entitlement Terms")]
    public bool? DecrementEntitlementTerm {
        get {
            return GetAttributeValue<bool?>("decremententitlementterm");
        }
        set {
            SetAttributeValue("decremententitlementterm", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the case to assist the service team in reaching a resolution.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the entitlement that is applicable for the case.</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [AttributeLogicalName("entitlementid")]
    [DisplayName("Entitlement")]
    public EntityReference EntitlementId {
        get {
            return GetAttributeValue<EntityReference>("entitlementid");
        }
        set {
            SetAttributeValue("entitlementid", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Indicates the date and time when the case was escalated.</para>
    /// <para>Display Name: Escalated On</para>
    /// </summary>
    [AttributeLogicalName("escalatedon")]
    [DisplayName("Escalated On")]
    public DateTime? EscalatedOn {
        get {
            return GetAttributeValue<DateTime?>("escalatedon");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Select an existing case for the customer that has been populated. For internal use only.</para>
    /// <para>Display Name: Existing Case</para>
    /// </summary>
    [AttributeLogicalName("existingcase")]
    [DisplayName("Existing Case")]
    public EntityReference ExistingCase {
        get {
            return GetAttributeValue<EntityReference>("existingcase");
        }
        set {
            SetAttributeValue("existingcase", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: First Response By KPI</para>
    /// </summary>
    [AttributeLogicalName("firstresponsebykpiid")]
    [DisplayName("First Response By KPI")]
    public EntityReference FirstResponseByKPIId {
        get {
            return GetAttributeValue<EntityReference>("firstresponsebykpiid");
        }
        set {
            SetAttributeValue("firstresponsebykpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the initial response time for the case according to the terms of the SLA.</para>
    /// <para>Display Name: First Response SLA Status</para>
    /// </summary>
    [AttributeLogicalName("firstresponseslastatus")]
    [DisplayName("First Response SLA Status")]
    public Incident_FirstResponseSLAStatus? FirstResponseSLAStatus {
        get {
            return GetOptionSetValue<Incident_FirstResponseSLAStatus>("firstresponseslastatus");
        }
        set {
            SetOptionSetValue("firstresponseslastatus", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if the first response has been sent.</para>
    /// <para>Display Name: First Response Sent</para>
    /// </summary>
    [AttributeLogicalName("firstresponsesent")]
    [DisplayName("First Response Sent")]
    public bool? FirstResponseSent {
        get {
            return GetAttributeValue<bool?>("firstresponsesent");
        }
        set {
            SetAttributeValue("firstresponsesent", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is used for Sample Service Business Processes.</para>
    /// <para>Display Name: Follow up Task Created</para>
    /// </summary>
    [AttributeLogicalName("followuptaskcreated")]
    [DisplayName("Follow up Task Created")]
    public bool? FollowUpTaskCreated {
        get {
            return GetAttributeValue<bool?>("followuptaskcreated");
        }
        set {
            SetAttributeValue("followuptaskcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date by which a customer service representative has to follow up with the customer on this case.</para>
    /// <para>Display Name: Follow Up By</para>
    /// </summary>
    [AttributeLogicalName("followupby")]
    [DisplayName("Follow Up By")]
    public DateTime? FollowupBy {
        get {
            return GetAttributeValue<DateTime?>("followupby");
        }
        set {
            SetAttributeValue("followupby", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the current stage of the service process for the case to assist service team members when they review or transfer a case.</para>
    /// <para>Display Name: Case Stage</para>
    /// </summary>
    [AttributeLogicalName("incidentstagecode")]
    [DisplayName("Case Stage")]
    public Incident_IncidentStageCode? IncidentStageCode {
        get {
            return GetOptionSetValue<Incident_IncidentStageCode>("incidentstagecode");
        }
        set {
            SetOptionSetValue("incidentstagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Will contain the Influencer score coming from NetBreeze.</para>
    /// <para>Display Name: Influence Score</para>
    /// </summary>
    [AttributeLogicalName("influencescore")]
    [DisplayName("Influence Score")]
    public double? InfluenceScore {
        get {
            return GetAttributeValue<double?>("influencescore");
        }
        set {
            SetAttributeValue("influencescore", value);
        }
    }
    
    /// <summary>
    /// <para>For system use only.</para>
    /// <para>Display Name: Decrementing</para>
    /// </summary>
    [AttributeLogicalName("isdecrementing")]
    [DisplayName("Decrementing")]
    public bool? IsDecrementing {
        get {
            return GetAttributeValue<bool?>("isdecrementing");
        }
        set {
            SetAttributeValue("isdecrementing", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if the case has been escalated.</para>
    /// <para>Display Name: Is Escalated</para>
    /// </summary>
    [AttributeLogicalName("isescalated")]
    [DisplayName("Is Escalated")]
    public bool? IsEscalated {
        get {
            return GetAttributeValue<bool?>("isescalated");
        }
        set {
            SetAttributeValue("isescalated", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the article that contains additional information or a resolution for the case, for reference during research or follow up with the customer.</para>
    /// <para>Display Name: Knowledge Base Article</para>
    /// </summary>
    [AttributeLogicalName("kbarticleid")]
    [DisplayName("Knowledge Base Article")]
    public EntityReference KbArticleId {
        get {
            return GetAttributeValue<EntityReference>("kbarticleid");
        }
        set {
            SetAttributeValue("kbarticleid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the primary case the current case was merged into.</para>
    /// <para>Display Name: Master Case</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("Master Case")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
        set {
            SetAttributeValue("masterid", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether the incident has been merged with another incident.</para>
    /// <para>Display Name: Internal Use Only</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Internal Use Only")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Shows whether the post originated as a public or private message.</para>
    /// <para>Display Name: Received As</para>
    /// </summary>
    [AttributeLogicalName("messagetypecode")]
    [DisplayName("Received As")]
    public socialactivity_postmessagetype? MessageTypeCode {
        get {
            return GetOptionSetValue<socialactivity_postmessagetype>("messagetypecode");
        }
        set {
            SetOptionSetValue("messagetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who modified the record.</para>
    /// <para>Display Name: Modified By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modified By (External Party)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Number of child incidents associated with the incident.</para>
    /// <para>Display Name: Child Cases</para>
    /// </summary>
    [AttributeLogicalName("numberofchildincidents")]
    [DisplayName("Child Cases")]
    [Range(0, 2147483647)]
    public int? NumberOfChildIncidents {
        get {
            return GetAttributeValue<int?>("numberofchildincidents");
        }
    }
    
    /// <summary>
    /// <para>Shows the duration in minutes for which the case was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the parent case for a case.</para>
    /// <para>Display Name: Parent Case</para>
    /// </summary>
    [AttributeLogicalName("parentcaseid")]
    [DisplayName("Parent Case")]
    public EntityReference ParentCaseId {
        get {
            return GetAttributeValue<EntityReference>("parentcaseid");
        }
        set {
            SetAttributeValue("parentcaseid", value);
        }
    }
    
    /// <summary>
    /// <para>Select a primary contact for this case.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("primarycontactid")]
    [DisplayName("Contact")]
    public EntityReference PrimaryContactId {
        get {
            return GetAttributeValue<EntityReference>("primarycontactid");
        }
        set {
            SetAttributeValue("primarycontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Incident_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Incident_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the product associated with the case to identify warranty, service, or other product issues and be able to report the number of incidents for each product.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("productid")]
    [DisplayName("Product")]
    public EntityReference ProductId {
        get {
            return GetAttributeValue<EntityReference>("productid");
        }
        set {
            SetAttributeValue("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.</para>
    /// <para>Display Name: Serial Number</para>
    /// </summary>
    [AttributeLogicalName("productserialnumber")]
    [DisplayName("Serial Number")]
    [MaxLength(100)]
    public string ProductSerialNumber {
        get {
            return GetAttributeValue<string>("productserialnumber");
        }
        set {
            SetAttributeValue("productserialnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date by when the case must be resolved.</para>
    /// <para>Display Name: Resolve By</para>
    /// </summary>
    [AttributeLogicalName("resolveby")]
    [DisplayName("Resolve By")]
    public DateTime? ResolveBy {
        get {
            return GetAttributeValue<DateTime?>("resolveby");
        }
        set {
            SetAttributeValue("resolveby", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Resolve By KPI</para>
    /// </summary>
    [AttributeLogicalName("resolvebykpiid")]
    [DisplayName("Resolve By KPI")]
    public EntityReference ResolveByKPIId {
        get {
            return GetAttributeValue<EntityReference>("resolvebykpiid");
        }
        set {
            SetAttributeValue("resolvebykpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the resolution time for the case according to the terms of the SLA.</para>
    /// <para>Display Name: Resolve By SLA Status</para>
    /// </summary>
    [AttributeLogicalName("resolvebyslastatus")]
    [DisplayName("Resolve By SLA Status")]
    public Incident_ResolveBySLAStatus? ResolveBySLAStatus {
        get {
            return GetOptionSetValue<Incident_ResolveBySLAStatus>("resolvebyslastatus");
        }
        set {
            SetOptionSetValue("resolvebyslastatus", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: First Response By</para>
    /// </summary>
    [AttributeLogicalName("responseby")]
    [DisplayName("First Response By")]
    public DateTime? ResponseBy {
        get {
            return GetAttributeValue<DateTime?>("responseby");
        }
        set {
            SetAttributeValue("responseby", value);
        }
    }
    
    /// <summary>
    /// <para>Choose an additional customer contact who can also help resolve the case.</para>
    /// <para>Display Name: Responsible Contact</para>
    /// </summary>
    [AttributeLogicalName("responsiblecontactid")]
    [DisplayName("Responsible Contact")]
    public EntityReference ResponsibleContactId {
        get {
            return GetAttributeValue<EntityReference>("responsiblecontactid");
        }
        set {
            SetAttributeValue("responsiblecontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether the incident has been routed to queue or not.</para>
    /// <para>Display Name: Route Case</para>
    /// </summary>
    [AttributeLogicalName("routecase")]
    [DisplayName("Route Case")]
    public bool? RouteCase {
        get {
            return GetAttributeValue<bool?>("routecase");
        }
        set {
            SetAttributeValue("routecase", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.</para>
    /// <para>Display Name: Sentiment Value</para>
    /// </summary>
    [AttributeLogicalName("sentimentvalue")]
    [DisplayName("Sentiment Value")]
    public double? SentimentValue {
        get {
            return GetAttributeValue<double?>("sentimentvalue");
        }
        set {
            SetAttributeValue("sentimentvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Select the stage, in the case resolution process, that the case is in.</para>
    /// <para>Display Name: Service Stage</para>
    /// </summary>
    [AttributeLogicalName("servicestage")]
    [DisplayName("Service Stage")]
    public servicestage? ServiceStage {
        get {
            return GetOptionSetValue<servicestage>("servicestage");
        }
        set {
            SetOptionSetValue("servicestage", value);
        }
    }
    
    /// <summary>
    /// <para>Select the severity of this case to indicate the incident's impact on the customer's business.</para>
    /// <para>Display Name: Severity</para>
    /// </summary>
    [AttributeLogicalName("severitycode")]
    [DisplayName("Severity")]
    public Incident_SeverityCode? SeverityCode {
        get {
            return GetOptionSetValue<Incident_SeverityCode>("severitycode");
        }
        set {
            SetOptionSetValue("severitycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the social profile with which the case is associated.</para>
    /// <para>Display Name: Social Profile</para>
    /// </summary>
    [AttributeLogicalName("socialprofileid")]
    [DisplayName("Social Profile")]
    public EntityReference SocialProfileId {
        get {
            return GetAttributeValue<EntityReference>("socialprofileid");
        }
        set {
            SetAttributeValue("socialprofileid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public IncidentState? StateCode {
        get {
            return GetOptionSetValue<IncidentState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the case's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Incident_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Incident_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the subject for the case, such as catalog request or product complaint, so customer service managers can identify frequent requests or problem areas. Administrators can configure subjects under Business Management in the Settings area.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subjectid")]
    [DisplayName("Subject")]
    public EntityReference SubjectId {
        get {
            return GetAttributeValue<EntityReference>("subjectid");
        }
        set {
            SetAttributeValue("subjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the case number for customer reference and searching capabilities. This cannot be modified.</para>
    /// <para>Display Name: Case Number</para>
    /// </summary>
    [AttributeLogicalName("ticketnumber")]
    [DisplayName("Case Number")]
    [MaxLength(100)]
    public string TicketNumber {
        get {
            return GetAttributeValue<string>("ticketnumber");
        }
        set {
            SetAttributeValue("ticketnumber", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.</para>
    /// <para>Display Name: Case Title</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Case Title")]
    [MaxLength(200)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Case's functional location</para>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_functionallocation")]
    [DisplayName("Functional Location")]
    public EntityReference msdyn_FunctionalLocation {
        get {
            return GetAttributeValue<EntityReference>("msdyn_functionallocation");
        }
        set {
            SetAttributeValue("msdyn_functionallocation", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Incident Type associated with Case.</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttype")]
    [DisplayName("Incident Type")]
    public EntityReference msdyn_IncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_incidenttype");
        }
        set {
            SetAttributeValue("msdyn_incidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>The iot alert that initiated this case</para>
    /// <para>Display Name: IoT Alert</para>
    /// </summary>
    [AttributeLogicalName("msdyn_iotalert")]
    [DisplayName("IoT Alert")]
    public EntityReference msdyn_iotalert {
        get {
            return GetAttributeValue<EntityReference>("msdyn_iotalert");
        }
        set {
            SetAttributeValue("msdyn_iotalert", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Region</para>
    /// </summary>
    [AttributeLogicalName("ovs_region")]
    [DisplayName("Region")]
    public EntityReference ovs_Region {
        get {
            return GetAttributeValue<EntityReference>("ovs_region");
        }
        set {
            SetAttributeValue("ovs_region", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_country")]
    [DisplayName("Country")]
    public EntityReference ts_Country {
        get {
            return GetAttributeValue<EntityReference>("ts_country");
        }
        set {
            SetAttributeValue("ts_country", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Stakeholder</para>
    /// </summary>
    [AttributeLogicalName("ts_stakeholder")]
    [DisplayName("Stakeholder")]
    public EntityReference ts_Stakeholder {
        get {
            return GetAttributeValue<EntityReference>("ts_stakeholder");
        }
        set {
            SetAttributeValue("ts_stakeholder", value);
        }
    }
    
    [RelationshipSchemaName("Incident_ActivityPointers")]
    public IEnumerable<ActivityPointer> Incident_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Incident_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Incident_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_Appointments")]
    public IEnumerable<Appointment> Incident_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Incident_Appointments", null);
        }
        set {
            SetRelatedEntities("Incident_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_Emails")]
    public IEnumerable<Email> Incident_Emails {
        get {
            return GetRelatedEntities<Email>("Incident_Emails", null);
        }
        set {
            SetRelatedEntities("Incident_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_Phonecalls")]
    public IEnumerable<PhoneCall> Incident_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Incident_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Incident_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_ProcessSessions")]
    public IEnumerable<ProcessSession> Incident_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Incident_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Incident_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Incident_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Incident_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Incident_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Incident_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Incident_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Incident_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_SyncErrors")]
    public IEnumerable<SyncError> Incident_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Incident_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Incident_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_Tasks")]
    public IEnumerable<Task> Incident_Tasks {
        get {
            return GetRelatedEntities<Task>("Incident_Tasks", null);
        }
        set {
            SetRelatedEntities("Incident_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("OriginatingCase_Lead")]
    public IEnumerable<Lead> OriginatingCase_Lead {
        get {
            return GetRelatedEntities<Lead>("OriginatingCase_Lead", null);
        }
        set {
            SetRelatedEntities("OriginatingCase_Lead", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_existingcase", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_existingcase {
        get {
            return GetRelatedEntities<Incident>("incident_existingcase", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_existingcase", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("incident_master_incident", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_master_incident {
        get {
            return GetRelatedEntities<Incident>("incident_master_incident", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_master_incident", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("incident_parent_incident", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_parent_incident {
        get {
            return GetRelatedEntities<Incident>("incident_parent_incident", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_parent_incident", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("existingcase")]
    [RelationshipSchemaName("incident_existingcase", EntityRole.Referencing)]
    public Incident Referencingincident_existingcase {
        get {
            return GetRelatedEntity<Incident>("incident_existingcase", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_existingcase", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("incident_master_incident", EntityRole.Referencing)]
    public Incident Referencingincident_master_incident {
        get {
            return GetRelatedEntity<Incident>("incident_master_incident", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_master_incident", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentcaseid")]
    [RelationshipSchemaName("incident_parent_incident", EntityRole.Referencing)]
    public Incident Referencingincident_parent_incident {
        get {
            return GetRelatedEntity<Incident>("incident_parent_incident", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_parent_incident", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("primarycontactid")]
    [RelationshipSchemaName("contact_as_primary_contact")]
    public Contact contact_as_primary_contact {
        get {
            return GetRelatedEntity<Contact>("contact_as_primary_contact", null);
        }
        set {
            SetRelatedEntity("contact_as_primary_contact", null, value);
        }
    }
    
    [AttributeLogicalName("responsiblecontactid")]
    [RelationshipSchemaName("contact_as_responsible_contact")]
    public Contact contact_as_responsible_contact {
        get {
            return GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
        }
        set {
            SetRelatedEntity("contact_as_responsible_contact", null, value);
        }
    }
    
    [AttributeLogicalName("contractid")]
    [RelationshipSchemaName("contract_cases")]
    public Contract contract_cases {
        get {
            return GetRelatedEntity<Contract>("contract_cases", null);
        }
        set {
            SetRelatedEntity("contract_cases", null, value);
        }
    }
    
    [AttributeLogicalName("contractdetailid")]
    [RelationshipSchemaName("contract_detail_cases")]
    public ContractDetail contract_detail_cases {
        get {
            return GetRelatedEntity<ContractDetail>("contract_detail_cases", null);
        }
        set {
            SetRelatedEntity("contract_detail_cases", null, value);
        }
    }
    
    [AttributeLogicalName("entitlementid")]
    [RelationshipSchemaName("entitlement_cases")]
    public Entitlement entitlement_cases {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_cases", null);
        }
        set {
            SetRelatedEntity("entitlement_cases", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_activity_parties")]
    public IEnumerable<ActivityParty> incident_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("incident_activity_parties", null);
        }
        set {
            SetRelatedEntities("incident_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("incident_customer_accounts")]
    public Account incident_customer_accounts {
        get {
            return GetRelatedEntity<Account>("incident_customer_accounts", null);
        }
        set {
            SetRelatedEntity("incident_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("incident_customer_contacts")]
    public Contact incident_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("incident_customer_contacts", null);
        }
        set {
            SetRelatedEntity("incident_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> incident_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("incident_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("incident_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_msfp_alerts")]
    public IEnumerable<msfp_alert> incident_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("incident_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("incident_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("kbarticleid")]
    [RelationshipSchemaName("kbarticle_incidents")]
    public KbArticle kbarticle_incidents {
        get {
            return GetRelatedEntity<KbArticle>("kbarticle_incidents", null);
        }
        set {
            SetRelatedEntity("kbarticle_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_incidentbase_createdby")]
    public SystemUser lk_incidentbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
    public SystemUser lk_incidentbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_incidentbase_modifiedby")]
    public SystemUser lk_incidentbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
    public SystemUser lk_incidentbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incident_msdyn_customerasset")]
    public IEnumerable<msdyn_customerasset> msdyn_incident_msdyn_customerasset {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_incident_msdyn_customerasset", null);
        }
        set {
            SetRelatedEntities("msdyn_incident_msdyn_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incident_msdyn_workorder_ServiceRequest")]
    public IEnumerable<msdyn_workorder> msdyn_incident_msdyn_workorder_ServiceRequest {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_incident_msdyn_workorder_ServiceRequest", null);
        }
        set {
            SetRelatedEntities("msdyn_incident_msdyn_workorder_ServiceRequest", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocation")]
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_incident_FunctionalLocation")]
    public msdyn_FunctionalLocation msdyn_msdyn_functionallocation_incident_FunctionalLocation {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_msdyn_functionallocation_incident_FunctionalLocation", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_functionallocation_incident_FunctionalLocation", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_incident_IncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_incident_IncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_incident_IncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_incident_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_region")]
    [RelationshipSchemaName("ovs_Incident_Region_Territory")]
    public Territory ovs_Incident_Region_Territory {
        get {
            return GetRelatedEntity<Territory>("ovs_Incident_Region_Territory", null);
        }
        set {
            SetRelatedEntity("ovs_Incident_Region_Territory", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_incident_msdyn_workorderservicetask")]
    public IEnumerable<msdyn_workorderservicetask> ovs_incident_msdyn_workorderservicetask {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("ovs_incident_msdyn_workorderservicetask", null);
        }
        set {
            SetRelatedEntities("ovs_incident_msdyn_workorderservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_incident_ovs_finding")]
    public IEnumerable<ovs_Finding> ovs_incident_ovs_finding {
        get {
            return GetRelatedEntities<ovs_Finding>("ovs_incident_ovs_finding", null);
        }
        set {
            SetRelatedEntities("ovs_incident_ovs_finding", null, value);
        }
    }
    
    [AttributeLogicalName("productid")]
    [RelationshipSchemaName("product_incidents")]
    public Product product_incidents {
        get {
            return GetRelatedEntity<Product>("product_incidents", null);
        }
        set {
            SetRelatedEntity("product_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_incidents")]
    public SystemUser system_user_incidents {
        get {
            return GetRelatedEntity<SystemUser>("system_user_incidents", null);
        }
        set {
            SetRelatedEntity("system_user_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("ts_stakeholder")]
    [RelationshipSchemaName("ts_Incident_Stakeholder_Account")]
    public Account ts_Incident_Stakeholder_Account {
        get {
            return GetRelatedEntity<Account>("ts_Incident_Stakeholder_Account", null);
        }
        set {
            SetRelatedEntity("ts_Incident_Stakeholder_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_incident_ts_workordercreationwizard")]
    public IEnumerable<ts_workordercreationwizard> ts_incident_ts_workordercreationwizard {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_incident_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntities("ts_incident_ts_workordercreationwizard", null, value);
        }
    }
    
    public static Incident Retrieve(IOrganizationService service, Guid id, params Expression<Func<Incident,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Order that has been billed.</para>
/// <para>Display Name: Invoice</para>
/// </summary>
[EntityLogicalName("invoice")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Invoice : ExtendedEntity<InvoiceState, Invoice_StatusCode> {
    
    public const string EntityLogicalName = "invoice";
    
    public const int EntityTypeCode = 1090;
    
    public Invoice() : 
            base(EntityLogicalName) {
    }
    
    public Invoice(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("invoiceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("invoiceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the invoice.</para>
    /// <para>Display Name: Invoice</para>
    /// </summary>
    [AttributeLogicalName("invoiceid")]
    [DisplayName("Invoice")]
    public Guid? InvoiceId {
        get {
            return GetAttributeValue<Guid?>("invoiceid");
        }
        set {
            SetId("invoiceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the invoice is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's billing address.</para>
    /// <para>Display Name: Bill To City</para>
    /// </summary>
    [AttributeLogicalName("billto_city")]
    [DisplayName("Bill To City")]
    [MaxLength(80)]
    public string BillTo_City {
        get {
            return GetAttributeValue<string>("billto_city");
        }
        set {
            SetAttributeValue("billto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Bill To address.</para>
    /// <para>Display Name: Bill To Address</para>
    /// </summary>
    [AttributeLogicalName("billto_composite")]
    [DisplayName("Bill To Address")]
    public string BillTo_Composite {
        get {
            return GetAttributeValue<string>("billto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's billing address.</para>
    /// <para>Display Name: Bill To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("billto_country")]
    [DisplayName("Bill To Country/Region")]
    [MaxLength(80)]
    public string BillTo_Country {
        get {
            return GetAttributeValue<string>("billto_country");
        }
        set {
            SetAttributeValue("billto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Fax</para>
    /// </summary>
    [AttributeLogicalName("billto_fax")]
    [DisplayName("Bill To Fax")]
    [MaxLength(50)]
    public string BillTo_Fax {
        get {
            return GetAttributeValue<string>("billto_fax");
        }
        set {
            SetAttributeValue("billto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 1</para>
    /// </summary>
    [AttributeLogicalName("billto_line1")]
    [DisplayName("Bill To Street 1")]
    [MaxLength(250)]
    public string BillTo_Line1 {
        get {
            return GetAttributeValue<string>("billto_line1");
        }
        set {
            SetAttributeValue("billto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 2</para>
    /// </summary>
    [AttributeLogicalName("billto_line2")]
    [DisplayName("Bill To Street 2")]
    [MaxLength(250)]
    public string BillTo_Line2 {
        get {
            return GetAttributeValue<string>("billto_line2");
        }
        set {
            SetAttributeValue("billto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the billing address.</para>
    /// <para>Display Name: Bill To Street 3</para>
    /// </summary>
    [AttributeLogicalName("billto_line3")]
    [DisplayName("Bill To Street 3")]
    [MaxLength(250)]
    public string BillTo_Line3 {
        get {
            return GetAttributeValue<string>("billto_line3");
        }
        set {
            SetAttributeValue("billto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
    /// <para>Display Name: Bill To Name</para>
    /// </summary>
    [AttributeLogicalName("billto_name")]
    [DisplayName("Bill To Name")]
    [MaxLength(200)]
    public string BillTo_Name {
        get {
            return GetAttributeValue<string>("billto_name");
        }
        set {
            SetAttributeValue("billto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the billing address.</para>
    /// <para>Display Name: Bill To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("billto_postalcode")]
    [DisplayName("Bill To ZIP/Postal Code")]
    [MaxLength(20)]
    public string BillTo_PostalCode {
        get {
            return GetAttributeValue<string>("billto_postalcode");
        }
        set {
            SetAttributeValue("billto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the billing address.</para>
    /// <para>Display Name: Bill To State/Province</para>
    /// </summary>
    [AttributeLogicalName("billto_stateorprovince")]
    [DisplayName("Bill To State/Province")]
    [MaxLength(50)]
    public string BillTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("billto_stateorprovince");
        }
        set {
            SetAttributeValue("billto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Phone</para>
    /// </summary>
    [AttributeLogicalName("billto_telephone")]
    [DisplayName("Bill To Phone")]
    [MaxLength(50)]
    public string BillTo_Telephone {
        get {
            return GetAttributeValue<string>("billto_telephone");
        }
        set {
            SetAttributeValue("billto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact associated with the invoice.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the products included in the invoice were delivered.</para>
    /// <para>Display Name: Date Delivered</para>
    /// </summary>
    [AttributeLogicalName("datedelivered")]
    [DisplayName("Date Delivered")]
    public DateTime? DateDelivered {
        get {
            return GetAttributeValue<DateTime?>("datedelivered");
        }
        set {
            SetAttributeValue("datedelivered", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the invoice, such as shipping details or product substitutions.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount amount for the invoice if the customer is eligible for special savings.</para>
    /// <para>Display Name: Invoice Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("discountamount")]
    [DisplayName("Invoice Discount Amount")]
    public decimal? DiscountAmount {
        get {
            return GetMoneyValue("discountamount");
        }
        set {
            SetMoneyValue("discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Invoice Discount Amount in base currency.</para>
    /// <para>Display Name: Invoice Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("discountamount_base")]
    [DisplayName("Invoice Discount Amount (Base)")]
    public decimal? DiscountAmount_Base {
        get {
            return GetMoneyValue("discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Type the discount rate that should be applied to the Detail Amount field, for use in calculating the Pre-Freight Amount and Total Amount values for the invoice.</para>
    /// <para>Display Name: Invoice Discount (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Invoice Discount (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date by which the invoice should be paid by the customer.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("duedate")]
    [DisplayName("Due Date")]
    public DateTime? DueDate {
        get {
            return GetAttributeValue<DateTime?>("duedate");
        }
        set {
            SetAttributeValue("duedate", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Type the cost of freight or shipping for the products included in the invoice for use in calculating the total amount due.</para>
    /// <para>Display Name: Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("freightamount")]
    [DisplayName("Freight Amount")]
    public decimal? FreightAmount {
        get {
            return GetMoneyValue("freightamount");
        }
        set {
            SetMoneyValue("freightamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Freight Amount in base currency.</para>
    /// <para>Display Name: Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("freightamount_base")]
    [DisplayName("Freight Amount (Base)")]
    public decimal? FreightAmount_Base {
        get {
            return GetMoneyValue("freightamount_base");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the identifying number or code of the invoice.</para>
    /// <para>Display Name: Invoice ID</para>
    /// </summary>
    [AttributeLogicalName("invoicenumber")]
    [DisplayName("Invoice ID")]
    [MaxLength(100)]
    public string InvoiceNumber {
        get {
            return GetAttributeValue<string>("invoicenumber");
        }
        set {
            SetAttributeValue("invoicenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether prices specified on the invoice are locked from any further updates.</para>
    /// <para>Display Name: Prices Locked</para>
    /// </summary>
    [AttributeLogicalName("ispricelocked")]
    [DisplayName("Prices Locked")]
    public bool? IsPriceLocked {
        get {
            return GetAttributeValue<bool?>("ispricelocked");
        }
        set {
            SetAttributeValue("ispricelocked", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the invoice was last submitted to an accounting or ERP system for processing.</para>
    /// <para>Display Name: Last Submitted to Back Office</para>
    /// </summary>
    [AttributeLogicalName("lastbackofficesubmit")]
    [DisplayName("Last Submitted to Back Office")]
    public DateTime? LastBackofficeSubmit {
        get {
            return GetAttributeValue<DateTime?>("lastbackofficesubmit");
        }
        set {
            SetAttributeValue("lastbackofficesubmit", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the invoice.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(300)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration in minutes for which the invoice was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Choose the opportunity that the invoice is related to for reporting and analytics.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [AttributeLogicalName("opportunityid")]
    [DisplayName("Opportunity")]
    public EntityReference OpportunityId {
        get {
            return GetAttributeValue<EntityReference>("opportunityid");
        }
        set {
            SetAttributeValue("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
    /// <para>Display Name: Payment Terms</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Payment Terms")]
    public Invoice_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Invoice_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Price List")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of pricing error for the invoice.</para>
    /// <para>Display Name: Pricing Error </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Pricing Error ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Invoice_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Invoice_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the invoice record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this invoice. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Choose the order related to the invoice to make sure the order is fulfilled and invoiced correctly.</para>
    /// <para>Display Name: Order</para>
    /// </summary>
    [AttributeLogicalName("salesorderid")]
    [DisplayName("Order")]
    public EntityReference SalesOrderId {
        get {
            return GetAttributeValue<EntityReference>("salesorderid");
        }
        set {
            SetAttributeValue("salesorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's shipping address.</para>
    /// <para>Display Name: Ship To City</para>
    /// </summary>
    [AttributeLogicalName("shipto_city")]
    [DisplayName("Ship To City")]
    [MaxLength(80)]
    public string ShipTo_City {
        get {
            return GetAttributeValue<string>("shipto_city");
        }
        set {
            SetAttributeValue("shipto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Ship To address.</para>
    /// <para>Display Name: Ship To Address</para>
    /// </summary>
    [AttributeLogicalName("shipto_composite")]
    [DisplayName("Ship To Address")]
    public string ShipTo_Composite {
        get {
            return GetAttributeValue<string>("shipto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("shipto_country")]
    [DisplayName("Ship To Country/Region")]
    [MaxLength(80)]
    public string ShipTo_Country {
        get {
            return GetAttributeValue<string>("shipto_country");
        }
        set {
            SetAttributeValue("shipto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Fax</para>
    /// </summary>
    [AttributeLogicalName("shipto_fax")]
    [DisplayName("Ship To Fax")]
    [MaxLength(50)]
    public string ShipTo_Fax {
        get {
            return GetAttributeValue<string>("shipto_fax");
        }
        set {
            SetAttributeValue("shipto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Ship To Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("shipto_freighttermscode")]
    [DisplayName("Ship To Freight Terms")]
    public Invoice_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
        get {
            return GetOptionSetValue<Invoice_ShipTo_FreightTermsCode>("shipto_freighttermscode");
        }
        set {
            SetOptionSetValue("shipto_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 1</para>
    /// </summary>
    [AttributeLogicalName("shipto_line1")]
    [DisplayName("Ship To Street 1")]
    [MaxLength(250)]
    public string ShipTo_Line1 {
        get {
            return GetAttributeValue<string>("shipto_line1");
        }
        set {
            SetAttributeValue("shipto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 2</para>
    /// </summary>
    [AttributeLogicalName("shipto_line2")]
    [DisplayName("Ship To Street 2")]
    [MaxLength(250)]
    public string ShipTo_Line2 {
        get {
            return GetAttributeValue<string>("shipto_line2");
        }
        set {
            SetAttributeValue("shipto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the shipping address.</para>
    /// <para>Display Name: Ship To Street 3</para>
    /// </summary>
    [AttributeLogicalName("shipto_line3")]
    [DisplayName("Ship To Street 3")]
    [MaxLength(250)]
    public string ShipTo_Line3 {
        get {
            return GetAttributeValue<string>("shipto_line3");
        }
        set {
            SetAttributeValue("shipto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
    /// <para>Display Name: Ship To Name</para>
    /// </summary>
    [AttributeLogicalName("shipto_name")]
    [DisplayName("Ship To Name")]
    [MaxLength(200)]
    public string ShipTo_Name {
        get {
            return GetAttributeValue<string>("shipto_name");
        }
        set {
            SetAttributeValue("shipto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the shipping address.</para>
    /// <para>Display Name: Ship To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("shipto_postalcode")]
    [DisplayName("Ship To ZIP/Postal Code")]
    [MaxLength(20)]
    public string ShipTo_PostalCode {
        get {
            return GetAttributeValue<string>("shipto_postalcode");
        }
        set {
            SetAttributeValue("shipto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the shipping address.</para>
    /// <para>Display Name: Ship To State/Province</para>
    /// </summary>
    [AttributeLogicalName("shipto_stateorprovince")]
    [DisplayName("Ship To State/Province")]
    [MaxLength(50)]
    public string ShipTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("shipto_stateorprovince");
        }
        set {
            SetAttributeValue("shipto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Phone</para>
    /// </summary>
    [AttributeLogicalName("shipto_telephone")]
    [DisplayName("Ship To Phone")]
    [MaxLength(50)]
    public string ShipTo_Telephone {
        get {
            return GetAttributeValue<string>("shipto_telephone");
        }
        set {
            SetAttributeValue("shipto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Shipping Method")]
    public Invoice_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Invoice_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Skip Price Calculation (For Internal Use)</para>
    /// <para>Display Name: Skip Price Calculation</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Skip Price Calculation")]
    public qooi_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the invoice is active, paid, or canceled. Paid and canceled invoices are read-only and can't be edited unless they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public InvoiceState? StateCode {
        get {
            return GetOptionSetValue<InvoiceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the invoice's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Invoice_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Invoice_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount due, calculated as the sum of the products, discount, freight, and taxes for the invoice.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamount")]
    [DisplayName("Total Amount")]
    public decimal? TotalAmount {
        get {
            return GetMoneyValue("totalamount");
        }
        set {
            SetMoneyValue("totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total product amount due, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the invoice.</para>
    /// <para>Display Name: Total Pre-Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight")]
    [DisplayName("Total Pre-Freight Amount")]
    public decimal? TotalAmountLessFreight {
        get {
            return GetMoneyValue("totalamountlessfreight");
        }
        set {
            SetMoneyValue("totalamountlessfreight", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Pre-Freight Amount in base currency.</para>
    /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight_base")]
    [DisplayName("Total Pre-Freight Amount (Base)")]
    public decimal? TotalAmountLessFreight_Base {
        get {
            return GetMoneyValue("totalamountlessfreight_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Amount in base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? TotalAmount_Base {
        get {
            return GetMoneyValue("totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total discount amount, based on the discount price and rate entered on the invoice.</para>
    /// <para>Display Name: Total Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount")]
    [DisplayName("Total Discount Amount")]
    public decimal? TotalDiscountAmount {
        get {
            return GetMoneyValue("totaldiscountamount");
        }
        set {
            SetMoneyValue("totaldiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Discount Amount in base currency.</para>
    /// <para>Display Name: Total Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount_base")]
    [DisplayName("Total Discount Amount (Base)")]
    public decimal? TotalDiscountAmount_Base {
        get {
            return GetMoneyValue("totaldiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of all existing and write-in products included on the invoice, based on the specified price list and quantities.</para>
    /// <para>Display Name: Total Detail Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount")]
    [DisplayName("Total Detail Amount")]
    public decimal? TotalLineItemAmount {
        get {
            return GetMoneyValue("totallineitemamount");
        }
        set {
            SetMoneyValue("totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Detail Amount in base currency.</para>
    /// <para>Display Name: Total Detail Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount_base")]
    [DisplayName("Total Detail Amount (Base)")]
    public decimal? TotalLineItemAmount_Base {
        get {
            return GetMoneyValue("totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the Manual Discount amounts specified on all products included in the invoice. This value is reflected in the Detail Amount field on the invoice and is added to any discount amount or rate specified on the invoice.</para>
    /// <para>Display Name: Total Line Item Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount")]
    [DisplayName("Total Line Item Discount Amount")]
    public decimal? TotalLineItemDiscountAmount {
        get {
            return GetMoneyValue("totallineitemdiscountamount");
        }
        set {
            SetMoneyValue("totallineitemdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Line Item Discount Amount in base currency.</para>
    /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount_base")]
    [DisplayName("Total Line Item Discount Amount (Base)")]
    public decimal? TotalLineItemDiscountAmount_Base {
        get {
            return GetMoneyValue("totallineitemdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Tax amounts specified on all products included in the invoice, included in the Total Amount due calculation for the invoice.</para>
    /// <para>Display Name: Total Tax</para>
    /// </summary>
    [AttributeLogicalName("totaltax")]
    [DisplayName("Total Tax")]
    public decimal? TotalTax {
        get {
            return GetMoneyValue("totaltax");
        }
        set {
            SetMoneyValue("totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Tax in base currency.</para>
    /// <para>Display Name: Total Tax (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaltax_base")]
    [DisplayName("Total Tax (Base)")]
    public decimal? TotalTax_Base {
        get {
            return GetMoneyValue("totaltax_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Select whether the products included in the invoice should be shipped to the specified address or held until the customer calls with further pick up or delivery instructions.</para>
    /// <para>Display Name: Ship To</para>
    /// </summary>
    [AttributeLogicalName("willcall")]
    [DisplayName("Ship To")]
    public bool? WillCall {
        get {
            return GetAttributeValue<bool?>("willcall");
        }
        set {
            SetAttributeValue("willcall", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount due on this invoice.</para>
    /// <para>Display Name: Amount Due</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amountdue")]
    [DisplayName("Amount Due")]
    public decimal? msdyn_AmountDue {
        get {
            return GetMoneyValue("msdyn_amountdue");
        }
        set {
            SetMoneyValue("msdyn_amountdue", value);
        }
    }
    
    /// <summary>
    /// <para>Document date of the Invoice for use in calculation of payment due date</para>
    /// <para>Display Name: Invoice Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_invoicedate")]
    [DisplayName("Invoice Date")]
    public DateTime? msdyn_InvoiceDate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_invoicedate");
        }
        set {
            SetAttributeValue("msdyn_invoicedate", value);
        }
    }
    
    /// <summary>
    /// <para>Whether the Invoice is for an Item-based or a service maintainence-based sale</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ordertype")]
    [DisplayName("Type")]
    public Invoice_msdyn_OrderType? msdyn_OrderType {
        get {
            return GetOptionSetValue<Invoice_msdyn_OrderType>("msdyn_ordertype");
        }
        set {
            SetOptionSetValue("msdyn_ordertype", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Amount Due in base currency.</para>
    /// <para>Display Name: Amount Due (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amountdue_base")]
    [DisplayName("Amount Due (Base)")]
    public decimal? msdyn_amountdue_Base {
        get {
            return GetMoneyValue("msdyn_amountdue_base");
        }
    }
    
    [RelationshipSchemaName("Invoice_ActivityPointers")]
    public IEnumerable<ActivityPointer> Invoice_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Invoice_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Invoice_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_Appointments")]
    public IEnumerable<Appointment> Invoice_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Invoice_Appointments", null);
        }
        set {
            SetRelatedEntities("Invoice_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_Emails")]
    public IEnumerable<Email> Invoice_Emails {
        get {
            return GetRelatedEntities<Email>("Invoice_Emails", null);
        }
        set {
            SetRelatedEntities("Invoice_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_Phonecalls")]
    public IEnumerable<PhoneCall> Invoice_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Invoice_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Invoice_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_ProcessSessions")]
    public IEnumerable<ProcessSession> Invoice_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Invoice_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Invoice_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Invoice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Invoice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Invoice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Invoice_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Invoice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Invoice_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_SyncErrors")]
    public IEnumerable<SyncError> Invoice_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Invoice_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Invoice_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Invoice_Tasks")]
    public IEnumerable<Task> Invoice_Tasks {
        get {
            return GetRelatedEntities<Task>("Invoice_Tasks", null);
        }
        set {
            SetRelatedEntities("Invoice_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("contactinvoices_association")]
    public IEnumerable<Contact> contactinvoices_association {
        get {
            return GetRelatedEntities<Contact>("contactinvoices_association", null);
        }
        set {
            SetRelatedEntities("contactinvoices_association", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_activity_parties")]
    public IEnumerable<ActivityParty> invoice_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("invoice_activity_parties", null);
        }
        set {
            SetRelatedEntities("invoice_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("invoice_customer_accounts")]
    public Account invoice_customer_accounts {
        get {
            return GetRelatedEntity<Account>("invoice_customer_accounts", null);
        }
        set {
            SetRelatedEntity("invoice_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("invoice_customer_contacts")]
    public Contact invoice_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("invoice_customer_contacts", null);
        }
        set {
            SetRelatedEntity("invoice_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> invoice_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("invoice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("invoice_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_msfp_alerts")]
    public IEnumerable<msfp_alert> invoice_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("invoice_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("invoice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_invoice_createdonbehalfby")]
    public SystemUser lk_invoice_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_invoice_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_invoice_modifiedonbehalfby")]
    public SystemUser lk_invoice_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_invoice_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_invoicebase_createdby")]
    public SystemUser lk_invoicebase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicebase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_invoicebase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_invoicebase_modifiedby")]
    public SystemUser lk_invoicebase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicebase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_invoicebase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("opportunityid")]
    [RelationshipSchemaName("opportunity_invoices")]
    public Opportunity opportunity_invoices {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_invoices", null);
        }
        set {
            SetRelatedEntity("opportunity_invoices", null, value);
        }
    }
    
    [AttributeLogicalName("salesorderid")]
    [RelationshipSchemaName("order_invoices")]
    public SalesOrder order_invoices {
        get {
            return GetRelatedEntity<SalesOrder>("order_invoices", null);
        }
        set {
            SetRelatedEntity("order_invoices", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_invoices")]
    public SystemUser system_user_invoices {
        get {
            return GetRelatedEntity<SystemUser>("system_user_invoices", null);
        }
        set {
            SetRelatedEntity("system_user_invoices", null, value);
        }
    }
    
    public static Invoice Retrieve(IOrganizationService service, Guid id, params Expression<Func<Invoice,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Structured content that is part of the knowledge base.</para>
/// <para>Display Name: Article</para>
/// </summary>
[EntityLogicalName("kbarticle")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class KbArticle : ExtendedEntity<KbArticleState, KbArticle_StatusCode> {
    
    public const string EntityLogicalName = "kbarticle";
    
    public const int EntityTypeCode = 127;
    
    public KbArticle() : 
            base(EntityLogicalName) {
    }
    
    public KbArticle(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("title");
        }
    }
    
    [AttributeLogicalName("kbarticleid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("kbarticleid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the article.</para>
    /// <para>Display Name: Article</para>
    /// </summary>
    [AttributeLogicalName("kbarticleid")]
    [DisplayName("Article")]
    public Guid? KbArticleId {
        get {
            return GetAttributeValue<Guid?>("kbarticleid");
        }
        set {
            SetId("kbarticleid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the article content and formatting, stored as XML.</para>
    /// <para>Display Name: Article XML</para>
    /// </summary>
    [AttributeLogicalName("articlexml")]
    [DisplayName("Article XML")]
    public string ArticleXml {
        get {
            return GetAttributeValue<string>("articlexml");
        }
        set {
            SetAttributeValue("articlexml", value);
        }
    }
    
    /// <summary>
    /// <para>Comments regarding the knowledge base article.</para>
    /// <para>Display Name: Comments</para>
    /// </summary>
    [AttributeLogicalName("comments")]
    [DisplayName("Comments")]
    public string Comments {
        get {
            return GetAttributeValue<string>("comments");
        }
        set {
            SetAttributeValue("comments", value);
        }
    }
    
    /// <summary>
    /// <para>Description of the content of the knowledge base article.</para>
    /// <para>Display Name: Content</para>
    /// </summary>
    [AttributeLogicalName("content")]
    [DisplayName("Content")]
    public string Content {
        get {
            return GetAttributeValue<string>("content");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the knowledge base article.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the knowledge base article was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the article.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type additional information that describes the knowledge base article.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Entity Image Id")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the template that you want to use as a base for creating the new article.</para>
    /// <para>Display Name: Base Template</para>
    /// </summary>
    [AttributeLogicalName("kbarticletemplateid")]
    [DisplayName("Base Template")]
    public EntityReference KbArticleTemplateId {
        get {
            return GetAttributeValue<EntityReference>("kbarticletemplateid");
        }
        set {
            SetAttributeValue("kbarticletemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Keywords to be used for searches in knowledge base articles.</para>
    /// <para>Display Name: Key Words</para>
    /// </summary>
    [AttributeLogicalName("keywords")]
    [DisplayName("Key Words")]
    public string KeyWords {
        get {
            return GetAttributeValue<string>("keywords");
        }
        set {
            SetAttributeValue("keywords", value);
        }
    }
    
    /// <summary>
    /// <para>Select which language the article must be available in. This list is based on the list of language packs that are installed in your Microsoft Dynamics 365 environment.</para>
    /// <para>Display Name: Language</para>
    /// </summary>
    [AttributeLogicalName("languagecode")]
    [DisplayName("Language")]
    [Range(0, 2147483647)]
    public int? LanguageCode {
        get {
            return GetAttributeValue<int?>("languagecode");
        }
        set {
            SetAttributeValue("languagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the knowledge base article.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the knowledge base article was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the kbarticle.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Knowledge base article number.</para>
    /// <para>Display Name: Number</para>
    /// </summary>
    [AttributeLogicalName("number")]
    [DisplayName("Number")]
    [MaxLength(100)]
    public string Number {
        get {
            return GetAttributeValue<string>("number");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the organization associated with the article.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the knowledge base article is in draft, unapproved, or published status. Published articles are read-only and can't be edited unless they are unpublished.</para>
    /// <para>Display Name: Status </para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status ")]
    public KbArticleState? StateCode {
        get {
            return GetOptionSetValue<KbArticleState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the article's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public KbArticle_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<KbArticle_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the subject of the article to assist with article searches. You can configure subjects under Business Management in the Settings area.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subjectid")]
    [DisplayName("Subject")]
    public EntityReference SubjectId {
        get {
            return GetAttributeValue<EntityReference>("subjectid");
        }
        set {
            SetAttributeValue("subjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subject or descriptive name for the article to assist with article searches.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Title")]
    [MaxLength(500)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Title of the knowledge base article.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Title")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("KbArticle_ProcessSessions")]
    public IEnumerable<ProcessSession> KbArticle_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("KbArticle_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("KbArticle_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("KbArticle_SyncErrors")]
    public IEnumerable<SyncError> KbArticle_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("KbArticle_SyncErrors", null);
        }
        set {
            SetRelatedEntities("KbArticle_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("kbarticle_incidents")]
    public IEnumerable<Incident> kbarticle_incidents {
        get {
            return GetRelatedEntities<Incident>("kbarticle_incidents", null);
        }
        set {
            SetRelatedEntities("kbarticle_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_kbarticle_createdonbehalfby")]
    public SystemUser lk_kbarticle_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_kbarticle_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_kbarticle_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_kbarticle_modifiedonbehalfby")]
    public SystemUser lk_kbarticle_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_kbarticle_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_kbarticle_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_kbarticlebase_createdby")]
    public SystemUser lk_kbarticlebase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_kbarticlebase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_kbarticlebase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_kbarticlebase_modifiedby")]
    public SystemUser lk_kbarticlebase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_kbarticlebase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_kbarticlebase_modifiedby", null, value);
        }
    }
    
    public static KbArticle Retrieve(IOrganizationService service, Guid id, params Expression<Func<KbArticle,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Prospect or potential sales opportunity. Leads are converted into accounts, contacts, or opportunities when they are qualified. Otherwise, they are deleted or archived.</para>
/// <para>Display Name: Lead</para>
/// </summary>
[EntityLogicalName("lead")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Lead : ExtendedEntity<LeadState, Lead_StatusCode> {
    
    public const string EntityLogicalName = "lead";
    
    public const int EntityTypeCode = 4;
    
    public Lead() : 
            base(EntityLogicalName) {
    }
    
    public Lead(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("fullname");
        }
    }
    
    [AttributeLogicalName("leadid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("leadid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the lead.</para>
    /// <para>Display Name: Lead</para>
    /// </summary>
    [AttributeLogicalName("leadid")]
    [DisplayName("Lead")]
    public Guid? LeadId {
        get {
            return GetAttributeValue<Guid?>("leadid");
        }
        set {
            SetId("leadid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the lead is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 1.</para>
    /// <para>Display Name: Address 1: ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Address 1: ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary address type.</para>
    /// <para>Display Name: Address 1: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Address 1: Address Type")]
    public Lead_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<Lead_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the primary address.</para>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("City")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete primary address.</para>
    /// <para>Display Name: Address 1</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Address 1")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the primary address.</para>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Country/Region")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the primary address.</para>
    /// <para>Display Name: Address 1: County</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Address 1: County")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Fax</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Address 1: Fax")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 1: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Address 1: Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the primary address.</para>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Street 1")]
    [MaxLength(250)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the primary address.</para>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Street 2")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the primary address.</para>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("Street 3")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 1: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Address 1: Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 1: Name</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Address 1: Name")]
    [MaxLength(100)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the primary address.</para>
    /// <para>Display Name: Address 1: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Address 1: Post Office Box")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the primary address.</para>
    /// <para>Display Name: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 1: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Address 1: Shipping Method")]
    public Lead_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<Lead_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the primary address.</para>
    /// <para>Display Name: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("State/Province")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Address 1: Telephone 1")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Address 1: Telephone 2")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the primary address.</para>
    /// <para>Display Name: Address 1: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Address 1: Telephone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 1: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Address 1: UPS Zone")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 1: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Address 1: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 2.</para>
    /// <para>Display Name: Address 2: ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Address 2: ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the secondary address type.</para>
    /// <para>Display Name: Address 2: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Address 2: Address Type")]
    public Lead_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<Lead_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the secondary address.</para>
    /// <para>Display Name: Address 2: City</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Address 2: City")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete secondary address.</para>
    /// <para>Display Name: Address 2</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Address 2")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the secondary address.</para>
    /// <para>Display Name: Address 2: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Address 2: Country/Region")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the county for the secondary address.</para>
    /// <para>Display Name: Address 2: County</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Address 2: County")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Fax</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Address 2: Fax")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Address 2: Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Address 2: Street 1")]
    [MaxLength(250)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Address 2: Street 2")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the secondary address.</para>
    /// <para>Display Name: Address 2: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("Address 2: Street 3")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
    /// <para>Display Name: Address 2: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Address 2: Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
    /// <para>Display Name: Address 2: Name</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Address 2: Name")]
    [MaxLength(100)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the post office box number of the secondary address.</para>
    /// <para>Display Name: Address 2: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Address 2: Post Office Box")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the secondary address.</para>
    /// <para>Display Name: Address 2: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Address 2: ZIP/Postal Code")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Address 2: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Address 2: Shipping Method")]
    public Lead_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<Lead_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province of the secondary address.</para>
    /// <para>Display Name: Address 2: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Address 2: State/Province")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the main phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Address 2: Telephone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type a second phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Address 2: Telephone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third phone number associated with the secondary address.</para>
    /// <para>Display Name: Address 2: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Address 2: Telephone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
    /// <para>Display Name: Address 2: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Address 2: UPS Zone")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
    /// <para>Display Name: Address 2: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Address 2: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Information about the budget amount of the lead's company or organization.</para>
    /// <para>Display Name: Budget Amount</para>
    /// </summary>
    [AttributeLogicalName("budgetamount")]
    [DisplayName("Budget Amount")]
    public decimal? BudgetAmount {
        get {
            return GetMoneyValue("budgetamount");
        }
        set {
            SetMoneyValue("budgetamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Budget Amount in base currency.</para>
    /// <para>Display Name: Budget Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("budgetamount_base")]
    [DisplayName("Budget Amount (Base)")]
    public decimal? BudgetAmount_Base {
        get {
            return GetMoneyValue("budgetamount_base");
        }
    }
    
    /// <summary>
    /// <para>Information about the budget status of the lead's company or organization.</para>
    /// <para>Display Name: Budget</para>
    /// </summary>
    [AttributeLogicalName("budgetstatus")]
    [DisplayName("Budget")]
    public budgetstatus? BudgetStatus {
        get {
            return GetOptionSetValue<budgetstatus>("budgetstatus");
        }
        set {
            SetOptionSetValue("budgetstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Stores Image of the Business Card</para>
    /// <para>Display Name: Business Card</para>
    /// </summary>
    [AttributeLogicalName("businesscard")]
    [DisplayName("Business Card")]
    public string BusinessCard {
        get {
            return GetAttributeValue<string>("businesscard");
        }
        set {
            SetAttributeValue("businesscard", value);
        }
    }
    
    /// <summary>
    /// <para>Stores Business Card Control Properties.</para>
    /// <para>Display Name: BusinessCardAttributes</para>
    /// </summary>
    [AttributeLogicalName("businesscardattributes")]
    [DisplayName("BusinessCardAttributes")]
    [MaxLength(4000)]
    public string BusinessCardAttributes {
        get {
            return GetAttributeValue<string>("businesscardattributes");
        }
        set {
            SetAttributeValue("businesscardattributes", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the campaign that the lead was generated from to track the effectiveness of marketing campaigns and identify  communications received by the lead.</para>
    /// <para>Display Name: Source Campaign</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Source Campaign")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the company associated with the lead. This becomes the account name when the lead is qualified and converted to a customer account.</para>
    /// <para>Display Name: Company Name</para>
    /// </summary>
    [AttributeLogicalName("companyname")]
    [DisplayName("Company Name")]
    [MaxLength(100)]
    public string CompanyName {
        get {
            return GetAttributeValue<string>("companyname");
        }
        set {
            SetAttributeValue("companyname", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality.</para>
    /// <para>Display Name: Confirm Interest</para>
    /// </summary>
    [AttributeLogicalName("confirminterest")]
    [DisplayName("Confirm Interest")]
    public bool? ConfirmInterest {
        get {
            return GetAttributeValue<bool?>("confirminterest");
        }
        set {
            SetAttributeValue("confirminterest", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact with which the lead is associated.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
    /// <para>Display Name: Decision Maker?</para>
    /// </summary>
    [AttributeLogicalName("decisionmaker")]
    [DisplayName("Decision Maker?")]
    public bool? DecisionMaker {
        get {
            return GetAttributeValue<bool?>("decisionmaker");
        }
        set {
            SetAttributeValue("decisionmaker", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the lead, such as an excerpt from the company's website.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the lead can be added to marketing lists, but will be excluded from the email.</para>
    /// <para>Display Name: Do not allow Bulk Emails</para>
    /// </summary>
    [AttributeLogicalName("donotbulkemail")]
    [DisplayName("Do not allow Bulk Emails")]
    public bool? DoNotBulkEMail {
        get {
            return GetAttributeValue<bool?>("donotbulkemail");
        }
        set {
            SetAttributeValue("donotbulkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead allows direct email sent from Microsoft Dynamics 365.</para>
    /// <para>Display Name: Do not allow Emails</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Do not allow Emails")]
    public bool? DoNotEMail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
        set {
            SetAttributeValue("donotemail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead allows faxes.</para>
    /// <para>Display Name: Do not allow Faxes</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Do not allow Faxes")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
        set {
            SetAttributeValue("donotfax", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead allows phone calls.</para>
    /// <para>Display Name: Do not allow Phone Calls</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Do not allow Phone Calls")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
        set {
            SetAttributeValue("donotphone", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead allows direct mail.</para>
    /// <para>Display Name: Do not allow Mails</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Do not allow Mails")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
        set {
            SetAttributeValue("donotpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead accepts marketing materials, such as brochures or catalogs. Leads that opt out can be excluded from marketing initiatives.</para>
    /// <para>Display Name: Marketing Material</para>
    /// </summary>
    [AttributeLogicalName("donotsendmm")]
    [DisplayName("Marketing Material")]
    public bool? DoNotSendMM {
        get {
            return GetAttributeValue<bool?>("donotsendmm");
        }
        set {
            SetAttributeValue("donotsendmm", value);
        }
    }
    
    /// <summary>
    /// <para>Type the primary email address for the lead.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [AttributeLogicalName("emailaddress1")]
    [DisplayName("Email")]
    [MaxLength(100)]
    public string EMailAddress1 {
        get {
            return GetAttributeValue<string>("emailaddress1");
        }
        set {
            SetAttributeValue("emailaddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the secondary email address for the lead.</para>
    /// <para>Display Name: Email Address 2</para>
    /// </summary>
    [AttributeLogicalName("emailaddress2")]
    [DisplayName("Email Address 2")]
    [MaxLength(100)]
    public string EMailAddress2 {
        get {
            return GetAttributeValue<string>("emailaddress2");
        }
        set {
            SetAttributeValue("emailaddress2", value);
        }
    }
    
    /// <summary>
    /// <para>Type a third email address for the lead.</para>
    /// <para>Display Name: Email Address 3</para>
    /// </summary>
    [AttributeLogicalName("emailaddress3")]
    [DisplayName("Email Address 3")]
    [MaxLength(100)]
    public string EMailAddress3 {
        get {
            return GetAttributeValue<string>("emailaddress3");
        }
        set {
            SetAttributeValue("emailaddress3", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Type the estimated revenue value that this lead will generate to assist in sales forecasting and planning.</para>
    /// <para>Display Name: Est. Value</para>
    /// </summary>
    [AttributeLogicalName("estimatedamount")]
    [DisplayName("Est. Value")]
    public decimal? EstimatedAmount {
        get {
            return GetMoneyValue("estimatedamount");
        }
        set {
            SetMoneyValue("estimatedamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Est. Value in base currency.</para>
    /// <para>Display Name: Est. Value (Base)</para>
    /// </summary>
    [AttributeLogicalName("estimatedamount_base")]
    [DisplayName("Est. Value (Base)")]
    public decimal? EstimatedAmount_Base {
        get {
            return GetMoneyValue("estimatedamount_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected close date for the lead, so that the sales team can schedule timely follow-up meetings to move the prospect to the next sales stage.</para>
    /// <para>Display Name: Est. Close Date</para>
    /// </summary>
    [AttributeLogicalName("estimatedclosedate")]
    [DisplayName("Est. Close Date")]
    public DateTime? EstimatedCloseDate {
        get {
            return GetAttributeValue<DateTime?>("estimatedclosedate");
        }
        set {
            SetAttributeValue("estimatedclosedate", value);
        }
    }
    
    /// <summary>
    /// <para>Type a numeric value of the lead's estimated value, such as a product quantity, if no revenue amount can be specified in the Est. Value field. This can be used for sales forecasting and planning.</para>
    /// <para>Display Name: Est. Value (deprecated)</para>
    /// </summary>
    [AttributeLogicalName("estimatedvalue")]
    [DisplayName("Est. Value (deprecated)")]
    public double? EstimatedValue {
        get {
            return GetAttributeValue<double?>("estimatedvalue");
        }
        set {
            SetAttributeValue("estimatedvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
    /// <para>Display Name: Evaluate Fit</para>
    /// </summary>
    [AttributeLogicalName("evaluatefit")]
    [DisplayName("Evaluate Fit")]
    public bool? EvaluateFit {
        get {
            return GetAttributeValue<bool?>("evaluatefit");
        }
        set {
            SetAttributeValue("evaluatefit", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the primary contact for the lead.</para>
    /// <para>Display Name: Fax</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Fax")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    [DisplayName("First Name")]
    [MaxLength(50)]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the lead.</para>
    /// <para>Display Name: Follow Email Activity</para>
    /// </summary>
    [AttributeLogicalName("followemail")]
    [DisplayName("Follow Email Activity")]
    public bool? FollowEmail {
        get {
            return GetAttributeValue<bool?>("followemail");
        }
        set {
            SetAttributeValue("followemail", value);
        }
    }
    
    /// <summary>
    /// <para>Combines and shows the lead's first and last names so the full name can be displayed in views and reports.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    [DisplayName("Name")]
    [MaxLength(160)]
    public string FullName {
        get {
            return GetAttributeValue<string>("fullname");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary industry in which the lead's business is focused, for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: Industry</para>
    /// </summary>
    [AttributeLogicalName("industrycode")]
    [DisplayName("Industry")]
    public Lead_IndustryCode? IndustryCode {
        get {
            return GetOptionSetValue<Lead_IndustryCode>("industrycode");
        }
        set {
            SetOptionSetValue("industrycode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
    /// <para>Display Name: Initial Communication</para>
    /// </summary>
    [AttributeLogicalName("initialcommunication")]
    [DisplayName("Initial Communication")]
    public initialcommunication? InitialCommunication {
        get {
            return GetOptionSetValue<initialcommunication>("initialcommunication");
        }
        set {
            SetOptionSetValue("initialcommunication", value);
        }
    }
    
    /// <summary>
    /// <para>Type the job title of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Job Title</para>
    /// </summary>
    [AttributeLogicalName("jobtitle")]
    [DisplayName("Job Title")]
    [MaxLength(100)]
    public string JobTitle {
        get {
            return GetAttributeValue<string>("jobtitle");
        }
        set {
            SetAttributeValue("jobtitle", value);
        }
    }
    
    /// <summary>
    /// <para>Type the last name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    [DisplayName("Last Name")]
    [MaxLength(50)]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date when the lead was last included in a marketing campaign or quick campaign.</para>
    /// <para>Display Name: Last Campaign Date</para>
    /// </summary>
    [AttributeLogicalName("lastusedincampaign")]
    [DisplayName("Last Campaign Date")]
    public DateTime? LastUsedInCampaign {
        get {
            return GetAttributeValue<DateTime?>("lastusedincampaign");
        }
        set {
            SetAttributeValue("lastusedincampaign", value);
        }
    }
    
    /// <summary>
    /// <para>Select a rating value to indicate the lead's potential to become a customer.</para>
    /// <para>Display Name: Rating</para>
    /// </summary>
    [AttributeLogicalName("leadqualitycode")]
    [DisplayName("Rating")]
    public Lead_LeadQualityCode? LeadQualityCode {
        get {
            return GetOptionSetValue<Lead_LeadQualityCode>("leadqualitycode");
        }
        set {
            SetOptionSetValue("leadqualitycode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the primary marketing source that prompted the lead to contact you.</para>
    /// <para>Display Name: Lead Source</para>
    /// </summary>
    [AttributeLogicalName("leadsourcecode")]
    [DisplayName("Lead Source")]
    public Lead_LeadSourceCode? LeadSourceCode {
        get {
            return GetOptionSetValue<Lead_LeadSourceCode>("leadsourcecode");
        }
        set {
            SetOptionSetValue("leadsourcecode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the master lead for merge.</para>
    /// <para>Display Name: Master ID</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("Master ID")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
    }
    
    /// <summary>
    /// <para>Tells whether the lead has been merged with another lead.</para>
    /// <para>Display Name: Merged</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Merged")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Type the middle name or initial of the primary contact for the lead to make sure the prospect is addressed correctly.</para>
    /// <para>Display Name: Middle Name</para>
    /// </summary>
    [AttributeLogicalName("middlename")]
    [DisplayName("Middle Name")]
    [MaxLength(50)]
    public string MiddleName {
        get {
            return GetAttributeValue<string>("middlename");
        }
        set {
            SetAttributeValue("middlename", value);
        }
    }
    
    /// <summary>
    /// <para>Type the mobile phone number for the primary contact for the lead.</para>
    /// <para>Display Name: Mobile Phone</para>
    /// </summary>
    [AttributeLogicalName("mobilephone")]
    [DisplayName("Mobile Phone")]
    [MaxLength(20)]
    public string MobilePhone {
        get {
            return GetAttributeValue<string>("mobilephone");
        }
        set {
            SetAttributeValue("mobilephone", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Choose how high the level of need is for the lead's company.</para>
    /// <para>Display Name: Need</para>
    /// </summary>
    [AttributeLogicalName("need")]
    [DisplayName("Need")]
    public need? Need {
        get {
            return GetOptionSetValue<need>("need");
        }
        set {
            SetOptionSetValue("need", value);
        }
    }
    
    /// <summary>
    /// <para>Type the number of employees that work at the company associated with the lead, for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: No. of Employees</para>
    /// </summary>
    [AttributeLogicalName("numberofemployees")]
    [DisplayName("No. of Employees")]
    [Range(0, 1000000)]
    public int? NumberOfEmployees {
        get {
            return GetAttributeValue<int?>("numberofemployees");
        }
        set {
            SetAttributeValue("numberofemployees", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>This attribute is used for Sample Service Business Processes.</para>
    /// <para>Display Name: Originating Case</para>
    /// </summary>
    [AttributeLogicalName("originatingcaseid")]
    [DisplayName("Originating Case")]
    public EntityReference OriginatingCaseId {
        get {
            return GetAttributeValue<EntityReference>("originatingcaseid");
        }
        set {
            SetAttributeValue("originatingcaseid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Type the pager number for the primary contact for the lead.</para>
    /// <para>Display Name: Pager</para>
    /// </summary>
    [AttributeLogicalName("pager")]
    [DisplayName("Pager")]
    [MaxLength(20)]
    public string Pager {
        get {
            return GetAttributeValue<string>("pager");
        }
        set {
            SetAttributeValue("pager", value);
        }
    }
    
    /// <summary>
    /// <para>Choose an account to connect this lead to, so that the relationship is visible in reports and analytics.</para>
    /// <para>Display Name: Parent Account for lead</para>
    /// </summary>
    [AttributeLogicalName("parentaccountid")]
    [DisplayName("Parent Account for lead")]
    public EntityReference ParentAccountId {
        get {
            return GetAttributeValue<EntityReference>("parentaccountid");
        }
        set {
            SetAttributeValue("parentaccountid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose a contact to connect this lead to, so that the relationship is visible in reports and analytics.</para>
    /// <para>Display Name: Parent Contact for lead</para>
    /// </summary>
    [AttributeLogicalName("parentcontactid")]
    [DisplayName("Parent Contact for lead")]
    public EntityReference ParentContactId {
        get {
            return GetAttributeValue<EntityReference>("parentcontactid");
        }
        set {
            SetAttributeValue("parentcontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the lead participates in workflow rules.</para>
    /// <para>Display Name: Participates in Workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participates in Workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred method of contact.</para>
    /// <para>Display Name: Preferred Method of Contact</para>
    /// </summary>
    [AttributeLogicalName("preferredcontactmethodcode")]
    [DisplayName("Preferred Method of Contact")]
    public Lead_PreferredContactMethodCode? PreferredContactMethodCode {
        get {
            return GetOptionSetValue<Lead_PreferredContactMethodCode>("preferredcontactmethodcode");
        }
        set {
            SetOptionSetValue("preferredcontactmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Lead_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Lead_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
    /// <para>Display Name: Purchase Process</para>
    /// </summary>
    [AttributeLogicalName("purchaseprocess")]
    [DisplayName("Purchase Process")]
    public purchaseprocess? PurchaseProcess {
        get {
            return GetOptionSetValue<purchaseprocess>("purchaseprocess");
        }
        set {
            SetOptionSetValue("purchaseprocess", value);
        }
    }
    
    /// <summary>
    /// <para>Choose how long the lead will likely take to make the purchase, so the sales team will be aware.</para>
    /// <para>Display Name: Purchase Timeframe</para>
    /// </summary>
    [AttributeLogicalName("purchasetimeframe")]
    [DisplayName("Purchase Timeframe")]
    public purchasetimeframe? PurchaseTimeFrame {
        get {
            return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
        }
        set {
            SetOptionSetValue("purchasetimeframe", value);
        }
    }
    
    /// <summary>
    /// <para>Type comments about the qualification or scoring of the lead.</para>
    /// <para>Display Name: Qualification Comments</para>
    /// </summary>
    [AttributeLogicalName("qualificationcomments")]
    [DisplayName("Qualification Comments")]
    public string QualificationComments {
        get {
            return GetAttributeValue<string>("qualificationcomments");
        }
        set {
            SetAttributeValue("qualificationcomments", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the opportunity that the lead was qualified on and then converted to.</para>
    /// <para>Display Name: Qualifying Opportunity</para>
    /// </summary>
    [AttributeLogicalName("qualifyingopportunityid")]
    [DisplayName("Qualifying Opportunity")]
    public EntityReference QualifyingOpportunityId {
        get {
            return GetAttributeValue<EntityReference>("qualifyingopportunityid");
        }
        set {
            SetAttributeValue("qualifyingopportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Related Campaign Response.</para>
    /// <para>Display Name: Related Campaign Response</para>
    /// </summary>
    [AttributeLogicalName("relatedobjectid")]
    [DisplayName("Related Campaign Response")]
    public EntityReference RelatedObjectId {
        get {
            return GetAttributeValue<EntityReference>("relatedobjectid");
        }
        set {
            SetAttributeValue("relatedobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the annual revenue of the company associated with the lead to provide an understanding of the prospect's business.</para>
    /// <para>Display Name: Annual Revenue</para>
    /// </summary>
    [AttributeLogicalName("revenue")]
    [DisplayName("Annual Revenue")]
    public decimal? Revenue {
        get {
            return GetMoneyValue("revenue");
        }
        set {
            SetMoneyValue("revenue", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Annual Revenue in base currency.</para>
    /// <para>Display Name: Annual Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("revenue_base")]
    [DisplayName("Annual Revenue (Base)")]
    public decimal? Revenue_Base {
        get {
            return GetMoneyValue("revenue_base");
        }
    }
    
    /// <summary>
    /// <para>Type the Standard Industrial Classification (SIC) code that indicates the lead's primary industry of business for use in marketing segmentation and demographic analysis.</para>
    /// <para>Display Name: SIC Code</para>
    /// </summary>
    [AttributeLogicalName("sic")]
    [DisplayName("SIC Code")]
    [MaxLength(20)]
    public string SIC {
        get {
            return GetAttributeValue<string>("sic");
        }
        set {
            SetAttributeValue("sic", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the Lead record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Select the sales stage of this lead to aid the sales team in their efforts to convert this lead to an opportunity.</para>
    /// <para>Display Name: Sales Stage</para>
    /// </summary>
    [AttributeLogicalName("salesstage")]
    [DisplayName("Sales Stage")]
    public lead_salesstage? SalesStage {
        get {
            return GetOptionSetValue<lead_salesstage>("salesstage");
        }
        set {
            SetOptionSetValue("salesstage", value);
        }
    }
    
    /// <summary>
    /// <para>Select the sales process stage for the lead to help determine the probability of the lead converting to an opportunity.</para>
    /// <para>Display Name: Sales Stage Code</para>
    /// </summary>
    [AttributeLogicalName("salesstagecode")]
    [DisplayName("Sales Stage Code")]
    public Lead_SalesStageCode? SalesStageCode {
        get {
            return GetOptionSetValue<Lead_SalesStageCode>("salesstagecode");
        }
        set {
            SetOptionSetValue("salesstagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the salutation of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
    /// <para>Display Name: Salutation</para>
    /// </summary>
    [AttributeLogicalName("salutation")]
    [DisplayName("Salutation")]
    [MaxLength(100)]
    public string Salutation {
        get {
            return GetAttributeValue<string>("salutation");
        }
        set {
            SetAttributeValue("salutation", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
    /// <para>Display Name: Schedule Follow Up (Prospect)</para>
    /// </summary>
    [AttributeLogicalName("schedulefollowup_prospect")]
    [DisplayName("Schedule Follow Up (Prospect)")]
    public DateTime? ScheduleFollowUp_Prospect {
        get {
            return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
        }
        set {
            SetAttributeValue("schedulefollowup_prospect", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
    /// <para>Display Name: Schedule Follow Up (Qualify)</para>
    /// </summary>
    [AttributeLogicalName("schedulefollowup_qualify")]
    [DisplayName("Schedule Follow Up (Qualify)")]
    public DateTime? ScheduleFollowUp_Qualify {
        get {
            return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
        }
        set {
            SetAttributeValue("schedulefollowup_qualify", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the lead is open, qualified, or disqualified. Qualified and disqualified leads are read-only and can't be edited unless they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public LeadState? StateCode {
        get {
            return GetOptionSetValue<LeadState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the lead's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Lead_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Lead_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subject or descriptive name, such as the expected order, company name, or marketing source list, to identify the lead.</para>
    /// <para>Display Name: Topic</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Topic")]
    [MaxLength(300)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Number of users or conversations followed the record</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Type the work phone number for the primary contact for the lead.</para>
    /// <para>Display Name: Business Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone1")]
    [DisplayName("Business Phone")]
    [MaxLength(50)]
    public string Telephone1 {
        get {
            return GetAttributeValue<string>("telephone1");
        }
        set {
            SetAttributeValue("telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the home phone number for the primary contact for the lead.</para>
    /// <para>Display Name: Home Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone2")]
    [DisplayName("Home Phone")]
    [MaxLength(50)]
    public string Telephone2 {
        get {
            return GetAttributeValue<string>("telephone2");
        }
        set {
            SetAttributeValue("telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Type an alternate phone number for the primary contact for the lead.</para>
    /// <para>Display Name: Other Phone</para>
    /// </summary>
    [AttributeLogicalName("telephone3")]
    [DisplayName("Other Phone")]
    [MaxLength(50)]
    public string Telephone3 {
        get {
            return GetAttributeValue<string>("telephone3");
        }
        set {
            SetAttributeValue("telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Total time spent for emails (read and write) and meetings by me in relation to the lead record.</para>
    /// <para>Display Name: Time Spent by me</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Time Spent by me")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Type the website URL for the company associated with this lead.</para>
    /// <para>Display Name: Website</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Website")]
    [MaxLength(200)]
    public string WebSiteUrl {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the lead's company name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
    /// <para>Display Name: Yomi Company Name</para>
    /// </summary>
    [AttributeLogicalName("yomicompanyname")]
    [DisplayName("Yomi Company Name")]
    [MaxLength(100)]
    public string YomiCompanyName {
        get {
            return GetAttributeValue<string>("yomicompanyname");
        }
        set {
            SetAttributeValue("yomicompanyname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the lead's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
    /// <para>Display Name: Yomi First Name</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    [DisplayName("Yomi First Name")]
    [MaxLength(150)]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Combines and shows the lead's Yomi first and last names so the full phonetic name can be displayed in views and reports.</para>
    /// <para>Display Name: Yomi Full Name</para>
    /// </summary>
    [AttributeLogicalName("yomifullname")]
    [DisplayName("Yomi Full Name")]
    [MaxLength(450)]
    public string YomiFullName {
        get {
            return GetAttributeValue<string>("yomifullname");
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the lead's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
    /// <para>Display Name: Yomi Last Name</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    [DisplayName("Yomi Last Name")]
    [MaxLength(150)]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phonetic spelling of the lead's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
    /// <para>Display Name: Yomi Middle Name</para>
    /// </summary>
    [AttributeLogicalName("yomimiddlename")]
    [DisplayName("Yomi Middle Name")]
    [MaxLength(150)]
    public string YomiMiddleName {
        get {
            return GetAttributeValue<string>("yomimiddlename");
        }
        set {
            SetAttributeValue("yomimiddlename", value);
        }
    }
    
    /// <summary>
    /// <para>Describes whether lead is opted out or not</para>
    /// <para>Display Name: GDPR Optout</para>
    /// </summary>
    [AttributeLogicalName("msdyn_gdproptout")]
    [DisplayName("GDPR Optout")]
    public bool? msdyn_gdproptout {
        get {
            return GetAttributeValue<bool?>("msdyn_gdproptout");
        }
        set {
            SetAttributeValue("msdyn_gdproptout", value);
        }
    }
    
    /// <summary>
    /// <para>Whether the Opportunity created when qualifying this Lead is for an Item- based or a Work-based sale</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ordertype")]
    [DisplayName("Type")]
    public Lead_msdyn_ordertype? msdyn_ordertype {
        get {
            return GetOptionSetValue<Lead_msdyn_ordertype>("msdyn_ordertype");
        }
        set {
            SetOptionSetValue("msdyn_ordertype", value);
        }
    }
    
    [RelationshipSchemaName("CampaignActivity_Leads")]
    public IEnumerable<CampaignActivity> CampaignActivity_Leads {
        get {
            return GetRelatedEntities<CampaignActivity>("CampaignActivity_Leads", null);
        }
        set {
            SetRelatedEntities("CampaignActivity_Leads", null, value);
        }
    }
    
    [AttributeLogicalName("relatedobjectid")]
    [RelationshipSchemaName("CampaignResponse_Lead")]
    public CampaignResponse CampaignResponse_Lead {
        get {
            return GetRelatedEntity<CampaignResponse>("CampaignResponse_Lead", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_Lead", null, value);
        }
    }
    
    [RelationshipSchemaName("CreatedLead_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> CreatedLead_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("CreatedLead_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("CreatedLead_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_ActivityPointers")]
    public IEnumerable<ActivityPointer> Lead_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Lead_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Lead_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_Appointments")]
    public IEnumerable<Appointment> Lead_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Lead_Appointments", null);
        }
        set {
            SetRelatedEntities("Lead_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_Email_EmailSender")]
    public IEnumerable<Email> Lead_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Lead_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Lead_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_Emails")]
    public IEnumerable<Email> Lead_Emails {
        get {
            return GetRelatedEntities<Email>("Lead_Emails", null);
        }
        set {
            SetRelatedEntities("Lead_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_Phonecalls")]
    public IEnumerable<PhoneCall> Lead_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Lead_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Lead_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_ProcessSessions")]
    public IEnumerable<ProcessSession> Lead_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Lead_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Lead_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Lead_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Lead_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Lead_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Lead_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Lead_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Lead_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_SyncErrors")]
    public IEnumerable<SyncError> Lead_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Lead_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Lead_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Lead_Tasks")]
    public IEnumerable<Task> Lead_Tasks {
        get {
            return GetRelatedEntities<Task>("Lead_Tasks", null);
        }
        set {
            SetRelatedEntities("Lead_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("originatingcaseid")]
    [RelationshipSchemaName("OriginatingCase_Lead")]
    public Incident OriginatingCase_Lead {
        get {
            return GetRelatedEntity<Incident>("OriginatingCase_Lead", null);
        }
        set {
            SetRelatedEntity("OriginatingCase_Lead", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_master_lead", EntityRole.Referenced)]
    public IEnumerable<Lead> Referencedlead_master_lead {
        get {
            return GetRelatedEntities<Lead>("lead_master_lead", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lead_master_lead", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("lead_master_lead", EntityRole.Referencing)]
    public Lead Referencinglead_master_lead {
        get {
            return GetRelatedEntity<Lead>("lead_master_lead", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lead_master_lead", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("SourceLead_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> SourceLead_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("SourceLead_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("SourceLead_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("account_originating_lead")]
    public IEnumerable<Account> account_originating_lead {
        get {
            return GetRelatedEntities<Account>("account_originating_lead", null);
        }
        set {
            SetRelatedEntities("account_originating_lead", null, value);
        }
    }
    
    [RelationshipSchemaName("accountleads_association")]
    public IEnumerable<Account> accountleads_association {
        get {
            return GetRelatedEntities<Account>("accountleads_association", null);
        }
        set {
            SetRelatedEntities("accountleads_association", null, value);
        }
    }
    
    [AttributeLogicalName("campaignid")]
    [RelationshipSchemaName("campaign_leads")]
    public Campaign campaign_leads {
        get {
            return GetRelatedEntity<Campaign>("campaign_leads", null);
        }
        set {
            SetRelatedEntity("campaign_leads", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_originating_lead")]
    public IEnumerable<Contact> contact_originating_lead {
        get {
            return GetRelatedEntities<Contact>("contact_originating_lead", null);
        }
        set {
            SetRelatedEntities("contact_originating_lead", null, value);
        }
    }
    
    [RelationshipSchemaName("contactleads_association")]
    public IEnumerable<Contact> contactleads_association {
        get {
            return GetRelatedEntities<Contact>("contactleads_association", null);
        }
        set {
            SetRelatedEntities("contactleads_association", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_CampaignResponses")]
    public IEnumerable<CampaignResponse> lead_CampaignResponses {
        get {
            return GetRelatedEntities<CampaignResponse>("lead_CampaignResponses", null);
        }
        set {
            SetRelatedEntities("lead_CampaignResponses", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_activity_parties")]
    public IEnumerable<ActivityParty> lead_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("lead_activity_parties", null);
        }
        set {
            SetRelatedEntities("lead_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("lead_customer_accounts")]
    public Account lead_customer_accounts {
        get {
            return GetRelatedEntity<Account>("lead_customer_accounts", null);
        }
        set {
            SetRelatedEntity("lead_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("lead_customer_contacts")]
    public Contact lead_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("lead_customer_contacts", null);
        }
        set {
            SetRelatedEntity("lead_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> lead_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("lead_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("lead_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_msfp_alerts")]
    public IEnumerable<msfp_alert> lead_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("lead_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("lead_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("lead_owning_user")]
    public SystemUser lead_owning_user {
        get {
            return GetRelatedEntity<SystemUser>("lead_owning_user", null);
        }
        set {
            SetRelatedEntity("lead_owning_user", null, value);
        }
    }
    
    [AttributeLogicalName("parentaccountid")]
    [RelationshipSchemaName("lead_parent_account")]
    public Account lead_parent_account {
        get {
            return GetRelatedEntity<Account>("lead_parent_account", null);
        }
        set {
            SetRelatedEntity("lead_parent_account", null, value);
        }
    }
    
    [AttributeLogicalName("parentcontactid")]
    [RelationshipSchemaName("lead_parent_contact")]
    public Contact lead_parent_contact {
        get {
            return GetRelatedEntity<Contact>("lead_parent_contact", null);
        }
        set {
            SetRelatedEntity("lead_parent_contact", null, value);
        }
    }
    
    [AttributeLogicalName("qualifyingopportunityid")]
    [RelationshipSchemaName("lead_qualifying_opportunity")]
    public Opportunity lead_qualifying_opportunity {
        get {
            return GetRelatedEntity<Opportunity>("lead_qualifying_opportunity", null);
        }
        set {
            SetRelatedEntity("lead_qualifying_opportunity", null, value);
        }
    }
    
    [RelationshipSchemaName("leadproduct_association")]
    public IEnumerable<Product> leadproduct_association {
        get {
            return GetRelatedEntities<Product>("leadproduct_association", null);
        }
        set {
            SetRelatedEntities("leadproduct_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_lead_createdonbehalfby")]
    public SystemUser lk_lead_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_lead_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_lead_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
    public SystemUser lk_lead_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_lead_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_lead_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_leadbase_createdby")]
    public SystemUser lk_leadbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_leadbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_leadbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_leadbase_modifiedby")]
    public SystemUser lk_leadbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_leadbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_leadbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_originating_lead")]
    public IEnumerable<Opportunity> opportunity_originating_lead {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_originating_lead", null);
        }
        set {
            SetRelatedEntities("opportunity_originating_lead", null, value);
        }
    }
    
    public static Lead Retrieve(IOrganizationService service, Guid id, params Expression<Func<Lead,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: LeadProduct</para>
/// </summary>
[EntityLogicalName("leadproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class LeadProduct : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "leadproduct";
    
    public const int EntityTypeCode = 27;
    
    public LeadProduct() : 
            base(EntityLogicalName) {
    }
    
    public LeadProduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("leadproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("leadproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the lead product.</para>
    /// </summary>
    [AttributeLogicalName("leadproductid")]
    public Guid? LeadProductId {
        get {
            return GetAttributeValue<Guid?>("leadproductid");
        }
        set {
            SetId("leadproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    [AttributeLogicalName("leadid")]
    public Guid? LeadId {
        get {
            return GetAttributeValue<Guid?>("leadid");
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("productid")]
    public Guid? ProductId {
        get {
            return GetAttributeValue<Guid?>("productid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static LeadProduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<LeadProduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Potential revenue-generating event, or sale to an account, which needs to be tracked through a sales process to completion.</para>
/// <para>Display Name: Opportunity</para>
/// </summary>
[EntityLogicalName("opportunity")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Opportunity : ExtendedEntity<OpportunityState, Opportunity_StatusCode> {
    
    public const string EntityLogicalName = "opportunity";
    
    public const int EntityTypeCode = 3;
    
    public Opportunity() : 
            base(EntityLogicalName) {
    }
    
    public Opportunity(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("opportunityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the opportunity.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [AttributeLogicalName("opportunityid")]
    [DisplayName("Opportunity")]
    public Guid? OpportunityId {
        get {
            return GetAttributeValue<Guid?>("opportunityid");
        }
        set {
            SetId("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the opportunity is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the opportunity was closed or canceled.</para>
    /// <para>Display Name: Actual Close Date</para>
    /// </summary>
    [AttributeLogicalName("actualclosedate")]
    [DisplayName("Actual Close Date")]
    public DateTime? ActualCloseDate {
        get {
            return GetAttributeValue<DateTime?>("actualclosedate");
        }
        set {
            SetAttributeValue("actualclosedate", value);
        }
    }
    
    /// <summary>
    /// <para>Type the actual revenue amount for the opportunity for reporting and analysis of estimated versus actual sales. Field defaults to the Est. Revenue value when an opportunity is won.</para>
    /// <para>Display Name: Actual Revenue</para>
    /// </summary>
    [AttributeLogicalName("actualvalue")]
    [DisplayName("Actual Revenue")]
    public decimal? ActualValue {
        get {
            return GetMoneyValue("actualvalue");
        }
        set {
            SetMoneyValue("actualvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Actual Revenue in base currency.</para>
    /// <para>Display Name: Actual Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("actualvalue_base")]
    [DisplayName("Actual Revenue (Base)")]
    public decimal? ActualValue_Base {
        get {
            return GetMoneyValue("actualvalue_base");
        }
    }
    
    /// <summary>
    /// <para>Type a value between 0 and 1,000,000,000,000 to indicate the lead's potential available budget.</para>
    /// <para>Display Name: Budget Amount</para>
    /// </summary>
    [AttributeLogicalName("budgetamount")]
    [DisplayName("Budget Amount")]
    public decimal? BudgetAmount {
        get {
            return GetMoneyValue("budgetamount");
        }
        set {
            SetMoneyValue("budgetamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Budget Amount in base currency.</para>
    /// <para>Display Name: Budget Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("budgetamount_base")]
    [DisplayName("Budget Amount (Base)")]
    public decimal? BudgetAmount_Base {
        get {
            return GetMoneyValue("budgetamount_base");
        }
    }
    
    /// <summary>
    /// <para>Select the likely budget status for the lead's company. This may help determine the lead rating or your sales approach.</para>
    /// <para>Display Name: Budget</para>
    /// </summary>
    [AttributeLogicalName("budgetstatus")]
    [DisplayName("Budget")]
    public budgetstatus? BudgetStatus {
        get {
            return GetOptionSetValue<budgetstatus>("budgetstatus");
        }
        set {
            SetOptionSetValue("budgetstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the campaign that the opportunity was created from. The ID is used for tracking the success of the campaign.</para>
    /// <para>Display Name: Source Campaign</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Source Campaign")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether the proposal feedback has been captured for the opportunity.</para>
    /// <para>Display Name: Proposal Feedback Captured</para>
    /// </summary>
    [AttributeLogicalName("captureproposalfeedback")]
    [DisplayName("Proposal Feedback Captured")]
    public bool? CaptureProposalFeedback {
        get {
            return GetAttributeValue<bool?>("captureproposalfeedback");
        }
        set {
            SetAttributeValue("captureproposalfeedback", value);
        }
    }
    
    /// <summary>
    /// <para>Type a number from 0 to 100 that represents the likelihood of closing the opportunity. This can aid the sales team in their efforts to convert the opportunity in a sale.</para>
    /// <para>Display Name: Probability</para>
    /// </summary>
    [AttributeLogicalName("closeprobability")]
    [DisplayName("Probability")]
    [Range(0, 100)]
    public int? CloseProbability {
        get {
            return GetAttributeValue<int?>("closeprobability");
        }
        set {
            SetAttributeValue("closeprobability", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether a final proposal has been completed for the opportunity.</para>
    /// <para>Display Name: Final Proposal Ready</para>
    /// </summary>
    [AttributeLogicalName("completefinalproposal")]
    [DisplayName("Final Proposal Ready")]
    public bool? CompleteFinalProposal {
        get {
            return GetAttributeValue<bool?>("completefinalproposal");
        }
        set {
            SetAttributeValue("completefinalproposal", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether an internal review has been completed for this opportunity.</para>
    /// <para>Display Name: Complete Internal Review</para>
    /// </summary>
    [AttributeLogicalName("completeinternalreview")]
    [DisplayName("Complete Internal Review")]
    public bool? CompleteInternalReview {
        get {
            return GetAttributeValue<bool?>("completeinternalreview");
        }
        set {
            SetAttributeValue("completeinternalreview", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality and the probability of it turning into an opportunity.</para>
    /// <para>Display Name: Confirm Interest</para>
    /// </summary>
    [AttributeLogicalName("confirminterest")]
    [DisplayName("Confirm Interest")]
    public bool? ConfirmInterest {
        get {
            return GetAttributeValue<bool?>("confirminterest");
        }
        set {
            SetAttributeValue("confirminterest", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact associated with the opportunity.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type notes about the company or organization associated with the opportunity.</para>
    /// <para>Display Name: Current Situation</para>
    /// </summary>
    [AttributeLogicalName("currentsituation")]
    [DisplayName("Current Situation")]
    public string CurrentSituation {
        get {
            return GetAttributeValue<string>("currentsituation");
        }
        set {
            SetAttributeValue("currentsituation", value);
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.</para>
    /// <para>Display Name: Potential Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Potential Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Type some notes about the customer's requirements, to help the sales team identify products and services that could meet their requirements.</para>
    /// <para>Display Name: Customer Need</para>
    /// </summary>
    [AttributeLogicalName("customerneed")]
    [DisplayName("Customer Need")]
    public string CustomerNeed {
        get {
            return GetAttributeValue<string>("customerneed");
        }
        set {
            SetAttributeValue("customerneed", value);
        }
    }
    
    /// <summary>
    /// <para>Type notes about the customer's pain points to help the sales team identify products and services that could address these pain points.</para>
    /// <para>Display Name: Customer Pain Points</para>
    /// </summary>
    [AttributeLogicalName("customerpainpoints")]
    [DisplayName("Customer Pain Points")]
    public string CustomerPainPoints {
        get {
            return GetAttributeValue<string>("customerpainpoints");
        }
        set {
            SetAttributeValue("customerpainpoints", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
    /// <para>Display Name: Decision Maker?</para>
    /// </summary>
    [AttributeLogicalName("decisionmaker")]
    [DisplayName("Decision Maker?")]
    public bool? DecisionMaker {
        get {
            return GetAttributeValue<bool?>("decisionmaker");
        }
        set {
            SetAttributeValue("decisionmaker", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the opportunity, such as possible products to sell or past purchases from the customer.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether a proposal has been developed for the opportunity.</para>
    /// <para>Display Name: Develop Proposal</para>
    /// </summary>
    [AttributeLogicalName("developproposal")]
    [DisplayName("Develop Proposal")]
    public bool? DevelopProposal {
        get {
            return GetAttributeValue<bool?>("developproposal");
        }
        set {
            SetAttributeValue("developproposal", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount amount for the opportunity if the customer is eligible for special savings.</para>
    /// <para>Display Name: Opportunity Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("discountamount")]
    [DisplayName("Opportunity Discount Amount")]
    public decimal? DiscountAmount {
        get {
            return GetMoneyValue("discountamount");
        }
        set {
            SetMoneyValue("discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Opportunity Discount Amount in base currency.</para>
    /// <para>Display Name: Opportunity Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("discountamount_base")]
    [DisplayName("Opportunity Discount Amount (Base)")]
    public decimal? DiscountAmount_Base {
        get {
            return GetMoneyValue("discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Type the discount rate that should be applied to the Product Totals field to include additional savings for the customer in the opportunity.</para>
    /// <para>Display Name: Opportunity Discount (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Opportunity Discount (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected closing date of the opportunity to help make accurate revenue forecasts.</para>
    /// <para>Display Name: Est. Close Date</para>
    /// </summary>
    [AttributeLogicalName("estimatedclosedate")]
    [DisplayName("Est. Close Date")]
    public DateTime? EstimatedCloseDate {
        get {
            return GetAttributeValue<DateTime?>("estimatedclosedate");
        }
        set {
            SetAttributeValue("estimatedclosedate", value);
        }
    }
    
    /// <summary>
    /// <para>Type the estimated revenue amount to indicate the potential sale or value of the opportunity for revenue forecasting. This field can be either system-populated or editable based on the selection in the Revenue field.</para>
    /// <para>Display Name: Est. Revenue</para>
    /// </summary>
    [AttributeLogicalName("estimatedvalue")]
    [DisplayName("Est. Revenue")]
    public decimal? EstimatedValue {
        get {
            return GetMoneyValue("estimatedvalue");
        }
        set {
            SetMoneyValue("estimatedvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Est. Revenue in base currency.</para>
    /// <para>Display Name: Est. Revenue (Base)</para>
    /// </summary>
    [AttributeLogicalName("estimatedvalue_base")]
    [DisplayName("Est. Revenue (Base)")]
    public decimal? EstimatedValue_Base {
        get {
            return GetMoneyValue("estimatedvalue_base");
        }
    }
    
    /// <summary>
    /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
    /// <para>Display Name: Evaluate Fit</para>
    /// </summary>
    [AttributeLogicalName("evaluatefit")]
    [DisplayName("Evaluate Fit")]
    public bool? EvaluateFit {
        get {
            return GetAttributeValue<bool?>("evaluatefit");
        }
        set {
            SetAttributeValue("evaluatefit", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Choose whether the sales team has recorded detailed notes on the proposals and the account's responses.</para>
    /// <para>Display Name: File Debrief</para>
    /// </summary>
    [AttributeLogicalName("filedebrief")]
    [DisplayName("File Debrief")]
    public bool? FileDebrief {
        get {
            return GetAttributeValue<bool?>("filedebrief");
        }
        set {
            SetAttributeValue("filedebrief", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the final decision of the opportunity was made.</para>
    /// <para>Display Name: Final Decision Date</para>
    /// </summary>
    [AttributeLogicalName("finaldecisiondate")]
    [DisplayName("Final Decision Date")]
    public DateTime? FinalDecisionDate {
        get {
            return GetAttributeValue<DateTime?>("finaldecisiondate");
        }
        set {
            SetAttributeValue("finaldecisiondate", value);
        }
    }
    
    /// <summary>
    /// <para>Type the cost of freight or shipping for the products included in the opportunity for use in calculating the Total Amount field.</para>
    /// <para>Display Name: Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("freightamount")]
    [DisplayName("Freight Amount")]
    public decimal? FreightAmount {
        get {
            return GetMoneyValue("freightamount");
        }
        set {
            SetMoneyValue("freightamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Freight Amount in base currency.</para>
    /// <para>Display Name: Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("freightamount_base")]
    [DisplayName("Freight Amount (Base)")]
    public decimal? FreightAmount_Base {
        get {
            return GetMoneyValue("freightamount_base");
        }
    }
    
    /// <summary>
    /// <para>Select whether information about competitors is included.</para>
    /// <para>Display Name: Identify Competitors</para>
    /// </summary>
    [AttributeLogicalName("identifycompetitors")]
    [DisplayName("Identify Competitors")]
    public bool? IdentifyCompetitors {
        get {
            return GetAttributeValue<bool?>("identifycompetitors");
        }
        set {
            SetAttributeValue("identifycompetitors", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the customer contacts for this opportunity have been identified.</para>
    /// <para>Display Name: Identify Customer Contacts</para>
    /// </summary>
    [AttributeLogicalName("identifycustomercontacts")]
    [DisplayName("Identify Customer Contacts")]
    public bool? IdentifyCustomerContacts {
        get {
            return GetAttributeValue<bool?>("identifycustomercontacts");
        }
        set {
            SetAttributeValue("identifycustomercontacts", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether you have recorded who will pursue the opportunity.</para>
    /// <para>Display Name: Identify Sales Team</para>
    /// </summary>
    [AttributeLogicalName("identifypursuitteam")]
    [DisplayName("Identify Sales Team")]
    public bool? IdentifyPursuitTeam {
        get {
            return GetAttributeValue<bool?>("identifypursuitteam");
        }
        set {
            SetAttributeValue("identifypursuitteam", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
    /// <para>Display Name: Initial Communication</para>
    /// </summary>
    [AttributeLogicalName("initialcommunication")]
    [DisplayName("Initial Communication")]
    public initialcommunication? InitialCommunication {
        get {
            return GetOptionSetValue<initialcommunication>("initialcommunication");
        }
        set {
            SetOptionSetValue("initialcommunication", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the estimated revenue for the opportunity is calculated automatically based on the products entered or entered manually by a user.</para>
    /// <para>Display Name: Revenue</para>
    /// </summary>
    [AttributeLogicalName("isrevenuesystemcalculated")]
    [DisplayName("Revenue")]
    public bool? IsRevenueSystemCalculated {
        get {
            return GetAttributeValue<bool?>("isrevenuesystemcalculated");
        }
        set {
            SetAttributeValue("isrevenuesystemcalculated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a subject or descriptive name, such as the expected order or company name, for the opportunity.</para>
    /// <para>Display Name: Topic</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Topic")]
    [MaxLength(300)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Choose how high the level of need is for the lead's company.</para>
    /// <para>Display Name: Need</para>
    /// </summary>
    [AttributeLogicalName("need")]
    [DisplayName("Need")]
    public need? Need {
        get {
            return GetOptionSetValue<need>("need");
        }
        set {
            SetOptionSetValue("need", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration in minutes for which the opportunity was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Select the expected value or priority of the opportunity based on revenue, customer status, or closing probability.</para>
    /// <para>Display Name: Rating</para>
    /// </summary>
    [AttributeLogicalName("opportunityratingcode")]
    [DisplayName("Rating")]
    public Opportunity_OpportunityRatingCode? OpportunityRatingCode {
        get {
            return GetOptionSetValue<Opportunity_OpportunityRatingCode>("opportunityratingcode");
        }
        set {
            SetOptionSetValue("opportunityratingcode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the lead that the opportunity was created from for reporting and analytics. The field is read-only after the opportunity is created and defaults to the correct lead when an opportunity is created from a converted lead.</para>
    /// <para>Display Name: Originating Lead</para>
    /// </summary>
    [AttributeLogicalName("originatingleadid")]
    [DisplayName("Originating Lead")]
    public EntityReference OriginatingLeadId {
        get {
            return GetAttributeValue<EntityReference>("originatingleadid");
        }
        set {
            SetAttributeValue("originatingleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose an account to connect this opportunity to, so that the relationship is visible in reports and analytics, and to provide a quick link to additional details, such as financial information and activities.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("parentaccountid")]
    [DisplayName("Account")]
    public EntityReference ParentAccountId {
        get {
            return GetAttributeValue<EntityReference>("parentaccountid");
        }
        set {
            SetAttributeValue("parentaccountid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose a contact to connect this opportunity to, so that the relationship is visible in reports and analytics.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("parentcontactid")]
    [DisplayName("Contact")]
    public EntityReference ParentContactId {
        get {
            return GetAttributeValue<EntityReference>("parentcontactid");
        }
        set {
            SetAttributeValue("parentcontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the opportunity participates in workflow rules.</para>
    /// <para>Display Name: Participates in Workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participates in Workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the final proposal has been presented to the account.</para>
    /// <para>Display Name: Present Final Proposal</para>
    /// </summary>
    [AttributeLogicalName("presentfinalproposal")]
    [DisplayName("Present Final Proposal")]
    public bool? PresentFinalProposal {
        get {
            return GetAttributeValue<bool?>("presentfinalproposal");
        }
        set {
            SetAttributeValue("presentfinalproposal", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether a proposal for the opportunity has been presented to the account.</para>
    /// <para>Display Name: Presented Proposal</para>
    /// </summary>
    [AttributeLogicalName("presentproposal")]
    [DisplayName("Presented Proposal")]
    public bool? PresentProposal {
        get {
            return GetAttributeValue<bool?>("presentproposal");
        }
        set {
            SetAttributeValue("presentproposal", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Price List")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Pricing error for the opportunity.</para>
    /// <para>Display Name: Pricing Error </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Pricing Error ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Opportunity_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Opportunity_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Type notes about the proposed solution for the opportunity.</para>
    /// <para>Display Name: Proposed Solution</para>
    /// </summary>
    [AttributeLogicalName("proposedsolution")]
    [DisplayName("Proposed Solution")]
    public string ProposedSolution {
        get {
            return GetAttributeValue<string>("proposedsolution");
        }
        set {
            SetAttributeValue("proposedsolution", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
    /// <para>Display Name: Purchase Process</para>
    /// </summary>
    [AttributeLogicalName("purchaseprocess")]
    [DisplayName("Purchase Process")]
    public purchaseprocess? PurchaseProcess {
        get {
            return GetOptionSetValue<purchaseprocess>("purchaseprocess");
        }
        set {
            SetOptionSetValue("purchaseprocess", value);
        }
    }
    
    /// <summary>
    /// <para>Choose how long the lead will likely take to make the purchase.</para>
    /// <para>Display Name: Purchase Timeframe</para>
    /// </summary>
    [AttributeLogicalName("purchasetimeframe")]
    [DisplayName("Purchase Timeframe")]
    public purchasetimeframe? PurchaseTimeframe {
        get {
            return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
        }
        set {
            SetOptionSetValue("purchasetimeframe", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the decision about pursuing the opportunity has been made.</para>
    /// <para>Display Name: Decide Go/No-Go</para>
    /// </summary>
    [AttributeLogicalName("pursuitdecision")]
    [DisplayName("Decide Go/No-Go")]
    public bool? PursuitDecision {
        get {
            return GetAttributeValue<bool?>("pursuitdecision");
        }
        set {
            SetAttributeValue("pursuitdecision", value);
        }
    }
    
    /// <summary>
    /// <para>Type comments about the qualification or scoring of the lead.</para>
    /// <para>Display Name: Qualification Comments</para>
    /// </summary>
    [AttributeLogicalName("qualificationcomments")]
    [DisplayName("Qualification Comments")]
    public string QualificationComments {
        get {
            return GetAttributeValue<string>("qualificationcomments");
        }
        set {
            SetAttributeValue("qualificationcomments", value);
        }
    }
    
    /// <summary>
    /// <para>Type comments about the quotes associated with the opportunity.</para>
    /// <para>Display Name: Quote Comments</para>
    /// </summary>
    [AttributeLogicalName("quotecomments")]
    [DisplayName("Quote Comments")]
    public string QuoteComments {
        get {
            return GetAttributeValue<string>("quotecomments");
        }
        set {
            SetAttributeValue("quotecomments", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether the proposal feedback has been captured and resolved for the opportunity.</para>
    /// <para>Display Name: Feedback Resolved</para>
    /// </summary>
    [AttributeLogicalName("resolvefeedback")]
    [DisplayName("Feedback Resolved")]
    public bool? ResolveFeedback {
        get {
            return GetAttributeValue<bool?>("resolvefeedback");
        }
        set {
            SetAttributeValue("resolvefeedback", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the opportunity record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this opportunity. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Select the sales stage of this opportunity to aid the sales team in their efforts to win this opportunity.</para>
    /// <para>Display Name: Sales Stage</para>
    /// </summary>
    [AttributeLogicalName("salesstage")]
    [DisplayName("Sales Stage")]
    public opportunity_salesstage? SalesStage {
        get {
            return GetOptionSetValue<opportunity_salesstage>("salesstage");
        }
        set {
            SetOptionSetValue("salesstage", value);
        }
    }
    
    /// <summary>
    /// <para>Select the sales process stage for the opportunity to indicate the probability of closing the opportunity.</para>
    /// <para>Display Name: Process Code</para>
    /// </summary>
    [AttributeLogicalName("salesstagecode")]
    [DisplayName("Process Code")]
    public Opportunity_SalesStageCode? SalesStageCode {
        get {
            return GetOptionSetValue<Opportunity_SalesStageCode>("salesstagecode");
        }
        set {
            SetOptionSetValue("salesstagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
    /// <para>Display Name: Scheduled Follow up (Prospect)</para>
    /// </summary>
    [AttributeLogicalName("schedulefollowup_prospect")]
    [DisplayName("Scheduled Follow up (Prospect)")]
    public DateTime? ScheduleFollowup_Prospect {
        get {
            return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
        }
        set {
            SetAttributeValue("schedulefollowup_prospect", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
    /// <para>Display Name: Scheduled Follow up (Qualify)</para>
    /// </summary>
    [AttributeLogicalName("schedulefollowup_qualify")]
    [DisplayName("Scheduled Follow up (Qualify)")]
    public DateTime? ScheduleFollowup_Qualify {
        get {
            return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
        }
        set {
            SetAttributeValue("schedulefollowup_qualify", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time of the proposal meeting for the opportunity.</para>
    /// <para>Display Name: Schedule Proposal Meeting</para>
    /// </summary>
    [AttributeLogicalName("scheduleproposalmeeting")]
    [DisplayName("Schedule Proposal Meeting")]
    public DateTime? ScheduleProposalMeeting {
        get {
            return GetAttributeValue<DateTime?>("scheduleproposalmeeting");
        }
        set {
            SetAttributeValue("scheduleproposalmeeting", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether a thank you note has been sent to the account for considering the proposal.</para>
    /// <para>Display Name: Send Thank You Note</para>
    /// </summary>
    [AttributeLogicalName("sendthankyounote")]
    [DisplayName("Send Thank You Note")]
    public bool? SendThankYouNote {
        get {
            return GetAttributeValue<bool?>("sendthankyounote");
        }
        set {
            SetAttributeValue("sendthankyounote", value);
        }
    }
    
    /// <summary>
    /// <para>Skip Price Calculation (For Internal Use)</para>
    /// <para>Display Name: Skip Price Calculation</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Skip Price Calculation")]
    public qooi_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the opportunity is open, won, or lost. Won and lost opportunities are read-only and can't be edited until they are reactivated.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public OpportunityState? StateCode {
        get {
            return GetOptionSetValue<OpportunityState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the opportunity's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Opportunity_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Opportunity_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the workflow step.</para>
    /// <para>Display Name: Step</para>
    /// </summary>
    [AttributeLogicalName("stepid")]
    [DisplayName("Step")]
    public Guid? StepId {
        get {
            return GetAttributeValue<Guid?>("stepid");
        }
        set {
            SetAttributeValue("stepid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the current phase in the sales pipeline for the opportunity. This is updated by a workflow.</para>
    /// <para>Display Name: Pipeline Phase</para>
    /// </summary>
    [AttributeLogicalName("stepname")]
    [DisplayName("Pipeline Phase")]
    [MaxLength(200)]
    public string StepName {
        get {
            return GetAttributeValue<string>("stepname");
        }
        set {
            SetAttributeValue("stepname", value);
        }
    }
    
    /// <summary>
    /// <para>Number of users or conversations followed the record</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Select when the opportunity is likely to be closed.</para>
    /// <para>Display Name: Timeline</para>
    /// </summary>
    [AttributeLogicalName("timeline")]
    [DisplayName("Timeline")]
    public Opportunity_TimeLine? TimeLine {
        get {
            return GetOptionSetValue<Opportunity_TimeLine>("timeline");
        }
        set {
            SetOptionSetValue("timeline", value);
        }
    }
    
    /// <summary>
    /// <para>Total time spent for emails (read and write) and meetings by me in relation to the opportunity record.</para>
    /// <para>Display Name: Time Spent by me</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Time Spent by me")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the opportunity.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamount")]
    [DisplayName("Total Amount")]
    public decimal? TotalAmount {
        get {
            return GetMoneyValue("totalamount");
        }
        set {
            SetMoneyValue("totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total product amount for the opportunity, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount of the opportunity.</para>
    /// <para>Display Name: Total Pre-Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight")]
    [DisplayName("Total Pre-Freight Amount")]
    public decimal? TotalAmountLessFreight {
        get {
            return GetMoneyValue("totalamountlessfreight");
        }
        set {
            SetMoneyValue("totalamountlessfreight", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Pre-Freight Amount in base currency.</para>
    /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight_base")]
    [DisplayName("Total Pre-Freight Amount (Base)")]
    public decimal? TotalAmountLessFreight_Base {
        get {
            return GetMoneyValue("totalamountlessfreight_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Amount in base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? TotalAmount_Base {
        get {
            return GetMoneyValue("totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total discount amount, based on the discount price and rate entered on the opportunity.</para>
    /// <para>Display Name: Total Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount")]
    [DisplayName("Total Discount Amount")]
    public decimal? TotalDiscountAmount {
        get {
            return GetMoneyValue("totaldiscountamount");
        }
        set {
            SetMoneyValue("totaldiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Discount Amount in base currency.</para>
    /// <para>Display Name: Total Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount_base")]
    [DisplayName("Total Discount Amount (Base)")]
    public decimal? TotalDiscountAmount_Base {
        get {
            return GetMoneyValue("totaldiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of all existing and write-in products included on the opportunity, based on the specified price list and quantities.</para>
    /// <para>Display Name: Total Detail Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount")]
    [DisplayName("Total Detail Amount")]
    public decimal? TotalLineItemAmount {
        get {
            return GetMoneyValue("totallineitemamount");
        }
        set {
            SetMoneyValue("totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Detail Amount in base currency.</para>
    /// <para>Display Name: Total Detail Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount_base")]
    [DisplayName("Total Detail Amount (Base)")]
    public decimal? TotalLineItemAmount_Base {
        get {
            return GetMoneyValue("totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Manual Discount amounts specified on all products included in the opportunity. This value is reflected in the Total Detail Amount field on the opportunity and is added to any discount amount or rate specified on the opportunity.</para>
    /// <para>Display Name: Total Line Item Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount")]
    [DisplayName("Total Line Item Discount Amount")]
    public decimal? TotalLineItemDiscountAmount {
        get {
            return GetMoneyValue("totallineitemdiscountamount");
        }
        set {
            SetMoneyValue("totallineitemdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Line Item Discount Amount in base currency.</para>
    /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount_base")]
    [DisplayName("Total Line Item Discount Amount (Base)")]
    public decimal? TotalLineItemDiscountAmount_Base {
        get {
            return GetMoneyValue("totallineitemdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Tax amounts specified on all products included in the opportunity, included in the Total Amount field calculation for the opportunity.</para>
    /// <para>Display Name: Total Tax</para>
    /// </summary>
    [AttributeLogicalName("totaltax")]
    [DisplayName("Total Tax")]
    public decimal? TotalTax {
        get {
            return GetMoneyValue("totaltax");
        }
        set {
            SetMoneyValue("totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Tax in base currency.</para>
    /// <para>Display Name: Total Tax (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaltax_base")]
    [DisplayName("Total Tax (Base)")]
    public decimal? TotalTax_Base {
        get {
            return GetMoneyValue("totaltax_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Internal use only.</para>
    /// <para>Display Name: Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ordertype")]
    [DisplayName("Order Type")]
    public Opportunity_msdyn_OrderType? msdyn_OrderType {
        get {
            return GetOptionSetValue<Opportunity_msdyn_OrderType>("msdyn_ordertype");
        }
        set {
            SetOptionSetValue("msdyn_ordertype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Type associated with Opportunity.</para>
    /// <para>Display Name: Work Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workordertype")]
    [DisplayName("Work Order Type")]
    public EntityReference msdyn_WorkOrderType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workordertype");
        }
        set {
            SetAttributeValue("msdyn_workordertype", value);
        }
    }
    
    /// <summary>
    /// <para>Categories used for forecasting.</para>
    /// <para>Display Name: Forecast category</para>
    /// </summary>
    [AttributeLogicalName("msdyn_forecastcategory")]
    [DisplayName("Forecast category")]
    public Opportunity_msdyn_forecastcategory? msdyn_forecastcategory {
        get {
            return GetOptionSetValue<Opportunity_msdyn_forecastcategory>("msdyn_forecastcategory");
        }
        set {
            SetOptionSetValue("msdyn_forecastcategory", value);
        }
    }
    
    [RelationshipSchemaName("CreatedOpportunity_BulkOperationLogs")]
    public IEnumerable<BulkOperationLog> CreatedOpportunity_BulkOperationLogs {
        get {
            return GetRelatedEntities<BulkOperationLog>("CreatedOpportunity_BulkOperationLogs", null);
        }
        set {
            SetRelatedEntities("CreatedOpportunity_BulkOperationLogs", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_ActivityPointers")]
    public IEnumerable<ActivityPointer> Opportunity_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Opportunity_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Opportunity_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_Appointments")]
    public IEnumerable<Appointment> Opportunity_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Opportunity_Appointments", null);
        }
        set {
            SetRelatedEntities("Opportunity_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_Emails")]
    public IEnumerable<Email> Opportunity_Emails {
        get {
            return GetRelatedEntities<Email>("Opportunity_Emails", null);
        }
        set {
            SetRelatedEntities("Opportunity_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_Phonecalls")]
    public IEnumerable<PhoneCall> Opportunity_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Opportunity_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Opportunity_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_ProcessSessions")]
    public IEnumerable<ProcessSession> Opportunity_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Opportunity_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Opportunity_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Opportunity_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Opportunity_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Opportunity_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Opportunity_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Opportunity_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Opportunity_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_SyncErrors")]
    public IEnumerable<SyncError> Opportunity_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Opportunity_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Opportunity_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Opportunity_Tasks")]
    public IEnumerable<Task> Opportunity_Tasks {
        get {
            return GetRelatedEntities<Task>("Opportunity_Tasks", null);
        }
        set {
            SetRelatedEntities("Opportunity_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("campaignid")]
    [RelationshipSchemaName("campaign_opportunities")]
    public Campaign campaign_opportunities {
        get {
            return GetRelatedEntity<Campaign>("campaign_opportunities", null);
        }
        set {
            SetRelatedEntity("campaign_opportunities", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_qualifying_opportunity")]
    public IEnumerable<Lead> lead_qualifying_opportunity {
        get {
            return GetRelatedEntities<Lead>("lead_qualifying_opportunity", null);
        }
        set {
            SetRelatedEntities("lead_qualifying_opportunity", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
    public SystemUser lk_opportunity_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_opportunity_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_opportunity_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
    public SystemUser lk_opportunity_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_opportunity_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_opportunity_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_opportunitybase_createdby")]
    public SystemUser lk_opportunitybase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_opportunitybase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_opportunitybase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
    public SystemUser lk_opportunitybase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_opportunitybase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_opportunitybase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workordertype")]
    [RelationshipSchemaName("msdyn_msdyn_workordertype_opportunity_WorkOrderType")]
    public msdyn_workordertype msdyn_msdyn_workordertype_opportunity_WorkOrderType {
        get {
            return GetRelatedEntity<msdyn_workordertype>("msdyn_msdyn_workordertype_opportunity_WorkOrderType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workordertype_opportunity_WorkOrderType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_opportunity_msdyn_workorder")]
    public IEnumerable<msdyn_workorder> msdyn_opportunity_msdyn_workorder {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_opportunity_msdyn_workorder", null);
        }
        set {
            SetRelatedEntities("msdyn_opportunity_msdyn_workorder", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_activity_parties")]
    public IEnumerable<ActivityParty> opportunity_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("opportunity_activity_parties", null);
        }
        set {
            SetRelatedEntities("opportunity_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("opportunity_customer_accounts")]
    public Account opportunity_customer_accounts {
        get {
            return GetRelatedEntity<Account>("opportunity_customer_accounts", null);
        }
        set {
            SetRelatedEntity("opportunity_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("opportunity_customer_contacts")]
    public Contact opportunity_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("opportunity_customer_contacts", null);
        }
        set {
            SetRelatedEntity("opportunity_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_invoices")]
    public IEnumerable<Invoice> opportunity_invoices {
        get {
            return GetRelatedEntities<Invoice>("opportunity_invoices", null);
        }
        set {
            SetRelatedEntities("opportunity_invoices", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> opportunity_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("opportunity_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("opportunity_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_msfp_alerts")]
    public IEnumerable<msfp_alert> opportunity_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("opportunity_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("opportunity_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("originatingleadid")]
    [RelationshipSchemaName("opportunity_originating_lead")]
    public Lead opportunity_originating_lead {
        get {
            return GetRelatedEntity<Lead>("opportunity_originating_lead", null);
        }
        set {
            SetRelatedEntity("opportunity_originating_lead", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("opportunity_owning_user")]
    public SystemUser opportunity_owning_user {
        get {
            return GetRelatedEntity<SystemUser>("opportunity_owning_user", null);
        }
        set {
            SetRelatedEntity("opportunity_owning_user", null, value);
        }
    }
    
    [AttributeLogicalName("parentaccountid")]
    [RelationshipSchemaName("opportunity_parent_account")]
    public Account opportunity_parent_account {
        get {
            return GetRelatedEntity<Account>("opportunity_parent_account", null);
        }
        set {
            SetRelatedEntity("opportunity_parent_account", null, value);
        }
    }
    
    [AttributeLogicalName("parentcontactid")]
    [RelationshipSchemaName("opportunity_parent_contact")]
    public Contact opportunity_parent_contact {
        get {
            return GetRelatedEntity<Contact>("opportunity_parent_contact", null);
        }
        set {
            SetRelatedEntity("opportunity_parent_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_quotes")]
    public IEnumerable<Quote> opportunity_quotes {
        get {
            return GetRelatedEntities<Quote>("opportunity_quotes", null);
        }
        set {
            SetRelatedEntities("opportunity_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_sales_orders")]
    public IEnumerable<SalesOrder> opportunity_sales_orders {
        get {
            return GetRelatedEntities<SalesOrder>("opportunity_sales_orders", null);
        }
        set {
            SetRelatedEntities("opportunity_sales_orders", null, value);
        }
    }
    
    public static Opportunity Retrieve(IOrganizationService service, Guid id, params Expression<Func<Opportunity,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Activity to track a telephone call.</para>
/// <para>Display Name: Phone Call</para>
/// </summary>
[EntityLogicalName("phonecall")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class PhoneCall : ExtendedEntity<PhoneCallState, PhoneCall_StatusCode> {
    
    public const string EntityLogicalName = "phonecall";
    
    public const int EntityTypeCode = 4210;
    
    public PhoneCall() : 
            base(EntityLogicalName) {
    }
    
    public PhoneCall(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the phone call activity.</para>
    /// <para>Display Name: Phone Call</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Phone Call")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type the number of minutes spent on the phone call. The duration is used in reporting.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual end date and time of the phone call. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the phone call.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the phone call. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the phone call.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the phone call type, such as lead gathering or customer follow-up, to tie the phone call to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the phone call, such as the primary message or the products and services discussed.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Select the direction of the phone call as incoming or outbound.</para>
    /// <para>Display Name: Direction</para>
    /// </summary>
    [AttributeLogicalName("directioncode")]
    [DisplayName("Direction")]
    public bool? DirectionCode {
        get {
            return GetAttributeValue<bool?>("directioncode");
        }
        set {
            SetAttributeValue("directioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, or user who made the phone call.</para>
    /// <para>Display Name: Call From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("Call From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information which specifies whether the phone call activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Indication which specifies if the phone call activity was created by a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether a voice mail was left for the person.</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the phone call activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the phone call activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the phone call activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Type the phone number.</para>
    /// <para>Display Name: Phone Number</para>
    /// </summary>
    [AttributeLogicalName("phonenumber")]
    [DisplayName("Phone Number")]
    [MaxLength(200)]
    public string PhoneNumber {
        get {
            return GetAttributeValue<string>("phonenumber");
        }
        set {
            SetAttributeValue("phonenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public PhoneCall_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<PhoneCall_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the phone call relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the Phone Call record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this Phone Call. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the phone call activity, specified in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Due</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the phone call is open, completed, or canceled. Completed and canceled phone calls are read-only and can't be edited.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public PhoneCallState? StateCode {
        get {
            return GetOptionSetValue<PhoneCallState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the phone call's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public PhoneCall_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<PhoneCall_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the phone call type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the phone call.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Subscription</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Subscription")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, or user recipients of the phone call.</para>
    /// <para>Display Name: Call To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("Call To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the phone call activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Phonecalls")]
    public Account Account_Phonecalls {
        get {
            return GetRelatedEntity<Account>("Account_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Account_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_Phonecalls")]
    public CampaignActivity CampaignActivity_Phonecalls {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_Phonecalls", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_Phonecalls")]
    public Campaign Campaign_Phonecalls {
        get {
            return GetRelatedEntity<Campaign>("Campaign_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Campaign_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Phonecalls")]
    public Contact Contact_Phonecalls {
        get {
            return GetRelatedEntity<Contact>("Contact_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Contact_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_Phonecalls")]
    public Contract Contract_Phonecalls {
        get {
            return GetRelatedEntity<Contract>("Contract_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Contract_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Phonecalls")]
    public Incident Incident_Phonecalls {
        get {
            return GetRelatedEntity<Incident>("Incident_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Incident_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Phonecalls")]
    public Invoice Invoice_Phonecalls {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Invoice_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_Phonecalls")]
    public Lead Lead_Phonecalls {
        get {
            return GetRelatedEntity<Lead>("Lead_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Lead_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_Phonecalls")]
    public Opportunity Opportunity_Phonecalls {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Opportunity_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("PhoneCall_ProcessSessions")]
    public IEnumerable<ProcessSession> PhoneCall_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("PhoneCall_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("PhoneCall_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("PhoneCall_SyncErrors")]
    public IEnumerable<SyncError> PhoneCall_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("PhoneCall_SyncErrors", null);
        }
        set {
            SetRelatedEntities("PhoneCall_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Phonecalls")]
    public Quote Quote_Phonecalls {
        get {
            return GetRelatedEntity<Quote>("Quote_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Quote_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Phonecalls")]
    public SalesOrder SalesOrder_Phonecalls {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Phonecalls", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_phonecall")]
    public ActivityPointer activity_pointer_phonecall {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_phonecall", null);
        }
        set {
            SetRelatedEntity("activity_pointer_phonecall", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_PhoneCalls")]
    public BookableResourceBooking bookableresourcebooking_PhoneCalls {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_PhoneCalls")]
    public Entitlement entitlement_PhoneCalls {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("entitlement_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_PhoneCalls")]
    public EntitlementTemplate entitlementtemplate_PhoneCalls {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_phonecall_createdby")]
    public SystemUser lk_phonecall_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_createdby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
    public SystemUser lk_phonecall_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_phonecall_modifiedby")]
    public SystemUser lk_phonecall_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
    public SystemUser lk_phonecall_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_PhoneCalls")]
    public msdyn_agreement msdyn_agreement_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_PhoneCalls")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_PhoneCalls")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_PhoneCalls")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_PhoneCalls")]
    public msdyn_customerasset msdyn_customerasset_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_PhoneCalls")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_PhoneCalls")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_PhoneCalls")]
    public msdyn_purchaseorder msdyn_purchaseorder_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_PhoneCalls")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_PhoneCalls")]
    public msdyn_rma msdyn_rma_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_PhoneCalls")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_PhoneCalls")]
    public msdyn_workorder msdyn_workorder_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_PhoneCalls")]
    public msdyn_workorderincident msdyn_workorderincident_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_PhoneCalls")]
    public msdyn_workorderproduct msdyn_workorderproduct_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_PhoneCalls")]
    public msdyn_workorderservice msdyn_workorderservice_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_PhoneCalls")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_PhoneCalls {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("phonecall_activity_parties")]
    public IEnumerable<ActivityParty> phonecall_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("phonecall_activity_parties", null);
        }
        set {
            SetRelatedEntities("phonecall_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("phonecall_campaignresponse")]
    public IEnumerable<CampaignResponse> phonecall_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("phonecall_campaignresponse", null);
        }
        set {
            SetRelatedEntities("phonecall_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_PhoneCalls")]
    public ppp_Traveller ppp_traveller_PhoneCalls {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_PhoneCalls")]
    public ts_request ts_request_PhoneCalls {
        get {
            return GetRelatedEntity<ts_request>("ts_request_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("ts_request_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_phonecall")]
    public SystemUser user_phonecall {
        get {
            return GetRelatedEntity<SystemUser>("user_phonecall", null);
        }
        set {
            SetRelatedEntity("user_phonecall", null, value);
        }
    }
    
    public static PhoneCall Retrieve(IOrganizationService service, Guid id, params Expression<Func<PhoneCall,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Information that is generated when a dialog is run. Every time that you run a dialog, a dialog session is created.</para>
/// <para>Display Name: Process Session</para>
/// </summary>
[EntityLogicalName("processsession")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ProcessSession : ExtendedEntity<ProcessSessionState, ProcessSession_StatusCode> {
    
    public const string EntityLogicalName = "processsession";
    
    public const int EntityTypeCode = 4710;
    
    public ProcessSession() : 
            base(EntityLogicalName) {
    }
    
    public ProcessSession(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("processsessionid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("processsessionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the dialog session.</para>
    /// <para>Display Name: Dialog Session</para>
    /// </summary>
    [AttributeLogicalName("processsessionid")]
    [DisplayName("Dialog Session")]
    public Guid? ProcessSessionId {
        get {
            return GetAttributeValue<Guid?>("processsessionid");
        }
        set {
            SetId("processsessionid", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the activity that is being executed.</para>
    /// <para>Display Name: Activity Name</para>
    /// </summary>
    [AttributeLogicalName("activityname")]
    [DisplayName("Activity Name")]
    [MaxLength(256)]
    public string ActivityName {
        get {
            return GetAttributeValue<string>("activityname");
        }
        set {
            SetAttributeValue("activityname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who canceled the dialog session.</para>
    /// <para>Display Name: Canceled By</para>
    /// </summary>
    [AttributeLogicalName("canceledby")]
    [DisplayName("Canceled By")]
    public EntityReference CanceledBy {
        get {
            return GetAttributeValue<EntityReference>("canceledby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog session was canceled.</para>
    /// <para>Display Name: Canceled On</para>
    /// </summary>
    [AttributeLogicalName("canceledon")]
    [DisplayName("Canceled On")]
    public DateTime? CanceledOn {
        get {
            return GetAttributeValue<DateTime?>("canceledon");
        }
        set {
            SetAttributeValue("canceledon", value);
        }
    }
    
    /// <summary>
    /// <para>User comments.</para>
    /// <para>Display Name: Comments</para>
    /// </summary>
    [AttributeLogicalName("comments")]
    [DisplayName("Comments")]
    public string Comments {
        get {
            return GetAttributeValue<string>("comments");
        }
        set {
            SetAttributeValue("comments", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who completed the dialog session.</para>
    /// <para>Display Name: Completed By</para>
    /// </summary>
    [AttributeLogicalName("completedby")]
    [DisplayName("Completed By")]
    public EntityReference CompletedBy {
        get {
            return GetAttributeValue<EntityReference>("completedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog session was completed.</para>
    /// <para>Display Name: Completed On</para>
    /// </summary>
    [AttributeLogicalName("completedon")]
    [DisplayName("Completed On")]
    public DateTime? CompletedOn {
        get {
            return GetAttributeValue<DateTime?>("completedon");
        }
        set {
            SetAttributeValue("completedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who started the dialog session.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog session was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the dialog session.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Error code related to the dialog session.</para>
    /// <para>Display Name: Error Code</para>
    /// </summary>
    [AttributeLogicalName("errorcode")]
    [DisplayName("Error Code")]
    [Range(-2147483648, 2147483647)]
    public int? ErrorCode {
        get {
            return GetAttributeValue<int?>("errorcode");
        }
        set {
            SetAttributeValue("errorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who ran the dialog process.</para>
    /// <para>Display Name: Executed By</para>
    /// </summary>
    [AttributeLogicalName("executedby")]
    [DisplayName("Executed By")]
    public EntityReference ExecutedBy {
        get {
            return GetAttributeValue<EntityReference>("executedby");
        }
        set {
            SetAttributeValue("executedby", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog process was run.</para>
    /// <para>Display Name: Executed On</para>
    /// </summary>
    [AttributeLogicalName("executedon")]
    [DisplayName("Executed On")]
    public DateTime? ExecutedOn {
        get {
            return GetAttributeValue<DateTime?>("executedon");
        }
    }
    
    /// <summary>
    /// <para>Input arguments for the child dialog process.</para>
    /// <para>Display Name: Input Arguments</para>
    /// </summary>
    [AttributeLogicalName("inputarguments")]
    [DisplayName("Input Arguments")]
    public string InputArguments {
        get {
            return GetAttributeValue<string>("inputarguments");
        }
        set {
            SetAttributeValue("inputarguments", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the dialog session.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog session was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the dialog session.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Name of the dialog session.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(256)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the succeeding linked dialog session.</para>
    /// <para>Display Name: Next Linked Session</para>
    /// </summary>
    [AttributeLogicalName("nextlinkedsessionid")]
    [DisplayName("Next Linked Session")]
    public EntityReference NextLinkedSessionId {
        get {
            return GetAttributeValue<EntityReference>("nextlinkedsessionid");
        }
        set {
            SetAttributeValue("nextlinkedsessionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the originating dialog session.</para>
    /// <para>Display Name: Originating Session</para>
    /// </summary>
    [AttributeLogicalName("originatingsessionid")]
    [DisplayName("Originating Session")]
    public EntityReference OriginatingSessionId {
        get {
            return GetAttributeValue<EntityReference>("originatingsessionid");
        }
        set {
            SetAttributeValue("originatingsessionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the dialog session.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the dialog session.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the dialog session.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the dialog session.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the preceding linked dialog session.</para>
    /// <para>Display Name: Previous Linked Session</para>
    /// </summary>
    [AttributeLogicalName("previouslinkedsessionid")]
    [DisplayName("Previous Linked Session")]
    public EntityReference PreviousLinkedSessionId {
        get {
            return GetAttributeValue<EntityReference>("previouslinkedsessionid");
        }
        set {
            SetAttributeValue("previouslinkedsessionid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the process activation record that is related to the dialog session.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public EntityReference ProcessId {
        get {
            return GetAttributeValue<EntityReference>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the dialog stage.</para>
    /// <para>Display Name: Dialog Stage</para>
    /// </summary>
    [AttributeLogicalName("processstagename")]
    [DisplayName("Dialog Stage")]
    [MaxLength(256)]
    public string ProcessStageName {
        get {
            return GetAttributeValue<string>("processstagename");
        }
        set {
            SetAttributeValue("processstagename", value);
        }
    }
    
    /// <summary>
    /// <para>State of the dialog process.</para>
    /// <para>Display Name: Process State</para>
    /// </summary>
    [AttributeLogicalName("processstate")]
    [DisplayName("Process State")]
    [MaxLength(1073741823)]
    public string ProcessState {
        get {
            return GetAttributeValue<string>("processstate");
        }
        set {
            SetAttributeValue("processstate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the object with which the dialog session is associated.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who started the dialog session.</para>
    /// <para>Display Name: Started By</para>
    /// </summary>
    [AttributeLogicalName("startedby")]
    [DisplayName("Started By")]
    public EntityReference StartedBy {
        get {
            return GetAttributeValue<EntityReference>("startedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the dialog session was started.</para>
    /// <para>Display Name: Started On</para>
    /// </summary>
    [AttributeLogicalName("startedon")]
    [DisplayName("Started On")]
    public DateTime? StartedOn {
        get {
            return GetAttributeValue<DateTime?>("startedon");
        }
        set {
            SetAttributeValue("startedon", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the dialog session.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ProcessSessionState? StateCode {
        get {
            return GetOptionSetValue<ProcessSessionState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the dialog session.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ProcessSession_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<ProcessSession_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the dialog step.</para>
    /// <para>Display Name: Step Name</para>
    /// </summary>
    [AttributeLogicalName("stepname")]
    [DisplayName("Step Name")]
    [MaxLength(256)]
    public string StepName {
        get {
            return GetAttributeValue<string>("stepname");
        }
        set {
            SetAttributeValue("stepname", value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_ProcessSessions")]
    public Account Account_ProcessSessions {
        get {
            return GetRelatedEntity<Account>("Account_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Account_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Appointment_ProcessSessions")]
    public Appointment Appointment_ProcessSessions {
        get {
            return GetRelatedEntity<Appointment>("Appointment_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Appointment_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_ProcessSessions")]
    public CampaignActivity CampaignActivity_ProcessSessions {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignResponse_ProcessSessions")]
    public CampaignResponse CampaignResponse_ProcessSessions {
        get {
            return GetRelatedEntity<CampaignResponse>("CampaignResponse_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_ProcessSessions")]
    public Campaign Campaign_ProcessSessions {
        get {
            return GetRelatedEntity<Campaign>("Campaign_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Campaign_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_ProcessSessions")]
    public Contact Contact_ProcessSessions {
        get {
            return GetRelatedEntity<Contact>("Contact_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Contact_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ContractDetail_ProcessSessions")]
    public ContractDetail ContractDetail_ProcessSessions {
        get {
            return GetRelatedEntity<ContractDetail>("ContractDetail_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("ContractDetail_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_ProcessSessions")]
    public Contract Contract_ProcessSessions {
        get {
            return GetRelatedEntity<Contract>("Contract_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Contract_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Email_ProcessSessions")]
    public Email Email_ProcessSessions {
        get {
            return GetRelatedEntity<Email>("Email_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Email_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_ProcessSessions")]
    public Incident Incident_ProcessSessions {
        get {
            return GetRelatedEntity<Incident>("Incident_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Incident_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_ProcessSessions")]
    public Invoice Invoice_ProcessSessions {
        get {
            return GetRelatedEntity<Invoice>("Invoice_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Invoice_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("KbArticle_ProcessSessions")]
    public KbArticle KbArticle_ProcessSessions {
        get {
            return GetRelatedEntity<KbArticle>("KbArticle_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("KbArticle_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_ProcessSessions")]
    public Lead Lead_ProcessSessions {
        get {
            return GetRelatedEntity<Lead>("Lead_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Lead_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_ProcessSessions")]
    public Opportunity Opportunity_ProcessSessions {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Opportunity_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("PhoneCall_ProcessSessions")]
    public PhoneCall PhoneCall_ProcessSessions {
        get {
            return GetRelatedEntity<PhoneCall>("PhoneCall_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("PhoneCall_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("ProcessSession_SyncErrors")]
    public IEnumerable<SyncError> ProcessSession_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ProcessSession_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ProcessSession_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Product_ProcessSessions")]
    public Product Product_ProcessSessions {
        get {
            return GetRelatedEntity<Product>("Product_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Product_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Queue_ProcessSessions")]
    public Queue Queue_ProcessSessions {
        get {
            return GetRelatedEntity<Queue>("Queue_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Queue_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_ProcessSessions")]
    public Quote Quote_ProcessSessions {
        get {
            return GetRelatedEntity<Quote>("Quote_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Quote_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("RecurringAppointmentMaster_ProcessSessions")]
    public RecurringAppointmentMaster RecurringAppointmentMaster_ProcessSessions {
        get {
            return GetRelatedEntity<RecurringAppointmentMaster>("RecurringAppointmentMaster_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("RecurringAppointmentMaster_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_nextlinkedsessionid", EntityRole.Referenced)]
    public IEnumerable<ProcessSession> Referencedlk_processsession_nextlinkedsessionid {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_nextlinkedsessionid", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_processsession_nextlinkedsessionid", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_originatingsessionid", EntityRole.Referenced)]
    public IEnumerable<ProcessSession> Referencedlk_processsession_originatingsessionid {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_originatingsessionid", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_processsession_originatingsessionid", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_previouslinkedsessionid", EntityRole.Referenced)]
    public IEnumerable<ProcessSession> Referencedlk_processsession_previouslinkedsessionid {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_previouslinkedsessionid", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_processsession_previouslinkedsessionid", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("nextlinkedsessionid")]
    [RelationshipSchemaName("lk_processsession_nextlinkedsessionid", EntityRole.Referencing)]
    public ProcessSession Referencinglk_processsession_nextlinkedsessionid {
        get {
            return GetRelatedEntity<ProcessSession>("lk_processsession_nextlinkedsessionid", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_processsession_nextlinkedsessionid", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("originatingsessionid")]
    [RelationshipSchemaName("lk_processsession_originatingsessionid", EntityRole.Referencing)]
    public ProcessSession Referencinglk_processsession_originatingsessionid {
        get {
            return GetRelatedEntity<ProcessSession>("lk_processsession_originatingsessionid", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_processsession_originatingsessionid", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("previouslinkedsessionid")]
    [RelationshipSchemaName("lk_processsession_previouslinkedsessionid", EntityRole.Referencing)]
    public ProcessSession Referencinglk_processsession_previouslinkedsessionid {
        get {
            return GetRelatedEntity<ProcessSession>("lk_processsession_previouslinkedsessionid", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_processsession_previouslinkedsessionid", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesLiterature_ProcessSessions")]
    public SalesLiterature SalesLiterature_ProcessSessions {
        get {
            return GetRelatedEntity<SalesLiterature>("SalesLiterature_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("SalesLiterature_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_ProcessSessions")]
    public SalesOrder SalesOrder_ProcessSessions {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("SalesOrder_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ServiceAppointment_ProcessSessions")]
    public ServiceAppointment ServiceAppointment_ProcessSessions {
        get {
            return GetRelatedEntity<ServiceAppointment>("ServiceAppointment_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("ServiceAppointment_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SystemUser_ProcessSessions")]
    public SystemUser SystemUser_ProcessSessions {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("SystemUser_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Task_ProcessSessions")]
    public Task Task_ProcessSessions {
        get {
            return GetRelatedEntity<Task>("Task_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Task_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Territory_ProcessSessions")]
    public Territory Territory_ProcessSessions {
        get {
            return GetRelatedEntity<Territory>("Territory_ProcessSessions", null);
        }
        set {
            SetRelatedEntity("Territory_ProcessSessions", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresource_ProcessSession")]
    public BookableResource bookableresource_ProcessSession {
        get {
            return GetRelatedEntity<BookableResource>("bookableresource_ProcessSession", null);
        }
        set {
            SetRelatedEntity("bookableresource_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_ProcessSession")]
    public BookableResourceBooking bookableresourcebooking_ProcessSession {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_ProcessSession", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_ProcessSession")]
    public Entitlement entitlement_ProcessSession {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_ProcessSession", null);
        }
        set {
            SetRelatedEntity("entitlement_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_ProcessSession")]
    public EntitlementTemplate entitlementtemplate_ProcessSession {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_ProcessSession", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("canceledby")]
    [RelationshipSchemaName("lk_processsession_canceledby")]
    public SystemUser lk_processsession_canceledby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_canceledby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_canceledby", null, value);
        }
    }
    
    [AttributeLogicalName("completedby")]
    [RelationshipSchemaName("lk_processsession_completedby")]
    public SystemUser lk_processsession_completedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_completedby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_completedby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_processsession_createdby")]
    public SystemUser lk_processsession_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_createdby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("executedby")]
    [RelationshipSchemaName("lk_processsession_executedby")]
    public SystemUser lk_processsession_executedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_executedby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_executedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_processsession_modifiedby")]
    public SystemUser lk_processsession_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("startedby")]
    [RelationshipSchemaName("lk_processsession_startedby")]
    public SystemUser lk_processsession_startedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsession_startedby", null);
        }
        set {
            SetRelatedEntity("lk_processsession_startedby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_processsessionbase_createdonbehalfby")]
    public SystemUser lk_processsessionbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsessionbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_processsessionbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_processsessionbase_modifiedonbehalfby")]
    public SystemUser lk_processsessionbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_processsessionbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_processsessionbase_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_ProcessSession")]
    public msdyn_agreement msdyn_agreement_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ProcessSession")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_ProcessSession")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ProcessSession")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_bookingalert_ProcessSession")]
    public msdyn_bookingalert msdyn_bookingalert_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_bookingalert>("msdyn_bookingalert_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_bookingjournal_ProcessSession")]
    public msdyn_bookingjournal msdyn_bookingjournal_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_bookingjournal>("msdyn_bookingjournal_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingjournal_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_ProcessSession")]
    public msdyn_customerasset msdyn_customerasset_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerassetcategory_ProcessSession")]
    public msdyn_customerassetcategory msdyn_customerassetcategory_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_customerassetcategory>("msdyn_customerassetcategory_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_customerassetcategory_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_functionallocation_ProcessSession")]
    public msdyn_FunctionalLocation msdyn_functionallocation_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_functionallocation_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_functionallocation_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttype_ProcessSession")]
    public msdyn_incidenttype msdyn_incidenttype_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_incidenttype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ProcessSession")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_ProcessSession")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservicetask_ProcessSession")]
    public msdyn_incidenttypeservicetask msdyn_incidenttypeservicetask_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservicetask>("msdyn_incidenttypeservicetask_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservicetask_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_orderinvoicingproduct_ProcessSession")]
    public msdyn_orderinvoicingproduct msdyn_orderinvoicingproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_orderinvoicingproduct>("msdyn_orderinvoicingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_orderinvoicingproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_propertyassetassociation_ProcessSession")]
    public msdyn_propertyassetassociation msdyn_propertyassetassociation_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_propertyassetassociation>("msdyn_propertyassetassociation_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_propertyassetassociation_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_propertylog_ProcessSession")]
    public msdyn_propertylog msdyn_propertylog_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_propertylog>("msdyn_propertylog_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_propertylog_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_ProcessSession")]
    public msdyn_purchaseorder msdyn_purchaseorder_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ProcessSession")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_quoteinvoicingproduct_ProcessSession")]
    public msdyn_quoteinvoicingproduct msdyn_quoteinvoicingproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_quoteinvoicingproduct>("msdyn_quoteinvoicingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_quoteinvoicingproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_ProcessSession")]
    public msdyn_rma msdyn_rma_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_servicetasktype_ProcessSession")]
    public msdyn_servicetasktype msdyn_servicetasktype_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_servicetasktype>("msdyn_servicetasktype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_servicetasktype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_ProcessSession")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_ProcessSession")]
    public msdyn_workorder msdyn_workorder_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_ProcessSession")]
    public msdyn_workorderincident msdyn_workorderincident_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_ProcessSession")]
    public msdyn_workorderproduct msdyn_workorderproduct_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_ProcessSession")]
    public msdyn_workorderservice msdyn_workorderservice_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_ProcessSession")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workordersubstatus_ProcessSession")]
    public msdyn_workordersubstatus msdyn_workordersubstatus_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workordersubstatus>("msdyn_workordersubstatus_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workordersubstatus_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workordertype_ProcessSession")]
    public msdyn_workordertype msdyn_workordertype_ProcessSession {
        get {
            return GetRelatedEntity<msdyn_workordertype>("msdyn_workordertype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msdyn_workordertype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msfp_alert_ProcessSession")]
    public msfp_alert msfp_alert_ProcessSession {
        get {
            return GetRelatedEntity<msfp_alert>("msfp_alert_ProcessSession", null);
        }
        set {
            SetRelatedEntity("msfp_alert_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_aircarrier_ProcessSession")]
    public ovs_AirCarrier ovs_aircarrier_ProcessSession {
        get {
            return GetRelatedEntity<ovs_AirCarrier>("ovs_aircarrier_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_aircarrier_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_finding_ProcessSession")]
    public ovs_Finding ovs_finding_ProcessSession {
        get {
            return GetRelatedEntity<ovs_Finding>("ovs_finding_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_finding_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_lob_ProcessSession")]
    public ovs_lob ovs_lob_ProcessSession {
        get {
            return GetRelatedEntity<ovs_lob>("ovs_lob_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_lob_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_operation_ProcessSession")]
    public ovs_operation ovs_operation_ProcessSession {
        get {
            return GetRelatedEntity<ovs_operation>("ovs_operation_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_operation_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_operationtype_ProcessSession")]
    public ovs_operationtype ovs_operationtype_ProcessSession {
        get {
            return GetRelatedEntity<ovs_operationtype>("ovs_operationtype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_operationtype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_questionnaire_ProcessSession")]
    public ovs_Questionnaire ovs_questionnaire_ProcessSession {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ovs_questionnaire_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_questionnaire_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_sitetype_ProcessSession")]
    public ovs_SiteType ovs_sitetype_ProcessSession {
        get {
            return GetRelatedEntity<ovs_SiteType>("ovs_sitetype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_sitetype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_tyrational_ProcessSession")]
    public ovs_TYRational ovs_tyrational_ProcessSession {
        get {
            return GetRelatedEntity<ovs_TYRational>("ovs_tyrational_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_tyrational_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_workorderservicetaskprovision_ProcessSession")]
    public ovs_workorderservicetaskprovision ovs_workorderservicetaskprovision_ProcessSession {
        get {
            return GetRelatedEntity<ovs_workorderservicetaskprovision>("ovs_workorderservicetaskprovision_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ovs_workorderservicetaskprovision_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_ProcessSession")]
    public ppp_Traveller ppp_traveller_ProcessSession {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_rclegislation_ProcessSession")]
    public qm_rclegislation qm_rclegislation_ProcessSession {
        get {
            return GetRelatedEntity<qm_rclegislation>("qm_rclegislation_ProcessSession", null);
        }
        set {
            SetRelatedEntity("qm_rclegislation_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationcharacteristic_ProcessSession")]
    public qm_tylegislationcharacteristic qm_tylegislationcharacteristic_ProcessSession {
        get {
            return GetRelatedEntity<qm_tylegislationcharacteristic>("qm_tylegislationcharacteristic_ProcessSession", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationcharacteristic_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationsource_ProcessSession")]
    public qm_tylegislationsource qm_tylegislationsource_ProcessSession {
        get {
            return GetRelatedEntity<qm_tylegislationsource>("qm_tylegislationsource_ProcessSession", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationsource_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationtype_ProcessSession")]
    public qm_tylegislationtype qm_tylegislationtype_ProcessSession {
        get {
            return GetRelatedEntity<qm_tylegislationtype>("qm_tylegislationtype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationtype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_province_ProcessSession")]
    public tc_Province tc_province_ProcessSession {
        get {
            return GetRelatedEntity<tc_Province>("tc_province_ProcessSession", null);
        }
        set {
            SetRelatedEntity("tc_province_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalperiod_ProcessSession")]
    public tc_TCFiscalPeriod tc_tcfiscalperiod_ProcessSession {
        get {
            return GetRelatedEntity<tc_TCFiscalPeriod>("tc_tcfiscalperiod_ProcessSession", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalperiod_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalquarter_ProcessSession")]
    public tc_TCFiscalQuarter tc_tcfiscalquarter_ProcessSession {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("tc_tcfiscalquarter_ProcessSession", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalquarter_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalyear_ProcessSession")]
    public tc_TCFiscalYear tc_tcfiscalyear_ProcessSession {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("tc_tcfiscalyear_ProcessSession", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalyear_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcmonth_ProcessSession")]
    public tc_TCMonth tc_tcmonth_ProcessSession {
        get {
            return GetRelatedEntity<tc_TCMonth>("tc_tcmonth_ProcessSession", null);
        }
        set {
            SetRelatedEntity("tc_tcmonth_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_provisioncategory_ProcessSession")]
    public ts_ProvisionCategory ts_provisioncategory_ProcessSession {
        get {
            return GetRelatedEntity<ts_ProvisionCategory>("ts_provisioncategory_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_provisioncategory_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_questionnaireversion_ProcessSession")]
    public ts_questionnaireversion ts_questionnaireversion_ProcessSession {
        get {
            return GetRelatedEntity<ts_questionnaireversion>("ts_questionnaireversion_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_questionnaireversion_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_ProcessSession")]
    public ts_request ts_request_ProcessSession {
        get {
            return GetRelatedEntity<ts_request>("ts_request_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_request_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_tradename_ProcessSession")]
    public ts_tradename ts_tradename_ProcessSession {
        get {
            return GetRelatedEntity<ts_tradename>("ts_tradename_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_tradename_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_workorderactivitytype_ProcessSession")]
    public ts_workorderactivitytype ts_workorderactivitytype_ProcessSession {
        get {
            return GetRelatedEntity<ts_workorderactivitytype>("ts_workorderactivitytype_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_workorderactivitytype_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_workordercreationwizard_ProcessSession")]
    public ts_workordercreationwizard ts_workordercreationwizard_ProcessSession {
        get {
            return GetRelatedEntity<ts_workordercreationwizard>("ts_workordercreationwizard_ProcessSession", null);
        }
        set {
            SetRelatedEntity("ts_workordercreationwizard_ProcessSession", null, value);
        }
    }
    
    public static ProcessSession Retrieve(IOrganizationService service, Guid id, params Expression<Func<ProcessSession,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Information about products and their pricing information.</para>
/// <para>Display Name: Product</para>
/// </summary>
[EntityLogicalName("product")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Product : ExtendedEntity<ProductState, Product_StatusCode> {
    
    public const string EntityLogicalName = "product";
    
    public const int EntityTypeCode = 1024;
    
    public Product() : 
            base(EntityLogicalName) {
    }
    
    public Product(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("productid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the product.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("productid")]
    [DisplayName("Product")]
    public Guid? ProductId {
        get {
            return GetAttributeValue<Guid?>("productid");
        }
        set {
            SetId("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the product.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who created the record.</para>
    /// <para>Display Name: Created By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Created By (External Party)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the product.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Current cost for the product item. Used in price calculations.</para>
    /// <para>Display Name: Current Cost</para>
    /// </summary>
    [AttributeLogicalName("currentcost")]
    [DisplayName("Current Cost")]
    public decimal? CurrentCost {
        get {
            return GetMoneyValue("currentcost");
        }
        set {
            SetMoneyValue("currentcost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Current Cost in base currency.</para>
    /// <para>Display Name: Current Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("currentcost_base")]
    [DisplayName("Current Cost (Base)")]
    public decimal? CurrentCost_Base {
        get {
            return GetMoneyValue("currentcost_base");
        }
    }
    
    /// <summary>
    /// <para>Internal Use Only</para>
    /// <para>Display Name: Internal Use Only</para>
    /// </summary>
    [AttributeLogicalName("dmtimportstate")]
    [DisplayName("Internal Use Only")]
    [Range(-2147483648, 2147483647)]
    public int? DMTImportState {
        get {
            return GetAttributeValue<int?>("dmtimportstate");
        }
        set {
            SetAttributeValue("dmtimportstate", value);
        }
    }
    
    /// <summary>
    /// <para>Default unit for the product.</para>
    /// <para>Display Name: Default Unit</para>
    /// </summary>
    [AttributeLogicalName("defaultuomid")]
    [DisplayName("Default Unit")]
    public EntityReference DefaultUoMId {
        get {
            return GetAttributeValue<EntityReference>("defaultuomid");
        }
        set {
            SetAttributeValue("defaultuomid", value);
        }
    }
    
    /// <summary>
    /// <para>Default unit group for the product.</para>
    /// <para>Display Name: Unit Group</para>
    /// </summary>
    [AttributeLogicalName("defaultuomscheduleid")]
    [DisplayName("Unit Group")]
    public EntityReference DefaultUoMScheduleId {
        get {
            return GetAttributeValue<EntityReference>("defaultuomscheduleid");
        }
        set {
            SetAttributeValue("defaultuomscheduleid", value);
        }
    }
    
    /// <summary>
    /// <para>Description of the product.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the product with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Hierarchy path of the product.</para>
    /// <para>Display Name: Hierarchy Path</para>
    /// </summary>
    [AttributeLogicalName("hierarchypath")]
    [DisplayName("Hierarchy Path")]
    [MaxLength(450)]
    public string HierarchyPath {
        get {
            return GetAttributeValue<string>("hierarchypath");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies whether the product is a kit.</para>
    /// <para>Display Name: Is Kit</para>
    /// </summary>
    [AttributeLogicalName("iskit")]
    [DisplayName("Is Kit")]
    public bool? IsKit {
        get {
            return GetAttributeValue<bool?>("iskit");
        }
        set {
            SetAttributeValue("iskit", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Reparented</para>
    /// </summary>
    [AttributeLogicalName("isreparented")]
    [DisplayName("Is Reparented")]
    public bool? IsReparented {
        get {
            return GetAttributeValue<bool?>("isreparented");
        }
        set {
            SetAttributeValue("isreparented", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the product is a stock item.</para>
    /// <para>Display Name: Stock Item</para>
    /// </summary>
    [AttributeLogicalName("isstockitem")]
    [DisplayName("Stock Item")]
    public bool? IsStockItem {
        get {
            return GetAttributeValue<bool?>("isstockitem");
        }
        set {
            SetAttributeValue("isstockitem", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the product.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the external party who modified the record.</para>
    /// <para>Display Name: Modified By (External Party)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modified By (External Party)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the product.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Name of the product.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies the parent product family hierarchy.</para>
    /// <para>Display Name: Parent</para>
    /// </summary>
    [AttributeLogicalName("parentproductid")]
    [DisplayName("Parent")]
    public EntityReference ParentProductId {
        get {
            return GetAttributeValue<EntityReference>("parentproductid");
        }
        set {
            SetAttributeValue("parentproductid", value);
        }
    }
    
    /// <summary>
    /// <para>List price for the product item. Used in price calculations.</para>
    /// <para>Display Name: List Price</para>
    /// </summary>
    [AttributeLogicalName("price")]
    [DisplayName("List Price")]
    public decimal? Price {
        get {
            return GetMoneyValue("price");
        }
        set {
            SetMoneyValue("price", value);
        }
    }
    
    /// <summary>
    /// <para>Select the default price list for the product.</para>
    /// <para>Display Name: Default Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Default Price List")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the List Price in base currency.</para>
    /// <para>Display Name: List Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("price_base")]
    [DisplayName("List Price (Base)")]
    public decimal? Price_Base {
        get {
            return GetMoneyValue("price_base");
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>User-defined product ID.</para>
    /// <para>Display Name: Product ID</para>
    /// </summary>
    [AttributeLogicalName("productnumber")]
    [DisplayName("Product ID")]
    [MaxLength(100)]
    public string ProductNumber {
        get {
            return GetAttributeValue<string>("productnumber");
        }
        set {
            SetAttributeValue("productnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Product Structure.</para>
    /// <para>Display Name: Product Structure</para>
    /// </summary>
    [AttributeLogicalName("productstructure")]
    [DisplayName("Product Structure")]
    public Product_ProductStructure? ProductStructure {
        get {
            return GetOptionSetValue<Product_ProductStructure>("productstructure");
        }
        set {
            SetOptionSetValue("productstructure", value);
        }
    }
    
    /// <summary>
    /// <para>Type of product.</para>
    /// <para>Display Name: Product Type</para>
    /// </summary>
    [AttributeLogicalName("producttypecode")]
    [DisplayName("Product Type")]
    public Product_ProductTypeCode? ProductTypeCode {
        get {
            return GetOptionSetValue<Product_ProductTypeCode>("producttypecode");
        }
        set {
            SetOptionSetValue("producttypecode", value);
        }
    }
    
    /// <summary>
    /// <para>URL for the Website associated with the product.</para>
    /// <para>Display Name: URL</para>
    /// </summary>
    [AttributeLogicalName("producturl")]
    [DisplayName("URL")]
    [MaxLength(255)]
    public string ProductUrl {
        get {
            return GetAttributeValue<string>("producturl");
        }
        set {
            SetAttributeValue("producturl", value);
        }
    }
    
    /// <summary>
    /// <para>Number of decimal places that can be used in monetary amounts for the product.</para>
    /// <para>Display Name: Decimals Supported</para>
    /// </summary>
    [AttributeLogicalName("quantitydecimal")]
    [DisplayName("Decimals Supported")]
    [Range(0, 5)]
    public int? QuantityDecimal {
        get {
            return GetAttributeValue<int?>("quantitydecimal");
        }
        set {
            SetAttributeValue("quantitydecimal", value);
        }
    }
    
    /// <summary>
    /// <para>Quantity of the product in stock.</para>
    /// <para>Display Name: Quantity On Hand</para>
    /// </summary>
    [AttributeLogicalName("quantityonhand")]
    [DisplayName("Quantity On Hand")]
    public decimal? QuantityOnHand {
        get {
            return GetAttributeValue<decimal?>("quantityonhand");
        }
        set {
            SetAttributeValue("quantityonhand", value);
        }
    }
    
    /// <summary>
    /// <para>Product size.</para>
    /// <para>Display Name: Size</para>
    /// </summary>
    [AttributeLogicalName("size")]
    [DisplayName("Size")]
    [MaxLength(200)]
    public string Size {
        get {
            return GetAttributeValue<string>("size");
        }
        set {
            SetAttributeValue("size", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Standard cost for the product item. Used in price calculations.</para>
    /// <para>Display Name: Standard Cost</para>
    /// </summary>
    [AttributeLogicalName("standardcost")]
    [DisplayName("Standard Cost")]
    public decimal? StandardCost {
        get {
            return GetMoneyValue("standardcost");
        }
        set {
            SetMoneyValue("standardcost", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Standard Cost in base currency.</para>
    /// <para>Display Name: Standard Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("standardcost_base")]
    [DisplayName("Standard Cost (Base)")]
    public decimal? StandardCost_Base {
        get {
            return GetMoneyValue("standardcost_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the product.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ProductState? StateCode {
        get {
            return GetOptionSetValue<ProductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the product.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Product_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Product_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Stock volume of the product.</para>
    /// <para>Display Name: Stock Volume</para>
    /// </summary>
    [AttributeLogicalName("stockvolume")]
    [DisplayName("Stock Volume")]
    public decimal? StockVolume {
        get {
            return GetAttributeValue<decimal?>("stockvolume");
        }
        set {
            SetAttributeValue("stockvolume", value);
        }
    }
    
    /// <summary>
    /// <para>Stock weight of the product.</para>
    /// <para>Display Name: Stock Weight</para>
    /// </summary>
    [AttributeLogicalName("stockweight")]
    [DisplayName("Stock Weight")]
    public decimal? StockWeight {
        get {
            return GetAttributeValue<decimal?>("stockweight");
        }
        set {
            SetAttributeValue("stockweight", value);
        }
    }
    
    /// <summary>
    /// <para>Select a category for the product.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subjectid")]
    [DisplayName("Subject")]
    public EntityReference SubjectId {
        get {
            return GetAttributeValue<EntityReference>("subjectid");
        }
        set {
            SetAttributeValue("subjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the product's supplier.</para>
    /// <para>Display Name: Supplier Name</para>
    /// </summary>
    [AttributeLogicalName("suppliername")]
    [DisplayName("Supplier Name")]
    [MaxLength(100)]
    public string SupplierName {
        get {
            return GetAttributeValue<string>("suppliername");
        }
        set {
            SetAttributeValue("suppliername", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the product.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Date from which this product is valid.</para>
    /// <para>Display Name: Valid From</para>
    /// </summary>
    [AttributeLogicalName("validfromdate")]
    [DisplayName("Valid From")]
    public DateTime? ValidFromDate {
        get {
            return GetAttributeValue<DateTime?>("validfromdate");
        }
        set {
            SetAttributeValue("validfromdate", value);
        }
    }
    
    /// <summary>
    /// <para>Date to which this product is valid.</para>
    /// <para>Display Name: Valid To</para>
    /// </summary>
    [AttributeLogicalName("validtodate")]
    [DisplayName("Valid To")]
    public DateTime? ValidToDate {
        get {
            return GetAttributeValue<DateTime?>("validtodate");
        }
        set {
            SetAttributeValue("validtodate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of vendor supplying the product.</para>
    /// <para>Display Name: Vendor ID</para>
    /// </summary>
    [AttributeLogicalName("vendorid")]
    [DisplayName("Vendor ID")]
    [MaxLength(100)]
    public string VendorID {
        get {
            return GetAttributeValue<string>("vendorid");
        }
        set {
            SetAttributeValue("vendorid", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the product vendor.</para>
    /// <para>Display Name: Vendor</para>
    /// </summary>
    [AttributeLogicalName("vendorname")]
    [DisplayName("Vendor")]
    [MaxLength(100)]
    public string VendorName {
        get {
            return GetAttributeValue<string>("vendorname");
        }
        set {
            SetAttributeValue("vendorname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique part identifier in vendor catalog of this product.</para>
    /// <para>Display Name: Vendor Name</para>
    /// </summary>
    [AttributeLogicalName("vendorpartnumber")]
    [DisplayName("Vendor Name")]
    [MaxLength(100)]
    public string VendorPartNumber {
        get {
            return GetAttributeValue<string>("vendorpartnumber");
        }
        set {
            SetAttributeValue("vendorpartnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Specify whether a product is to be converted to a customer asset. When a product is used on a work order, the system will automatically convert it into a customer asset when the work order is closed.</para>
    /// <para>Display Name: Convert to Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_converttocustomerasset")]
    [DisplayName("Convert to Customer Asset")]
    public bool? msdyn_ConvertToCustomerAsset {
        get {
            return GetAttributeValue<bool?>("msdyn_converttocustomerasset");
        }
        set {
            SetAttributeValue("msdyn_converttocustomerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Default vendor that supplies this product</para>
    /// <para>Display Name: Default Vendor</para>
    /// </summary>
    [AttributeLogicalName("msdyn_defaultvendor")]
    [DisplayName("Default Vendor")]
    public EntityReference msdyn_DefaultVendor {
        get {
            return GetAttributeValue<EntityReference>("msdyn_defaultvendor");
        }
        set {
            SetAttributeValue("msdyn_defaultvendor", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Field Service Product Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_fieldserviceproducttype")]
    [DisplayName("Field Service Product Type")]
    public msdyn_fieldserviceproducttype? msdyn_FieldServiceProductType {
        get {
            return GetOptionSetValue<msdyn_fieldserviceproducttype>("msdyn_fieldserviceproducttype");
        }
        set {
            SetOptionSetValue("msdyn_fieldserviceproducttype", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name for the product when used on a purchase order.</para>
    /// <para>Display Name: Purchase Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchasename")]
    [DisplayName("Purchase Name")]
    [MaxLength(100)]
    public string msdyn_PurchaseName {
        get {
            return GetAttributeValue<string>("msdyn_purchasename");
        }
        set {
            SetAttributeValue("msdyn_purchasename", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the item is taxable. If an item is set as not taxable, it won't be taxable even on a taxable work order.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the UPC Code for product. Used for bar code scanning.</para>
    /// <para>Display Name: UPC Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_upccode")]
    [DisplayName("UPC Code")]
    [MaxLength(50)]
    public string msdyn_UPCCode {
        get {
            return GetAttributeValue<string>("msdyn_upccode");
        }
        set {
            SetAttributeValue("msdyn_upccode", value);
        }
    }
    
    [RelationshipSchemaName("Product_ProcessSessions")]
    public IEnumerable<ProcessSession> Product_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Product_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Product_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Product_SyncErrors")]
    public IEnumerable<SyncError> Product_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Product_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Product_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("product_parent_product", EntityRole.Referenced)]
    public IEnumerable<Product> Referencedproduct_parent_product {
        get {
            return GetRelatedEntities<Product>("product_parent_product", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("product_parent_product", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentproductid")]
    [RelationshipSchemaName("product_parent_product", EntityRole.Referencing)]
    public Product Referencingproduct_parent_product {
        get {
            return GetRelatedEntity<Product>("product_parent_product", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("product_parent_product", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("campaignproduct_association")]
    public IEnumerable<Campaign> campaignproduct_association {
        get {
            return GetRelatedEntities<Campaign>("campaignproduct_association", null);
        }
        set {
            SetRelatedEntities("campaignproduct_association", null, value);
        }
    }
    
    [RelationshipSchemaName("leadproduct_association")]
    public IEnumerable<Lead> leadproduct_association {
        get {
            return GetRelatedEntities<Lead>("leadproduct_association", null);
        }
        set {
            SetRelatedEntities("leadproduct_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_product_createdonbehalfby")]
    public SystemUser lk_product_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_product_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_product_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_product_modifiedonbehalfby")]
    public SystemUser lk_product_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_product_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_product_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_productbase_createdby")]
    public SystemUser lk_productbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_productbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_productbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_productbase_modifiedby")]
    public SystemUser lk_productbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_productbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_productbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_defaultvendor")]
    [RelationshipSchemaName("msdyn_account_product_DefaultVendor")]
    public Account msdyn_account_product_DefaultVendor {
        get {
            return GetRelatedEntity<Account>("msdyn_account_product_DefaultVendor", null);
        }
        set {
            SetRelatedEntity("msdyn_account_product_DefaultVendor", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_agreementbookingproduct_Product")]
    public IEnumerable<msdyn_agreementbookingproduct> msdyn_product_msdyn_agreementbookingproduct_Product {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("msdyn_product_msdyn_agreementbookingproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_agreementbookingproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_agreementbookingservice_Service")]
    public IEnumerable<msdyn_agreementbookingservice> msdyn_product_msdyn_agreementbookingservice_Service {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("msdyn_product_msdyn_agreementbookingservice_Service", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_agreementbookingservice_Service", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_agreementinvoiceproduct_Product")]
    public IEnumerable<msdyn_agreementinvoiceproduct> msdyn_product_msdyn_agreementinvoiceproduct_Product {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("msdyn_product_msdyn_agreementinvoiceproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_agreementinvoiceproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_customerasset_Product")]
    public IEnumerable<msdyn_customerasset> msdyn_product_msdyn_customerasset_Product {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_product_msdyn_customerasset_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_customerasset_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_incidenttypeproduct_Product")]
    public IEnumerable<msdyn_incidenttypeproduct> msdyn_product_msdyn_incidenttypeproduct_Product {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("msdyn_product_msdyn_incidenttypeproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_incidenttypeproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_incidenttypeservice_Service")]
    public IEnumerable<msdyn_incidenttypeservice> msdyn_product_msdyn_incidenttypeservice_Service {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("msdyn_product_msdyn_incidenttypeservice_Service", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_incidenttypeservice_Service", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_orderinvoicingproduct_Product")]
    public IEnumerable<msdyn_orderinvoicingproduct> msdyn_product_msdyn_orderinvoicingproduct_Product {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("msdyn_product_msdyn_orderinvoicingproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_orderinvoicingproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_purchaseorderproduct_Product")]
    public IEnumerable<msdyn_purchaseorderproduct> msdyn_product_msdyn_purchaseorderproduct_Product {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("msdyn_product_msdyn_purchaseorderproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_purchaseorderproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_quoteinvoicingproduct_Product")]
    public IEnumerable<msdyn_quoteinvoicingproduct> msdyn_product_msdyn_quoteinvoicingproduct_Product {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("msdyn_product_msdyn_quoteinvoicingproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_quoteinvoicingproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_workorderproduct_Product")]
    public IEnumerable<msdyn_workorderproduct> msdyn_product_msdyn_workorderproduct_Product {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_product_msdyn_workorderproduct_Product", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_workorderproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_product_msdyn_workorderservice_Service")]
    public IEnumerable<msdyn_workorderservice> msdyn_product_msdyn_workorderservice_Service {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_product_msdyn_workorderservice_Service", null);
        }
        set {
            SetRelatedEntities("msdyn_product_msdyn_workorderservice_Service", null, value);
        }
    }
    
    [RelationshipSchemaName("product_contract_line_items")]
    public IEnumerable<ContractDetail> product_contract_line_items {
        get {
            return GetRelatedEntities<ContractDetail>("product_contract_line_items", null);
        }
        set {
            SetRelatedEntities("product_contract_line_items", null, value);
        }
    }
    
    [RelationshipSchemaName("product_entitlement_association")]
    public IEnumerable<Entitlement> product_entitlement_association {
        get {
            return GetRelatedEntities<Entitlement>("product_entitlement_association", null);
        }
        set {
            SetRelatedEntities("product_entitlement_association", null, value);
        }
    }
    
    [RelationshipSchemaName("product_entitlementtemplate_association")]
    public IEnumerable<EntitlementTemplate> product_entitlementtemplate_association {
        get {
            return GetRelatedEntities<EntitlementTemplate>("product_entitlementtemplate_association", null);
        }
        set {
            SetRelatedEntities("product_entitlementtemplate_association", null, value);
        }
    }
    
    [RelationshipSchemaName("product_incidents")]
    public IEnumerable<Incident> product_incidents {
        get {
            return GetRelatedEntities<Incident>("product_incidents", null);
        }
        set {
            SetRelatedEntities("product_incidents", null, value);
        }
    }
    
    [RelationshipSchemaName("productsalesliterature_association")]
    public IEnumerable<SalesLiterature> productsalesliterature_association {
        get {
            return GetRelatedEntities<SalesLiterature>("productsalesliterature_association", null);
        }
        set {
            SetRelatedEntities("productsalesliterature_association", null, value);
        }
    }
    
    public static Product Retrieve(IOrganizationService service, Guid id, params Expression<Func<Product,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: ProductSalesLiterature</para>
/// </summary>
[EntityLogicalName("productsalesliterature")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ProductSalesLiterature : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "productsalesliterature";
    
    public const int EntityTypeCode = 21;
    
    public ProductSalesLiterature() : 
            base(EntityLogicalName) {
    }
    
    public ProductSalesLiterature(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("productsalesliteratureid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("productsalesliteratureid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the product sales literature associated with this price list.</para>
    /// </summary>
    [AttributeLogicalName("productsalesliteratureid")]
    public Guid? ProductSalesLiteratureId {
        get {
            return GetAttributeValue<Guid?>("productsalesliteratureid");
        }
        set {
            SetId("productsalesliteratureid", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("productid")]
    public Guid? ProductId {
        get {
            return GetAttributeValue<Guid?>("productid");
        }
    }
    
    [AttributeLogicalName("salesliteratureid")]
    public Guid? SalesLiteratureId {
        get {
            return GetAttributeValue<Guid?>("salesliteratureid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ProductSalesLiterature Retrieve(IOrganizationService service, Guid id, params Expression<Func<ProductSalesLiterature,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>A list of records that require action, such as accounts, activities, and cases.</para>
/// <para>Display Name: Queue</para>
/// </summary>
[EntityLogicalName("queue")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Queue : ExtendedEntity<QueueState, Queue_StatusCode> {
    
    public const string EntityLogicalName = "queue";
    
    public const int EntityTypeCode = 2020;
    
    public Queue() : 
            base(EntityLogicalName) {
    }
    
    public Queue(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("queueid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("queueid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the queue.</para>
    /// <para>Display Name: Queue</para>
    /// </summary>
    [AttributeLogicalName("queueid")]
    [DisplayName("Queue")]
    public Guid? QueueId {
        get {
            return GetAttributeValue<Guid?>("queueid");
        }
        set {
            SetId("queueid", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.</para>
    /// <para>Display Name: Allow to Use Credentials for Email Processing (Obsolete)</para>
    /// </summary>
    [AttributeLogicalName("allowemailcredentials")]
    [DisplayName("Allow to Use Credentials for Email Processing (Obsolete)")]
    public bool? AllowEmailCredentials {
        get {
            return GetAttributeValue<bool?>("allowemailcredentials");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit with which the queue is associated.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    [DisplayName("Business Unit")]
    public EntityReference BusinessUnitId {
        get {
            return GetAttributeValue<EntityReference>("businessunitid");
        }
        set {
            SetAttributeValue("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the queue record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the queue was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the queue.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the mailbox associated with this queue.</para>
    /// <para>Display Name: Mailbox</para>
    /// </summary>
    [AttributeLogicalName("defaultmailbox")]
    [DisplayName("Mailbox")]
    public EntityReference DefaultMailbox {
        get {
            return GetAttributeValue<EntityReference>("defaultmailbox");
        }
    }
    
    /// <summary>
    /// <para>Description of the queue.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Email address that is associated with the queue.</para>
    /// <para>Display Name: Incoming Email</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Incoming Email")]
    [MaxLength(100)]
    public string EMailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.Password attribute.</para>
    /// <para>Display Name: Password (Obsolete)</para>
    /// </summary>
    [AttributeLogicalName("emailpassword")]
    [DisplayName("Password (Obsolete)")]
    [MaxLength(200)]
    public string EmailPassword {
        get {
            return GetAttributeValue<string>("emailpassword");
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the primary email address.</para>
    /// <para>Display Name: Primary Email Status</para>
    /// </summary>
    [AttributeLogicalName("emailrouteraccessapproval")]
    [DisplayName("Primary Email Status")]
    public Queue_EmailRouterAccessApproval? EmailRouterAccessApproval {
        get {
            return GetOptionSetValue<Queue_EmailRouterAccessApproval>("emailrouteraccessapproval");
        }
        set {
            SetOptionSetValue("emailrouteraccessapproval", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.UserName attribute.</para>
    /// <para>Display Name: User Name (Obsolete)</para>
    /// </summary>
    [AttributeLogicalName("emailusername")]
    [DisplayName("User Name (Obsolete)")]
    [MaxLength(200)]
    public string EmailUsername {
        get {
            return GetAttributeValue<string>("emailusername");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Entity Image Id")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the queue with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Information that specifies whether a queue is to ignore unsolicited email (deprecated).</para>
    /// <para>Display Name: Convert To Email Activities</para>
    /// </summary>
    [AttributeLogicalName("ignoreunsolicitedemail")]
    [DisplayName("Convert To Email Activities")]
    public bool? IgnoreUnsolicitedEmail {
        get {
            return GetAttributeValue<bool?>("ignoreunsolicitedemail");
        }
        set {
            SetAttributeValue("ignoreunsolicitedemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Incoming email delivery method for the queue.</para>
    /// <para>Display Name: Incoming Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("incomingemaildeliverymethod")]
    [DisplayName("Incoming Email Delivery Method")]
    public Queue_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<Queue_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("incomingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Convert Incoming Email To Activities</para>
    /// <para>Display Name: Convert Incoming Email To Activities</para>
    /// </summary>
    [AttributeLogicalName("incomingemailfilteringmethod")]
    [DisplayName("Convert Incoming Email To Activities")]
    public Queue_IncomingEmailFilteringMethod? IncomingEmailFilteringMethod {
        get {
            return GetOptionSetValue<Queue_IncomingEmailFilteringMethod>("incomingemailfilteringmethod");
        }
        set {
            SetOptionSetValue("incomingemailfilteringmethod", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of approval of the email address by O365 Admin.</para>
    /// <para>Display Name: Email Address O365 Admin Approval Status</para>
    /// </summary>
    [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
    [DisplayName("Email Address O365 Admin Approval Status")]
    public bool? IsEmailAddressApprovedByO365Admin {
        get {
            return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
        }
    }
    
    /// <summary>
    /// <para>Indication of whether a queue is the fax delivery queue.</para>
    /// <para>Display Name: Fax Queue</para>
    /// </summary>
    [AttributeLogicalName("isfaxqueue")]
    [DisplayName("Fax Queue")]
    public bool? IsFaxQueue {
        get {
            return GetAttributeValue<bool?>("isfaxqueue");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the queue.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the queue was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the queue.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Name of the queue.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Number of Queue items associated with the queue.</para>
    /// <para>Display Name: Queue Items</para>
    /// </summary>
    [AttributeLogicalName("numberofitems")]
    [DisplayName("Queue Items")]
    [Range(-2147483648, 2147483647)]
    public int? NumberOfItems {
        get {
            return GetAttributeValue<int?>("numberofitems");
        }
    }
    
    /// <summary>
    /// <para>Number of Members associated with the queue.</para>
    /// <para>Display Name: No. of Members</para>
    /// </summary>
    [AttributeLogicalName("numberofmembers")]
    [DisplayName("No. of Members")]
    [Range(-2147483648, 2147483647)]
    public int? NumberOfMembers {
        get {
            return GetAttributeValue<int?>("numberofmembers");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the organization associated with the queue.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Outgoing email delivery method for the queue.</para>
    /// <para>Display Name: Outgoing Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("outgoingemaildeliverymethod")]
    [DisplayName("Outgoing Email Delivery Method")]
    public Queue_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<Queue_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("outgoingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the queue.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the queue.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the queue.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the queue.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the owner of the queue.</para>
    /// <para>Display Name: Owner (deprecated)</para>
    /// </summary>
    [AttributeLogicalName("primaryuserid")]
    [DisplayName("Owner (deprecated)")]
    public EntityReference PrimaryUserId {
        get {
            return GetAttributeValue<EntityReference>("primaryuserid");
        }
        set {
            SetAttributeValue("primaryuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of queue that is automatically assigned when a user or queue is created. The type can be public, private, or work in process.</para>
    /// <para>Display Name: Queue Type</para>
    /// </summary>
    [AttributeLogicalName("queuetypecode")]
    [DisplayName("Queue Type")]
    public Queue_QueueTypeCode? QueueTypeCode {
        get {
            return GetOptionSetValue<Queue_QueueTypeCode>("queuetypecode");
        }
    }
    
    /// <summary>
    /// <para>Select whether the queue is public or private. A public queue can be viewed by all. A private queue can be viewed only by the members added to the queue.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("queueviewtype")]
    [DisplayName("Type")]
    public Queue_QueueViewType? QueueViewType {
        get {
            return GetOptionSetValue<Queue_QueueViewType>("queueviewtype");
        }
        set {
            SetOptionSetValue("queueviewtype", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the queue.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public QueueState? StateCode {
        get {
            return GetOptionSetValue<QueueState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the queue.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Queue_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Queue_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the queue.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the queue.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("Queue_Email_EmailSender")]
    public IEnumerable<Email> Queue_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Queue_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Queue_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Queue_ProcessSessions")]
    public IEnumerable<ProcessSession> Queue_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Queue_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Queue_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Queue_SyncErrors")]
    public IEnumerable<SyncError> Queue_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Queue_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Queue_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("email_acceptingentity_queue")]
    public IEnumerable<Email> email_acceptingentity_queue {
        get {
            return GetRelatedEntities<Email>("email_acceptingentity_queue", null);
        }
        set {
            SetRelatedEntities("email_acceptingentity_queue", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_queue_createdonbehalfby")]
    public SystemUser lk_queue_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_queue_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_queue_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_queue_modifiedonbehalfby")]
    public SystemUser lk_queue_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_queue_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_queue_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_queuebase_createdby")]
    public SystemUser lk_queuebase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_queuebase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_queuebase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_queuebase_modifiedby")]
    public SystemUser lk_queuebase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_queuebase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_queuebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("queue_activity_parties")]
    public IEnumerable<ActivityParty> queue_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("queue_activity_parties", null);
        }
        set {
            SetRelatedEntities("queue_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("primaryuserid")]
    [RelationshipSchemaName("queue_primary_user")]
    public SystemUser queue_primary_user {
        get {
            return GetRelatedEntity<SystemUser>("queue_primary_user", null);
        }
        set {
            SetRelatedEntity("queue_primary_user", null, value);
        }
    }
    
    [RelationshipSchemaName("queue_system_user")]
    public IEnumerable<SystemUser> queue_system_user {
        get {
            return GetRelatedEntities<SystemUser>("queue_system_user", null);
        }
        set {
            SetRelatedEntities("queue_system_user", null, value);
        }
    }
    
    [RelationshipSchemaName("queuemembership_association")]
    public IEnumerable<SystemUser> queuemembership_association {
        get {
            return GetRelatedEntities<SystemUser>("queuemembership_association", null);
        }
        set {
            SetRelatedEntities("queuemembership_association", null, value);
        }
    }
    
    public static Queue Retrieve(IOrganizationService service, Guid id, params Expression<Func<Queue,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("queuemembership")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class QueueMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "queuemembership";
    
    public const int EntityTypeCode = 1213;
    
    public QueueMembership() : 
            base(EntityLogicalName) {
    }
    
    public QueueMembership(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("queuemembershipid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("queuemembershipid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the queue membership.</para>
    /// </summary>
    [AttributeLogicalName("queuemembershipid")]
    public Guid? QueueMembershipId {
        get {
            return GetAttributeValue<Guid?>("queuemembershipid");
        }
        set {
            SetId("queuemembershipid", value);
        }
    }
    
    [AttributeLogicalName("queueid")]
    public Guid? QueueId {
        get {
            return GetAttributeValue<Guid?>("queueid");
        }
    }
    
    [AttributeLogicalName("systemuserid")]
    public Guid? SystemUserId {
        get {
            return GetAttributeValue<Guid?>("systemuserid");
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static QueueMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<QueueMembership,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Formal offer for products and/or services, proposed at specific prices and related payment terms, which is sent to a prospective customer.</para>
/// <para>Display Name: Quote</para>
/// </summary>
[EntityLogicalName("quote")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Quote : ExtendedEntity<QuoteState, Quote_StatusCode> {
    
    public const string EntityLogicalName = "quote";
    
    public const int EntityTypeCode = 1084;
    
    public Quote() : 
            base(EntityLogicalName) {
    }
    
    public Quote(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("quoteid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("quoteid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the quote.</para>
    /// <para>Display Name: Quote</para>
    /// </summary>
    [AttributeLogicalName("quoteid")]
    [DisplayName("Quote")]
    public Guid? QuoteId {
        get {
            return GetAttributeValue<Guid?>("quoteid");
        }
        set {
            SetId("quoteid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the account with which the quote is associated.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the billing address.</para>
    /// <para>Display Name: Bill To Address ID</para>
    /// </summary>
    [AttributeLogicalName("billto_addressid")]
    [DisplayName("Bill To Address ID")]
    public Guid? BillTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("billto_addressid");
        }
        set {
            SetAttributeValue("billto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's billing address.</para>
    /// <para>Display Name: Bill To City</para>
    /// </summary>
    [AttributeLogicalName("billto_city")]
    [DisplayName("Bill To City")]
    [MaxLength(80)]
    public string BillTo_City {
        get {
            return GetAttributeValue<string>("billto_city");
        }
        set {
            SetAttributeValue("billto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Bill To address.</para>
    /// <para>Display Name: Bill To Address</para>
    /// </summary>
    [AttributeLogicalName("billto_composite")]
    [DisplayName("Bill To Address")]
    public string BillTo_Composite {
        get {
            return GetAttributeValue<string>("billto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the primary contact name at the customer's billing address.</para>
    /// <para>Display Name: Bill To Contact Name</para>
    /// </summary>
    [AttributeLogicalName("billto_contactname")]
    [DisplayName("Bill To Contact Name")]
    [MaxLength(150)]
    public string BillTo_ContactName {
        get {
            return GetAttributeValue<string>("billto_contactname");
        }
        set {
            SetAttributeValue("billto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's billing address.</para>
    /// <para>Display Name: Bill To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("billto_country")]
    [DisplayName("Bill To Country/Region")]
    [MaxLength(80)]
    public string BillTo_Country {
        get {
            return GetAttributeValue<string>("billto_country");
        }
        set {
            SetAttributeValue("billto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Fax</para>
    /// </summary>
    [AttributeLogicalName("billto_fax")]
    [DisplayName("Bill To Fax")]
    [MaxLength(50)]
    public string BillTo_Fax {
        get {
            return GetAttributeValue<string>("billto_fax");
        }
        set {
            SetAttributeValue("billto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 1</para>
    /// </summary>
    [AttributeLogicalName("billto_line1")]
    [DisplayName("Bill To Street 1")]
    [MaxLength(250)]
    public string BillTo_Line1 {
        get {
            return GetAttributeValue<string>("billto_line1");
        }
        set {
            SetAttributeValue("billto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 2</para>
    /// </summary>
    [AttributeLogicalName("billto_line2")]
    [DisplayName("Bill To Street 2")]
    [MaxLength(250)]
    public string BillTo_Line2 {
        get {
            return GetAttributeValue<string>("billto_line2");
        }
        set {
            SetAttributeValue("billto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the billing address.</para>
    /// <para>Display Name: Bill To Street 3</para>
    /// </summary>
    [AttributeLogicalName("billto_line3")]
    [DisplayName("Bill To Street 3")]
    [MaxLength(250)]
    public string BillTo_Line3 {
        get {
            return GetAttributeValue<string>("billto_line3");
        }
        set {
            SetAttributeValue("billto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
    /// <para>Display Name: Bill To Name</para>
    /// </summary>
    [AttributeLogicalName("billto_name")]
    [DisplayName("Bill To Name")]
    [MaxLength(200)]
    public string BillTo_Name {
        get {
            return GetAttributeValue<string>("billto_name");
        }
        set {
            SetAttributeValue("billto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the billing address.</para>
    /// <para>Display Name: Bill To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("billto_postalcode")]
    [DisplayName("Bill To ZIP/Postal Code")]
    [MaxLength(20)]
    public string BillTo_PostalCode {
        get {
            return GetAttributeValue<string>("billto_postalcode");
        }
        set {
            SetAttributeValue("billto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the billing address.</para>
    /// <para>Display Name: Bill To State/Province</para>
    /// </summary>
    [AttributeLogicalName("billto_stateorprovince")]
    [DisplayName("Bill To State/Province")]
    [MaxLength(50)]
    public string BillTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("billto_stateorprovince");
        }
        set {
            SetAttributeValue("billto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Phone</para>
    /// </summary>
    [AttributeLogicalName("billto_telephone")]
    [DisplayName("Bill To Phone")]
    [MaxLength(50)]
    public string BillTo_Telephone {
        get {
            return GetAttributeValue<string>("billto_telephone");
        }
        set {
            SetAttributeValue("billto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the campaign that the order was created from.</para>
    /// <para>Display Name: Source Campaign</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Source Campaign")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the quote was closed to indicate the expiration, revision, or cancellation date.</para>
    /// <para>Display Name: Closed On</para>
    /// </summary>
    [AttributeLogicalName("closedon")]
    [DisplayName("Closed On")]
    public DateTime? ClosedOn {
        get {
            return GetAttributeValue<DateTime?>("closedon");
        }
        set {
            SetAttributeValue("closedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact associated with the quote.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
    /// <para>Display Name: Potential Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Potential Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the quote, such as the products or services offered or details about the customer's product preferences.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount amount for the quote if the customer is eligible for special savings.</para>
    /// <para>Display Name: Quote Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("discountamount")]
    [DisplayName("Quote Discount Amount")]
    public decimal? DiscountAmount {
        get {
            return GetMoneyValue("discountamount");
        }
        set {
            SetMoneyValue("discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Quote Discount Amount in base currency.</para>
    /// <para>Display Name: Quote Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("discountamount_base")]
    [DisplayName("Quote Discount Amount (Base)")]
    public decimal? DiscountAmount_Base {
        get {
            return GetMoneyValue("discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Type the discount rate that should be applied to the Detail Amount field to include additional savings for the customer in the quote.</para>
    /// <para>Display Name: Quote Discount (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Quote Discount (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the quote pricing is effective or was first communicated to the customer.</para>
    /// <para>Display Name: Effective From</para>
    /// </summary>
    [AttributeLogicalName("effectivefrom")]
    [DisplayName("Effective From")]
    public DateTime? EffectiveFrom {
        get {
            return GetAttributeValue<DateTime?>("effectivefrom");
        }
        set {
            SetAttributeValue("effectivefrom", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expiration date or last day the quote pricing is effective for the customer.</para>
    /// <para>Display Name: Effective To</para>
    /// </summary>
    [AttributeLogicalName("effectiveto")]
    [DisplayName("Effective To")]
    public DateTime? EffectiveTo {
        get {
            return GetAttributeValue<DateTime?>("effectiveto");
        }
        set {
            SetAttributeValue("effectiveto", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Enter the date a decision or order is due from the customer to indicate the expiration date of the quote.</para>
    /// <para>Display Name: Due By</para>
    /// </summary>
    [AttributeLogicalName("expireson")]
    [DisplayName("Due By")]
    public DateTime? ExpiresOn {
        get {
            return GetAttributeValue<DateTime?>("expireson");
        }
        set {
            SetAttributeValue("expireson", value);
        }
    }
    
    /// <summary>
    /// <para>Type the cost of freight or shipping for the products included in the quote for use in calculating the Total Amount field.</para>
    /// <para>Display Name: Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("freightamount")]
    [DisplayName("Freight Amount")]
    public decimal? FreightAmount {
        get {
            return GetMoneyValue("freightamount");
        }
        set {
            SetMoneyValue("freightamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Freight Amount in base currency.</para>
    /// <para>Display Name: Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("freightamount_base")]
    [DisplayName("Freight Amount (Base)")]
    public decimal? FreightAmount_Base {
        get {
            return GetMoneyValue("freightamount_base");
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
    /// <para>Display Name: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("freighttermscode")]
    [DisplayName("Freight Terms")]
    public Quote_FreightTermsCode? FreightTermsCode {
        get {
            return GetOptionSetValue<Quote_FreightTermsCode>("freighttermscode");
        }
        set {
            SetOptionSetValue("freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the quote.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(300)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration in minutes for which the quote was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Choose the opportunity that the quote is related to for reporting and analytics.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [AttributeLogicalName("opportunityid")]
    [DisplayName("Opportunity")]
    public EntityReference OpportunityId {
        get {
            return GetAttributeValue<EntityReference>("opportunityid");
        }
        set {
            SetAttributeValue("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
    /// <para>Display Name: Payment Terms</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Payment Terms")]
    public Quote_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Quote_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Price List")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Pricing error for the quote.</para>
    /// <para>Display Name: Pricing Error </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Pricing Error ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the quote number for customer reference and searching capabilities. The number cannot be modified.</para>
    /// <para>Display Name: Quote ID</para>
    /// </summary>
    [AttributeLogicalName("quotenumber")]
    [DisplayName("Quote ID")]
    [MaxLength(100)]
    public string QuoteNumber {
        get {
            return GetAttributeValue<string>("quotenumber");
        }
        set {
            SetAttributeValue("quotenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the delivery date requested by the customer for all products in the quote.</para>
    /// <para>Display Name: Requested Delivery Date</para>
    /// </summary>
    [AttributeLogicalName("requestdeliveryby")]
    [DisplayName("Requested Delivery Date")]
    public DateTime? RequestDeliveryBy {
        get {
            return GetAttributeValue<DateTime?>("requestdeliveryby");
        }
        set {
            SetAttributeValue("requestdeliveryby", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the version number of the quote for revision history tracking.</para>
    /// <para>Display Name: Revision ID</para>
    /// </summary>
    [AttributeLogicalName("revisionnumber")]
    [DisplayName("Revision ID")]
    [Range(0, 2147483647)]
    public int? RevisionNumber {
        get {
            return GetAttributeValue<int?>("revisionnumber");
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the quote record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this quote. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the shipping address.</para>
    /// <para>Display Name: Ship To Address ID</para>
    /// </summary>
    [AttributeLogicalName("shipto_addressid")]
    [DisplayName("Ship To Address ID")]
    public Guid? ShipTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("shipto_addressid");
        }
        set {
            SetAttributeValue("shipto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's shipping address.</para>
    /// <para>Display Name: Ship To City</para>
    /// </summary>
    [AttributeLogicalName("shipto_city")]
    [DisplayName("Ship To City")]
    [MaxLength(80)]
    public string ShipTo_City {
        get {
            return GetAttributeValue<string>("shipto_city");
        }
        set {
            SetAttributeValue("shipto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Ship To address.</para>
    /// <para>Display Name: Ship To Address</para>
    /// </summary>
    [AttributeLogicalName("shipto_composite")]
    [DisplayName("Ship To Address")]
    public string ShipTo_Composite {
        get {
            return GetAttributeValue<string>("shipto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the primary contact name at the customer's shipping address.</para>
    /// <para>Display Name: Ship To Contact Name</para>
    /// </summary>
    [AttributeLogicalName("shipto_contactname")]
    [DisplayName("Ship To Contact Name")]
    [MaxLength(150)]
    public string ShipTo_ContactName {
        get {
            return GetAttributeValue<string>("shipto_contactname");
        }
        set {
            SetAttributeValue("shipto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("shipto_country")]
    [DisplayName("Ship To Country/Region")]
    [MaxLength(80)]
    public string ShipTo_Country {
        get {
            return GetAttributeValue<string>("shipto_country");
        }
        set {
            SetAttributeValue("shipto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Fax</para>
    /// </summary>
    [AttributeLogicalName("shipto_fax")]
    [DisplayName("Ship To Fax")]
    [MaxLength(50)]
    public string ShipTo_Fax {
        get {
            return GetAttributeValue<string>("shipto_fax");
        }
        set {
            SetAttributeValue("shipto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Ship To Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("shipto_freighttermscode")]
    [DisplayName("Ship To Freight Terms")]
    public Quote_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
        get {
            return GetOptionSetValue<Quote_ShipTo_FreightTermsCode>("shipto_freighttermscode");
        }
        set {
            SetOptionSetValue("shipto_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 1</para>
    /// </summary>
    [AttributeLogicalName("shipto_line1")]
    [DisplayName("Ship To Street 1")]
    [MaxLength(250)]
    public string ShipTo_Line1 {
        get {
            return GetAttributeValue<string>("shipto_line1");
        }
        set {
            SetAttributeValue("shipto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 2</para>
    /// </summary>
    [AttributeLogicalName("shipto_line2")]
    [DisplayName("Ship To Street 2")]
    [MaxLength(250)]
    public string ShipTo_Line2 {
        get {
            return GetAttributeValue<string>("shipto_line2");
        }
        set {
            SetAttributeValue("shipto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the shipping address.</para>
    /// <para>Display Name: Ship To Street 3</para>
    /// </summary>
    [AttributeLogicalName("shipto_line3")]
    [DisplayName("Ship To Street 3")]
    [MaxLength(250)]
    public string ShipTo_Line3 {
        get {
            return GetAttributeValue<string>("shipto_line3");
        }
        set {
            SetAttributeValue("shipto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
    /// <para>Display Name: Ship To Name</para>
    /// </summary>
    [AttributeLogicalName("shipto_name")]
    [DisplayName("Ship To Name")]
    [MaxLength(200)]
    public string ShipTo_Name {
        get {
            return GetAttributeValue<string>("shipto_name");
        }
        set {
            SetAttributeValue("shipto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the shipping address.</para>
    /// <para>Display Name: Ship To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("shipto_postalcode")]
    [DisplayName("Ship To ZIP/Postal Code")]
    [MaxLength(20)]
    public string ShipTo_PostalCode {
        get {
            return GetAttributeValue<string>("shipto_postalcode");
        }
        set {
            SetAttributeValue("shipto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the shipping address.</para>
    /// <para>Display Name: Ship To State/Province</para>
    /// </summary>
    [AttributeLogicalName("shipto_stateorprovince")]
    [DisplayName("Ship To State/Province")]
    [MaxLength(50)]
    public string ShipTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("shipto_stateorprovince");
        }
        set {
            SetAttributeValue("shipto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Phone</para>
    /// </summary>
    [AttributeLogicalName("shipto_telephone")]
    [DisplayName("Ship To Phone")]
    [MaxLength(50)]
    public string ShipTo_Telephone {
        get {
            return GetAttributeValue<string>("shipto_telephone");
        }
        set {
            SetAttributeValue("shipto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Shipping Method")]
    public Quote_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Quote_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Skip Price Calculation (For Internal use)</para>
    /// <para>Display Name: Skip Price Calculation</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Skip Price Calculation")]
    public qooi_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the quote is draft, active, won, or closed. Only draft quotes can be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public QuoteState? StateCode {
        get {
            return GetOptionSetValue<QuoteState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the quote's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Quote_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Quote_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the quote.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamount")]
    [DisplayName("Total Amount")]
    public decimal? TotalAmount {
        get {
            return GetMoneyValue("totalamount");
        }
        set {
            SetMoneyValue("totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total product amount for the quote, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the quote.</para>
    /// <para>Display Name: Total Pre-Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight")]
    [DisplayName("Total Pre-Freight Amount")]
    public decimal? TotalAmountLessFreight {
        get {
            return GetMoneyValue("totalamountlessfreight");
        }
        set {
            SetMoneyValue("totalamountlessfreight", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Pre-Freight Amount in base currency.</para>
    /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight_base")]
    [DisplayName("Total Pre-Freight Amount (Base)")]
    public decimal? TotalAmountLessFreight_Base {
        get {
            return GetMoneyValue("totalamountlessfreight_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Amount in base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? TotalAmount_Base {
        get {
            return GetMoneyValue("totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total discount amount, based on the discount price and rate entered on the quote.</para>
    /// <para>Display Name: Total Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount")]
    [DisplayName("Total Discount Amount")]
    public decimal? TotalDiscountAmount {
        get {
            return GetMoneyValue("totaldiscountamount");
        }
        set {
            SetMoneyValue("totaldiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Discount Amount in base currency.</para>
    /// <para>Display Name: Total Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount_base")]
    [DisplayName("Total Discount Amount (Base)")]
    public decimal? TotalDiscountAmount_Base {
        get {
            return GetMoneyValue("totaldiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of all existing and write-in products included on the quote, based on the specified price list and quantities.</para>
    /// <para>Display Name: Total Detail Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount")]
    [DisplayName("Total Detail Amount")]
    public decimal? TotalLineItemAmount {
        get {
            return GetMoneyValue("totallineitemamount");
        }
        set {
            SetMoneyValue("totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Detail Amount in base currency.</para>
    /// <para>Display Name: Total Detail Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount_base")]
    [DisplayName("Total Detail Amount (Base)")]
    public decimal? TotalLineItemAmount_Base {
        get {
            return GetMoneyValue("totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Manual Discount amounts specified on all products included in the quote. This value is reflected in the Detail Amount field on the quote and is added to any discount amount or rate specified on the quote</para>
    /// <para>Display Name: Total Line Item Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount")]
    [DisplayName("Total Line Item Discount Amount")]
    public decimal? TotalLineItemDiscountAmount {
        get {
            return GetMoneyValue("totallineitemdiscountamount");
        }
        set {
            SetMoneyValue("totallineitemdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Line Item Discount Amount in base currency.</para>
    /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount_base")]
    [DisplayName("Total Line Item Discount Amount (Base)")]
    public decimal? TotalLineItemDiscountAmount_Base {
        get {
            return GetMoneyValue("totallineitemdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Tax amounts specified on all products included in the quote, included in the Total Amount due calculation for the quote.</para>
    /// <para>Display Name: Total Tax</para>
    /// </summary>
    [AttributeLogicalName("totaltax")]
    [DisplayName("Total Tax")]
    public decimal? TotalTax {
        get {
            return GetMoneyValue("totaltax");
        }
        set {
            SetMoneyValue("totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Tax in base currency.</para>
    /// <para>Display Name: Total Tax (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaltax_base")]
    [DisplayName("Total Tax (Base)")]
    public decimal? TotalTax_Base {
        get {
            return GetMoneyValue("totaltax_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Select whether the products included in the quote should be shipped to the specified address or held until the customer calls with further pick up or delivery instructions.</para>
    /// <para>Display Name: Ship To</para>
    /// </summary>
    [AttributeLogicalName("willcall")]
    [DisplayName("Ship To")]
    public bool? WillCall {
        get {
            return GetAttributeValue<bool?>("willcall");
        }
        set {
            SetAttributeValue("willcall", value);
        }
    }
    
    /// <summary>
    /// <para>Customer Account associated with this Quote</para>
    /// <para>Display Name: Potential Customer</para>
    /// </summary>
    [AttributeLogicalName("msdyn_account")]
    [DisplayName("Potential Customer")]
    public EntityReference msdyn_Account {
        get {
            return GetAttributeValue<EntityReference>("msdyn_account");
        }
        set {
            SetAttributeValue("msdyn_account", value);
        }
    }
    
    /// <summary>
    /// <para>The estimated cost of this quote</para>
    /// <para>Display Name: Estimated Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedcost")]
    [DisplayName("Estimated Cost")]
    public decimal? msdyn_EstimatedCost {
        get {
            return GetMoneyValue("msdyn_estimatedcost");
        }
        set {
            SetMoneyValue("msdyn_estimatedcost", value);
        }
    }
    
    /// <summary>
    /// <para>Estimated Margin of this quote</para>
    /// <para>Display Name: Estimated Margin</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedquotemargin")]
    [DisplayName("Estimated Margin")]
    public decimal? msdyn_EstimatedQuoteMargin {
        get {
            return GetAttributeValue<decimal?>("msdyn_estimatedquotemargin");
        }
    }
    
    /// <summary>
    /// <para>The totals of all assigned Invoice Setups</para>
    /// <para>Display Name: Invoice Setup Totals</para>
    /// </summary>
    [AttributeLogicalName("msdyn_invoicesetuptotals")]
    [DisplayName("Invoice Setup Totals")]
    public decimal? msdyn_InvoiceSetupTotals {
        get {
            return GetMoneyValue("msdyn_invoicesetuptotals");
        }
        set {
            SetMoneyValue("msdyn_invoicesetuptotals", value);
        }
    }
    
    /// <summary>
    /// <para>Internal use only.</para>
    /// <para>Display Name: Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ordertype")]
    [DisplayName("Order Type")]
    public Quote_msdyn_OrderType? msdyn_OrderType {
        get {
            return GetOptionSetValue<Quote_msdyn_OrderType>("msdyn_ordertype");
        }
        set {
            SetOptionSetValue("msdyn_ordertype", value);
        }
    }
    
    /// <summary>
    /// <para>The latest end date of all associated quote lines</para>
    /// <para>Display Name: Latest Quote Line End Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quotelineenddate")]
    [DisplayName("Latest Quote Line End Date")]
    public DateTime? msdyn_QuoteLineEndDate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_quotelineenddate");
        }
        set {
            SetAttributeValue("msdyn_quotelineenddate", value);
        }
    }
    
    /// <summary>
    /// <para>The earliest Start Date of all Quote Lines that are associated to this quote</para>
    /// <para>Display Name: Earliest Quote Line Start Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quotelinestartdate")]
    [DisplayName("Earliest Quote Line Start Date")]
    public DateTime? msdyn_QuoteLineStartDate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_quotelinestartdate");
        }
        set {
            SetAttributeValue("msdyn_quotelinestartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TotalAmount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("TotalAmount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
    }
    
    /// <summary>
    /// <para>Value of the Estimated Cost in base currency.</para>
    /// <para>Display Name: Estimated Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedcost_base")]
    [DisplayName("Estimated Cost (Base)")]
    public decimal? msdyn_estimatedcost_Base {
        get {
            return GetMoneyValue("msdyn_estimatedcost_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the Invoice Setup Totals in base currency.</para>
    /// <para>Display Name: Invoice Setup Totals (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_invoicesetuptotals_base")]
    [DisplayName("Invoice Setup Totals (Base)")]
    public decimal? msdyn_invoicesetuptotals_Base {
        get {
            return GetMoneyValue("msdyn_invoicesetuptotals_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the TotalAmount in base currency.</para>
    /// <para>Display Name: TotalAmount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("TotalAmount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    [RelationshipSchemaName("Quote_ActivityPointers")]
    public IEnumerable<ActivityPointer> Quote_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("Quote_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("Quote_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_Appointments")]
    public IEnumerable<Appointment> Quote_Appointments {
        get {
            return GetRelatedEntities<Appointment>("Quote_Appointments", null);
        }
        set {
            SetRelatedEntities("Quote_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_Emails")]
    public IEnumerable<Email> Quote_Emails {
        get {
            return GetRelatedEntities<Email>("Quote_Emails", null);
        }
        set {
            SetRelatedEntities("Quote_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_Phonecalls")]
    public IEnumerable<PhoneCall> Quote_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Quote_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Quote_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_ProcessSessions")]
    public IEnumerable<ProcessSession> Quote_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Quote_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Quote_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> Quote_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("Quote_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("Quote_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> Quote_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("Quote_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("Quote_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_SyncErrors")]
    public IEnumerable<SyncError> Quote_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Quote_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Quote_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("Quote_Tasks")]
    public IEnumerable<Task> Quote_Tasks {
        get {
            return GetRelatedEntities<Task>("Quote_Tasks", null);
        }
        set {
            SetRelatedEntities("Quote_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("campaignid")]
    [RelationshipSchemaName("campaign_quotes")]
    public Campaign campaign_quotes {
        get {
            return GetRelatedEntity<Campaign>("campaign_quotes", null);
        }
        set {
            SetRelatedEntity("campaign_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("contactquotes_association")]
    public IEnumerable<Contact> contactquotes_association {
        get {
            return GetRelatedEntities<Contact>("contactquotes_association", null);
        }
        set {
            SetRelatedEntities("contactquotes_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_quote_createdonbehalfby")]
    public SystemUser lk_quote_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_quote_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_quote_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_quote_modifiedonbehalfby")]
    public SystemUser lk_quote_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_quote_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_quote_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_quotebase_createdby")]
    public SystemUser lk_quotebase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_quotebase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_quotebase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_quotebase_modifiedby")]
    public SystemUser lk_quotebase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_quotebase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_quotebase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_account")]
    [RelationshipSchemaName("msdyn_account_quote_Account")]
    public Account msdyn_account_quote_Account {
        get {
            return GetRelatedEntity<Account>("msdyn_account_quote_Account", null);
        }
        set {
            SetRelatedEntity("msdyn_account_quote_Account", null, value);
        }
    }
    
    [AttributeLogicalName("opportunityid")]
    [RelationshipSchemaName("opportunity_quotes")]
    public Opportunity opportunity_quotes {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_quotes", null);
        }
        set {
            SetRelatedEntity("opportunity_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_activity_parties")]
    public IEnumerable<ActivityParty> quote_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("quote_activity_parties", null);
        }
        set {
            SetRelatedEntities("quote_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("quote_customer_accounts")]
    public Account quote_customer_accounts {
        get {
            return GetRelatedEntity<Account>("quote_customer_accounts", null);
        }
        set {
            SetRelatedEntity("quote_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("quote_customer_contacts")]
    public Contact quote_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("quote_customer_contacts", null);
        }
        set {
            SetRelatedEntity("quote_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> quote_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("quote_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("quote_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_msfp_alerts")]
    public IEnumerable<msfp_alert> quote_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("quote_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("quote_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_orders")]
    public IEnumerable<SalesOrder> quote_orders {
        get {
            return GetRelatedEntities<SalesOrder>("quote_orders", null);
        }
        set {
            SetRelatedEntities("quote_orders", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_quotes")]
    public SystemUser system_user_quotes {
        get {
            return GetRelatedEntity<SystemUser>("system_user_quotes", null);
        }
        set {
            SetRelatedEntity("system_user_quotes", null, value);
        }
    }
    
    public static Quote Retrieve(IOrganizationService service, Guid id, params Expression<Func<Quote,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>The Master appointment of a recurring appointment series.</para>
/// <para>Display Name: Recurring Appointment</para>
/// </summary>
[EntityLogicalName("recurringappointmentmaster")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class RecurringAppointmentMaster : ExtendedEntity<RecurringAppointmentMasterState, RecurringAppointmentMaster_StatusCode> {
    
    public const string EntityLogicalName = "recurringappointmentmaster";
    
    public const int EntityTypeCode = 4251;
    
    public RecurringAppointmentMaster() : 
            base(EntityLogicalName) {
    }
    
    public RecurringAppointmentMaster(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the recurring appointment series.</para>
    /// <para>Display Name: Recurring Appointment</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Recurring Appointment")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the recurring appointment type, such as status meeting or service call, to tie the appointment to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>The day of the month on which the recurring appointment occurs.</para>
    /// <para>Display Name: Day Of Month</para>
    /// </summary>
    [AttributeLogicalName("dayofmonth")]
    [DisplayName("Day Of Month")]
    [Range(1, 31)]
    public int? DayOfMonth {
        get {
            return GetAttributeValue<int?>("dayofmonth");
        }
        set {
            SetAttributeValue("dayofmonth", value);
        }
    }
    
    /// <summary>
    /// <para>Bitmask that represents the days of the week on which the recurring appointment occurs.</para>
    /// <para>Display Name: Days Of Week Mask</para>
    /// </summary>
    [AttributeLogicalName("daysofweekmask")]
    [DisplayName("Days Of Week Mask")]
    [Range(1, 127)]
    public int? DaysOfWeekMask {
        get {
            return GetAttributeValue<int?>("daysofweekmask");
        }
        set {
            SetAttributeValue("daysofweekmask", value);
        }
    }
    
    /// <summary>
    /// <para>List of deleted instances of the recurring appointment series.</para>
    /// <para>Display Name: Deleted Appointments</para>
    /// </summary>
    [AttributeLogicalName("deletedexceptionslist")]
    [DisplayName("Deleted Appointments")]
    public string DeletedExceptionsList {
        get {
            return GetAttributeValue<string>("deletedexceptionslist");
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the recurring appointment, such as key talking points or objectives.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Duration of the recurring appointment series in minutes.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? Duration {
        get {
            return GetAttributeValue<int?>("duration");
        }
        set {
            SetAttributeValue("duration", value);
        }
    }
    
    /// <summary>
    /// <para>Actual end date of the recurring appointment series based on the specified end date and recurrence pattern.</para>
    /// <para>Display Name: Effective End Date</para>
    /// </summary>
    [AttributeLogicalName("effectiveenddate")]
    [DisplayName("Effective End Date")]
    public DateTime? EffectiveEndDate {
        get {
            return GetAttributeValue<DateTime?>("effectiveenddate");
        }
        set {
            SetAttributeValue("effectiveenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Actual start date of the recurring appointment series based on the specified start date and recurrence pattern.</para>
    /// <para>Display Name: Effective Start Date</para>
    /// </summary>
    [AttributeLogicalName("effectivestartdate")]
    [DisplayName("Effective Start Date")]
    public DateTime? EffectiveStartDate {
        get {
            return GetAttributeValue<DateTime?>("effectivestartdate");
        }
        set {
            SetAttributeValue("effectivestartdate", value);
        }
    }
    
    /// <summary>
    /// <para>End time of the associated activity.</para>
    /// <para>Display Name: Pattern End Time</para>
    /// </summary>
    [AttributeLogicalName("endtime")]
    [DisplayName("Pattern End Time")]
    public DateTime? EndTime {
        get {
            return GetAttributeValue<DateTime?>("endtime");
        }
        set {
            SetAttributeValue("endtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>State code to indicate whether the recurring appointment series is expanded fully or partially.</para>
    /// <para>Display Name: Expansion State Code</para>
    /// </summary>
    [AttributeLogicalName("expansionstatecode")]
    [DisplayName("Expansion State Code")]
    public RecurringAppointmentMaster_ExpansionStateCode? ExpansionStateCode {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_ExpansionStateCode>("expansionstatecode");
        }
    }
    
    /// <summary>
    /// <para>First day of week for the recurrence pattern.</para>
    /// <para>Display Name: First Day Of Week</para>
    /// </summary>
    [AttributeLogicalName("firstdayofweek")]
    [DisplayName("First Day Of Week")]
    [Range(0, 6)]
    public int? FirstDayOfWeek {
        get {
            return GetAttributeValue<int?>("firstdayofweek");
        }
        set {
            SetAttributeValue("firstdayofweek", value);
        }
    }
    
    /// <summary>
    /// <para>Unique Outlook identifier to correlate recurring appointment series across Exchange mailboxes.</para>
    /// <para>Display Name: Outlook Recurring Appointment Master</para>
    /// </summary>
    [AttributeLogicalName("globalobjectid")]
    [DisplayName("Outlook Recurring Appointment Master")]
    [MaxLength(300)]
    public string GlobalObjectId {
        get {
            return GetAttributeValue<string>("globalobjectid");
        }
        set {
            SetAttributeValue("globalobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the recurring appointment series for which the recurrence information was updated. </para>
    /// <para>Display Name: Group Id</para>
    /// </summary>
    [AttributeLogicalName("groupid")]
    [DisplayName("Group Id")]
    public EntityReference GroupId {
        get {
            return GetAttributeValue<EntityReference>("groupid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.</para>
    /// <para>Display Name: Instance</para>
    /// </summary>
    [AttributeLogicalName("instance")]
    [DisplayName("Instance")]
    public RecurringAppointmentMaster_Instance? Instance {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_Instance>("instance");
        }
        set {
            SetOptionSetValue("instance", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring appointment series.</para>
    /// <para>Display Name: Appointment Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Appointment Type")]
    public RecurringAppointmentMaster_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Number of units of a given recurrence type between occurrences.</para>
    /// <para>Display Name: Interval</para>
    /// </summary>
    [AttributeLogicalName("interval")]
    [DisplayName("Interval")]
    [Range(1, 1000)]
    public int? Interval {
        get {
            return GetAttributeValue<int?>("interval");
        }
        set {
            SetAttributeValue("interval", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the recurring appointment is an all-day event to make sure that the required resources are scheduled for the full day.</para>
    /// <para>Display Name: All Day Event</para>
    /// </summary>
    [AttributeLogicalName("isalldayevent")]
    [DisplayName("All Day Event")]
    public bool? IsAllDayEvent {
        get {
            return GetAttributeValue<bool?>("isalldayevent");
        }
        set {
            SetAttributeValue("isalldayevent", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the recurring appointment series was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the recurring appointment series should occur after every N months. Valid for monthly recurrence pattern only.</para>
    /// <para>Display Name: Nth Monthly</para>
    /// </summary>
    [AttributeLogicalName("isnthmonthly")]
    [DisplayName("Nth Monthly")]
    public bool? IsNthMonthly {
        get {
            return GetAttributeValue<bool?>("isnthmonthly");
        }
        set {
            SetAttributeValue("isnthmonthly", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the recurring appointment series should occur after every N years. Valid for yearly recurrence pattern only.</para>
    /// <para>Display Name: Nth Yearly</para>
    /// </summary>
    [AttributeLogicalName("isnthyearly")]
    [DisplayName("Nth Yearly")]
    public bool? IsNthYearly {
        get {
            return GetAttributeValue<bool?>("isnthyearly");
        }
        set {
            SetAttributeValue("isnthyearly", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Regenerate</para>
    /// </summary>
    [AttributeLogicalName("isregenerate")]
    [DisplayName("Regenerate")]
    public bool? IsRegenerate {
        get {
            return GetAttributeValue<bool?>("isregenerate");
        }
        set {
            SetAttributeValue("isregenerate", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: IsUnsafe</para>
    /// </summary>
    [AttributeLogicalName("isunsafe")]
    [DisplayName("IsUnsafe")]
    [Range(0, 2147483647)]
    public int? IsUnsafe {
        get {
            return GetAttributeValue<int?>("isunsafe");
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the weekly recurrence pattern is a daily weekday pattern. Valid for weekly recurrence pattern only.</para>
    /// <para>Display Name: Every Weekday</para>
    /// </summary>
    [AttributeLogicalName("isweekdaypattern")]
    [DisplayName("Every Weekday")]
    public bool? IsWeekDayPattern {
        get {
            return GetAttributeValue<bool?>("isweekdaypattern");
        }
        set {
            SetAttributeValue("isweekdaypattern", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the recurring appointment series was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Date of last expanded instance of a recurring appointment series.</para>
    /// <para>Display Name: Last Expanded Instance Date</para>
    /// </summary>
    [AttributeLogicalName("lastexpandedinstancedate")]
    [DisplayName("Last Expanded Instance Date")]
    public DateTime? LastExpandedInstanceDate {
        get {
            return GetAttributeValue<DateTime?>("lastexpandedinstancedate");
        }
    }
    
    /// <summary>
    /// <para>Type the location where the recurring appointment will take place, such as a conference room or customer office.</para>
    /// <para>Display Name: Location</para>
    /// </summary>
    [AttributeLogicalName("location")]
    [DisplayName("Location")]
    [MaxLength(200)]
    public string Location {
        get {
            return GetAttributeValue<string>("location");
        }
        set {
            SetAttributeValue("location", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Indicates the month of the year for the recurrence pattern.</para>
    /// <para>Display Name: Month Of Year</para>
    /// </summary>
    [AttributeLogicalName("monthofyear")]
    [DisplayName("Month Of Year")]
    public recurrencerule_monthofyear? MonthOfYear {
        get {
            return GetOptionSetValue<recurrencerule_monthofyear>("monthofyear");
        }
        set {
            SetOptionSetValue("monthofyear", value);
        }
    }
    
    /// <summary>
    /// <para>Date of the next expanded instance of a recurring appointment series.</para>
    /// <para>Display Name: Next Expanded Instance Date</para>
    /// </summary>
    [AttributeLogicalName("nextexpansioninstancedate")]
    [DisplayName("Next Expanded Instance Date")]
    public DateTime? NextExpansionInstanceDate {
        get {
            return GetAttributeValue<DateTime?>("nextexpansioninstancedate");
        }
    }
    
    /// <summary>
    /// <para>Number of appointment occurrences in a recurring appointment series.</para>
    /// <para>Display Name: Occurrences</para>
    /// </summary>
    [AttributeLogicalName("occurrences")]
    [DisplayName("Occurrences")]
    [Range(1, 999)]
    public int? Occurrences {
        get {
            return GetAttributeValue<int?>("occurrences");
        }
        set {
            SetAttributeValue("occurrences", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, user, or other equipment resources that are not needed at the recurring appointment, but can optionally attend.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user who is in charge of coordinating or leading the recurring appointment to make sure the appointment is displayed in the user's My Activities view.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Microsoft Office Outlook recurring appointment series owner that correlates to the PR_OWNER_APPT_ID MAPI property.</para>
    /// <para>Display Name: Outlook Recurring Appointment Master Owner</para>
    /// </summary>
    [AttributeLogicalName("outlookownerapptid")]
    [DisplayName("Outlook Recurring Appointment Master Owner")]
    [Range(-2147483648, 2147483647)]
    public int? OutlookOwnerApptId {
        get {
            return GetAttributeValue<int?>("outlookownerapptid");
        }
        set {
            SetAttributeValue("outlookownerapptid", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the recurring appointment series.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the recurring appointment series.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the recurring appointment series.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>End date of the recurrence range.</para>
    /// <para>Display Name: Recurrence Range End</para>
    /// </summary>
    [AttributeLogicalName("patternenddate")]
    [DisplayName("Recurrence Range End")]
    public DateTime? PatternEndDate {
        get {
            return GetAttributeValue<DateTime?>("patternenddate");
        }
        set {
            SetAttributeValue("patternenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.</para>
    /// <para>Display Name: Pattern End Type</para>
    /// </summary>
    [AttributeLogicalName("patternendtype")]
    [DisplayName("Pattern End Type")]
    public RecurringAppointmentMaster_PatternEndType? PatternEndType {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_PatternEndType>("patternendtype");
        }
        set {
            SetOptionSetValue("patternendtype", value);
        }
    }
    
    /// <summary>
    /// <para>Start date of the recurrence range.</para>
    /// <para>Display Name: Recurrence Range Start</para>
    /// </summary>
    [AttributeLogicalName("patternstartdate")]
    [DisplayName("Recurrence Range Start")]
    public DateTime? PatternStartDate {
        get {
            return GetAttributeValue<DateTime?>("patternstartdate");
        }
        set {
            SetAttributeValue("patternstartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public RecurringAppointmentMaster_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.</para>
    /// <para>Display Name: Recurrence Frequency</para>
    /// </summary>
    [AttributeLogicalName("recurrencepatterntype")]
    [DisplayName("Recurrence Frequency")]
    public RecurringAppointmentMaster_RecurrencePatternType? RecurrencePatternType {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_RecurrencePatternType>("recurrencepatterntype");
        }
        set {
            SetOptionSetValue("recurrencepatterntype", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the recurring appointment series relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the account, contact, lead, user, or other equipment resources that are required to attend the recurring appointment.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the recurrence rule that is associated with the recurring appointment series.</para>
    /// <para>Display Name: Recurrence Rule</para>
    /// </summary>
    [AttributeLogicalName("ruleid")]
    [DisplayName("Recurrence Rule")]
    public EntityReference RuleId {
        get {
            return GetAttributeValue<EntityReference>("ruleid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled end time of the recurring appointment series.</para>
    /// <para>Display Name: End Time</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("End Time")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
    }
    
    /// <summary>
    /// <para>Scheduled start time of the recurring appointment series.</para>
    /// <para>Display Name: Start Time</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Time")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the recurring appointment series is active or inactive.</para>
    /// <para>Display Name: Series Status</para>
    /// </summary>
    [AttributeLogicalName("seriesstatus")]
    [DisplayName("Series Status")]
    public bool? SeriesStatus {
        get {
            return GetAttributeValue<bool?>("seriesstatus");
        }
        set {
            SetAttributeValue("seriesstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Start time of the recurring appointment series.</para>
    /// <para>Display Name: Pattern Start Time</para>
    /// </summary>
    [AttributeLogicalName("starttime")]
    [DisplayName("Pattern Start Time")]
    public DateTime? StartTime {
        get {
            return GetAttributeValue<DateTime?>("starttime");
        }
        set {
            SetAttributeValue("starttime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the recurring appointment is open, scheduled, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public RecurringAppointmentMasterState? StateCode {
        get {
            return GetOptionSetValue<RecurringAppointmentMasterState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the recurring appointment's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public RecurringAppointmentMaster_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<RecurringAppointmentMaster_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the recurring appointment type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the recurring appointment.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_RecurringAppointmentMasters")]
    public Account Account_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Account>("Account_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Account_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_RecurringAppointmentMasters")]
    public CampaignActivity CampaignActivity_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_RecurringAppointmentMasters")]
    public Campaign Campaign_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Campaign>("Campaign_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Campaign_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_RecurringAppointmentMasters")]
    public Contact Contact_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Contact>("Contact_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Contact_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_RecurringAppointmentMasters")]
    public Contract Contract_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Contract>("Contract_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Contract_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_RecurringAppointmentMasters")]
    public Incident Incident_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Incident>("Incident_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Incident_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_RecurringAppointmentMasters")]
    public Invoice Invoice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Invoice>("Invoice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Invoice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_RecurringAppointmentMasters")]
    public Lead Lead_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Lead>("Lead_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Lead_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_RecurringAppointmentMasters")]
    public Opportunity Opportunity_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Opportunity_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_RecurringAppointmentMasters")]
    public Quote Quote_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Quote>("Quote_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("Quote_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("RecurringAppointmentMaster_ProcessSessions")]
    public IEnumerable<ProcessSession> RecurringAppointmentMaster_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("RecurringAppointmentMaster_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("RecurringAppointmentMaster_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("RecurringAppointmentMaster_SyncErrors")]
    public IEnumerable<SyncError> RecurringAppointmentMaster_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("RecurringAppointmentMaster_SyncErrors", null);
        }
        set {
            SetRelatedEntities("RecurringAppointmentMaster_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_RecurringAppointmentMasters")]
    public SalesOrder SalesOrder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("SalesOrder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_recurringappointmentmaster")]
    public ActivityPointer activity_pointer_recurringappointmentmaster {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_recurringappointmentmaster", null);
        }
        set {
            SetRelatedEntity("activity_pointer_recurringappointmentmaster", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_RecurringAppointmentMasters")]
    public BookableResourceBooking bookableresourcebooking_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_RecurringAppointmentMasters")]
    public Entitlement entitlement_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("entitlement_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_RecurringAppointmentMasters")]
    public EntitlementTemplate entitlementtemplate_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_recurringappointmentmaster_createdby")]
    public SystemUser lk_recurringappointmentmaster_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdby", null);
        }
        set {
            SetRelatedEntity("lk_recurringappointmentmaster_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_recurringappointmentmaster_createdonbehalfby")]
    public SystemUser lk_recurringappointmentmaster_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_recurringappointmentmaster_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedby")]
    public SystemUser lk_recurringappointmentmaster_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_recurringappointmentmaster_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedonbehalfby")]
    public SystemUser lk_recurringappointmentmaster_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_RecurringAppointmentMasters")]
    public msdyn_agreement msdyn_agreement_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_RecurringAppointmentMasters")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_RecurringAppointmentMasters")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_RecurringAppointmentMasters")]
    public msdyn_customerasset msdyn_customerasset_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_RecurringAppointmentMasters")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_RecurringAppointmentMasters")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_RecurringAppointmentMasters")]
    public msdyn_purchaseorder msdyn_purchaseorder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_RecurringAppointmentMasters")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_RecurringAppointmentMasters")]
    public msdyn_rma msdyn_rma_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_RecurringAppointmentMasters")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_RecurringAppointmentMasters")]
    public msdyn_workorder msdyn_workorder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_RecurringAppointmentMasters")]
    public msdyn_workorderincident msdyn_workorderincident_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_RecurringAppointmentMasters")]
    public msdyn_workorderproduct msdyn_workorderproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_RecurringAppointmentMasters")]
    public msdyn_workorderservice msdyn_workorderservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_RecurringAppointmentMasters")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_RecurringAppointmentMasters")]
    public ppp_Traveller ppp_traveller_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("recurringappointmentmaster_activity_parties")]
    public IEnumerable<ActivityParty> recurringappointmentmaster_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("recurringappointmentmaster_activity_parties", null);
        }
        set {
            SetRelatedEntities("recurringappointmentmaster_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("recurringappointmentmaster_appointment")]
    public IEnumerable<Appointment> recurringappointmentmaster_appointment {
        get {
            return GetRelatedEntities<Appointment>("recurringappointmentmaster_appointment", null);
        }
        set {
            SetRelatedEntities("recurringappointmentmaster_appointment", null, value);
        }
    }
    
    [RelationshipSchemaName("recurringappointmentmaster_campaignresponse")]
    public IEnumerable<CampaignResponse> recurringappointmentmaster_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("recurringappointmentmaster_campaignresponse", null);
        }
        set {
            SetRelatedEntities("recurringappointmentmaster_campaignresponse", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_RecurringAppointmentMasters")]
    public ts_request ts_request_RecurringAppointmentMasters {
        get {
            return GetRelatedEntity<ts_request>("ts_request_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntity("ts_request_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_recurringappointmentmaster")]
    public SystemUser user_recurringappointmentmaster {
        get {
            return GetRelatedEntity<SystemUser>("user_recurringappointmentmaster", null);
        }
        set {
            SetRelatedEntity("user_recurringappointmentmaster", null, value);
        }
    }
    
    public static RecurringAppointmentMaster Retrieve(IOrganizationService service, Guid id, params Expression<Func<RecurringAppointmentMaster,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Storage of sales literature, which may contain one or more documents.</para>
/// <para>Display Name: Sales Literature</para>
/// </summary>
[EntityLogicalName("salesliterature")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SalesLiterature : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "salesliterature";
    
    public const int EntityTypeCode = 1038;
    
    public SalesLiterature() : 
            base(EntityLogicalName) {
    }
    
    public SalesLiterature(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("salesliteratureid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("salesliteratureid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the sales literature.</para>
    /// <para>Display Name: Sales Literature</para>
    /// </summary>
    [AttributeLogicalName("salesliteratureid")]
    [DisplayName("Sales Literature")]
    public Guid? SalesLiteratureId {
        get {
            return GetAttributeValue<Guid?>("salesliteratureid");
        }
        set {
            SetId("salesliteratureid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the sales literature, such as the intended audience or primary messages.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the user who is responsible for maintaining or updating the sales literature.</para>
    /// <para>Display Name: Employee Contact</para>
    /// </summary>
    [AttributeLogicalName("employeecontactid")]
    [DisplayName("Employee Contact")]
    public EntityReference EmployeeContactId {
        get {
            return GetAttributeValue<EntityReference>("employeecontactid");
        }
        set {
            SetAttributeValue("employeecontactid", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Enter the expiration date or last day the sales literature can be distributed.</para>
    /// <para>Display Name: Expiration Date</para>
    /// </summary>
    [AttributeLogicalName("expirationdate")]
    [DisplayName("Expiration Date")]
    public DateTime? ExpirationDate {
        get {
            return GetAttributeValue<DateTime?>("expirationdate");
        }
        set {
            SetAttributeValue("expirationdate", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether the sales literature has one or more attachments.</para>
    /// <para>Display Name: Has Attachments</para>
    /// </summary>
    [AttributeLogicalName("hasattachments")]
    [DisplayName("Has Attachments")]
    public bool? HasAttachments {
        get {
            return GetAttributeValue<bool?>("hasattachments");
        }
        set {
            SetAttributeValue("hasattachments", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether the sales literature can be distributed to prospects and customers or is for internal use only.</para>
    /// <para>Display Name: Customer Viewable</para>
    /// </summary>
    [AttributeLogicalName("iscustomerviewable")]
    [DisplayName("Customer Viewable")]
    public bool? IsCustomerViewable {
        get {
            return GetAttributeValue<bool?>("iscustomerviewable");
        }
        set {
            SetAttributeValue("iscustomerviewable", value);
        }
    }
    
    /// <summary>
    /// <para>Type one or more topics or keywords that can be used to search for the sales literature.</para>
    /// <para>Display Name: Key Words</para>
    /// </summary>
    [AttributeLogicalName("keywords")]
    [DisplayName("Key Words")]
    public string KeyWords {
        get {
            return GetAttributeValue<string>("keywords");
        }
        set {
            SetAttributeValue("keywords", value);
        }
    }
    
    /// <summary>
    /// <para>Select a category or type to help others identify the intended use of the sales literature.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("literaturetypecode")]
    [DisplayName("Type")]
    public SalesLiterature_LiteratureTypeCode? LiteratureTypeCode {
        get {
            return GetOptionSetValue<SalesLiterature_LiteratureTypeCode>("literaturetypecode");
        }
        set {
            SetOptionSetValue("literaturetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive title for the sales literature.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Title")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the subject for the sales literature to relate the item to a product or business group. Administrators can configure subjects under Business Management in the Settings area.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subjectid")]
    [DisplayName("Subject")]
    public EntityReference SubjectId {
        get {
            return GetAttributeValue<EntityReference>("subjectid");
        }
        set {
            SetAttributeValue("subjectid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Cloud Storage Link</para>
    /// <para>Display Name: Cloud Storage Link</para>
    /// </summary>
    [AttributeLogicalName("ikl_cloudstoragelink")]
    [DisplayName("Cloud Storage Link")]
    public string ikl_cloudstoragelink {
        get {
            return GetAttributeValue<string>("ikl_cloudstoragelink");
        }
        set {
            SetAttributeValue("ikl_cloudstoragelink", value);
        }
    }
    
    [RelationshipSchemaName("SalesLiterature_ProcessSessions")]
    public IEnumerable<ProcessSession> SalesLiterature_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("SalesLiterature_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("SalesLiterature_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesLiterature_SyncErrors")]
    public IEnumerable<SyncError> SalesLiterature_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("SalesLiterature_SyncErrors", null);
        }
        set {
            SetRelatedEntities("SalesLiterature_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignactivitysalesliterature_association")]
    public IEnumerable<CampaignActivity> campaignactivitysalesliterature_association {
        get {
            return GetRelatedEntities<CampaignActivity>("campaignactivitysalesliterature_association", null);
        }
        set {
            SetRelatedEntities("campaignactivitysalesliterature_association", null, value);
        }
    }
    
    [RelationshipSchemaName("campaignsalesliterature_association")]
    public IEnumerable<Campaign> campaignsalesliterature_association {
        get {
            return GetRelatedEntities<Campaign>("campaignsalesliterature_association", null);
        }
        set {
            SetRelatedEntities("campaignsalesliterature_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_salesliterature_createdonbehalfby")]
    public SystemUser lk_salesliterature_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesliterature_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesliterature_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_salesliterature_modifiedonbehalfby")]
    public SystemUser lk_salesliterature_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesliterature_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesliterature_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_salesliteraturebase_createdby")]
    public SystemUser lk_salesliteraturebase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesliteraturebase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_salesliteraturebase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_salesliteraturebase_modifiedby")]
    public SystemUser lk_salesliteraturebase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesliteraturebase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_salesliteraturebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("productsalesliterature_association")]
    public IEnumerable<Product> productsalesliterature_association {
        get {
            return GetRelatedEntities<Product>("productsalesliterature_association", null);
        }
        set {
            SetRelatedEntities("productsalesliterature_association", null, value);
        }
    }
    
    [AttributeLogicalName("employeecontactid")]
    [RelationshipSchemaName("system_user_sales_literature")]
    public SystemUser system_user_sales_literature {
        get {
            return GetRelatedEntity<SystemUser>("system_user_sales_literature", null);
        }
        set {
            SetRelatedEntity("system_user_sales_literature", null, value);
        }
    }
    
    public static SalesLiterature Retrieve(IOrganizationService service, Guid id, params Expression<Func<SalesLiterature,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Quote that has been accepted.</para>
/// <para>Display Name: Order</para>
/// </summary>
[EntityLogicalName("salesorder")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SalesOrder : ExtendedEntity<SalesOrderState, SalesOrder_StatusCode> {
    
    public const string EntityLogicalName = "salesorder";
    
    public const int EntityTypeCode = 1088;
    
    public SalesOrder() : 
            base(EntityLogicalName) {
    }
    
    public SalesOrder(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("salesorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("salesorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the order.</para>
    /// <para>Display Name: Order</para>
    /// </summary>
    [AttributeLogicalName("salesorderid")]
    [DisplayName("Order")]
    public Guid? SalesOrderId {
        get {
            return GetAttributeValue<Guid?>("salesorderid");
        }
        set {
            SetId("salesorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the parent account related to the record. This information is used to link the sales order to the account selected in the Customer field for reporting and analytics.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Account")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the billing address.</para>
    /// <para>Display Name: Bill To Address ID</para>
    /// </summary>
    [AttributeLogicalName("billto_addressid")]
    [DisplayName("Bill To Address ID")]
    public Guid? BillTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("billto_addressid");
        }
        set {
            SetAttributeValue("billto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's billing address.</para>
    /// <para>Display Name: Bill To City</para>
    /// </summary>
    [AttributeLogicalName("billto_city")]
    [DisplayName("Bill To City")]
    [MaxLength(80)]
    public string BillTo_City {
        get {
            return GetAttributeValue<string>("billto_city");
        }
        set {
            SetAttributeValue("billto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Bill To address.</para>
    /// <para>Display Name: Bill To Address</para>
    /// </summary>
    [AttributeLogicalName("billto_composite")]
    [DisplayName("Bill To Address")]
    public string BillTo_Composite {
        get {
            return GetAttributeValue<string>("billto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the primary contact name at the customer's billing address.</para>
    /// <para>Display Name: Bill To Contact Name</para>
    /// </summary>
    [AttributeLogicalName("billto_contactname")]
    [DisplayName("Bill To Contact Name")]
    [MaxLength(150)]
    public string BillTo_ContactName {
        get {
            return GetAttributeValue<string>("billto_contactname");
        }
        set {
            SetAttributeValue("billto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's billing address.</para>
    /// <para>Display Name: Bill To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("billto_country")]
    [DisplayName("Bill To Country/Region")]
    [MaxLength(80)]
    public string BillTo_Country {
        get {
            return GetAttributeValue<string>("billto_country");
        }
        set {
            SetAttributeValue("billto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Fax</para>
    /// </summary>
    [AttributeLogicalName("billto_fax")]
    [DisplayName("Bill To Fax")]
    [MaxLength(50)]
    public string BillTo_Fax {
        get {
            return GetAttributeValue<string>("billto_fax");
        }
        set {
            SetAttributeValue("billto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 1</para>
    /// </summary>
    [AttributeLogicalName("billto_line1")]
    [DisplayName("Bill To Street 1")]
    [MaxLength(250)]
    public string BillTo_Line1 {
        get {
            return GetAttributeValue<string>("billto_line1");
        }
        set {
            SetAttributeValue("billto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's billing address.</para>
    /// <para>Display Name: Bill To Street 2</para>
    /// </summary>
    [AttributeLogicalName("billto_line2")]
    [DisplayName("Bill To Street 2")]
    [MaxLength(250)]
    public string BillTo_Line2 {
        get {
            return GetAttributeValue<string>("billto_line2");
        }
        set {
            SetAttributeValue("billto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the billing address.</para>
    /// <para>Display Name: Bill To Street 3</para>
    /// </summary>
    [AttributeLogicalName("billto_line3")]
    [DisplayName("Bill To Street 3")]
    [MaxLength(250)]
    public string BillTo_Line3 {
        get {
            return GetAttributeValue<string>("billto_line3");
        }
        set {
            SetAttributeValue("billto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
    /// <para>Display Name: Bill To Name</para>
    /// </summary>
    [AttributeLogicalName("billto_name")]
    [DisplayName("Bill To Name")]
    [MaxLength(200)]
    public string BillTo_Name {
        get {
            return GetAttributeValue<string>("billto_name");
        }
        set {
            SetAttributeValue("billto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the billing address.</para>
    /// <para>Display Name: Bill To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("billto_postalcode")]
    [DisplayName("Bill To ZIP/Postal Code")]
    [MaxLength(20)]
    public string BillTo_PostalCode {
        get {
            return GetAttributeValue<string>("billto_postalcode");
        }
        set {
            SetAttributeValue("billto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the billing address.</para>
    /// <para>Display Name: Bill To State/Province</para>
    /// </summary>
    [AttributeLogicalName("billto_stateorprovince")]
    [DisplayName("Bill To State/Province")]
    [MaxLength(50)]
    public string BillTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("billto_stateorprovince");
        }
        set {
            SetAttributeValue("billto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's billing address.</para>
    /// <para>Display Name: Bill To Phone</para>
    /// </summary>
    [AttributeLogicalName("billto_telephone")]
    [DisplayName("Bill To Phone")]
    [MaxLength(50)]
    public string BillTo_Telephone {
        get {
            return GetAttributeValue<string>("billto_telephone");
        }
        set {
            SetAttributeValue("billto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the campaign that the order was created from.</para>
    /// <para>Display Name: Source Campaign</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Source Campaign")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the parent contact related to the record. This information is used to link the contract to the contact selected in the Customer field for reporting and analytics.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
    /// <para>Display Name: Customer</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Customer")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date that all or part of the order was shipped to the customer.</para>
    /// <para>Display Name: Date Fulfilled</para>
    /// </summary>
    [AttributeLogicalName("datefulfilled")]
    [DisplayName("Date Fulfilled")]
    public DateTime? DateFulfilled {
        get {
            return GetAttributeValue<DateTime?>("datefulfilled");
        }
        set {
            SetAttributeValue("datefulfilled", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the order, such as the products or services offered or details about the customer's product preferences.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Type the discount amount for the order if the customer is eligible for special savings.</para>
    /// <para>Display Name: Order Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("discountamount")]
    [DisplayName("Order Discount Amount")]
    public decimal? DiscountAmount {
        get {
            return GetMoneyValue("discountamount");
        }
        set {
            SetMoneyValue("discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Order Discount Amount in base currency.</para>
    /// <para>Display Name: Order Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("discountamount_base")]
    [DisplayName("Order Discount Amount (Base)")]
    public decimal? DiscountAmount_Base {
        get {
            return GetMoneyValue("discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Type the discount rate that should be applied to the Detail Amount field to include additional savings for the customer in the order.</para>
    /// <para>Display Name: Order Discount (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Order Discount (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>The primary email address for the entity.</para>
    /// <para>Display Name: Email Address</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Email Address")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Type the cost of freight or shipping for the products included in the order for use in calculating the Total Amount field.</para>
    /// <para>Display Name: Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("freightamount")]
    [DisplayName("Freight Amount")]
    public decimal? FreightAmount {
        get {
            return GetMoneyValue("freightamount");
        }
        set {
            SetMoneyValue("freightamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Freight Amount in base currency.</para>
    /// <para>Display Name: Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("freightamount_base")]
    [DisplayName("Freight Amount (Base)")]
    public decimal? FreightAmount_Base {
        get {
            return GetMoneyValue("freightamount_base");
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
    /// <para>Display Name: Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("freighttermscode")]
    [DisplayName("Freight Terms")]
    public SalesOrder_FreightTermsCode? FreightTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_FreightTermsCode>("freighttermscode");
        }
        set {
            SetOptionSetValue("freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether prices specified on the invoice are locked from any further updates.</para>
    /// <para>Display Name: Prices Locked</para>
    /// </summary>
    [AttributeLogicalName("ispricelocked")]
    [DisplayName("Prices Locked")]
    public bool? IsPriceLocked {
        get {
            return GetAttributeValue<bool?>("ispricelocked");
        }
        set {
            SetAttributeValue("ispricelocked", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the order was last submitted to an accounting or ERP system for processing.</para>
    /// <para>Display Name: Last Submitted to Back Office</para>
    /// </summary>
    [AttributeLogicalName("lastbackofficesubmit")]
    [DisplayName("Last Submitted to Back Office")]
    public DateTime? LastBackofficeSubmit {
        get {
            return GetAttributeValue<DateTime?>("lastbackofficesubmit");
        }
        set {
            SetAttributeValue("lastbackofficesubmit", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Type a descriptive name for the order.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Name")]
    [MaxLength(300)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration in minutes for which the order was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Choose the related opportunity so that the data for the order and opportunity are linked for reporting and analytics.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [AttributeLogicalName("opportunityid")]
    [DisplayName("Opportunity")]
    public EntityReference OpportunityId {
        get {
            return GetAttributeValue<EntityReference>("opportunityid");
        }
        set {
            SetAttributeValue("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order number for customer reference and to use in search. The number cannot be modified.</para>
    /// <para>Display Name: Order ID</para>
    /// </summary>
    [AttributeLogicalName("ordernumber")]
    [DisplayName("Order ID")]
    [MaxLength(100)]
    public string OrderNumber {
        get {
            return GetAttributeValue<string>("ordernumber");
        }
        set {
            SetAttributeValue("ordernumber", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
    /// <para>Display Name: Payment Terms</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Payment Terms")]
    public SalesOrder_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Price List")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Select the type of pricing error, such as a missing or invalid product, or missing quantity.</para>
    /// <para>Display Name: Pricing Error </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Pricing Error ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public SalesOrder_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<SalesOrder_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the related quote so that order data and quote data are linked for reporting and analytics.</para>
    /// <para>Display Name: Quote</para>
    /// </summary>
    [AttributeLogicalName("quoteid")]
    [DisplayName("Quote")]
    public EntityReference QuoteId {
        get {
            return GetAttributeValue<EntityReference>("quoteid");
        }
        set {
            SetAttributeValue("quoteid", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the delivery date requested by the customer for all products in the order.</para>
    /// <para>Display Name: Requested Delivery Date</para>
    /// </summary>
    [AttributeLogicalName("requestdeliveryby")]
    [DisplayName("Requested Delivery Date")]
    public DateTime? RequestDeliveryBy {
        get {
            return GetAttributeValue<DateTime?>("requestdeliveryby");
        }
        set {
            SetAttributeValue("requestdeliveryby", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the sales order record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this sales order. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the shipping address.</para>
    /// <para>Display Name: Ship To Address ID</para>
    /// </summary>
    [AttributeLogicalName("shipto_addressid")]
    [DisplayName("Ship To Address ID")]
    public Guid? ShipTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("shipto_addressid");
        }
        set {
            SetAttributeValue("shipto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type the city for the customer's shipping address.</para>
    /// <para>Display Name: Ship To City</para>
    /// </summary>
    [AttributeLogicalName("shipto_city")]
    [DisplayName("Ship To City")]
    [MaxLength(80)]
    public string ShipTo_City {
        get {
            return GetAttributeValue<string>("shipto_city");
        }
        set {
            SetAttributeValue("shipto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete Ship To address.</para>
    /// <para>Display Name: Ship To Address</para>
    /// </summary>
    [AttributeLogicalName("shipto_composite")]
    [DisplayName("Ship To Address")]
    public string ShipTo_Composite {
        get {
            return GetAttributeValue<string>("shipto_composite");
        }
    }
    
    /// <summary>
    /// <para>Type the primary contact name at the customer's shipping address.</para>
    /// <para>Display Name: Ship To Contact Name</para>
    /// </summary>
    [AttributeLogicalName("shipto_contactname")]
    [DisplayName("Ship To Contact Name")]
    [MaxLength(150)]
    public string ShipTo_ContactName {
        get {
            return GetAttributeValue<string>("shipto_contactname");
        }
        set {
            SetAttributeValue("shipto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Type the country or region for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Country/Region</para>
    /// </summary>
    [AttributeLogicalName("shipto_country")]
    [DisplayName("Ship To Country/Region")]
    [MaxLength(80)]
    public string ShipTo_Country {
        get {
            return GetAttributeValue<string>("shipto_country");
        }
        set {
            SetAttributeValue("shipto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Type the fax number for the customer's shipping address.</para>
    /// <para>Display Name: Ship to Fax</para>
    /// </summary>
    [AttributeLogicalName("shipto_fax")]
    [DisplayName("Ship to Fax")]
    [MaxLength(50)]
    public string ShipTo_Fax {
        get {
            return GetAttributeValue<string>("shipto_fax");
        }
        set {
            SetAttributeValue("shipto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
    /// <para>Display Name: Ship To Freight Terms</para>
    /// </summary>
    [AttributeLogicalName("shipto_freighttermscode")]
    [DisplayName("Ship To Freight Terms")]
    public SalesOrder_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_ShipTo_FreightTermsCode>("shipto_freighttermscode");
        }
        set {
            SetOptionSetValue("shipto_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the first line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 1</para>
    /// </summary>
    [AttributeLogicalName("shipto_line1")]
    [DisplayName("Ship To Street 1")]
    [MaxLength(250)]
    public string ShipTo_Line1 {
        get {
            return GetAttributeValue<string>("shipto_line1");
        }
        set {
            SetAttributeValue("shipto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Type the second line of the customer's shipping address.</para>
    /// <para>Display Name: Ship To Street 2</para>
    /// </summary>
    [AttributeLogicalName("shipto_line2")]
    [DisplayName("Ship To Street 2")]
    [MaxLength(250)]
    public string ShipTo_Line2 {
        get {
            return GetAttributeValue<string>("shipto_line2");
        }
        set {
            SetAttributeValue("shipto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Type the third line of the shipping address.</para>
    /// <para>Display Name: Ship To Street 3</para>
    /// </summary>
    [AttributeLogicalName("shipto_line3")]
    [DisplayName("Ship To Street 3")]
    [MaxLength(250)]
    public string ShipTo_Line3 {
        get {
            return GetAttributeValue<string>("shipto_line3");
        }
        set {
            SetAttributeValue("shipto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
    /// <para>Display Name: Ship To Name</para>
    /// </summary>
    [AttributeLogicalName("shipto_name")]
    [DisplayName("Ship To Name")]
    [MaxLength(200)]
    public string ShipTo_Name {
        get {
            return GetAttributeValue<string>("shipto_name");
        }
        set {
            SetAttributeValue("shipto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Type the ZIP Code or postal code for the shipping address.</para>
    /// <para>Display Name: Ship To ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("shipto_postalcode")]
    [DisplayName("Ship To ZIP/Postal Code")]
    [MaxLength(20)]
    public string ShipTo_PostalCode {
        get {
            return GetAttributeValue<string>("shipto_postalcode");
        }
        set {
            SetAttributeValue("shipto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Type the state or province for the shipping address.</para>
    /// <para>Display Name: Ship To State/Province</para>
    /// </summary>
    [AttributeLogicalName("shipto_stateorprovince")]
    [DisplayName("Ship To State/Province")]
    [MaxLength(50)]
    public string ShipTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("shipto_stateorprovince");
        }
        set {
            SetAttributeValue("shipto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Type the phone number for the customer's shipping address.</para>
    /// <para>Display Name: Ship To Phone</para>
    /// </summary>
    [AttributeLogicalName("shipto_telephone")]
    [DisplayName("Ship To Phone")]
    [MaxLength(50)]
    public string ShipTo_Telephone {
        get {
            return GetAttributeValue<string>("shipto_telephone");
        }
        set {
            SetAttributeValue("shipto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Select a shipping method for deliveries sent to this address.</para>
    /// <para>Display Name: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Shipping Method")]
    public SalesOrder_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<SalesOrder_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Skip Price Calculation</para>
    /// <para>Display Name: Skip Price Calculation (For Internal Use)</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Skip Price Calculation (For Internal Use)")]
    public qooi_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the order is active, submitted, fulfilled, canceled, or invoiced. Only active orders can be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public SalesOrderState? StateCode {
        get {
            return GetOptionSetValue<SalesOrderState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the order's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public SalesOrder_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<SalesOrder_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when the order was submitted to the fulfillment or shipping center.</para>
    /// <para>Display Name: Date Submitted</para>
    /// </summary>
    [AttributeLogicalName("submitdate")]
    [DisplayName("Date Submitted")]
    public DateTime? SubmitDate {
        get {
            return GetAttributeValue<DateTime?>("submitdate");
        }
        set {
            SetAttributeValue("submitdate", value);
        }
    }
    
    /// <summary>
    /// <para>Type the code for the submitted status in the fulfillment or shipping center system.</para>
    /// <para>Display Name: Submitted Status</para>
    /// </summary>
    [AttributeLogicalName("submitstatus")]
    [DisplayName("Submitted Status")]
    [Range(0, 1000000000)]
    public int? SubmitStatus {
        get {
            return GetAttributeValue<int?>("submitstatus");
        }
        set {
            SetAttributeValue("submitstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional details or notes about the order for the fulfillment or shipping center.</para>
    /// <para>Display Name: Submitted Status Description</para>
    /// </summary>
    [AttributeLogicalName("submitstatusdescription")]
    [DisplayName("Submitted Status Description")]
    public string SubmitStatusDescription {
        get {
            return GetAttributeValue<string>("submitstatusdescription");
        }
        set {
            SetAttributeValue("submitstatusdescription", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the order.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamount")]
    [DisplayName("Total Amount")]
    public decimal? TotalAmount {
        get {
            return GetMoneyValue("totalamount");
        }
        set {
            SetMoneyValue("totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total product amount for the order, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the order.</para>
    /// <para>Display Name: Total Pre-Freight Amount</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight")]
    [DisplayName("Total Pre-Freight Amount")]
    public decimal? TotalAmountLessFreight {
        get {
            return GetMoneyValue("totalamountlessfreight");
        }
        set {
            SetMoneyValue("totalamountlessfreight", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Pre-Freight Amount in base currency.</para>
    /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight_base")]
    [DisplayName("Total Pre-Freight Amount (Base)")]
    public decimal? TotalAmountLessFreight_Base {
        get {
            return GetMoneyValue("totalamountlessfreight_base");
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Amount in base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? TotalAmount_Base {
        get {
            return GetMoneyValue("totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total discount amount, based on the discount price and rate entered on the order.</para>
    /// <para>Display Name: Total Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount")]
    [DisplayName("Total Discount Amount")]
    public decimal? TotalDiscountAmount {
        get {
            return GetMoneyValue("totaldiscountamount");
        }
        set {
            SetMoneyValue("totaldiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Discount Amount in base currency.</para>
    /// <para>Display Name: Total Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount_base")]
    [DisplayName("Total Discount Amount (Base)")]
    public decimal? TotalDiscountAmount_Base {
        get {
            return GetMoneyValue("totaldiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the sum of all existing and write-in products included on the order, based on the specified price list and quantities.</para>
    /// <para>Display Name: Total Detail Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount")]
    [DisplayName("Total Detail Amount")]
    public decimal? TotalLineItemAmount {
        get {
            return GetMoneyValue("totallineitemamount");
        }
        set {
            SetMoneyValue("totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Detail Amount in base currency.</para>
    /// <para>Display Name: Total Detail Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount_base")]
    [DisplayName("Total Detail Amount (Base)")]
    public decimal? TotalLineItemAmount_Base {
        get {
            return GetMoneyValue("totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the total of the Manual Discount amounts specified on all products included in the order. This value is reflected in the Detail Amount field on the order and is added to any discount amount or rate specified on the order.</para>
    /// <para>Display Name: Total Line Item Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount")]
    [DisplayName("Total Line Item Discount Amount")]
    public decimal? TotalLineItemDiscountAmount {
        get {
            return GetMoneyValue("totallineitemdiscountamount");
        }
        set {
            SetMoneyValue("totallineitemdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Line Item Discount Amount in base currency.</para>
    /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount_base")]
    [DisplayName("Total Line Item Discount Amount (Base)")]
    public decimal? TotalLineItemDiscountAmount_Base {
        get {
            return GetMoneyValue("totallineitemdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the Tax amounts specified on all products included in the order, included in the Total Amount due calculation for the order.</para>
    /// <para>Display Name: Total Tax</para>
    /// </summary>
    [AttributeLogicalName("totaltax")]
    [DisplayName("Total Tax")]
    public decimal? TotalTax {
        get {
            return GetMoneyValue("totaltax");
        }
        set {
            SetMoneyValue("totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Total Tax in base currency.</para>
    /// <para>Display Name: Total Tax (Base)</para>
    /// </summary>
    [AttributeLogicalName("totaltax_base")]
    [DisplayName("Total Tax (Base)")]
    public decimal? TotalTax_Base {
        get {
            return GetMoneyValue("totaltax_base");
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Select whether the products included in the order should be shipped to the specified address or held until the customer calls with further pick-up or delivery instructions.</para>
    /// <para>Display Name: Ship To</para>
    /// </summary>
    [AttributeLogicalName("willcall")]
    [DisplayName("Ship To")]
    public bool? WillCall {
        get {
            return GetAttributeValue<bool?>("willcall");
        }
        set {
            SetAttributeValue("willcall", value);
        }
    }
    
    /// <summary>
    /// <para>Customer Account associated with this Order</para>
    /// <para>Display Name: Potential Customer</para>
    /// </summary>
    [AttributeLogicalName("msdyn_account")]
    [DisplayName("Potential Customer")]
    public EntityReference msdyn_Account {
        get {
            return GetAttributeValue<EntityReference>("msdyn_account");
        }
        set {
            SetAttributeValue("msdyn_account", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only</para>
    /// <para>Display Name: Process Started On</para>
    /// </summary>
    [AttributeLogicalName("msdyn_processstartedon")]
    [DisplayName("Process Started On")]
    public DateTime? msdyn_ProcessStartedOn {
        get {
            return GetAttributeValue<DateTime?>("msdyn_processstartedon");
        }
        set {
            SetAttributeValue("msdyn_processstartedon", value);
        }
    }
    
    /// <summary>
    /// <para>Internal use only</para>
    /// <para>Display Name: Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ordertype")]
    [DisplayName("Order Type")]
    public SalesOrder_msdyn_ordertype? msdyn_ordertype {
        get {
            return GetOptionSetValue<SalesOrder_msdyn_ordertype>("msdyn_ordertype");
        }
        set {
            SetOptionSetValue("msdyn_ordertype", value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_ActivityPointers")]
    public IEnumerable<ActivityPointer> SalesOrder_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("SalesOrder_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("SalesOrder_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Appointments")]
    public IEnumerable<Appointment> SalesOrder_Appointments {
        get {
            return GetRelatedEntities<Appointment>("SalesOrder_Appointments", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Emails")]
    public IEnumerable<Email> SalesOrder_Emails {
        get {
            return GetRelatedEntities<Email>("SalesOrder_Emails", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Phonecalls")]
    public IEnumerable<PhoneCall> SalesOrder_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("SalesOrder_Phonecalls", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_ProcessSessions")]
    public IEnumerable<ProcessSession> SalesOrder_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("SalesOrder_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("SalesOrder_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> SalesOrder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("SalesOrder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("SalesOrder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> SalesOrder_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("SalesOrder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("SalesOrder_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_SyncErrors")]
    public IEnumerable<SyncError> SalesOrder_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("SalesOrder_SyncErrors", null);
        }
        set {
            SetRelatedEntities("SalesOrder_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Tasks")]
    public IEnumerable<Task> SalesOrder_Tasks {
        get {
            return GetRelatedEntities<Task>("SalesOrder_Tasks", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("campaignid")]
    [RelationshipSchemaName("campaign_orders")]
    public Campaign campaign_orders {
        get {
            return GetRelatedEntity<Campaign>("campaign_orders", null);
        }
        set {
            SetRelatedEntity("campaign_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("contactorders_association")]
    public IEnumerable<Contact> contactorders_association {
        get {
            return GetRelatedEntities<Contact>("contactorders_association", null);
        }
        set {
            SetRelatedEntities("contactorders_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_salesorder_createdonbehalfby")]
    public SystemUser lk_salesorder_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesorder_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_salesorder_modifiedonbehalfby")]
    public SystemUser lk_salesorder_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesorder_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_salesorderbase_createdby")]
    public SystemUser lk_salesorderbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorderbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_salesorderbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_salesorderbase_modifiedby")]
    public SystemUser lk_salesorderbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorderbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_salesorderbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_account")]
    [RelationshipSchemaName("msdyn_account_salesorder_Account")]
    public Account msdyn_account_salesorder_Account {
        get {
            return GetRelatedEntity<Account>("msdyn_account_salesorder_Account", null);
        }
        set {
            SetRelatedEntity("msdyn_account_salesorder_Account", null, value);
        }
    }
    
    [AttributeLogicalName("opportunityid")]
    [RelationshipSchemaName("opportunity_sales_orders")]
    public Opportunity opportunity_sales_orders {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_sales_orders", null);
        }
        set {
            SetRelatedEntity("opportunity_sales_orders", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("order_customer_accounts")]
    public Account order_customer_accounts {
        get {
            return GetRelatedEntity<Account>("order_customer_accounts", null);
        }
        set {
            SetRelatedEntity("order_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("order_customer_contacts")]
    public Contact order_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("order_customer_contacts", null);
        }
        set {
            SetRelatedEntity("order_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("order_invoices")]
    public IEnumerable<Invoice> order_invoices {
        get {
            return GetRelatedEntities<Invoice>("order_invoices", null);
        }
        set {
            SetRelatedEntities("order_invoices", null, value);
        }
    }
    
    [AttributeLogicalName("quoteid")]
    [RelationshipSchemaName("quote_orders")]
    public Quote quote_orders {
        get {
            return GetRelatedEntity<Quote>("quote_orders", null);
        }
        set {
            SetRelatedEntity("quote_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_activity_parties")]
    public IEnumerable<ActivityParty> salesorder_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("salesorder_activity_parties", null);
        }
        set {
            SetRelatedEntities("salesorder_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> salesorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("salesorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("salesorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_msfp_alerts")]
    public IEnumerable<msfp_alert> salesorder_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("salesorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("salesorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_orders")]
    public SystemUser system_user_orders {
        get {
            return GetRelatedEntity<SystemUser>("system_user_orders", null);
        }
        set {
            SetRelatedEntity("system_user_orders", null, value);
        }
    }
    
    public static SalesOrder Retrieve(IOrganizationService service, Guid id, params Expression<Func<SalesOrder,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Activity offered by the organization to satisfy its customer's needs. Each service activity includes date, time, duration, and required resources.</para>
/// <para>Display Name: Service Activity</para>
/// </summary>
[EntityLogicalName("serviceappointment")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ServiceAppointment : ExtendedEntity<ServiceAppointmentState, ServiceAppointment_StatusCode> {
    
    public const string EntityLogicalName = "serviceappointment";
    
    public const int EntityTypeCode = 4214;
    
    public ServiceAppointment() : 
            base(EntityLogicalName) {
    }
    
    public ServiceAppointment(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the service activity.</para>
    /// <para>Display Name: Service Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Service Activity")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Shows the value selected in the Duration field on the service activity at the time the service activity is closed as completed. The duration is used to report the time spent on the activity.</para>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual end date and time of the service activity. By default, it displays when the activity was closed or canceled.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the service activity. By default, it displays when the activity was created.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
    /// <para>Display Name: BCC</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("BCC")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the service activity type, such as routine maintenance or service call, to tie the service activity to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Carbon-copy (cc) recipients of the activity.</para>
    /// <para>Display Name: CC</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("CC")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was created.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter the accounts and contacts for whom the service activity is being performed.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Customers")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the service activity, such as key talking points or objectives.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Person who the activity is from.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public ServiceAppointment_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<ServiceAppointment_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Select whether the service activity is an all-day event to make sure the required resources are scheduled for the full day.</para>
    /// <para>Display Name: All Day Event</para>
    /// </summary>
    [AttributeLogicalName("isalldayevent")]
    [DisplayName("All Day Event")]
    public bool? IsAllDayEvent {
        get {
            return GetAttributeValue<bool?>("isalldayevent");
        }
        set {
            SetAttributeValue("isalldayevent", value);
        }
    }
    
    /// <summary>
    /// <para>Information which specifies whether the service activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information which specifies if the service activity was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Left the voice mail</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Type the location where the service activity will take place, such as a conference room, customer office, or other venue.</para>
    /// <para>Display Name: Delivery Location</para>
    /// </summary>
    [AttributeLogicalName("location")]
    [DisplayName("Delivery Location")]
    [MaxLength(500)]
    public string Location {
        get {
            return GetAttributeValue<string>("location");
        }
        set {
            SetAttributeValue("location", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when activity was last modified.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>List of optional attendees for the activity.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Person who organized the activity.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Outsource vendor with which activity is associated.</para>
    /// <para>Display Name: Outsource Vendors</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Outsource Vendors")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public ServiceAppointment_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<ServiceAppointment_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the service activity relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>List of required attendees for the activity.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user, facility, or equipment required to complete the service activity.</para>
    /// <para>Display Name: Resources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Resources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the service appointment record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Shows the expected duration of the service activity, in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Scheduled End</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Scheduled End")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Scheduled Start</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Scheduled Start")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Choose the service scheduled to be performed during the service activity.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the site or location where the service activity will be performed.</para>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("siteid")]
    [DisplayName("Site")]
    public EntityReference SiteId {
        get {
            return GetAttributeValue<EntityReference>("siteid");
        }
        set {
            SetAttributeValue("siteid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the service activity is open, completed, or canceled. Completed and canceled service activities are read-only and can't be edited.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ServiceAppointmentState? StateCode {
        get {
            return GetOptionSetValue<ServiceAppointmentState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the service activity's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ServiceAppointment_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<ServiceAppointment_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the service activity type and relate the activity to a specific product, service region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the service activity.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Subscription</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Subscription")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Person who is the receiver of the activity.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>OrganizationalUnit ServiceAppointment Id</para>
    /// <para>Display Name: OrganizationalUnit ServiceAppointment Id</para>
    /// </summary>
    [AttributeLogicalName("msdyn_organizationalunitid")]
    [DisplayName("OrganizationalUnit ServiceAppointment Id")]
    public EntityReference msdyn_OrganizationalUnitId {
        get {
            return GetAttributeValue<EntityReference>("msdyn_organizationalunitid");
        }
        set {
            SetAttributeValue("msdyn_organizationalunitid", value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_ServiceAppointments")]
    public Account Account_ServiceAppointments {
        get {
            return GetRelatedEntity<Account>("Account_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Account_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_ServiceAppointments")]
    public IEnumerable<CampaignResponse> CampaignResponse_ServiceAppointments {
        get {
            return GetRelatedEntities<CampaignResponse>("CampaignResponse_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_ServiceAppointments")]
    public Campaign Campaign_ServiceAppointments {
        get {
            return GetRelatedEntity<Campaign>("Campaign_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Campaign_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_ServiceAppointments")]
    public Contact Contact_ServiceAppointments {
        get {
            return GetRelatedEntity<Contact>("Contact_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Contact_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_ServiceAppointments")]
    public Contract Contract_ServiceAppointments {
        get {
            return GetRelatedEntity<Contract>("Contract_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Contract_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_ServiceAppointments")]
    public Incident Incident_ServiceAppointments {
        get {
            return GetRelatedEntity<Incident>("Incident_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Incident_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_ServiceAppointments")]
    public Invoice Invoice_ServiceAppointments {
        get {
            return GetRelatedEntity<Invoice>("Invoice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Invoice_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_ServiceAppointments")]
    public Lead Lead_ServiceAppointments {
        get {
            return GetRelatedEntity<Lead>("Lead_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Lead_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_ServiceAppointments")]
    public Opportunity Opportunity_ServiceAppointments {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Opportunity_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_ServiceAppointments")]
    public Quote Quote_ServiceAppointments {
        get {
            return GetRelatedEntity<Quote>("Quote_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("Quote_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_ServiceAppointments")]
    public SalesOrder SalesOrder_ServiceAppointments {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("SalesOrder_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("ServiceAppointment_ProcessSessions")]
    public IEnumerable<ProcessSession> ServiceAppointment_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("ServiceAppointment_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("ServiceAppointment_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("ServiceAppointment_SyncErrors")]
    public IEnumerable<SyncError> ServiceAppointment_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ServiceAppointment_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ServiceAppointment_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_service_appointment")]
    public ActivityPointer activity_pointer_service_appointment {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_service_appointment", null);
        }
        set {
            SetRelatedEntity("activity_pointer_service_appointment", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_ServiceAppointments")]
    public BookableResourceBooking bookableresourcebooking_ServiceAppointments {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaignactivity_ServiceAppointments")]
    public CampaignActivity campaignactivity_ServiceAppointments {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("campaignactivity_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_ServiceAppointments")]
    public Entitlement entitlement_ServiceAppointments {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("entitlement_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_ServiceAppointments")]
    public EntitlementTemplate entitlementtemplate_ServiceAppointments {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_serviceappointment_createdby")]
    public SystemUser lk_serviceappointment_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_serviceappointment_createdby", null);
        }
        set {
            SetRelatedEntity("lk_serviceappointment_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_serviceappointment_createdonbehalfby")]
    public SystemUser lk_serviceappointment_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_serviceappointment_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_serviceappointment_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_serviceappointment_modifiedby")]
    public SystemUser lk_serviceappointment_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_serviceappointment_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_serviceappointment_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_serviceappointment_modifiedonbehalfby")]
    public SystemUser lk_serviceappointment_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_serviceappointment_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_serviceappointment_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_ServiceAppointments")]
    public msdyn_agreement msdyn_agreement_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ServiceAppointments")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_ServiceAppointments")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ServiceAppointments")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_ServiceAppointments")]
    public msdyn_customerasset msdyn_customerasset_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ServiceAppointments")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_ServiceAppointments")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_ServiceAppointments")]
    public msdyn_purchaseorder msdyn_purchaseorder_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ServiceAppointments")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_ServiceAppointments")]
    public msdyn_rma msdyn_rma_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_serviceappointment_bookableresourcebooking_serviceappointment")]
    public IEnumerable<BookableResourceBooking> msdyn_serviceappointment_bookableresourcebooking_serviceappointment {
        get {
            return GetRelatedEntities<BookableResourceBooking>("msdyn_serviceappointment_bookableresourcebooking_serviceappointment", null);
        }
        set {
            SetRelatedEntities("msdyn_serviceappointment_bookableresourcebooking_serviceappointment", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_ServiceAppointments")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_ServiceAppointments")]
    public msdyn_workorder msdyn_workorder_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_ServiceAppointments")]
    public msdyn_workorderincident msdyn_workorderincident_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_ServiceAppointments")]
    public msdyn_workorderproduct msdyn_workorderproduct_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_ServiceAppointments")]
    public msdyn_workorderservice msdyn_workorderservice_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_ServiceAppointments")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_ServiceAppointments {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_ServiceAppointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_ServiceAppointments")]
    public ppp_Traveller ppp_traveller_ServiceAppointments {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("serviceappointment_activity_parties")]
    public IEnumerable<ActivityParty> serviceappointment_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("serviceappointment_activity_parties", null);
        }
        set {
            SetRelatedEntities("serviceappointment_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_service_appointments")]
    public SystemUser system_user_service_appointments {
        get {
            return GetRelatedEntity<SystemUser>("system_user_service_appointments", null);
        }
        set {
            SetRelatedEntity("system_user_service_appointments", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_ServiceAppointments")]
    public ts_request ts_request_ServiceAppointments {
        get {
            return GetRelatedEntity<ts_request>("ts_request_ServiceAppointments", null);
        }
        set {
            SetRelatedEntity("ts_request_ServiceAppointments", null, value);
        }
    }
    
    public static ServiceAppointment Retrieve(IOrganizationService service, Guid id, params Expression<Func<ServiceAppointment,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Item in a Service contract.</para>
/// <para>Display Name: Service Contract Contact</para>
/// </summary>
[EntityLogicalName("servicecontractcontacts")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ServiceContractContacts : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "servicecontractcontacts";
    
    public const int EntityTypeCode = 20;
    
    public ServiceContractContacts() : 
            base(EntityLogicalName) {
    }
    
    public ServiceContractContacts(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("servicecontractcontactid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("servicecontractcontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the contact of the service contract.</para>
    /// </summary>
    [AttributeLogicalName("servicecontractcontactid")]
    public Guid? ServiceContractContactId {
        get {
            return GetAttributeValue<Guid?>("servicecontractcontactid");
        }
        set {
            SetId("servicecontractcontactid", value);
        }
    }
    
    [AttributeLogicalName("contactid")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
    }
    
    [AttributeLogicalName("contractid")]
    public Guid? ContractId {
        get {
            return GetAttributeValue<Guid?>("contractid");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>name</para>
    /// <para>Display Name: name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("name")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    [AttributeLogicalName("servicelevel")]
    [Range(-2147483648, 2147483647)]
    public int? ServiceLevel {
        get {
            return GetAttributeValue<int?>("servicelevel");
        }
        set {
            SetAttributeValue("servicelevel", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    public static ServiceContractContacts Retrieve(IOrganizationService service, Guid id, params Expression<Func<ServiceContractContacts,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Failure reason and other detailed information for a record that failed to sync.</para>
/// <para>Display Name: Sync Error</para>
/// </summary>
[EntityLogicalName("syncerror")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SyncError : ExtendedEntity<SyncErrorState, SyncError_StatusCode> {
    
    public const string EntityLogicalName = "syncerror";
    
    public const int EntityTypeCode = 9869;
    
    public SyncError() : 
            base(EntityLogicalName) {
    }
    
    public SyncError(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("syncerrorid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("syncerrorid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the sync error.</para>
    /// <para>Display Name: Sync Error Id</para>
    /// </summary>
    [AttributeLogicalName("syncerrorid")]
    [DisplayName("Sync Error Id")]
    public Guid? SyncErrorId {
        get {
            return GetAttributeValue<Guid?>("syncerrorid");
        }
        set {
            SetId("syncerrorid", value);
        }
    }
    
    /// <summary>
    /// <para>Action Name for which sync error has occurred</para>
    /// <para>Display Name: Action</para>
    /// </summary>
    [AttributeLogicalName("action")]
    [DisplayName("Action")]
    [MaxLength(100)]
    public string Action {
        get {
            return GetAttributeValue<string>("action");
        }
        set {
            SetAttributeValue("action", value);
        }
    }
    
    /// <summary>
    /// <para>Show the action data</para>
    /// <para>Display Name: Action Data</para>
    /// </summary>
    [AttributeLogicalName("actiondata")]
    [DisplayName("Action Data")]
    [MaxLength(10000)]
    public string ActionData {
        get {
            return GetAttributeValue<string>("actiondata");
        }
        set {
            SetAttributeValue("actiondata", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the sync error.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the sync Error was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the sync error.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter a short description of the sync error.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Displays the error code.</para>
    /// <para>Display Name: Error Code</para>
    /// </summary>
    [AttributeLogicalName("errorcode")]
    [DisplayName("Error Code")]
    public string ErrorCode {
        get {
            return GetAttributeValue<string>("errorcode");
        }
        set {
            SetAttributeValue("errorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Error description from the exception</para>
    /// <para>Display Name: Error Detail</para>
    /// </summary>
    [AttributeLogicalName("errordetail")]
    [DisplayName("Error Detail")]
    public string ErrorDetail {
        get {
            return GetAttributeValue<string>("errordetail");
        }
        set {
            SetAttributeValue("errordetail", value);
        }
    }
    
    /// <summary>
    /// <para>Error Message of the exception</para>
    /// <para>Display Name: Error Message</para>
    /// </summary>
    [AttributeLogicalName("errormessage")]
    [DisplayName("Error Message")]
    [MaxLength(1000)]
    public string ErrorMessage {
        get {
            return GetAttributeValue<string>("errormessage");
        }
        set {
            SetAttributeValue("errormessage", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the upsync request was executed on CRM server</para>
    /// <para>Display Name: Error Time</para>
    /// </summary>
    [AttributeLogicalName("errortime")]
    [DisplayName("Error Time")]
    public DateTime? ErrorTime {
        get {
            return GetAttributeValue<DateTime?>("errortime");
        }
        set {
            SetAttributeValue("errortime", value);
        }
    }
    
    /// <summary>
    /// <para>Select the preferred error type.</para>
    /// <para>Display Name: Error Type</para>
    /// </summary>
    [AttributeLogicalName("errortype")]
    [DisplayName("Error Type")]
    public SyncError_ErrorType? ErrorType {
        get {
            return GetOptionSetValue<SyncError_ErrorType>("errortype");
        }
        set {
            SetOptionSetValue("errortype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the sync error.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the sync error was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the sync error.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Entity name of the record for which sync error has occurred</para>
    /// <para>Display Name: Entity</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Entity")]
    [MaxLength(100)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the sync error.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Business unit that owns the sync error.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team who owns the sync error.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who owns the sync error.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the sync error relates to.</para>
    /// <para>Display Name: Record</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Record")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Request data for the entity that had the sync error.</para>
    /// <para>Display Name: Request Data</para>
    /// </summary>
    [AttributeLogicalName("requestdata")]
    [DisplayName("Request Data")]
    public string RequestData {
        get {
            return GetAttributeValue<string>("requestdata");
        }
        set {
            SetAttributeValue("requestdata", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the sync error is active or resolved.</para>
    /// <para>Display Name: State</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("State")]
    public SyncErrorState? StateCode {
        get {
            return GetOptionSetValue<SyncErrorState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the sync error status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public SyncError_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<SyncError_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the version number of the sync error.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_SyncErrors")]
    public Account Account_SyncErrors {
        get {
            return GetRelatedEntity<Account>("Account_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Account_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ActivityParty_SyncErrors")]
    public ActivityParty ActivityParty_SyncErrors {
        get {
            return GetRelatedEntity<ActivityParty>("ActivityParty_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ActivityParty_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Appointment_SyncErrors")]
    public Appointment Appointment_SyncErrors {
        get {
            return GetRelatedEntity<Appointment>("Appointment_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Appointment_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("BookableResourceBooking_SyncErrors")]
    public BookableResourceBooking BookableResourceBooking_SyncErrors {
        get {
            return GetRelatedEntity<BookableResourceBooking>("BookableResourceBooking_SyncErrors", null);
        }
        set {
            SetRelatedEntity("BookableResourceBooking_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("BookableResource_SyncErrors")]
    public BookableResource BookableResource_SyncErrors {
        get {
            return GetRelatedEntity<BookableResource>("BookableResource_SyncErrors", null);
        }
        set {
            SetRelatedEntity("BookableResource_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_SyncErrors")]
    public CampaignActivity CampaignActivity_SyncErrors {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_SyncErrors", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignResponse_SyncErrors")]
    public CampaignResponse CampaignResponse_SyncErrors {
        get {
            return GetRelatedEntity<CampaignResponse>("CampaignResponse_SyncErrors", null);
        }
        set {
            SetRelatedEntity("CampaignResponse_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_SyncErrors")]
    public Campaign Campaign_SyncErrors {
        get {
            return GetRelatedEntity<Campaign>("Campaign_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Campaign_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_SyncErrors")]
    public Contact Contact_SyncErrors {
        get {
            return GetRelatedEntity<Contact>("Contact_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Contact_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ContractDetail_SyncErrors")]
    public ContractDetail ContractDetail_SyncErrors {
        get {
            return GetRelatedEntity<ContractDetail>("ContractDetail_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ContractDetail_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_SyncErrors")]
    public Contract Contract_SyncErrors {
        get {
            return GetRelatedEntity<Contract>("Contract_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Contract_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Email_SyncErrors")]
    public Email Email_SyncErrors {
        get {
            return GetRelatedEntity<Email>("Email_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Email_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("EntitlementTemplate_SyncErrors")]
    public EntitlementTemplate EntitlementTemplate_SyncErrors {
        get {
            return GetRelatedEntity<EntitlementTemplate>("EntitlementTemplate_SyncErrors", null);
        }
        set {
            SetRelatedEntity("EntitlementTemplate_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Entitlement_SyncErrors")]
    public Entitlement Entitlement_SyncErrors {
        get {
            return GetRelatedEntity<Entitlement>("Entitlement_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Entitlement_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_SyncErrors")]
    public Incident Incident_SyncErrors {
        get {
            return GetRelatedEntity<Incident>("Incident_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Incident_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_SyncErrors")]
    public Invoice Invoice_SyncErrors {
        get {
            return GetRelatedEntity<Invoice>("Invoice_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Invoice_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("KbArticle_SyncErrors")]
    public KbArticle KbArticle_SyncErrors {
        get {
            return GetRelatedEntity<KbArticle>("KbArticle_SyncErrors", null);
        }
        set {
            SetRelatedEntity("KbArticle_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_SyncErrors")]
    public Lead Lead_SyncErrors {
        get {
            return GetRelatedEntity<Lead>("Lead_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Lead_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_SyncErrors")]
    public Opportunity Opportunity_SyncErrors {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Opportunity_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("PhoneCall_SyncErrors")]
    public PhoneCall PhoneCall_SyncErrors {
        get {
            return GetRelatedEntity<PhoneCall>("PhoneCall_SyncErrors", null);
        }
        set {
            SetRelatedEntity("PhoneCall_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ProcessSession_SyncErrors")]
    public ProcessSession ProcessSession_SyncErrors {
        get {
            return GetRelatedEntity<ProcessSession>("ProcessSession_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ProcessSession_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Product_SyncErrors")]
    public Product Product_SyncErrors {
        get {
            return GetRelatedEntity<Product>("Product_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Product_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Queue_SyncErrors")]
    public Queue Queue_SyncErrors {
        get {
            return GetRelatedEntity<Queue>("Queue_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Queue_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_SyncErrors")]
    public Quote Quote_SyncErrors {
        get {
            return GetRelatedEntity<Quote>("Quote_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Quote_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("RecurringAppointmentMaster_SyncErrors")]
    public RecurringAppointmentMaster RecurringAppointmentMaster_SyncErrors {
        get {
            return GetRelatedEntity<RecurringAppointmentMaster>("RecurringAppointmentMaster_SyncErrors", null);
        }
        set {
            SetRelatedEntity("RecurringAppointmentMaster_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("SyncError_SyncErrors", EntityRole.Referenced)]
    public IEnumerable<SyncError> ReferencedSyncError_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("SyncError_SyncErrors", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("SyncError_SyncErrors", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SyncError_SyncErrors", EntityRole.Referencing)]
    public SyncError ReferencingSyncError_SyncErrors {
        get {
            return GetRelatedEntity<SyncError>("SyncError_SyncErrors", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("SyncError_SyncErrors", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesLiterature_SyncErrors")]
    public SalesLiterature SalesLiterature_SyncErrors {
        get {
            return GetRelatedEntity<SalesLiterature>("SalesLiterature_SyncErrors", null);
        }
        set {
            SetRelatedEntity("SalesLiterature_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_SyncErrors")]
    public SalesOrder SalesOrder_SyncErrors {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_SyncErrors", null);
        }
        set {
            SetRelatedEntity("SalesOrder_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ServiceAppointment_SyncErrors")]
    public ServiceAppointment ServiceAppointment_SyncErrors {
        get {
            return GetRelatedEntity<ServiceAppointment>("ServiceAppointment_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ServiceAppointment_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("SystemUser_SyncError")]
    public SystemUser SystemUser_SyncError {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_SyncError", null);
        }
        set {
            SetRelatedEntity("SystemUser_SyncError", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SystemUser_SyncErrors")]
    public SystemUser SystemUser_SyncErrors {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_SyncErrors", null);
        }
        set {
            SetRelatedEntity("SystemUser_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Task_SyncErrors")]
    public Task Task_SyncErrors {
        get {
            return GetRelatedEntity<Task>("Task_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Task_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Territory_SyncErrors")]
    public Territory Territory_SyncErrors {
        get {
            return GetRelatedEntity<Territory>("Territory_SyncErrors", null);
        }
        set {
            SetRelatedEntity("Territory_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bulkoperationlog_SyncErrors")]
    public BulkOperationLog bulkoperationlog_SyncErrors {
        get {
            return GetRelatedEntity<BulkOperationLog>("bulkoperationlog_SyncErrors", null);
        }
        set {
            SetRelatedEntity("bulkoperationlog_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_syncerrorbase_createdby")]
    public SystemUser lk_syncerrorbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_syncerrorbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_syncerrorbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_syncerrorbase_createdonbehalfby")]
    public SystemUser lk_syncerrorbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_syncerrorbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_syncerrorbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_syncerrorbase_modifiedby")]
    public SystemUser lk_syncerrorbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_syncerrorbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_syncerrorbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_syncerrorbase_modifiedonbehalfby")]
    public SystemUser lk_syncerrorbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_syncerrorbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_syncerrorbase_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_SyncErrors")]
    public msdyn_agreement msdyn_agreement_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_SyncErrors")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_SyncErrors")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_SyncErrors")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_bookingalert_SyncErrors")]
    public msdyn_bookingalert msdyn_bookingalert_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_bookingalert>("msdyn_bookingalert_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_bookingjournal_SyncErrors")]
    public msdyn_bookingjournal msdyn_bookingjournal_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_bookingjournal>("msdyn_bookingjournal_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingjournal_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_SyncErrors")]
    public msdyn_customerasset msdyn_customerasset_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerassetcategory_SyncErrors")]
    public msdyn_customerassetcategory msdyn_customerassetcategory_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_customerassetcategory>("msdyn_customerassetcategory_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_customerassetcategory_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_functionallocation_SyncErrors")]
    public msdyn_FunctionalLocation msdyn_functionallocation_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_functionallocation_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_functionallocation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttype_SyncErrors")]
    public msdyn_incidenttype msdyn_incidenttype_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_incidenttype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_SyncErrors")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_SyncErrors")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservicetask_SyncErrors")]
    public msdyn_incidenttypeservicetask msdyn_incidenttypeservicetask_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservicetask>("msdyn_incidenttypeservicetask_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservicetask_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_orderinvoicingproduct_SyncErrors")]
    public msdyn_orderinvoicingproduct msdyn_orderinvoicingproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_orderinvoicingproduct>("msdyn_orderinvoicingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_orderinvoicingproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_propertyassetassociation_SyncErrors")]
    public msdyn_propertyassetassociation msdyn_propertyassetassociation_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_propertyassetassociation>("msdyn_propertyassetassociation_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_propertyassetassociation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_propertylog_SyncErrors")]
    public msdyn_propertylog msdyn_propertylog_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_propertylog>("msdyn_propertylog_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_propertylog_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_SyncErrors")]
    public msdyn_purchaseorder msdyn_purchaseorder_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_SyncErrors")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_quoteinvoicingproduct_SyncErrors")]
    public msdyn_quoteinvoicingproduct msdyn_quoteinvoicingproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_quoteinvoicingproduct>("msdyn_quoteinvoicingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_quoteinvoicingproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_SyncErrors")]
    public msdyn_rma msdyn_rma_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_servicetasktype_SyncErrors")]
    public msdyn_servicetasktype msdyn_servicetasktype_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_servicetasktype>("msdyn_servicetasktype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_servicetasktype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_SyncErrors")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_SyncErrors")]
    public msdyn_workorder msdyn_workorder_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_SyncErrors")]
    public msdyn_workorderincident msdyn_workorderincident_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_SyncErrors")]
    public msdyn_workorderproduct msdyn_workorderproduct_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_SyncErrors")]
    public msdyn_workorderservice msdyn_workorderservice_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_SyncErrors")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workordersubstatus_SyncErrors")]
    public msdyn_workordersubstatus msdyn_workordersubstatus_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workordersubstatus>("msdyn_workordersubstatus_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workordersubstatus_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workordertype_SyncErrors")]
    public msdyn_workordertype msdyn_workordertype_SyncErrors {
        get {
            return GetRelatedEntity<msdyn_workordertype>("msdyn_workordertype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msdyn_workordertype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msfp_alert_SyncErrors")]
    public msfp_alert msfp_alert_SyncErrors {
        get {
            return GetRelatedEntity<msfp_alert>("msfp_alert_SyncErrors", null);
        }
        set {
            SetRelatedEntity("msfp_alert_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_aircarrier_SyncErrors")]
    public ovs_AirCarrier ovs_aircarrier_SyncErrors {
        get {
            return GetRelatedEntity<ovs_AirCarrier>("ovs_aircarrier_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_aircarrier_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_finding_SyncErrors")]
    public ovs_Finding ovs_finding_SyncErrors {
        get {
            return GetRelatedEntity<ovs_Finding>("ovs_finding_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_finding_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_lob_SyncErrors")]
    public ovs_lob ovs_lob_SyncErrors {
        get {
            return GetRelatedEntity<ovs_lob>("ovs_lob_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_lob_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_operation_SyncErrors")]
    public ovs_operation ovs_operation_SyncErrors {
        get {
            return GetRelatedEntity<ovs_operation>("ovs_operation_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_operation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_operationtype_SyncErrors")]
    public ovs_operationtype ovs_operationtype_SyncErrors {
        get {
            return GetRelatedEntity<ovs_operationtype>("ovs_operationtype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_operationtype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_questionnaire_SyncErrors")]
    public ovs_Questionnaire ovs_questionnaire_SyncErrors {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ovs_questionnaire_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_questionnaire_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_sitetype_SyncErrors")]
    public ovs_SiteType ovs_sitetype_SyncErrors {
        get {
            return GetRelatedEntity<ovs_SiteType>("ovs_sitetype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_sitetype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_tyrational_SyncErrors")]
    public ovs_TYRational ovs_tyrational_SyncErrors {
        get {
            return GetRelatedEntity<ovs_TYRational>("ovs_tyrational_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_tyrational_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ovs_workorderservicetaskprovision_SyncErrors")]
    public ovs_workorderservicetaskprovision ovs_workorderservicetaskprovision_SyncErrors {
        get {
            return GetRelatedEntity<ovs_workorderservicetaskprovision>("ovs_workorderservicetaskprovision_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ovs_workorderservicetaskprovision_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_SyncErrors")]
    public ppp_Traveller ppp_traveller_SyncErrors {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_rclegislation_SyncErrors")]
    public qm_rclegislation qm_rclegislation_SyncErrors {
        get {
            return GetRelatedEntity<qm_rclegislation>("qm_rclegislation_SyncErrors", null);
        }
        set {
            SetRelatedEntity("qm_rclegislation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationcharacteristic_SyncErrors")]
    public qm_tylegislationcharacteristic qm_tylegislationcharacteristic_SyncErrors {
        get {
            return GetRelatedEntity<qm_tylegislationcharacteristic>("qm_tylegislationcharacteristic_SyncErrors", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationcharacteristic_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationsource_SyncErrors")]
    public qm_tylegislationsource qm_tylegislationsource_SyncErrors {
        get {
            return GetRelatedEntity<qm_tylegislationsource>("qm_tylegislationsource_SyncErrors", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationsource_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("qm_tylegislationtype_SyncErrors")]
    public qm_tylegislationtype qm_tylegislationtype_SyncErrors {
        get {
            return GetRelatedEntity<qm_tylegislationtype>("qm_tylegislationtype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationtype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_province_SyncErrors")]
    public tc_Province tc_province_SyncErrors {
        get {
            return GetRelatedEntity<tc_Province>("tc_province_SyncErrors", null);
        }
        set {
            SetRelatedEntity("tc_province_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalperiod_SyncErrors")]
    public tc_TCFiscalPeriod tc_tcfiscalperiod_SyncErrors {
        get {
            return GetRelatedEntity<tc_TCFiscalPeriod>("tc_tcfiscalperiod_SyncErrors", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalperiod_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalquarter_SyncErrors")]
    public tc_TCFiscalQuarter tc_tcfiscalquarter_SyncErrors {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("tc_tcfiscalquarter_SyncErrors", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalquarter_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcfiscalyear_SyncErrors")]
    public tc_TCFiscalYear tc_tcfiscalyear_SyncErrors {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("tc_tcfiscalyear_SyncErrors", null);
        }
        set {
            SetRelatedEntity("tc_tcfiscalyear_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("tc_tcmonth_SyncErrors")]
    public tc_TCMonth tc_tcmonth_SyncErrors {
        get {
            return GetRelatedEntity<tc_TCMonth>("tc_tcmonth_SyncErrors", null);
        }
        set {
            SetRelatedEntity("tc_tcmonth_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_provisioncategory_SyncErrors")]
    public ts_ProvisionCategory ts_provisioncategory_SyncErrors {
        get {
            return GetRelatedEntity<ts_ProvisionCategory>("ts_provisioncategory_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_provisioncategory_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_questionnaireversion_SyncErrors")]
    public ts_questionnaireversion ts_questionnaireversion_SyncErrors {
        get {
            return GetRelatedEntity<ts_questionnaireversion>("ts_questionnaireversion_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_questionnaireversion_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_SyncErrors")]
    public ts_request ts_request_SyncErrors {
        get {
            return GetRelatedEntity<ts_request>("ts_request_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_request_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_tradename_SyncErrors")]
    public ts_tradename ts_tradename_SyncErrors {
        get {
            return GetRelatedEntity<ts_tradename>("ts_tradename_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_tradename_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_workorderactivitytype_SyncErrors")]
    public ts_workorderactivitytype ts_workorderactivitytype_SyncErrors {
        get {
            return GetRelatedEntity<ts_workorderactivitytype>("ts_workorderactivitytype_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_workorderactivitytype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_workordercreationwizard_SyncErrors")]
    public ts_workordercreationwizard ts_workordercreationwizard_SyncErrors {
        get {
            return GetRelatedEntity<ts_workordercreationwizard>("ts_workordercreationwizard_SyncErrors", null);
        }
        set {
            SetRelatedEntity("ts_workordercreationwizard_SyncErrors", null, value);
        }
    }
    
    public static SyncError Retrieve(IOrganizationService service, Guid id, params Expression<Func<SyncError,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
/// <para>Display Name: User</para>
/// </summary>
[EntityLogicalName("systemuser")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "systemuser";
    
    public const int EntityTypeCode = 8;
    
    public SystemUser() : 
            base(EntityLogicalName) {
    }
    
    public SystemUser(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("fullname");
        }
    }
    
    [AttributeLogicalName("systemuserid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [AttributeLogicalName("systemuserid")]
    [DisplayName("User")]
    public Guid? SystemUserId {
        get {
            return GetAttributeValue<Guid?>("systemuserid");
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of user.</para>
    /// <para>Display Name: Access Mode</para>
    /// </summary>
    [AttributeLogicalName("accessmode")]
    [DisplayName("Access Mode")]
    public SystemUser_AccessMode? AccessMode {
        get {
            return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
        }
        set {
            SetOptionSetValue("accessmode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 1.</para>
    /// <para>Display Name: Address 1: ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Address 1: ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
    /// <para>Display Name: Address 1: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Address 1: Address Type")]
    public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>City name for address 1.</para>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("City")]
    [MaxLength(128)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete primary address.</para>
    /// <para>Display Name: Address</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Address")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Country/region name in address 1.</para>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Country/Region")]
    [MaxLength(128)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>County name for address 1.</para>
    /// <para>Display Name: Address 1: County</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Address 1: County")]
    [MaxLength(128)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Fax number for address 1.</para>
    /// <para>Display Name: Address 1: Fax</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Address 1: Fax")]
    [MaxLength(64)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude for address 1.</para>
    /// <para>Display Name: Address 1: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Address 1: Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>First line for entering address 1 information.</para>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Street 1")]
    [MaxLength(1024)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Second line for entering address 1 information.</para>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Street 2")]
    [MaxLength(1024)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Third line for entering address 1 information.</para>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("Street 3")]
    [MaxLength(1024)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude for address 1.</para>
    /// <para>Display Name: Address 1: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Address 1: Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Name to enter for address 1.</para>
    /// <para>Display Name: Address 1: Name</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Address 1: Name")]
    [MaxLength(100)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Post office box number for address 1.</para>
    /// <para>Display Name: Address 1: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Address 1: Post Office Box")]
    [MaxLength(40)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>ZIP Code or postal code for address 1.</para>
    /// <para>Display Name: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("ZIP/Postal Code")]
    [MaxLength(40)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment for address 1.</para>
    /// <para>Display Name: Address 1: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Address 1: Shipping Method")]
    public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>State or province for address 1.</para>
    /// <para>Display Name: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("State/Province")]
    [MaxLength(128)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>First telephone number associated with address 1.</para>
    /// <para>Display Name: Main Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Main Phone")]
    [MaxLength(64)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Second telephone number associated with address 1.</para>
    /// <para>Display Name: Other Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Other Phone")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Third telephone number associated with address 1.</para>
    /// <para>Display Name: Pager</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Pager")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>United Parcel Service (UPS) zone for address 1.</para>
    /// <para>Display Name: Address 1: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Address 1: UPS Zone")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
    /// <para>Display Name: Address 1: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Address 1: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 2.</para>
    /// <para>Display Name: Address 2: ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Address 2: ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
    /// <para>Display Name: Address 2: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Address 2: Address Type")]
    public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>City name for address 2.</para>
    /// <para>Display Name: Other City</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Other City")]
    [MaxLength(128)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete secondary address.</para>
    /// <para>Display Name: Other Address</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Other Address")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Country/region name in address 2.</para>
    /// <para>Display Name: Other Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Other Country/Region")]
    [MaxLength(128)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>County name for address 2.</para>
    /// <para>Display Name: Address 2: County</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Address 2: County")]
    [MaxLength(128)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Fax number for address 2.</para>
    /// <para>Display Name: Address 2: Fax</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Address 2: Fax")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude for address 2.</para>
    /// <para>Display Name: Address 2: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Address 2: Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>First line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 1</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Other Street 1")]
    [MaxLength(1024)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Second line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 2</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Other Street 2")]
    [MaxLength(1024)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Third line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 3</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("Other Street 3")]
    [MaxLength(1024)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude for address 2.</para>
    /// <para>Display Name: Address 2: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Address 2: Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Name to enter for address 2.</para>
    /// <para>Display Name: Address 2: Name</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Address 2: Name")]
    [MaxLength(100)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Post office box number for address 2.</para>
    /// <para>Display Name: Address 2: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Address 2: Post Office Box")]
    [MaxLength(40)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>ZIP Code or postal code for address 2.</para>
    /// <para>Display Name: Other ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Other ZIP/Postal Code")]
    [MaxLength(40)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment for address 2.</para>
    /// <para>Display Name: Address 2: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Address 2: Shipping Method")]
    public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>State or province for address 2.</para>
    /// <para>Display Name: Other State/Province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Other State/Province")]
    [MaxLength(128)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>First telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Address 2: Telephone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Second telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Address 2: Telephone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Third telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Address 2: Telephone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>United Parcel Service (UPS) zone for address 2.</para>
    /// <para>Display Name: Address 2: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Address 2: UPS Zone")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
    /// <para>Display Name: Address 2: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Address 2: UTC Offset")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>The identifier for the application. This is used to access data in another application.</para>
    /// <para>Display Name: Application ID</para>
    /// </summary>
    [AttributeLogicalName("applicationid")]
    [DisplayName("Application ID")]
    public Guid? ApplicationId {
        get {
            return GetAttributeValue<Guid?>("applicationid");
        }
        set {
            SetAttributeValue("applicationid", value);
        }
    }
    
    /// <summary>
    /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
    /// <para>Display Name: Application ID URI</para>
    /// </summary>
    [AttributeLogicalName("applicationiduri")]
    [DisplayName("Application ID URI")]
    [MaxLength(1024)]
    public string ApplicationIdUri {
        get {
            return GetAttributeValue<string>("applicationiduri");
        }
    }
    
    /// <summary>
    /// <para>This is the application directory object Id.</para>
    /// <para>Display Name: Azure AD Object ID</para>
    /// </summary>
    [AttributeLogicalName("azureactivedirectoryobjectid")]
    [DisplayName("Azure AD Object ID")]
    public Guid? AzureActiveDirectoryObjectId {
        get {
            return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit with which the user is associated.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    [DisplayName("Business Unit")]
    public EntityReference BusinessUnitId {
        get {
            return GetAttributeValue<EntityReference>("businessunitid");
        }
        set {
            SetAttributeValue("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
    /// <para>Display Name: License Type</para>
    /// </summary>
    [AttributeLogicalName("caltype")]
    [DisplayName("License Type")]
    public SystemUser_CALType? CALType {
        get {
            return GetOptionSetValue<SystemUser_CALType>("caltype");
        }
        set {
            SetOptionSetValue("caltype", value);
        }
    }
    
    /// <summary>
    /// <para>Fiscal calendar associated with the user.</para>
    /// <para>Display Name: Calendar</para>
    /// </summary>
    [AttributeLogicalName("calendarid")]
    [DisplayName("Calendar")]
    public EntityReference CalendarId {
        get {
            return GetAttributeValue<EntityReference>("calendarid");
        }
        set {
            SetAttributeValue("calendarid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the user.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the systemuser.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Indicates if default outlook filters have been populated.</para>
    /// <para>Display Name: Default Filters Populated</para>
    /// </summary>
    [AttributeLogicalName("defaultfilterspopulated")]
    [DisplayName("Default Filters Populated")]
    public bool? DefaultFiltersPopulated {
        get {
            return GetAttributeValue<bool?>("defaultfilterspopulated");
        }
    }
    
    /// <summary>
    /// <para>Select the mailbox associated with this user.</para>
    /// <para>Display Name: Mailbox</para>
    /// </summary>
    [AttributeLogicalName("defaultmailbox")]
    [DisplayName("Mailbox")]
    public EntityReference DefaultMailbox {
        get {
            return GetAttributeValue<EntityReference>("defaultmailbox");
        }
    }
    
    /// <summary>
    /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
    /// <para>Display Name: Default OneDrive for Business Folder Name</para>
    /// </summary>
    [AttributeLogicalName("defaultodbfoldername")]
    [DisplayName("Default OneDrive for Business Folder Name")]
    [MaxLength(200)]
    public string DefaultOdbFolderName {
        get {
            return GetAttributeValue<string>("defaultodbfoldername");
        }
    }
    
    /// <summary>
    /// <para>Reason for disabling the user.</para>
    /// <para>Display Name: Disabled Reason</para>
    /// </summary>
    [AttributeLogicalName("disabledreason")]
    [DisplayName("Disabled Reason")]
    [MaxLength(500)]
    public string DisabledReason {
        get {
            return GetAttributeValue<string>("disabledreason");
        }
    }
    
    /// <summary>
    /// <para>Whether to display the user in service views.</para>
    /// <para>Display Name: Display in Service Views</para>
    /// </summary>
    [AttributeLogicalName("displayinserviceviews")]
    [DisplayName("Display in Service Views")]
    public bool? DisplayInServiceViews {
        get {
            return GetAttributeValue<bool?>("displayinserviceviews");
        }
        set {
            SetAttributeValue("displayinserviceviews", value);
        }
    }
    
    /// <summary>
    /// <para>Active Directory domain of which the user is a member.</para>
    /// <para>Display Name: User Name</para>
    /// </summary>
    [AttributeLogicalName("domainname")]
    [DisplayName("User Name")]
    [MaxLength(1024)]
    public string DomainName {
        get {
            return GetAttributeValue<string>("domainname");
        }
        set {
            SetAttributeValue("domainname", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the primary email address.</para>
    /// <para>Display Name: Primary Email Status</para>
    /// </summary>
    [AttributeLogicalName("emailrouteraccessapproval")]
    [DisplayName("Primary Email Status")]
    public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
        get {
            return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
        }
        set {
            SetOptionSetValue("emailrouteraccessapproval", value);
        }
    }
    
    /// <summary>
    /// <para>Employee identifier for the user.</para>
    /// <para>Display Name: Employee</para>
    /// </summary>
    [AttributeLogicalName("employeeid")]
    [DisplayName("Employee")]
    [MaxLength(100)]
    public string EmployeeId {
        get {
            return GetAttributeValue<string>("employeeid");
        }
        set {
            SetAttributeValue("employeeid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Entity Image Id")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>First name of the user.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    [DisplayName("First Name")]
    [MaxLength(256)]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>Full name of the user.</para>
    /// <para>Display Name: Full Name</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    [DisplayName("Full Name")]
    [MaxLength(200)]
    public string FullName {
        get {
            return GetAttributeValue<string>("fullname");
        }
    }
    
    /// <summary>
    /// <para>Government identifier for the user.</para>
    /// <para>Display Name: Government</para>
    /// </summary>
    [AttributeLogicalName("governmentid")]
    [DisplayName("Government")]
    [MaxLength(100)]
    public string GovernmentId {
        get {
            return GetAttributeValue<string>("governmentid");
        }
        set {
            SetAttributeValue("governmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Home phone number for the user.</para>
    /// <para>Display Name: Home Phone</para>
    /// </summary>
    [AttributeLogicalName("homephone")]
    [DisplayName("Home Phone")]
    [MaxLength(50)]
    public string HomePhone {
        get {
            return GetAttributeValue<string>("homephone");
        }
        set {
            SetAttributeValue("homephone", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Unique user identity id</para>
    /// </summary>
    [AttributeLogicalName("identityid")]
    [DisplayName("Unique user identity id")]
    [Range(-2147483648, 2147483647)]
    public int? IdentityId {
        get {
            return GetAttributeValue<int?>("identityid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Incoming email delivery method for the user.</para>
    /// <para>Display Name: Incoming Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("incomingemaildeliverymethod")]
    [DisplayName("Incoming Email Delivery Method")]
    public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("incomingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Internal email address for the user.</para>
    /// <para>Display Name: Primary Email</para>
    /// </summary>
    [AttributeLogicalName("internalemailaddress")]
    [DisplayName("Primary Email")]
    [MaxLength(100)]
    public string InternalEMailAddress {
        get {
            return GetAttributeValue<string>("internalemailaddress");
        }
        set {
            SetAttributeValue("internalemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>User invitation status.</para>
    /// <para>Display Name: Invitation Status</para>
    /// </summary>
    [AttributeLogicalName("invitestatuscode")]
    [DisplayName("Invitation Status")]
    public SystemUser_InviteStatusCode? InviteStatusCode {
        get {
            return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
        }
        set {
            SetOptionSetValue("invitestatuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is enabled.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("isdisabled")]
    [DisplayName("Status")]
    public bool? IsDisabled {
        get {
            return GetAttributeValue<bool?>("isdisabled");
        }
        set {
            SetAttributeValue("isdisabled", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of approval of the email address by O365 Admin.</para>
    /// <para>Display Name: Email Address O365 Admin Approval Status</para>
    /// </summary>
    [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
    [DisplayName("Email Address O365 Admin Approval Status")]
    public bool? IsEmailAddressApprovedByO365Admin {
        get {
            return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
        }
    }
    
    /// <summary>
    /// <para>Check if user is an integration user.</para>
    /// <para>Display Name: Integration user mode</para>
    /// </summary>
    [AttributeLogicalName("isintegrationuser")]
    [DisplayName("Integration user mode")]
    public bool? IsIntegrationUser {
        get {
            return GetAttributeValue<bool?>("isintegrationuser");
        }
        set {
            SetAttributeValue("isintegrationuser", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is licensed.</para>
    /// <para>Display Name: User Licensed</para>
    /// </summary>
    [AttributeLogicalName("islicensed")]
    [DisplayName("User Licensed")]
    public bool? IsLicensed {
        get {
            return GetAttributeValue<bool?>("islicensed");
        }
        set {
            SetAttributeValue("islicensed", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is synced with the directory.</para>
    /// <para>Display Name: User Synced</para>
    /// </summary>
    [AttributeLogicalName("issyncwithdirectory")]
    [DisplayName("User Synced")]
    public bool? IsSyncWithDirectory {
        get {
            return GetAttributeValue<bool?>("issyncwithdirectory");
        }
        set {
            SetAttributeValue("issyncwithdirectory", value);
        }
    }
    
    /// <summary>
    /// <para>Job title of the user.</para>
    /// <para>Display Name: Job Title</para>
    /// </summary>
    [AttributeLogicalName("jobtitle")]
    [DisplayName("Job Title")]
    [MaxLength(100)]
    public string JobTitle {
        get {
            return GetAttributeValue<string>("jobtitle");
        }
        set {
            SetAttributeValue("jobtitle", value);
        }
    }
    
    /// <summary>
    /// <para>Last name of the user.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    [DisplayName("Last Name")]
    [MaxLength(256)]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Middle name of the user.</para>
    /// <para>Display Name: Middle Name</para>
    /// </summary>
    [AttributeLogicalName("middlename")]
    [DisplayName("Middle Name")]
    [MaxLength(50)]
    public string MiddleName {
        get {
            return GetAttributeValue<string>("middlename");
        }
        set {
            SetAttributeValue("middlename", value);
        }
    }
    
    /// <summary>
    /// <para>Mobile alert email address for the user.</para>
    /// <para>Display Name: Mobile Alert Email</para>
    /// </summary>
    [AttributeLogicalName("mobilealertemail")]
    [DisplayName("Mobile Alert Email")]
    [MaxLength(100)]
    public string MobileAlertEMail {
        get {
            return GetAttributeValue<string>("mobilealertemail");
        }
        set {
            SetAttributeValue("mobilealertemail", value);
        }
    }
    
    /// <summary>
    /// <para>Items contained with a particular SystemUser.</para>
    /// <para>Display Name: Mobile Offline Profile</para>
    /// </summary>
    [AttributeLogicalName("mobileofflineprofileid")]
    [DisplayName("Mobile Offline Profile")]
    public EntityReference MobileOfflineProfileId {
        get {
            return GetAttributeValue<EntityReference>("mobileofflineprofileid");
        }
        set {
            SetAttributeValue("mobileofflineprofileid", value);
        }
    }
    
    /// <summary>
    /// <para>Mobile phone number for the user.</para>
    /// <para>Display Name: Mobile Phone</para>
    /// </summary>
    [AttributeLogicalName("mobilephone")]
    [DisplayName("Mobile Phone")]
    [MaxLength(64)]
    public string MobilePhone {
        get {
            return GetAttributeValue<string>("mobilephone");
        }
        set {
            SetAttributeValue("mobilephone", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the user.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Nickname of the user.</para>
    /// <para>Display Name: Nickname</para>
    /// </summary>
    [AttributeLogicalName("nickname")]
    [DisplayName("Nickname")]
    [MaxLength(50)]
    public string NickName {
        get {
            return GetAttributeValue<string>("nickname");
        }
        set {
            SetAttributeValue("nickname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the organization associated with the user.</para>
    /// <para>Display Name: Organization </para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization ")]
    public Guid? OrganizationId {
        get {
            return GetAttributeValue<Guid?>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Outgoing email delivery method for the user.</para>
    /// <para>Display Name: Outgoing Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("outgoingemaildeliverymethod")]
    [DisplayName("Outgoing Email Delivery Method")]
    public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("outgoingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the manager of the user.</para>
    /// <para>Display Name: Manager</para>
    /// </summary>
    [AttributeLogicalName("parentsystemuserid")]
    [DisplayName("Manager")]
    public EntityReference ParentSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("parentsystemuserid");
        }
        set {
            SetAttributeValue("parentsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Passport Hi</para>
    /// </summary>
    [AttributeLogicalName("passporthi")]
    [DisplayName("Passport Hi")]
    [Range(0, 1000000000)]
    public int? PassportHi {
        get {
            return GetAttributeValue<int?>("passporthi");
        }
        set {
            SetAttributeValue("passporthi", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Passport Lo</para>
    /// </summary>
    [AttributeLogicalName("passportlo")]
    [DisplayName("Passport Lo")]
    [Range(0, 1000000000)]
    public int? PassportLo {
        get {
            return GetAttributeValue<int?>("passportlo");
        }
        set {
            SetAttributeValue("passportlo", value);
        }
    }
    
    /// <summary>
    /// <para>Personal email address of the user.</para>
    /// <para>Display Name: Email 2</para>
    /// </summary>
    [AttributeLogicalName("personalemailaddress")]
    [DisplayName("Email 2")]
    [MaxLength(100)]
    public string PersonalEMailAddress {
        get {
            return GetAttributeValue<string>("personalemailaddress");
        }
        set {
            SetAttributeValue("personalemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>URL for the Website on which a photo of the user is located.</para>
    /// <para>Display Name: Photo URL</para>
    /// </summary>
    [AttributeLogicalName("photourl")]
    [DisplayName("Photo URL")]
    [MaxLength(200)]
    public string PhotoUrl {
        get {
            return GetAttributeValue<string>("photourl");
        }
        set {
            SetAttributeValue("photourl", value);
        }
    }
    
    /// <summary>
    /// <para>User's position in hierarchical security model.</para>
    /// <para>Display Name: Position</para>
    /// </summary>
    [AttributeLogicalName("positionid")]
    [DisplayName("Position")]
    public EntityReference PositionId {
        get {
            return GetAttributeValue<EntityReference>("positionid");
        }
        set {
            SetAttributeValue("positionid", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred address for the user.</para>
    /// <para>Display Name: Preferred Address</para>
    /// </summary>
    [AttributeLogicalName("preferredaddresscode")]
    [DisplayName("Preferred Address")]
    public SystemUser_PreferredAddressCode? PreferredAddressCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
        }
        set {
            SetOptionSetValue("preferredaddresscode", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred email address for the user.</para>
    /// <para>Display Name: Preferred Email</para>
    /// </summary>
    [AttributeLogicalName("preferredemailcode")]
    [DisplayName("Preferred Email")]
    public SystemUser_PreferredEmailCode? PreferredEmailCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
        }
        set {
            SetOptionSetValue("preferredemailcode", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred phone number for the user.</para>
    /// <para>Display Name: Preferred Phone</para>
    /// </summary>
    [AttributeLogicalName("preferredphonecode")]
    [DisplayName("Preferred Phone")]
    public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
        }
        set {
            SetOptionSetValue("preferredphonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the default queue for the user.</para>
    /// <para>Display Name: Default Queue</para>
    /// </summary>
    [AttributeLogicalName("queueid")]
    [DisplayName("Default Queue")]
    public EntityReference QueueId {
        get {
            return GetAttributeValue<EntityReference>("queueid");
        }
        set {
            SetAttributeValue("queueid", value);
        }
    }
    
    /// <summary>
    /// <para>Salutation for correspondence with the user.</para>
    /// <para>Display Name: Salutation</para>
    /// </summary>
    [AttributeLogicalName("salutation")]
    [DisplayName("Salutation")]
    [MaxLength(20)]
    public string Salutation {
        get {
            return GetAttributeValue<string>("salutation");
        }
        set {
            SetAttributeValue("salutation", value);
        }
    }
    
    /// <summary>
    /// <para>Check if user is a setup user.</para>
    /// <para>Display Name: Restricted Access Mode</para>
    /// </summary>
    [AttributeLogicalName("setupuser")]
    [DisplayName("Restricted Access Mode")]
    public bool? SetupUser {
        get {
            return GetAttributeValue<bool?>("setupuser");
        }
        set {
            SetAttributeValue("setupuser", value);
        }
    }
    
    /// <summary>
    /// <para>SharePoint Work Email Address</para>
    /// <para>Display Name: SharePoint Email Address</para>
    /// </summary>
    [AttributeLogicalName("sharepointemailaddress")]
    [DisplayName("SharePoint Email Address")]
    [MaxLength(1024)]
    public string SharePointEmailAddress {
        get {
            return GetAttributeValue<string>("sharepointemailaddress");
        }
        set {
            SetAttributeValue("sharepointemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Site at which the user is located.</para>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("siteid")]
    [DisplayName("Site")]
    public EntityReference SiteId {
        get {
            return GetAttributeValue<EntityReference>("siteid");
        }
        set {
            SetAttributeValue("siteid", value);
        }
    }
    
    /// <summary>
    /// <para>Skill set of the user.</para>
    /// <para>Display Name: Skills</para>
    /// </summary>
    [AttributeLogicalName("skills")]
    [DisplayName("Skills")]
    [MaxLength(100)]
    public string Skills {
        get {
            return GetAttributeValue<string>("skills");
        }
        set {
            SetAttributeValue("skills", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the territory to which the user is assigned.</para>
    /// <para>Display Name: Territory</para>
    /// </summary>
    [AttributeLogicalName("territoryid")]
    [DisplayName("Territory")]
    public EntityReference TerritoryId {
        get {
            return GetAttributeValue<EntityReference>("territoryid");
        }
        set {
            SetAttributeValue("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Title of the user.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Title")]
    [MaxLength(128)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the systemuser.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of user license.</para>
    /// <para>Display Name: User License Type</para>
    /// </summary>
    [AttributeLogicalName("userlicensetype")]
    [DisplayName("User License Type")]
    [Range(-2147483648, 2147483647)]
    public int? UserLicenseType {
        get {
            return GetAttributeValue<int?>("userlicensetype");
        }
        set {
            SetAttributeValue("userlicensetype", value);
        }
    }
    
    /// <summary>
    /// <para> User PUID User Identifiable Information</para>
    /// <para>Display Name: User PUID</para>
    /// </summary>
    [AttributeLogicalName("userpuid")]
    [DisplayName("User PUID")]
    [MaxLength(100)]
    public string UserPuid {
        get {
            return GetAttributeValue<string>("userpuid");
        }
    }
    
    /// <summary>
    /// <para>Version number of the user.</para>
    /// <para>Display Name: Version number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Windows Live ID</para>
    /// <para>Display Name: Windows Live ID</para>
    /// </summary>
    [AttributeLogicalName("windowsliveid")]
    [DisplayName("Windows Live ID")]
    [MaxLength(1024)]
    public string WindowsLiveID {
        get {
            return GetAttributeValue<string>("windowsliveid");
        }
        set {
            SetAttributeValue("windowsliveid", value);
        }
    }
    
    /// <summary>
    /// <para>User's Yammer login email address</para>
    /// <para>Display Name: Yammer Email</para>
    /// </summary>
    [AttributeLogicalName("yammeremailaddress")]
    [DisplayName("Yammer Email")]
    [MaxLength(200)]
    public string YammerEmailAddress {
        get {
            return GetAttributeValue<string>("yammeremailaddress");
        }
        set {
            SetAttributeValue("yammeremailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>User's Yammer ID</para>
    /// <para>Display Name: Yammer User ID</para>
    /// </summary>
    [AttributeLogicalName("yammeruserid")]
    [DisplayName("Yammer User ID")]
    [MaxLength(128)]
    public string YammerUserId {
        get {
            return GetAttributeValue<string>("yammeruserid");
        }
        set {
            SetAttributeValue("yammeruserid", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi First Name</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    [DisplayName("Yomi First Name")]
    [MaxLength(64)]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Full Name</para>
    /// </summary>
    [AttributeLogicalName("yomifullname")]
    [DisplayName("Yomi Full Name")]
    [MaxLength(200)]
    public string YomiFullName {
        get {
            return GetAttributeValue<string>("yomifullname");
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Last Name</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    [DisplayName("Yomi Last Name")]
    [MaxLength(64)]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Middle Name</para>
    /// </summary>
    [AttributeLogicalName("yomimiddlename")]
    [DisplayName("Yomi Middle Name")]
    [MaxLength(50)]
    public string YomiMiddleName {
        get {
            return GetAttributeValue<string>("yomimiddlename");
        }
        set {
            SetAttributeValue("yomimiddlename", value);
        }
    }
    
    /// <summary>
    /// <para>Describes whether user is opted out or not</para>
    /// <para>Display Name: GDPR Optout</para>
    /// </summary>
    [AttributeLogicalName("msdyn_gdproptout")]
    [DisplayName("GDPR Optout")]
    public bool? msdyn_gdproptout {
        get {
            return GetAttributeValue<bool?>("msdyn_gdproptout");
        }
        set {
            SetAttributeValue("msdyn_gdproptout", value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referenceduser_parent_user {
        get {
            return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuserbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuserbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentsystemuserid")]
    [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
    public SystemUser Referencinguser_parent_user {
        get {
            return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("SystemUser_Campaigns")]
    public IEnumerable<Campaign> SystemUser_Campaigns {
        get {
            return GetRelatedEntities<Campaign>("SystemUser_Campaigns", null);
        }
        set {
            SetRelatedEntities("SystemUser_Campaigns", null, value);
        }
    }
    
    [RelationshipSchemaName("SystemUser_Email_EmailSender")]
    public IEnumerable<Email> SystemUser_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("SystemUser_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("SystemUser_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("SystemUser_ProcessSessions")]
    public IEnumerable<ProcessSession> SystemUser_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("SystemUser_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("SystemUser_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("SystemUser_SyncError")]
    public IEnumerable<SyncError> SystemUser_SyncError {
        get {
            return GetRelatedEntities<SyncError>("SystemUser_SyncError", null);
        }
        set {
            SetRelatedEntities("SystemUser_SyncError", null, value);
        }
    }
    
    [RelationshipSchemaName("SystemUser_SyncErrors")]
    public IEnumerable<SyncError> SystemUser_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("SystemUser_SyncErrors", null);
        }
        set {
            SetRelatedEntities("SystemUser_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_owning_user")]
    public IEnumerable<Contact> contact_owning_user {
        get {
            return GetRelatedEntities<Contact>("contact_owning_user", null);
        }
        set {
            SetRelatedEntities("contact_owning_user", null, value);
        }
    }
    
    [RelationshipSchemaName("email_acceptingentity_systemuser")]
    public IEnumerable<Email> email_acceptingentity_systemuser {
        get {
            return GetRelatedEntities<Email>("email_acceptingentity_systemuser", null);
        }
        set {
            SetRelatedEntities("email_acceptingentity_systemuser", null, value);
        }
    }
    
    [RelationshipSchemaName("lead_owning_user")]
    public IEnumerable<Lead> lead_owning_user {
        get {
            return GetRelatedEntities<Lead>("lead_owning_user", null);
        }
        set {
            SetRelatedEntities("lead_owning_user", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_accountbase_createdby")]
    public IEnumerable<Account> lk_accountbase_createdby {
        get {
            return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_accountbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
    public IEnumerable<Account> lk_accountbase_createdonbehalfby {
        get {
            return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_accountbase_modifiedby")]
    public IEnumerable<Account> lk_accountbase_modifiedby {
        get {
            return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_accountbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
    public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_activitypointer_createdby")]
    public IEnumerable<ActivityPointer> lk_activitypointer_createdby {
        get {
            return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdby", null);
        }
        set {
            SetRelatedEntities("lk_activitypointer_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
    public IEnumerable<ActivityPointer> lk_activitypointer_createdonbehalfby {
        get {
            return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_activitypointer_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_activitypointer_modifiedby")]
    public IEnumerable<ActivityPointer> lk_activitypointer_modifiedby {
        get {
            return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_activitypointer_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
    public IEnumerable<ActivityPointer> lk_activitypointer_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_activitypointer_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_appointment_createdby")]
    public IEnumerable<Appointment> lk_appointment_createdby {
        get {
            return GetRelatedEntities<Appointment>("lk_appointment_createdby", null);
        }
        set {
            SetRelatedEntities("lk_appointment_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
    public IEnumerable<Appointment> lk_appointment_createdonbehalfby {
        get {
            return GetRelatedEntities<Appointment>("lk_appointment_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_appointment_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_appointment_modifiedby")]
    public IEnumerable<Appointment> lk_appointment_modifiedby {
        get {
            return GetRelatedEntities<Appointment>("lk_appointment_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_appointment_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
    public IEnumerable<Appointment> lk_appointment_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Appointment>("lk_appointment_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_appointment_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresource_createdby")]
    public IEnumerable<BookableResource> lk_bookableresource_createdby {
        get {
            return GetRelatedEntities<BookableResource>("lk_bookableresource_createdby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresource_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresource_createdonbehalfby")]
    public IEnumerable<BookableResource> lk_bookableresource_createdonbehalfby {
        get {
            return GetRelatedEntities<BookableResource>("lk_bookableresource_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresource_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresource_modifiedby")]
    public IEnumerable<BookableResource> lk_bookableresource_modifiedby {
        get {
            return GetRelatedEntities<BookableResource>("lk_bookableresource_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresource_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresource_modifiedonbehalfby")]
    public IEnumerable<BookableResource> lk_bookableresource_modifiedonbehalfby {
        get {
            return GetRelatedEntities<BookableResource>("lk_bookableresource_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresource_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresourcebooking_createdby")]
    public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_createdby {
        get {
            return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_createdby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresourcebooking_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresourcebooking_createdonbehalfby")]
    public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_createdonbehalfby {
        get {
            return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresourcebooking_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresourcebooking_modifiedby")]
    public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_modifiedby {
        get {
            return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresourcebooking_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_bookableresourcebooking_modifiedonbehalfby")]
    public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_modifiedonbehalfby {
        get {
            return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_bookableresourcebooking_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaign_createdby")]
    public IEnumerable<Campaign> lk_campaign_createdby {
        get {
            return GetRelatedEntities<Campaign>("lk_campaign_createdby", null);
        }
        set {
            SetRelatedEntities("lk_campaign_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaign_createdonbehalfby")]
    public IEnumerable<Campaign> lk_campaign_createdonbehalfby {
        get {
            return GetRelatedEntities<Campaign>("lk_campaign_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaign_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaign_modifiedby")]
    public IEnumerable<Campaign> lk_campaign_modifiedby {
        get {
            return GetRelatedEntities<Campaign>("lk_campaign_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_campaign_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaign_modifiedonbehalfby")]
    public IEnumerable<Campaign> lk_campaign_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Campaign>("lk_campaign_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaign_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignactivity_createdby")]
    public IEnumerable<CampaignActivity> lk_campaignactivity_createdby {
        get {
            return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_createdby", null);
        }
        set {
            SetRelatedEntities("lk_campaignactivity_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignactivity_createdonbehalfby")]
    public IEnumerable<CampaignActivity> lk_campaignactivity_createdonbehalfby {
        get {
            return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaignactivity_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignactivity_modifiedby")]
    public IEnumerable<CampaignActivity> lk_campaignactivity_modifiedby {
        get {
            return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_campaignactivity_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignactivity_modifiedonbehalfby")]
    public IEnumerable<CampaignActivity> lk_campaignactivity_modifiedonbehalfby {
        get {
            return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaignactivity_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignresponse_createdby")]
    public IEnumerable<CampaignResponse> lk_campaignresponse_createdby {
        get {
            return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_createdby", null);
        }
        set {
            SetRelatedEntities("lk_campaignresponse_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignresponse_createdonbehalfby")]
    public IEnumerable<CampaignResponse> lk_campaignresponse_createdonbehalfby {
        get {
            return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaignresponse_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignresponse_modifiedby")]
    public IEnumerable<CampaignResponse> lk_campaignresponse_modifiedby {
        get {
            return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_campaignresponse_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_campaignresponse_modifiedonbehalfby")]
    public IEnumerable<CampaignResponse> lk_campaignresponse_modifiedonbehalfby {
        get {
            return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_campaignresponse_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contact_createdonbehalfby")]
    public IEnumerable<Contact> lk_contact_createdonbehalfby {
        get {
            return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
    public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contactbase_createdby")]
    public IEnumerable<Contact> lk_contactbase_createdby {
        get {
            return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_contactbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contactbase_modifiedby")]
    public IEnumerable<Contact> lk_contactbase_modifiedby {
        get {
            return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_contactbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contract_createdonbehalfby")]
    public IEnumerable<Contract> lk_contract_createdonbehalfby {
        get {
            return GetRelatedEntities<Contract>("lk_contract_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contract_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contract_modifiedonbehalfby")]
    public IEnumerable<Contract> lk_contract_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Contract>("lk_contract_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contract_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractbase_createdby")]
    public IEnumerable<Contract> lk_contractbase_createdby {
        get {
            return GetRelatedEntities<Contract>("lk_contractbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_contractbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractbase_modifiedby")]
    public IEnumerable<Contract> lk_contractbase_modifiedby {
        get {
            return GetRelatedEntities<Contract>("lk_contractbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_contractbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractdetail_createdonbehalfby")]
    public IEnumerable<ContractDetail> lk_contractdetail_createdonbehalfby {
        get {
            return GetRelatedEntities<ContractDetail>("lk_contractdetail_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contractdetail_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractdetail_modifiedonbehalfby")]
    public IEnumerable<ContractDetail> lk_contractdetail_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ContractDetail>("lk_contractdetail_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_contractdetail_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractdetailbase_createdby")]
    public IEnumerable<ContractDetail> lk_contractdetailbase_createdby {
        get {
            return GetRelatedEntities<ContractDetail>("lk_contractdetailbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_contractdetailbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_contractdetailbase_modifiedby")]
    public IEnumerable<ContractDetail> lk_contractdetailbase_modifiedby {
        get {
            return GetRelatedEntities<ContractDetail>("lk_contractdetailbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_contractdetailbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_email_createdby")]
    public IEnumerable<Email> lk_email_createdby {
        get {
            return GetRelatedEntities<Email>("lk_email_createdby", null);
        }
        set {
            SetRelatedEntities("lk_email_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_email_createdonbehalfby")]
    public IEnumerable<Email> lk_email_createdonbehalfby {
        get {
            return GetRelatedEntities<Email>("lk_email_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_email_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_email_modifiedby")]
    public IEnumerable<Email> lk_email_modifiedby {
        get {
            return GetRelatedEntities<Email>("lk_email_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_email_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
    public IEnumerable<Email> lk_email_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Email>("lk_email_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_email_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlement_createdby")]
    public IEnumerable<Entitlement> lk_entitlement_createdby {
        get {
            return GetRelatedEntities<Entitlement>("lk_entitlement_createdby", null);
        }
        set {
            SetRelatedEntities("lk_entitlement_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
    public IEnumerable<Entitlement> lk_entitlement_createdonbehalfby {
        get {
            return GetRelatedEntities<Entitlement>("lk_entitlement_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_entitlement_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlement_modifiedby")]
    public IEnumerable<Entitlement> lk_entitlement_modifiedby {
        get {
            return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_entitlement_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
    public IEnumerable<Entitlement> lk_entitlement_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_entitlement_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlementtemplate_createdby")]
    public IEnumerable<EntitlementTemplate> lk_entitlementtemplate_createdby {
        get {
            return GetRelatedEntities<EntitlementTemplate>("lk_entitlementtemplate_createdby", null);
        }
        set {
            SetRelatedEntities("lk_entitlementtemplate_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlementtemplate_createdonbehalfby")]
    public IEnumerable<EntitlementTemplate> lk_entitlementtemplate_createdonbehalfby {
        get {
            return GetRelatedEntities<EntitlementTemplate>("lk_entitlementtemplate_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_entitlementtemplate_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlementtemplate_modifiedby")]
    public IEnumerable<EntitlementTemplate> lk_entitlementtemplate_modifiedby {
        get {
            return GetRelatedEntities<EntitlementTemplate>("lk_entitlementtemplate_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_entitlementtemplate_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_entitlementtemplate_modifiedonbehalfby")]
    public IEnumerable<EntitlementTemplate> lk_entitlementtemplate_modifiedonbehalfby {
        get {
            return GetRelatedEntities<EntitlementTemplate>("lk_entitlementtemplate_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_entitlementtemplate_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_incidentbase_createdby")]
    public IEnumerable<Incident> lk_incidentbase_createdby {
        get {
            return GetRelatedEntities<Incident>("lk_incidentbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_incidentbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
    public IEnumerable<Incident> lk_incidentbase_createdonbehalfby {
        get {
            return GetRelatedEntities<Incident>("lk_incidentbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_incidentbase_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_incidentbase_modifiedby")]
    public IEnumerable<Incident> lk_incidentbase_modifiedby {
        get {
            return GetRelatedEntities<Incident>("lk_incidentbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_incidentbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
    public IEnumerable<Incident> lk_incidentbase_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Incident>("lk_incidentbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_incidentbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_invoice_createdonbehalfby")]
    public IEnumerable<Invoice> lk_invoice_createdonbehalfby {
        get {
            return GetRelatedEntities<Invoice>("lk_invoice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_invoice_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_invoice_modifiedonbehalfby")]
    public IEnumerable<Invoice> lk_invoice_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Invoice>("lk_invoice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_invoice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_invoicebase_createdby")]
    public IEnumerable<Invoice> lk_invoicebase_createdby {
        get {
            return GetRelatedEntities<Invoice>("lk_invoicebase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_invoicebase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_invoicebase_modifiedby")]
    public IEnumerable<Invoice> lk_invoicebase_modifiedby {
        get {
            return GetRelatedEntities<Invoice>("lk_invoicebase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_invoicebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_kbarticle_createdonbehalfby")]
    public IEnumerable<KbArticle> lk_kbarticle_createdonbehalfby {
        get {
            return GetRelatedEntities<KbArticle>("lk_kbarticle_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_kbarticle_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_kbarticle_modifiedonbehalfby")]
    public IEnumerable<KbArticle> lk_kbarticle_modifiedonbehalfby {
        get {
            return GetRelatedEntities<KbArticle>("lk_kbarticle_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_kbarticle_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_kbarticlebase_createdby")]
    public IEnumerable<KbArticle> lk_kbarticlebase_createdby {
        get {
            return GetRelatedEntities<KbArticle>("lk_kbarticlebase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_kbarticlebase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_kbarticlebase_modifiedby")]
    public IEnumerable<KbArticle> lk_kbarticlebase_modifiedby {
        get {
            return GetRelatedEntities<KbArticle>("lk_kbarticlebase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_kbarticlebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_lead_createdonbehalfby")]
    public IEnumerable<Lead> lk_lead_createdonbehalfby {
        get {
            return GetRelatedEntities<Lead>("lk_lead_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_lead_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
    public IEnumerable<Lead> lk_lead_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Lead>("lk_lead_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_lead_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_leadbase_createdby")]
    public IEnumerable<Lead> lk_leadbase_createdby {
        get {
            return GetRelatedEntities<Lead>("lk_leadbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_leadbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_leadbase_modifiedby")]
    public IEnumerable<Lead> lk_leadbase_modifiedby {
        get {
            return GetRelatedEntities<Lead>("lk_leadbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_leadbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreement_createdby")]
    public IEnumerable<msdyn_agreement> lk_msdyn_agreement_createdby {
        get {
            return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreement_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreement_createdonbehalfby")]
    public IEnumerable<msdyn_agreement> lk_msdyn_agreement_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreement_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreement_modifiedby")]
    public IEnumerable<msdyn_agreement> lk_msdyn_agreement_modifiedby {
        get {
            return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreement_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreement_modifiedonbehalfby")]
    public IEnumerable<msdyn_agreement> lk_msdyn_agreement_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreement_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_createdby")]
    public IEnumerable<msdyn_agreementbookingproduct> lk_msdyn_agreementbookingproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("lk_msdyn_agreementbookingproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_createdonbehalfby")]
    public IEnumerable<msdyn_agreementbookingproduct> lk_msdyn_agreementbookingproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("lk_msdyn_agreementbookingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_modifiedby")]
    public IEnumerable<msdyn_agreementbookingproduct> lk_msdyn_agreementbookingproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("lk_msdyn_agreementbookingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_agreementbookingproduct> lk_msdyn_agreementbookingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("lk_msdyn_agreementbookingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_createdby")]
    public IEnumerable<msdyn_agreementbookingservice> lk_msdyn_agreementbookingservice_createdby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("lk_msdyn_agreementbookingservice_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingservice_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_createdonbehalfby")]
    public IEnumerable<msdyn_agreementbookingservice> lk_msdyn_agreementbookingservice_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("lk_msdyn_agreementbookingservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingservice_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_modifiedby")]
    public IEnumerable<msdyn_agreementbookingservice> lk_msdyn_agreementbookingservice_modifiedby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("lk_msdyn_agreementbookingservice_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingservice_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_modifiedonbehalfby")]
    public IEnumerable<msdyn_agreementbookingservice> lk_msdyn_agreementbookingservice_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("lk_msdyn_agreementbookingservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementbookingservice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_createdby")]
    public IEnumerable<msdyn_agreementinvoiceproduct> lk_msdyn_agreementinvoiceproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("lk_msdyn_agreementinvoiceproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementinvoiceproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_createdonbehalfby")]
    public IEnumerable<msdyn_agreementinvoiceproduct> lk_msdyn_agreementinvoiceproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("lk_msdyn_agreementinvoiceproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementinvoiceproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_modifiedby")]
    public IEnumerable<msdyn_agreementinvoiceproduct> lk_msdyn_agreementinvoiceproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("lk_msdyn_agreementinvoiceproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementinvoiceproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_agreementinvoiceproduct> lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_bookingjournal_createdby")]
    public IEnumerable<msdyn_bookingjournal> lk_msdyn_bookingjournal_createdby {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("lk_msdyn_bookingjournal_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_bookingjournal_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_bookingjournal_createdonbehalfby")]
    public IEnumerable<msdyn_bookingjournal> lk_msdyn_bookingjournal_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("lk_msdyn_bookingjournal_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_bookingjournal_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_bookingjournal_modifiedby")]
    public IEnumerable<msdyn_bookingjournal> lk_msdyn_bookingjournal_modifiedby {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("lk_msdyn_bookingjournal_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_bookingjournal_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_bookingjournal_modifiedonbehalfby")]
    public IEnumerable<msdyn_bookingjournal> lk_msdyn_bookingjournal_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("lk_msdyn_bookingjournal_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_bookingjournal_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerasset_createdby")]
    public IEnumerable<msdyn_customerasset> lk_msdyn_customerasset_createdby {
        get {
            return GetRelatedEntities<msdyn_customerasset>("lk_msdyn_customerasset_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerasset_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerasset_createdonbehalfby")]
    public IEnumerable<msdyn_customerasset> lk_msdyn_customerasset_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_customerasset>("lk_msdyn_customerasset_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerasset_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerasset_modifiedby")]
    public IEnumerable<msdyn_customerasset> lk_msdyn_customerasset_modifiedby {
        get {
            return GetRelatedEntities<msdyn_customerasset>("lk_msdyn_customerasset_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerasset_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerasset_modifiedonbehalfby")]
    public IEnumerable<msdyn_customerasset> lk_msdyn_customerasset_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_customerasset>("lk_msdyn_customerasset_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerasset_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_createdby")]
    public IEnumerable<msdyn_customerassetcategory> lk_msdyn_customerassetcategory_createdby {
        get {
            return GetRelatedEntities<msdyn_customerassetcategory>("lk_msdyn_customerassetcategory_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerassetcategory_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_createdonbehalfby")]
    public IEnumerable<msdyn_customerassetcategory> lk_msdyn_customerassetcategory_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_customerassetcategory>("lk_msdyn_customerassetcategory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerassetcategory_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_modifiedby")]
    public IEnumerable<msdyn_customerassetcategory> lk_msdyn_customerassetcategory_modifiedby {
        get {
            return GetRelatedEntities<msdyn_customerassetcategory>("lk_msdyn_customerassetcategory_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerassetcategory_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_modifiedonbehalfby")]
    public IEnumerable<msdyn_customerassetcategory> lk_msdyn_customerassetcategory_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_customerassetcategory>("lk_msdyn_customerassetcategory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_customerassetcategory_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_functionallocation_createdby")]
    public IEnumerable<msdyn_FunctionalLocation> lk_msdyn_functionallocation_createdby {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("lk_msdyn_functionallocation_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_functionallocation_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_functionallocation_createdonbehalfby")]
    public IEnumerable<msdyn_FunctionalLocation> lk_msdyn_functionallocation_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("lk_msdyn_functionallocation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_functionallocation_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_functionallocation_modifiedby")]
    public IEnumerable<msdyn_FunctionalLocation> lk_msdyn_functionallocation_modifiedby {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("lk_msdyn_functionallocation_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_functionallocation_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_functionallocation_modifiedonbehalfby")]
    public IEnumerable<msdyn_FunctionalLocation> lk_msdyn_functionallocation_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("lk_msdyn_functionallocation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_functionallocation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttype_createdby")]
    public IEnumerable<msdyn_incidenttype> lk_msdyn_incidenttype_createdby {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("lk_msdyn_incidenttype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttype_createdonbehalfby")]
    public IEnumerable<msdyn_incidenttype> lk_msdyn_incidenttype_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("lk_msdyn_incidenttype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttype_modifiedby")]
    public IEnumerable<msdyn_incidenttype> lk_msdyn_incidenttype_modifiedby {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("lk_msdyn_incidenttype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttype_modifiedonbehalfby")]
    public IEnumerable<msdyn_incidenttype> lk_msdyn_incidenttype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("lk_msdyn_incidenttype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_createdby")]
    public IEnumerable<msdyn_incidenttypeproduct> lk_msdyn_incidenttypeproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("lk_msdyn_incidenttypeproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_createdonbehalfby")]
    public IEnumerable<msdyn_incidenttypeproduct> lk_msdyn_incidenttypeproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("lk_msdyn_incidenttypeproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_modifiedby")]
    public IEnumerable<msdyn_incidenttypeproduct> lk_msdyn_incidenttypeproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("lk_msdyn_incidenttypeproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_incidenttypeproduct> lk_msdyn_incidenttypeproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("lk_msdyn_incidenttypeproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_createdby")]
    public IEnumerable<msdyn_incidenttypeservice> lk_msdyn_incidenttypeservice_createdby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("lk_msdyn_incidenttypeservice_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservice_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_createdonbehalfby")]
    public IEnumerable<msdyn_incidenttypeservice> lk_msdyn_incidenttypeservice_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("lk_msdyn_incidenttypeservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservice_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_modifiedby")]
    public IEnumerable<msdyn_incidenttypeservice> lk_msdyn_incidenttypeservice_modifiedby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("lk_msdyn_incidenttypeservice_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservice_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_modifiedonbehalfby")]
    public IEnumerable<msdyn_incidenttypeservice> lk_msdyn_incidenttypeservice_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("lk_msdyn_incidenttypeservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_createdby")]
    public IEnumerable<msdyn_incidenttypeservicetask> lk_msdyn_incidenttypeservicetask_createdby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("lk_msdyn_incidenttypeservicetask_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservicetask_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_createdonbehalfby")]
    public IEnumerable<msdyn_incidenttypeservicetask> lk_msdyn_incidenttypeservicetask_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("lk_msdyn_incidenttypeservicetask_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservicetask_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_modifiedby")]
    public IEnumerable<msdyn_incidenttypeservicetask> lk_msdyn_incidenttypeservicetask_modifiedby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("lk_msdyn_incidenttypeservicetask_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservicetask_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby")]
    public IEnumerable<msdyn_incidenttypeservicetask> lk_msdyn_incidenttypeservicetask_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_createdby")]
    public IEnumerable<msdyn_orderinvoicingproduct> lk_msdyn_orderinvoicingproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("lk_msdyn_orderinvoicingproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_orderinvoicingproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_createdonbehalfby")]
    public IEnumerable<msdyn_orderinvoicingproduct> lk_msdyn_orderinvoicingproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("lk_msdyn_orderinvoicingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_orderinvoicingproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_modifiedby")]
    public IEnumerable<msdyn_orderinvoicingproduct> lk_msdyn_orderinvoicingproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("lk_msdyn_orderinvoicingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_orderinvoicingproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_orderinvoicingproduct> lk_msdyn_orderinvoicingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_createdby")]
    public IEnumerable<msdyn_propertyassetassociation> lk_msdyn_propertyassetassociation_createdby {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("lk_msdyn_propertyassetassociation_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertyassetassociation_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_createdonbehalfby")]
    public IEnumerable<msdyn_propertyassetassociation> lk_msdyn_propertyassetassociation_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("lk_msdyn_propertyassetassociation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertyassetassociation_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_modifiedby")]
    public IEnumerable<msdyn_propertyassetassociation> lk_msdyn_propertyassetassociation_modifiedby {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("lk_msdyn_propertyassetassociation_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertyassetassociation_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_modifiedonbehalfby")]
    public IEnumerable<msdyn_propertyassetassociation> lk_msdyn_propertyassetassociation_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("lk_msdyn_propertyassetassociation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertyassetassociation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertylog_createdby")]
    public IEnumerable<msdyn_propertylog> lk_msdyn_propertylog_createdby {
        get {
            return GetRelatedEntities<msdyn_propertylog>("lk_msdyn_propertylog_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertylog_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertylog_createdonbehalfby")]
    public IEnumerable<msdyn_propertylog> lk_msdyn_propertylog_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_propertylog>("lk_msdyn_propertylog_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertylog_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertylog_modifiedby")]
    public IEnumerable<msdyn_propertylog> lk_msdyn_propertylog_modifiedby {
        get {
            return GetRelatedEntities<msdyn_propertylog>("lk_msdyn_propertylog_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertylog_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_propertylog_modifiedonbehalfby")]
    public IEnumerable<msdyn_propertylog> lk_msdyn_propertylog_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_propertylog>("lk_msdyn_propertylog_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_propertylog_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorder_createdby")]
    public IEnumerable<msdyn_purchaseorder> lk_msdyn_purchaseorder_createdby {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("lk_msdyn_purchaseorder_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorder_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorder_createdonbehalfby")]
    public IEnumerable<msdyn_purchaseorder> lk_msdyn_purchaseorder_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("lk_msdyn_purchaseorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorder_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorder_modifiedby")]
    public IEnumerable<msdyn_purchaseorder> lk_msdyn_purchaseorder_modifiedby {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("lk_msdyn_purchaseorder_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorder_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorder_modifiedonbehalfby")]
    public IEnumerable<msdyn_purchaseorder> lk_msdyn_purchaseorder_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("lk_msdyn_purchaseorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorder_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_createdby")]
    public IEnumerable<msdyn_purchaseorderproduct> lk_msdyn_purchaseorderproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("lk_msdyn_purchaseorderproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorderproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_createdonbehalfby")]
    public IEnumerable<msdyn_purchaseorderproduct> lk_msdyn_purchaseorderproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("lk_msdyn_purchaseorderproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorderproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_modifiedby")]
    public IEnumerable<msdyn_purchaseorderproduct> lk_msdyn_purchaseorderproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("lk_msdyn_purchaseorderproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorderproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_purchaseorderproduct> lk_msdyn_purchaseorderproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("lk_msdyn_purchaseorderproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_purchaseorderproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_createdby")]
    public IEnumerable<msdyn_quoteinvoicingproduct> lk_msdyn_quoteinvoicingproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("lk_msdyn_quoteinvoicingproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_quoteinvoicingproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_createdonbehalfby")]
    public IEnumerable<msdyn_quoteinvoicingproduct> lk_msdyn_quoteinvoicingproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("lk_msdyn_quoteinvoicingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_quoteinvoicingproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_modifiedby")]
    public IEnumerable<msdyn_quoteinvoicingproduct> lk_msdyn_quoteinvoicingproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("lk_msdyn_quoteinvoicingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_quoteinvoicingproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_quoteinvoicingproduct> lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_rma_createdby")]
    public IEnumerable<msdyn_rma> lk_msdyn_rma_createdby {
        get {
            return GetRelatedEntities<msdyn_rma>("lk_msdyn_rma_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_rma_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_rma_createdonbehalfby")]
    public IEnumerable<msdyn_rma> lk_msdyn_rma_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_rma>("lk_msdyn_rma_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_rma_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_rma_modifiedby")]
    public IEnumerable<msdyn_rma> lk_msdyn_rma_modifiedby {
        get {
            return GetRelatedEntities<msdyn_rma>("lk_msdyn_rma_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_rma_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_rma_modifiedonbehalfby")]
    public IEnumerable<msdyn_rma> lk_msdyn_rma_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_rma>("lk_msdyn_rma_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_rma_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_servicetasktype_createdby")]
    public IEnumerable<msdyn_servicetasktype> lk_msdyn_servicetasktype_createdby {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("lk_msdyn_servicetasktype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_servicetasktype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_servicetasktype_createdonbehalfby")]
    public IEnumerable<msdyn_servicetasktype> lk_msdyn_servicetasktype_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("lk_msdyn_servicetasktype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_servicetasktype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_servicetasktype_modifiedby")]
    public IEnumerable<msdyn_servicetasktype> lk_msdyn_servicetasktype_modifiedby {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("lk_msdyn_servicetasktype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_servicetasktype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_servicetasktype_modifiedonbehalfby")]
    public IEnumerable<msdyn_servicetasktype> lk_msdyn_servicetasktype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("lk_msdyn_servicetasktype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_servicetasktype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_createdby")]
    public IEnumerable<msdyn_timeoffrequest> lk_msdyn_timeoffrequest_createdby {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("lk_msdyn_timeoffrequest_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_timeoffrequest_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_createdonbehalfby")]
    public IEnumerable<msdyn_timeoffrequest> lk_msdyn_timeoffrequest_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("lk_msdyn_timeoffrequest_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_timeoffrequest_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_modifiedby")]
    public IEnumerable<msdyn_timeoffrequest> lk_msdyn_timeoffrequest_modifiedby {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("lk_msdyn_timeoffrequest_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_timeoffrequest_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_modifiedonbehalfby")]
    public IEnumerable<msdyn_timeoffrequest> lk_msdyn_timeoffrequest_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("lk_msdyn_timeoffrequest_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_timeoffrequest_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorder_createdby")]
    public IEnumerable<msdyn_workorder> lk_msdyn_workorder_createdby {
        get {
            return GetRelatedEntities<msdyn_workorder>("lk_msdyn_workorder_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorder_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorder_createdonbehalfby")]
    public IEnumerable<msdyn_workorder> lk_msdyn_workorder_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorder>("lk_msdyn_workorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorder_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorder_modifiedby")]
    public IEnumerable<msdyn_workorder> lk_msdyn_workorder_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workorder>("lk_msdyn_workorder_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorder_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorder_modifiedonbehalfby")]
    public IEnumerable<msdyn_workorder> lk_msdyn_workorder_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorder>("lk_msdyn_workorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorder_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderincident_createdby")]
    public IEnumerable<msdyn_workorderincident> lk_msdyn_workorderincident_createdby {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("lk_msdyn_workorderincident_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderincident_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderincident_createdonbehalfby")]
    public IEnumerable<msdyn_workorderincident> lk_msdyn_workorderincident_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("lk_msdyn_workorderincident_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderincident_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderincident_modifiedby")]
    public IEnumerable<msdyn_workorderincident> lk_msdyn_workorderincident_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("lk_msdyn_workorderincident_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderincident_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderincident_modifiedonbehalfby")]
    public IEnumerable<msdyn_workorderincident> lk_msdyn_workorderincident_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("lk_msdyn_workorderincident_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderincident_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderproduct_createdby")]
    public IEnumerable<msdyn_workorderproduct> lk_msdyn_workorderproduct_createdby {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("lk_msdyn_workorderproduct_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderproduct_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderproduct_createdonbehalfby")]
    public IEnumerable<msdyn_workorderproduct> lk_msdyn_workorderproduct_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("lk_msdyn_workorderproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderproduct_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderproduct_modifiedby")]
    public IEnumerable<msdyn_workorderproduct> lk_msdyn_workorderproduct_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("lk_msdyn_workorderproduct_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderproduct_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderproduct_modifiedonbehalfby")]
    public IEnumerable<msdyn_workorderproduct> lk_msdyn_workorderproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("lk_msdyn_workorderproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservice_createdby")]
    public IEnumerable<msdyn_workorderservice> lk_msdyn_workorderservice_createdby {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("lk_msdyn_workorderservice_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservice_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservice_createdonbehalfby")]
    public IEnumerable<msdyn_workorderservice> lk_msdyn_workorderservice_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("lk_msdyn_workorderservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservice_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservice_modifiedby")]
    public IEnumerable<msdyn_workorderservice> lk_msdyn_workorderservice_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("lk_msdyn_workorderservice_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservice_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservice_modifiedonbehalfby")]
    public IEnumerable<msdyn_workorderservice> lk_msdyn_workorderservice_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("lk_msdyn_workorderservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_createdby")]
    public IEnumerable<msdyn_workorderservicetask> lk_msdyn_workorderservicetask_createdby {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("lk_msdyn_workorderservicetask_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservicetask_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_createdonbehalfby")]
    public IEnumerable<msdyn_workorderservicetask> lk_msdyn_workorderservicetask_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("lk_msdyn_workorderservicetask_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservicetask_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_modifiedby")]
    public IEnumerable<msdyn_workorderservicetask> lk_msdyn_workorderservicetask_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("lk_msdyn_workorderservicetask_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservicetask_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_modifiedonbehalfby")]
    public IEnumerable<msdyn_workorderservicetask> lk_msdyn_workorderservicetask_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("lk_msdyn_workorderservicetask_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workorderservicetask_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_createdby")]
    public IEnumerable<msdyn_workordersubstatus> lk_msdyn_workordersubstatus_createdby {
        get {
            return GetRelatedEntities<msdyn_workordersubstatus>("lk_msdyn_workordersubstatus_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordersubstatus_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_createdonbehalfby")]
    public IEnumerable<msdyn_workordersubstatus> lk_msdyn_workordersubstatus_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workordersubstatus>("lk_msdyn_workordersubstatus_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordersubstatus_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_modifiedby")]
    public IEnumerable<msdyn_workordersubstatus> lk_msdyn_workordersubstatus_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workordersubstatus>("lk_msdyn_workordersubstatus_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordersubstatus_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_modifiedonbehalfby")]
    public IEnumerable<msdyn_workordersubstatus> lk_msdyn_workordersubstatus_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workordersubstatus>("lk_msdyn_workordersubstatus_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordersubstatus_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordertype_createdby")]
    public IEnumerable<msdyn_workordertype> lk_msdyn_workordertype_createdby {
        get {
            return GetRelatedEntities<msdyn_workordertype>("lk_msdyn_workordertype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordertype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordertype_createdonbehalfby")]
    public IEnumerable<msdyn_workordertype> lk_msdyn_workordertype_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workordertype>("lk_msdyn_workordertype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordertype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordertype_modifiedby")]
    public IEnumerable<msdyn_workordertype> lk_msdyn_workordertype_modifiedby {
        get {
            return GetRelatedEntities<msdyn_workordertype>("lk_msdyn_workordertype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordertype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_msdyn_workordertype_modifiedonbehalfby")]
    public IEnumerable<msdyn_workordertype> lk_msdyn_workordertype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_workordertype>("lk_msdyn_workordertype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_msdyn_workordertype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
    public IEnumerable<Opportunity> lk_opportunity_createdonbehalfby {
        get {
            return GetRelatedEntities<Opportunity>("lk_opportunity_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_opportunity_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
    public IEnumerable<Opportunity> lk_opportunity_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Opportunity>("lk_opportunity_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_opportunity_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_opportunitybase_createdby")]
    public IEnumerable<Opportunity> lk_opportunitybase_createdby {
        get {
            return GetRelatedEntities<Opportunity>("lk_opportunitybase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_opportunitybase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
    public IEnumerable<Opportunity> lk_opportunitybase_modifiedby {
        get {
            return GetRelatedEntities<Opportunity>("lk_opportunitybase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_opportunitybase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_aircarrier_createdby")]
    public IEnumerable<ovs_AirCarrier> lk_ovs_aircarrier_createdby {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("lk_ovs_aircarrier_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_aircarrier_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_aircarrier_createdonbehalfby")]
    public IEnumerable<ovs_AirCarrier> lk_ovs_aircarrier_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("lk_ovs_aircarrier_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_aircarrier_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_aircarrier_modifiedby")]
    public IEnumerable<ovs_AirCarrier> lk_ovs_aircarrier_modifiedby {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("lk_ovs_aircarrier_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_aircarrier_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_aircarrier_modifiedonbehalfby")]
    public IEnumerable<ovs_AirCarrier> lk_ovs_aircarrier_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("lk_ovs_aircarrier_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_aircarrier_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_finding_createdby")]
    public IEnumerable<ovs_Finding> lk_ovs_finding_createdby {
        get {
            return GetRelatedEntities<ovs_Finding>("lk_ovs_finding_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_finding_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_finding_createdonbehalfby")]
    public IEnumerable<ovs_Finding> lk_ovs_finding_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_Finding>("lk_ovs_finding_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_finding_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_finding_modifiedby")]
    public IEnumerable<ovs_Finding> lk_ovs_finding_modifiedby {
        get {
            return GetRelatedEntities<ovs_Finding>("lk_ovs_finding_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_finding_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_finding_modifiedonbehalfby")]
    public IEnumerable<ovs_Finding> lk_ovs_finding_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_Finding>("lk_ovs_finding_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_finding_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_lob_createdby")]
    public IEnumerable<ovs_lob> lk_ovs_lob_createdby {
        get {
            return GetRelatedEntities<ovs_lob>("lk_ovs_lob_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_lob_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_lob_createdonbehalfby")]
    public IEnumerable<ovs_lob> lk_ovs_lob_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_lob>("lk_ovs_lob_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_lob_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_lob_modifiedby")]
    public IEnumerable<ovs_lob> lk_ovs_lob_modifiedby {
        get {
            return GetRelatedEntities<ovs_lob>("lk_ovs_lob_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_lob_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_lob_modifiedonbehalfby")]
    public IEnumerable<ovs_lob> lk_ovs_lob_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_lob>("lk_ovs_lob_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_lob_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operation_createdby")]
    public IEnumerable<ovs_operation> lk_ovs_operation_createdby {
        get {
            return GetRelatedEntities<ovs_operation>("lk_ovs_operation_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operation_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operation_createdonbehalfby")]
    public IEnumerable<ovs_operation> lk_ovs_operation_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_operation>("lk_ovs_operation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operation_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operation_modifiedby")]
    public IEnumerable<ovs_operation> lk_ovs_operation_modifiedby {
        get {
            return GetRelatedEntities<ovs_operation>("lk_ovs_operation_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operation_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operation_modifiedonbehalfby")]
    public IEnumerable<ovs_operation> lk_ovs_operation_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_operation>("lk_ovs_operation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operationtype_createdby")]
    public IEnumerable<ovs_operationtype> lk_ovs_operationtype_createdby {
        get {
            return GetRelatedEntities<ovs_operationtype>("lk_ovs_operationtype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operationtype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operationtype_createdonbehalfby")]
    public IEnumerable<ovs_operationtype> lk_ovs_operationtype_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_operationtype>("lk_ovs_operationtype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operationtype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operationtype_modifiedby")]
    public IEnumerable<ovs_operationtype> lk_ovs_operationtype_modifiedby {
        get {
            return GetRelatedEntities<ovs_operationtype>("lk_ovs_operationtype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operationtype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_operationtype_modifiedonbehalfby")]
    public IEnumerable<ovs_operationtype> lk_ovs_operationtype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_operationtype>("lk_ovs_operationtype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_operationtype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_questionnaire_createdby")]
    public IEnumerable<ovs_Questionnaire> lk_ovs_questionnaire_createdby {
        get {
            return GetRelatedEntities<ovs_Questionnaire>("lk_ovs_questionnaire_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_questionnaire_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_questionnaire_createdonbehalfby")]
    public IEnumerable<ovs_Questionnaire> lk_ovs_questionnaire_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_Questionnaire>("lk_ovs_questionnaire_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_questionnaire_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_questionnaire_modifiedby")]
    public IEnumerable<ovs_Questionnaire> lk_ovs_questionnaire_modifiedby {
        get {
            return GetRelatedEntities<ovs_Questionnaire>("lk_ovs_questionnaire_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_questionnaire_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_questionnaire_modifiedonbehalfby")]
    public IEnumerable<ovs_Questionnaire> lk_ovs_questionnaire_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_Questionnaire>("lk_ovs_questionnaire_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_questionnaire_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_sitetype_createdby")]
    public IEnumerable<ovs_SiteType> lk_ovs_sitetype_createdby {
        get {
            return GetRelatedEntities<ovs_SiteType>("lk_ovs_sitetype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_sitetype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_sitetype_createdonbehalfby")]
    public IEnumerable<ovs_SiteType> lk_ovs_sitetype_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_SiteType>("lk_ovs_sitetype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_sitetype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_sitetype_modifiedby")]
    public IEnumerable<ovs_SiteType> lk_ovs_sitetype_modifiedby {
        get {
            return GetRelatedEntities<ovs_SiteType>("lk_ovs_sitetype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_sitetype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_sitetype_modifiedonbehalfby")]
    public IEnumerable<ovs_SiteType> lk_ovs_sitetype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_SiteType>("lk_ovs_sitetype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_sitetype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_tyrational_createdby")]
    public IEnumerable<ovs_TYRational> lk_ovs_tyrational_createdby {
        get {
            return GetRelatedEntities<ovs_TYRational>("lk_ovs_tyrational_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_tyrational_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_tyrational_createdonbehalfby")]
    public IEnumerable<ovs_TYRational> lk_ovs_tyrational_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_TYRational>("lk_ovs_tyrational_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_tyrational_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_tyrational_modifiedby")]
    public IEnumerable<ovs_TYRational> lk_ovs_tyrational_modifiedby {
        get {
            return GetRelatedEntities<ovs_TYRational>("lk_ovs_tyrational_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_tyrational_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_tyrational_modifiedonbehalfby")]
    public IEnumerable<ovs_TYRational> lk_ovs_tyrational_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_TYRational>("lk_ovs_tyrational_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_tyrational_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_createdby")]
    public IEnumerable<ovs_workorderservicetaskprovision> lk_ovs_workorderservicetaskprovision_createdby {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("lk_ovs_workorderservicetaskprovision_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_workorderservicetaskprovision_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_createdonbehalfby")]
    public IEnumerable<ovs_workorderservicetaskprovision> lk_ovs_workorderservicetaskprovision_createdonbehalfby {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("lk_ovs_workorderservicetaskprovision_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_workorderservicetaskprovision_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_modifiedby")]
    public IEnumerable<ovs_workorderservicetaskprovision> lk_ovs_workorderservicetaskprovision_modifiedby {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("lk_ovs_workorderservicetaskprovision_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_workorderservicetaskprovision_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby")]
    public IEnumerable<ovs_workorderservicetaskprovision> lk_ovs_workorderservicetaskprovision_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_phonecall_createdby")]
    public IEnumerable<PhoneCall> lk_phonecall_createdby {
        get {
            return GetRelatedEntities<PhoneCall>("lk_phonecall_createdby", null);
        }
        set {
            SetRelatedEntities("lk_phonecall_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
    public IEnumerable<PhoneCall> lk_phonecall_createdonbehalfby {
        get {
            return GetRelatedEntities<PhoneCall>("lk_phonecall_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_phonecall_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_phonecall_modifiedby")]
    public IEnumerable<PhoneCall> lk_phonecall_modifiedby {
        get {
            return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_phonecall_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
    public IEnumerable<PhoneCall> lk_phonecall_modifiedonbehalfby {
        get {
            return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_phonecall_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ppp_traveller_createdby")]
    public IEnumerable<ppp_Traveller> lk_ppp_traveller_createdby {
        get {
            return GetRelatedEntities<ppp_Traveller>("lk_ppp_traveller_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ppp_traveller_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ppp_traveller_createdonbehalfby")]
    public IEnumerable<ppp_Traveller> lk_ppp_traveller_createdonbehalfby {
        get {
            return GetRelatedEntities<ppp_Traveller>("lk_ppp_traveller_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ppp_traveller_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ppp_traveller_modifiedby")]
    public IEnumerable<ppp_Traveller> lk_ppp_traveller_modifiedby {
        get {
            return GetRelatedEntities<ppp_Traveller>("lk_ppp_traveller_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ppp_traveller_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ppp_traveller_modifiedonbehalfby")]
    public IEnumerable<ppp_Traveller> lk_ppp_traveller_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ppp_Traveller>("lk_ppp_traveller_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ppp_traveller_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_canceledby")]
    public IEnumerable<ProcessSession> lk_processsession_canceledby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_canceledby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_canceledby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_completedby")]
    public IEnumerable<ProcessSession> lk_processsession_completedby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_completedby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_completedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_createdby")]
    public IEnumerable<ProcessSession> lk_processsession_createdby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_createdby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_executedby")]
    public IEnumerable<ProcessSession> lk_processsession_executedby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_executedby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_executedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_modifiedby")]
    public IEnumerable<ProcessSession> lk_processsession_modifiedby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsession_startedby")]
    public IEnumerable<ProcessSession> lk_processsession_startedby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsession_startedby", null);
        }
        set {
            SetRelatedEntities("lk_processsession_startedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsessionbase_createdonbehalfby")]
    public IEnumerable<ProcessSession> lk_processsessionbase_createdonbehalfby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsessionbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_processsessionbase_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_processsessionbase_modifiedonbehalfby")]
    public IEnumerable<ProcessSession> lk_processsessionbase_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ProcessSession>("lk_processsessionbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_processsessionbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_product_createdonbehalfby")]
    public IEnumerable<Product> lk_product_createdonbehalfby {
        get {
            return GetRelatedEntities<Product>("lk_product_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_product_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_product_modifiedonbehalfby")]
    public IEnumerable<Product> lk_product_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Product>("lk_product_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_product_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_productbase_createdby")]
    public IEnumerable<Product> lk_productbase_createdby {
        get {
            return GetRelatedEntities<Product>("lk_productbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_productbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_productbase_modifiedby")]
    public IEnumerable<Product> lk_productbase_modifiedby {
        get {
            return GetRelatedEntities<Product>("lk_productbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_productbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_rclegislation_createdby")]
    public IEnumerable<qm_rclegislation> lk_qm_rclegislation_createdby {
        get {
            return GetRelatedEntities<qm_rclegislation>("lk_qm_rclegislation_createdby", null);
        }
        set {
            SetRelatedEntities("lk_qm_rclegislation_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_rclegislation_createdonbehalfby")]
    public IEnumerable<qm_rclegislation> lk_qm_rclegislation_createdonbehalfby {
        get {
            return GetRelatedEntities<qm_rclegislation>("lk_qm_rclegislation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_rclegislation_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_rclegislation_modifiedby")]
    public IEnumerable<qm_rclegislation> lk_qm_rclegislation_modifiedby {
        get {
            return GetRelatedEntities<qm_rclegislation>("lk_qm_rclegislation_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_qm_rclegislation_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_rclegislation_modifiedonbehalfby")]
    public IEnumerable<qm_rclegislation> lk_qm_rclegislation_modifiedonbehalfby {
        get {
            return GetRelatedEntities<qm_rclegislation>("lk_qm_rclegislation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_rclegislation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_createdby")]
    public IEnumerable<qm_tylegislationcharacteristic> lk_qm_tylegislationcharacteristic_createdby {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("lk_qm_tylegislationcharacteristic_createdby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationcharacteristic_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_createdonbehalfby")]
    public IEnumerable<qm_tylegislationcharacteristic> lk_qm_tylegislationcharacteristic_createdonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("lk_qm_tylegislationcharacteristic_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationcharacteristic_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_modifiedby")]
    public IEnumerable<qm_tylegislationcharacteristic> lk_qm_tylegislationcharacteristic_modifiedby {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("lk_qm_tylegislationcharacteristic_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationcharacteristic_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_modifiedonbehalfby")]
    public IEnumerable<qm_tylegislationcharacteristic> lk_qm_tylegislationcharacteristic_modifiedonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("lk_qm_tylegislationcharacteristic_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationcharacteristic_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationsource_createdby")]
    public IEnumerable<qm_tylegislationsource> lk_qm_tylegislationsource_createdby {
        get {
            return GetRelatedEntities<qm_tylegislationsource>("lk_qm_tylegislationsource_createdby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationsource_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationsource_createdonbehalfby")]
    public IEnumerable<qm_tylegislationsource> lk_qm_tylegislationsource_createdonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationsource>("lk_qm_tylegislationsource_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationsource_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationsource_modifiedby")]
    public IEnumerable<qm_tylegislationsource> lk_qm_tylegislationsource_modifiedby {
        get {
            return GetRelatedEntities<qm_tylegislationsource>("lk_qm_tylegislationsource_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationsource_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationsource_modifiedonbehalfby")]
    public IEnumerable<qm_tylegislationsource> lk_qm_tylegislationsource_modifiedonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationsource>("lk_qm_tylegislationsource_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationsource_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationtype_createdby")]
    public IEnumerable<qm_tylegislationtype> lk_qm_tylegislationtype_createdby {
        get {
            return GetRelatedEntities<qm_tylegislationtype>("lk_qm_tylegislationtype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationtype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationtype_createdonbehalfby")]
    public IEnumerable<qm_tylegislationtype> lk_qm_tylegislationtype_createdonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationtype>("lk_qm_tylegislationtype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationtype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationtype_modifiedby")]
    public IEnumerable<qm_tylegislationtype> lk_qm_tylegislationtype_modifiedby {
        get {
            return GetRelatedEntities<qm_tylegislationtype>("lk_qm_tylegislationtype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationtype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_qm_tylegislationtype_modifiedonbehalfby")]
    public IEnumerable<qm_tylegislationtype> lk_qm_tylegislationtype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<qm_tylegislationtype>("lk_qm_tylegislationtype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_qm_tylegislationtype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_queue_createdonbehalfby")]
    public IEnumerable<Queue> lk_queue_createdonbehalfby {
        get {
            return GetRelatedEntities<Queue>("lk_queue_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_queue_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_queue_modifiedonbehalfby")]
    public IEnumerable<Queue> lk_queue_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Queue>("lk_queue_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_queue_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_queuebase_createdby")]
    public IEnumerable<Queue> lk_queuebase_createdby {
        get {
            return GetRelatedEntities<Queue>("lk_queuebase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_queuebase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_queuebase_modifiedby")]
    public IEnumerable<Queue> lk_queuebase_modifiedby {
        get {
            return GetRelatedEntities<Queue>("lk_queuebase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_queuebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_quote_createdonbehalfby")]
    public IEnumerable<Quote> lk_quote_createdonbehalfby {
        get {
            return GetRelatedEntities<Quote>("lk_quote_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_quote_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_quote_modifiedonbehalfby")]
    public IEnumerable<Quote> lk_quote_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Quote>("lk_quote_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_quote_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_quotebase_createdby")]
    public IEnumerable<Quote> lk_quotebase_createdby {
        get {
            return GetRelatedEntities<Quote>("lk_quotebase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_quotebase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_quotebase_modifiedby")]
    public IEnumerable<Quote> lk_quotebase_modifiedby {
        get {
            return GetRelatedEntities<Quote>("lk_quotebase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_quotebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_recurringappointmentmaster_createdby")]
    public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_createdby {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_createdby", null);
        }
        set {
            SetRelatedEntities("lk_recurringappointmentmaster_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_recurringappointmentmaster_createdonbehalfby")]
    public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_createdonbehalfby {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_recurringappointmentmaster_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedby")]
    public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_modifiedby {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_recurringappointmentmaster_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedonbehalfby")]
    public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_modifiedonbehalfby {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesliterature_createdonbehalfby")]
    public IEnumerable<SalesLiterature> lk_salesliterature_createdonbehalfby {
        get {
            return GetRelatedEntities<SalesLiterature>("lk_salesliterature_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_salesliterature_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesliterature_modifiedonbehalfby")]
    public IEnumerable<SalesLiterature> lk_salesliterature_modifiedonbehalfby {
        get {
            return GetRelatedEntities<SalesLiterature>("lk_salesliterature_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_salesliterature_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesliteraturebase_createdby")]
    public IEnumerable<SalesLiterature> lk_salesliteraturebase_createdby {
        get {
            return GetRelatedEntities<SalesLiterature>("lk_salesliteraturebase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_salesliteraturebase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesliteraturebase_modifiedby")]
    public IEnumerable<SalesLiterature> lk_salesliteraturebase_modifiedby {
        get {
            return GetRelatedEntities<SalesLiterature>("lk_salesliteraturebase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_salesliteraturebase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesorder_createdonbehalfby")]
    public IEnumerable<SalesOrder> lk_salesorder_createdonbehalfby {
        get {
            return GetRelatedEntities<SalesOrder>("lk_salesorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_salesorder_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesorder_modifiedonbehalfby")]
    public IEnumerable<SalesOrder> lk_salesorder_modifiedonbehalfby {
        get {
            return GetRelatedEntities<SalesOrder>("lk_salesorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_salesorder_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesorderbase_createdby")]
    public IEnumerable<SalesOrder> lk_salesorderbase_createdby {
        get {
            return GetRelatedEntities<SalesOrder>("lk_salesorderbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_salesorderbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_salesorderbase_modifiedby")]
    public IEnumerable<SalesOrder> lk_salesorderbase_modifiedby {
        get {
            return GetRelatedEntities<SalesOrder>("lk_salesorderbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_salesorderbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_serviceappointment_createdby")]
    public IEnumerable<ServiceAppointment> lk_serviceappointment_createdby {
        get {
            return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_createdby", null);
        }
        set {
            SetRelatedEntities("lk_serviceappointment_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_serviceappointment_createdonbehalfby")]
    public IEnumerable<ServiceAppointment> lk_serviceappointment_createdonbehalfby {
        get {
            return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_serviceappointment_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_serviceappointment_modifiedby")]
    public IEnumerable<ServiceAppointment> lk_serviceappointment_modifiedby {
        get {
            return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_serviceappointment_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_serviceappointment_modifiedonbehalfby")]
    public IEnumerable<ServiceAppointment> lk_serviceappointment_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_serviceappointment_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_syncerrorbase_createdby")]
    public IEnumerable<SyncError> lk_syncerrorbase_createdby {
        get {
            return GetRelatedEntities<SyncError>("lk_syncerrorbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_syncerrorbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_syncerrorbase_createdonbehalfby")]
    public IEnumerable<SyncError> lk_syncerrorbase_createdonbehalfby {
        get {
            return GetRelatedEntities<SyncError>("lk_syncerrorbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_syncerrorbase_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_syncerrorbase_modifiedby")]
    public IEnumerable<SyncError> lk_syncerrorbase_modifiedby {
        get {
            return GetRelatedEntities<SyncError>("lk_syncerrorbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_syncerrorbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_syncerrorbase_modifiedonbehalfby")]
    public IEnumerable<SyncError> lk_syncerrorbase_modifiedonbehalfby {
        get {
            return GetRelatedEntities<SyncError>("lk_syncerrorbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_syncerrorbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_task_createdby")]
    public IEnumerable<Task> lk_task_createdby {
        get {
            return GetRelatedEntities<Task>("lk_task_createdby", null);
        }
        set {
            SetRelatedEntities("lk_task_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_task_createdonbehalfby")]
    public IEnumerable<Task> lk_task_createdonbehalfby {
        get {
            return GetRelatedEntities<Task>("lk_task_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_task_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_task_modifiedby")]
    public IEnumerable<Task> lk_task_modifiedby {
        get {
            return GetRelatedEntities<Task>("lk_task_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_task_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
    public IEnumerable<Task> lk_task_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Task>("lk_task_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_task_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_province_createdby")]
    public IEnumerable<tc_Province> lk_tc_province_createdby {
        get {
            return GetRelatedEntities<tc_Province>("lk_tc_province_createdby", null);
        }
        set {
            SetRelatedEntities("lk_tc_province_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_province_createdonbehalfby")]
    public IEnumerable<tc_Province> lk_tc_province_createdonbehalfby {
        get {
            return GetRelatedEntities<tc_Province>("lk_tc_province_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_province_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_province_modifiedby")]
    public IEnumerable<tc_Province> lk_tc_province_modifiedby {
        get {
            return GetRelatedEntities<tc_Province>("lk_tc_province_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_tc_province_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_province_modifiedonbehalfby")]
    public IEnumerable<tc_Province> lk_tc_province_modifiedonbehalfby {
        get {
            return GetRelatedEntities<tc_Province>("lk_tc_province_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_province_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_createdby")]
    public IEnumerable<tc_TCFiscalPeriod> lk_tc_tcfiscalperiod_createdby {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("lk_tc_tcfiscalperiod_createdby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalperiod_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_createdonbehalfby")]
    public IEnumerable<tc_TCFiscalPeriod> lk_tc_tcfiscalperiod_createdonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("lk_tc_tcfiscalperiod_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalperiod_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_modifiedby")]
    public IEnumerable<tc_TCFiscalPeriod> lk_tc_tcfiscalperiod_modifiedby {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("lk_tc_tcfiscalperiod_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalperiod_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_modifiedonbehalfby")]
    public IEnumerable<tc_TCFiscalPeriod> lk_tc_tcfiscalperiod_modifiedonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("lk_tc_tcfiscalperiod_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalperiod_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_createdby")]
    public IEnumerable<tc_TCFiscalQuarter> lk_tc_tcfiscalquarter_createdby {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("lk_tc_tcfiscalquarter_createdby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalquarter_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_createdonbehalfby")]
    public IEnumerable<tc_TCFiscalQuarter> lk_tc_tcfiscalquarter_createdonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("lk_tc_tcfiscalquarter_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalquarter_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_modifiedby")]
    public IEnumerable<tc_TCFiscalQuarter> lk_tc_tcfiscalquarter_modifiedby {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("lk_tc_tcfiscalquarter_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalquarter_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_modifiedonbehalfby")]
    public IEnumerable<tc_TCFiscalQuarter> lk_tc_tcfiscalquarter_modifiedonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("lk_tc_tcfiscalquarter_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalquarter_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalyear_createdby")]
    public IEnumerable<tc_TCFiscalYear> lk_tc_tcfiscalyear_createdby {
        get {
            return GetRelatedEntities<tc_TCFiscalYear>("lk_tc_tcfiscalyear_createdby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalyear_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalyear_createdonbehalfby")]
    public IEnumerable<tc_TCFiscalYear> lk_tc_tcfiscalyear_createdonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalYear>("lk_tc_tcfiscalyear_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalyear_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalyear_modifiedby")]
    public IEnumerable<tc_TCFiscalYear> lk_tc_tcfiscalyear_modifiedby {
        get {
            return GetRelatedEntities<tc_TCFiscalYear>("lk_tc_tcfiscalyear_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalyear_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcfiscalyear_modifiedonbehalfby")]
    public IEnumerable<tc_TCFiscalYear> lk_tc_tcfiscalyear_modifiedonbehalfby {
        get {
            return GetRelatedEntities<tc_TCFiscalYear>("lk_tc_tcfiscalyear_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcfiscalyear_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcmonth_createdby")]
    public IEnumerable<tc_TCMonth> lk_tc_tcmonth_createdby {
        get {
            return GetRelatedEntities<tc_TCMonth>("lk_tc_tcmonth_createdby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcmonth_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcmonth_createdonbehalfby")]
    public IEnumerable<tc_TCMonth> lk_tc_tcmonth_createdonbehalfby {
        get {
            return GetRelatedEntities<tc_TCMonth>("lk_tc_tcmonth_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcmonth_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcmonth_modifiedby")]
    public IEnumerable<tc_TCMonth> lk_tc_tcmonth_modifiedby {
        get {
            return GetRelatedEntities<tc_TCMonth>("lk_tc_tcmonth_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcmonth_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_tc_tcmonth_modifiedonbehalfby")]
    public IEnumerable<tc_TCMonth> lk_tc_tcmonth_modifiedonbehalfby {
        get {
            return GetRelatedEntities<tc_TCMonth>("lk_tc_tcmonth_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_tc_tcmonth_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_territory_createdonbehalfby")]
    public IEnumerable<Territory> lk_territory_createdonbehalfby {
        get {
            return GetRelatedEntities<Territory>("lk_territory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_territory_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_territory_modifiedonbehalfby")]
    public IEnumerable<Territory> lk_territory_modifiedonbehalfby {
        get {
            return GetRelatedEntities<Territory>("lk_territory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_territory_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_territorybase_createdby")]
    public IEnumerable<Territory> lk_territorybase_createdby {
        get {
            return GetRelatedEntities<Territory>("lk_territorybase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_territorybase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_territorybase_modifiedby")]
    public IEnumerable<Territory> lk_territorybase_modifiedby {
        get {
            return GetRelatedEntities<Territory>("lk_territorybase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_territorybase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_provisioncategory_createdby")]
    public IEnumerable<ts_ProvisionCategory> lk_ts_provisioncategory_createdby {
        get {
            return GetRelatedEntities<ts_ProvisionCategory>("lk_ts_provisioncategory_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_provisioncategory_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_provisioncategory_createdonbehalfby")]
    public IEnumerable<ts_ProvisionCategory> lk_ts_provisioncategory_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_ProvisionCategory>("lk_ts_provisioncategory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_provisioncategory_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_provisioncategory_modifiedby")]
    public IEnumerable<ts_ProvisionCategory> lk_ts_provisioncategory_modifiedby {
        get {
            return GetRelatedEntities<ts_ProvisionCategory>("lk_ts_provisioncategory_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_provisioncategory_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_provisioncategory_modifiedonbehalfby")]
    public IEnumerable<ts_ProvisionCategory> lk_ts_provisioncategory_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_ProvisionCategory>("lk_ts_provisioncategory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_provisioncategory_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_questionnaireversion_createdby")]
    public IEnumerable<ts_questionnaireversion> lk_ts_questionnaireversion_createdby {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("lk_ts_questionnaireversion_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_questionnaireversion_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_questionnaireversion_createdonbehalfby")]
    public IEnumerable<ts_questionnaireversion> lk_ts_questionnaireversion_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("lk_ts_questionnaireversion_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_questionnaireversion_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_questionnaireversion_modifiedby")]
    public IEnumerable<ts_questionnaireversion> lk_ts_questionnaireversion_modifiedby {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("lk_ts_questionnaireversion_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_questionnaireversion_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_questionnaireversion_modifiedonbehalfby")]
    public IEnumerable<ts_questionnaireversion> lk_ts_questionnaireversion_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("lk_ts_questionnaireversion_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_questionnaireversion_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_request_createdby")]
    public IEnumerable<ts_request> lk_ts_request_createdby {
        get {
            return GetRelatedEntities<ts_request>("lk_ts_request_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_request_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_request_createdonbehalfby")]
    public IEnumerable<ts_request> lk_ts_request_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_request>("lk_ts_request_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_request_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_request_modifiedby")]
    public IEnumerable<ts_request> lk_ts_request_modifiedby {
        get {
            return GetRelatedEntities<ts_request>("lk_ts_request_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_request_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_request_modifiedonbehalfby")]
    public IEnumerable<ts_request> lk_ts_request_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_request>("lk_ts_request_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_request_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_tradename_createdby")]
    public IEnumerable<ts_tradename> lk_ts_tradename_createdby {
        get {
            return GetRelatedEntities<ts_tradename>("lk_ts_tradename_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_tradename_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_tradename_createdonbehalfby")]
    public IEnumerable<ts_tradename> lk_ts_tradename_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_tradename>("lk_ts_tradename_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_tradename_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_tradename_modifiedby")]
    public IEnumerable<ts_tradename> lk_ts_tradename_modifiedby {
        get {
            return GetRelatedEntities<ts_tradename>("lk_ts_tradename_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_tradename_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_tradename_modifiedonbehalfby")]
    public IEnumerable<ts_tradename> lk_ts_tradename_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_tradename>("lk_ts_tradename_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_tradename_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workorderactivitytype_createdby")]
    public IEnumerable<ts_workorderactivitytype> lk_ts_workorderactivitytype_createdby {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("lk_ts_workorderactivitytype_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workorderactivitytype_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workorderactivitytype_createdonbehalfby")]
    public IEnumerable<ts_workorderactivitytype> lk_ts_workorderactivitytype_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("lk_ts_workorderactivitytype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workorderactivitytype_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workorderactivitytype_modifiedby")]
    public IEnumerable<ts_workorderactivitytype> lk_ts_workorderactivitytype_modifiedby {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("lk_ts_workorderactivitytype_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workorderactivitytype_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workorderactivitytype_modifiedonbehalfby")]
    public IEnumerable<ts_workorderactivitytype> lk_ts_workorderactivitytype_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("lk_ts_workorderactivitytype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workorderactivitytype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workordercreationwizard_createdby")]
    public IEnumerable<ts_workordercreationwizard> lk_ts_workordercreationwizard_createdby {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("lk_ts_workordercreationwizard_createdby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workordercreationwizard_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workordercreationwizard_createdonbehalfby")]
    public IEnumerable<ts_workordercreationwizard> lk_ts_workordercreationwizard_createdonbehalfby {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("lk_ts_workordercreationwizard_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workordercreationwizard_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workordercreationwizard_modifiedby")]
    public IEnumerable<ts_workordercreationwizard> lk_ts_workordercreationwizard_modifiedby {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("lk_ts_workordercreationwizard_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workordercreationwizard_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_ts_workordercreationwizard_modifiedonbehalfby")]
    public IEnumerable<ts_workordercreationwizard> lk_ts_workordercreationwizard_modifiedonbehalfby {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("lk_ts_workordercreationwizard_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_ts_workordercreationwizard_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_createdby")]
    public IEnumerable<msdyn_bookingalert> msdyn_bookingalert_systemuser_createdby {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_bookingalert_systemuser_createdby", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_systemuser_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_createdonbehalfby")]
    public IEnumerable<msdyn_bookingalert> msdyn_bookingalert_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_bookingalert_systemuser_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_systemuser_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_modifiedby")]
    public IEnumerable<msdyn_bookingalert> msdyn_bookingalert_systemuser_modifiedby {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_bookingalert_systemuser_modifiedby", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_systemuser_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_modifiedonbehalfby")]
    public IEnumerable<msdyn_bookingalert> msdyn_bookingalert_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_bookingalert_systemuser_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_systemuser_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_owninguser")]
    public IEnumerable<msdyn_bookingalert> msdyn_bookingalert_systemuser_owninguser {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_bookingalert_systemuser_owninguser", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_systemuser_owninguser", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy")]
    public IEnumerable<msdyn_purchaseorder> msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy", null);
        }
        set {
            SetRelatedEntities("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_systemuser_msdyn_purchaseorder_OrderedBy")]
    public IEnumerable<msdyn_purchaseorder> msdyn_systemuser_msdyn_purchaseorder_OrderedBy {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_systemuser_msdyn_purchaseorder_OrderedBy", null);
        }
        set {
            SetRelatedEntities("msdyn_systemuser_msdyn_purchaseorder_OrderedBy", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_systemuser_msdyn_rma_ApprovedBy")]
    public IEnumerable<msdyn_rma> msdyn_systemuser_msdyn_rma_ApprovedBy {
        get {
            return GetRelatedEntities<msdyn_rma>("msdyn_systemuser_msdyn_rma_ApprovedBy", null);
        }
        set {
            SetRelatedEntities("msdyn_systemuser_msdyn_rma_ApprovedBy", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_systemuser_msdyn_timeoffrequest_Approvedby")]
    public IEnumerable<msdyn_timeoffrequest> msdyn_systemuser_msdyn_timeoffrequest_Approvedby {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("msdyn_systemuser_msdyn_timeoffrequest_Approvedby", null);
        }
        set {
            SetRelatedEntities("msdyn_systemuser_msdyn_timeoffrequest_Approvedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_systemuser_msdyn_workorder_ClosedBy")]
    public IEnumerable<msdyn_workorder> msdyn_systemuser_msdyn_workorder_ClosedBy {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_systemuser_msdyn_workorder_ClosedBy", null);
        }
        set {
            SetRelatedEntities("msdyn_systemuser_msdyn_workorder_ClosedBy", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_systemuser_createdby")]
    public IEnumerable<msfp_alert> msfp_alert_systemuser_createdby {
        get {
            return GetRelatedEntities<msfp_alert>("msfp_alert_systemuser_createdby", null);
        }
        set {
            SetRelatedEntities("msfp_alert_systemuser_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_systemuser_createdonbehalfby")]
    public IEnumerable<msfp_alert> msfp_alert_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntities<msfp_alert>("msfp_alert_systemuser_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("msfp_alert_systemuser_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_systemuser_modifiedby")]
    public IEnumerable<msfp_alert> msfp_alert_systemuser_modifiedby {
        get {
            return GetRelatedEntities<msfp_alert>("msfp_alert_systemuser_modifiedby", null);
        }
        set {
            SetRelatedEntities("msfp_alert_systemuser_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_systemuser_modifiedonbehalfby")]
    public IEnumerable<msfp_alert> msfp_alert_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntities<msfp_alert>("msfp_alert_systemuser_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("msfp_alert_systemuser_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_systemuser_owninguser")]
    public IEnumerable<msfp_alert> msfp_alert_systemuser_owninguser {
        get {
            return GetRelatedEntities<msfp_alert>("msfp_alert_systemuser_owninguser", null);
        }
        set {
            SetRelatedEntities("msfp_alert_systemuser_owninguser", null, value);
        }
    }
    
    [RelationshipSchemaName("opportunity_owning_user")]
    public IEnumerable<Opportunity> opportunity_owning_user {
        get {
            return GetRelatedEntities<Opportunity>("opportunity_owning_user", null);
        }
        set {
            SetRelatedEntities("opportunity_owning_user", null, value);
        }
    }
    
    [RelationshipSchemaName("queue_primary_user")]
    public IEnumerable<Queue> queue_primary_user {
        get {
            return GetRelatedEntities<Queue>("queue_primary_user", null);
        }
        set {
            SetRelatedEntities("queue_primary_user", null, value);
        }
    }
    
    [AttributeLogicalName("queueid")]
    [RelationshipSchemaName("queue_system_user")]
    public Queue queue_system_user {
        get {
            return GetRelatedEntity<Queue>("queue_system_user", null);
        }
        set {
            SetRelatedEntity("queue_system_user", null, value);
        }
    }
    
    [RelationshipSchemaName("queuemembership_association")]
    public IEnumerable<Queue> queuemembership_association {
        get {
            return GetRelatedEntities<Queue>("queuemembership_association", null);
        }
        set {
            SetRelatedEntities("queuemembership_association", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_accounts")]
    public IEnumerable<Account> system_user_accounts {
        get {
            return GetRelatedEntities<Account>("system_user_accounts", null);
        }
        set {
            SetRelatedEntities("system_user_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_activity_parties")]
    public IEnumerable<ActivityParty> system_user_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("system_user_activity_parties", null);
        }
        set {
            SetRelatedEntities("system_user_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_contacts")]
    public IEnumerable<Contact> system_user_contacts {
        get {
            return GetRelatedEntities<Contact>("system_user_contacts", null);
        }
        set {
            SetRelatedEntities("system_user_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_incidents")]
    public IEnumerable<Incident> system_user_incidents {
        get {
            return GetRelatedEntities<Incident>("system_user_incidents", null);
        }
        set {
            SetRelatedEntities("system_user_incidents", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_invoices")]
    public IEnumerable<Invoice> system_user_invoices {
        get {
            return GetRelatedEntities<Invoice>("system_user_invoices", null);
        }
        set {
            SetRelatedEntities("system_user_invoices", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_orders")]
    public IEnumerable<SalesOrder> system_user_orders {
        get {
            return GetRelatedEntities<SalesOrder>("system_user_orders", null);
        }
        set {
            SetRelatedEntities("system_user_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_quotes")]
    public IEnumerable<Quote> system_user_quotes {
        get {
            return GetRelatedEntities<Quote>("system_user_quotes", null);
        }
        set {
            SetRelatedEntities("system_user_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_sales_literature")]
    public IEnumerable<SalesLiterature> system_user_sales_literature {
        get {
            return GetRelatedEntities<SalesLiterature>("system_user_sales_literature", null);
        }
        set {
            SetRelatedEntities("system_user_sales_literature", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_service_appointments")]
    public IEnumerable<ServiceAppointment> system_user_service_appointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("system_user_service_appointments", null);
        }
        set {
            SetRelatedEntities("system_user_service_appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_service_contracts")]
    public IEnumerable<Contract> system_user_service_contracts {
        get {
            return GetRelatedEntities<Contract>("system_user_service_contracts", null);
        }
        set {
            SetRelatedEntities("system_user_service_contracts", null, value);
        }
    }
    
    [RelationshipSchemaName("system_user_territories")]
    public IEnumerable<Territory> system_user_territories {
        get {
            return GetRelatedEntities<Territory>("system_user_territories", null);
        }
        set {
            SetRelatedEntities("system_user_territories", null, value);
        }
    }
    
    [RelationshipSchemaName("systemuser_bookableresource_UserId")]
    public IEnumerable<BookableResource> systemuser_bookableresource_UserId {
        get {
            return GetRelatedEntities<BookableResource>("systemuser_bookableresource_UserId", null);
        }
        set {
            SetRelatedEntities("systemuser_bookableresource_UserId", null, value);
        }
    }
    
    [AttributeLogicalName("territoryid")]
    [RelationshipSchemaName("territory_system_users")]
    public Territory territory_system_users {
        get {
            return GetRelatedEntity<Territory>("territory_system_users", null);
        }
        set {
            SetRelatedEntity("territory_system_users", null, value);
        }
    }
    
    [RelationshipSchemaName("user_accounts")]
    public IEnumerable<Account> user_accounts {
        get {
            return GetRelatedEntities<Account>("user_accounts", null);
        }
        set {
            SetRelatedEntities("user_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("user_activity")]
    public IEnumerable<ActivityPointer> user_activity {
        get {
            return GetRelatedEntities<ActivityPointer>("user_activity", null);
        }
        set {
            SetRelatedEntities("user_activity", null, value);
        }
    }
    
    [RelationshipSchemaName("user_appointment")]
    public IEnumerable<Appointment> user_appointment {
        get {
            return GetRelatedEntities<Appointment>("user_appointment", null);
        }
        set {
            SetRelatedEntities("user_appointment", null, value);
        }
    }
    
    [RelationshipSchemaName("user_bookableresource")]
    public IEnumerable<BookableResource> user_bookableresource {
        get {
            return GetRelatedEntities<BookableResource>("user_bookableresource", null);
        }
        set {
            SetRelatedEntities("user_bookableresource", null, value);
        }
    }
    
    [RelationshipSchemaName("user_bookableresourcebooking")]
    public IEnumerable<BookableResourceBooking> user_bookableresourcebooking {
        get {
            return GetRelatedEntities<BookableResourceBooking>("user_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntities("user_bookableresourcebooking", null, value);
        }
    }
    
    [RelationshipSchemaName("user_bulkoperationlog")]
    public IEnumerable<BulkOperationLog> user_bulkoperationlog {
        get {
            return GetRelatedEntities<BulkOperationLog>("user_bulkoperationlog", null);
        }
        set {
            SetRelatedEntities("user_bulkoperationlog", null, value);
        }
    }
    
    [RelationshipSchemaName("user_campaignactivity")]
    public IEnumerable<CampaignActivity> user_campaignactivity {
        get {
            return GetRelatedEntities<CampaignActivity>("user_campaignactivity", null);
        }
        set {
            SetRelatedEntities("user_campaignactivity", null, value);
        }
    }
    
    [RelationshipSchemaName("user_campaignresponse")]
    public IEnumerable<CampaignResponse> user_campaignresponse {
        get {
            return GetRelatedEntities<CampaignResponse>("user_campaignresponse", null);
        }
        set {
            SetRelatedEntities("user_campaignresponse", null, value);
        }
    }
    
    [RelationshipSchemaName("user_contractdetail")]
    public IEnumerable<ContractDetail> user_contractdetail {
        get {
            return GetRelatedEntities<ContractDetail>("user_contractdetail", null);
        }
        set {
            SetRelatedEntities("user_contractdetail", null, value);
        }
    }
    
    [RelationshipSchemaName("user_email")]
    public IEnumerable<Email> user_email {
        get {
            return GetRelatedEntities<Email>("user_email", null);
        }
        set {
            SetRelatedEntities("user_email", null, value);
        }
    }
    
    [RelationshipSchemaName("user_entitlement")]
    public IEnumerable<Entitlement> user_entitlement {
        get {
            return GetRelatedEntities<Entitlement>("user_entitlement", null);
        }
        set {
            SetRelatedEntities("user_entitlement", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_agreement")]
    public IEnumerable<msdyn_agreement> user_msdyn_agreement {
        get {
            return GetRelatedEntities<msdyn_agreement>("user_msdyn_agreement", null);
        }
        set {
            SetRelatedEntities("user_msdyn_agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_agreementbookingproduct")]
    public IEnumerable<msdyn_agreementbookingproduct> user_msdyn_agreementbookingproduct {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("user_msdyn_agreementbookingproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_agreementbookingproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_agreementbookingservice")]
    public IEnumerable<msdyn_agreementbookingservice> user_msdyn_agreementbookingservice {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("user_msdyn_agreementbookingservice", null);
        }
        set {
            SetRelatedEntities("user_msdyn_agreementbookingservice", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_agreementinvoiceproduct")]
    public IEnumerable<msdyn_agreementinvoiceproduct> user_msdyn_agreementinvoiceproduct {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("user_msdyn_agreementinvoiceproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_agreementinvoiceproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_bookingjournal")]
    public IEnumerable<msdyn_bookingjournal> user_msdyn_bookingjournal {
        get {
            return GetRelatedEntities<msdyn_bookingjournal>("user_msdyn_bookingjournal", null);
        }
        set {
            SetRelatedEntities("user_msdyn_bookingjournal", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_customerasset")]
    public IEnumerable<msdyn_customerasset> user_msdyn_customerasset {
        get {
            return GetRelatedEntities<msdyn_customerasset>("user_msdyn_customerasset", null);
        }
        set {
            SetRelatedEntities("user_msdyn_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_customerassetcategory")]
    public IEnumerable<msdyn_customerassetcategory> user_msdyn_customerassetcategory {
        get {
            return GetRelatedEntities<msdyn_customerassetcategory>("user_msdyn_customerassetcategory", null);
        }
        set {
            SetRelatedEntities("user_msdyn_customerassetcategory", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_functionallocation")]
    public IEnumerable<msdyn_FunctionalLocation> user_msdyn_functionallocation {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("user_msdyn_functionallocation", null);
        }
        set {
            SetRelatedEntities("user_msdyn_functionallocation", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_incidenttype")]
    public IEnumerable<msdyn_incidenttype> user_msdyn_incidenttype {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("user_msdyn_incidenttype", null);
        }
        set {
            SetRelatedEntities("user_msdyn_incidenttype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_incidenttypeproduct")]
    public IEnumerable<msdyn_incidenttypeproduct> user_msdyn_incidenttypeproduct {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("user_msdyn_incidenttypeproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_incidenttypeproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_incidenttypeservice")]
    public IEnumerable<msdyn_incidenttypeservice> user_msdyn_incidenttypeservice {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("user_msdyn_incidenttypeservice", null);
        }
        set {
            SetRelatedEntities("user_msdyn_incidenttypeservice", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_incidenttypeservicetask")]
    public IEnumerable<msdyn_incidenttypeservicetask> user_msdyn_incidenttypeservicetask {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("user_msdyn_incidenttypeservicetask", null);
        }
        set {
            SetRelatedEntities("user_msdyn_incidenttypeservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_orderinvoicingproduct")]
    public IEnumerable<msdyn_orderinvoicingproduct> user_msdyn_orderinvoicingproduct {
        get {
            return GetRelatedEntities<msdyn_orderinvoicingproduct>("user_msdyn_orderinvoicingproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_orderinvoicingproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_propertyassetassociation")]
    public IEnumerable<msdyn_propertyassetassociation> user_msdyn_propertyassetassociation {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("user_msdyn_propertyassetassociation", null);
        }
        set {
            SetRelatedEntities("user_msdyn_propertyassetassociation", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_propertylog")]
    public IEnumerable<msdyn_propertylog> user_msdyn_propertylog {
        get {
            return GetRelatedEntities<msdyn_propertylog>("user_msdyn_propertylog", null);
        }
        set {
            SetRelatedEntities("user_msdyn_propertylog", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_purchaseorder")]
    public IEnumerable<msdyn_purchaseorder> user_msdyn_purchaseorder {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("user_msdyn_purchaseorder", null);
        }
        set {
            SetRelatedEntities("user_msdyn_purchaseorder", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_purchaseorderproduct")]
    public IEnumerable<msdyn_purchaseorderproduct> user_msdyn_purchaseorderproduct {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("user_msdyn_purchaseorderproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_purchaseorderproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_quoteinvoicingproduct")]
    public IEnumerable<msdyn_quoteinvoicingproduct> user_msdyn_quoteinvoicingproduct {
        get {
            return GetRelatedEntities<msdyn_quoteinvoicingproduct>("user_msdyn_quoteinvoicingproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_quoteinvoicingproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_rma")]
    public IEnumerable<msdyn_rma> user_msdyn_rma {
        get {
            return GetRelatedEntities<msdyn_rma>("user_msdyn_rma", null);
        }
        set {
            SetRelatedEntities("user_msdyn_rma", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_servicetasktype")]
    public IEnumerable<msdyn_servicetasktype> user_msdyn_servicetasktype {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("user_msdyn_servicetasktype", null);
        }
        set {
            SetRelatedEntities("user_msdyn_servicetasktype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_timeoffrequest")]
    public IEnumerable<msdyn_timeoffrequest> user_msdyn_timeoffrequest {
        get {
            return GetRelatedEntities<msdyn_timeoffrequest>("user_msdyn_timeoffrequest", null);
        }
        set {
            SetRelatedEntities("user_msdyn_timeoffrequest", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workorder")]
    public IEnumerable<msdyn_workorder> user_msdyn_workorder {
        get {
            return GetRelatedEntities<msdyn_workorder>("user_msdyn_workorder", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workorder", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workorderincident")]
    public IEnumerable<msdyn_workorderincident> user_msdyn_workorderincident {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("user_msdyn_workorderincident", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workorderincident", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workorderproduct")]
    public IEnumerable<msdyn_workorderproduct> user_msdyn_workorderproduct {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("user_msdyn_workorderproduct", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workorderproduct", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workorderservice")]
    public IEnumerable<msdyn_workorderservice> user_msdyn_workorderservice {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("user_msdyn_workorderservice", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workorderservice", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workorderservicetask")]
    public IEnumerable<msdyn_workorderservicetask> user_msdyn_workorderservicetask {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("user_msdyn_workorderservicetask", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workorderservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workordersubstatus")]
    public IEnumerable<msdyn_workordersubstatus> user_msdyn_workordersubstatus {
        get {
            return GetRelatedEntities<msdyn_workordersubstatus>("user_msdyn_workordersubstatus", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workordersubstatus", null, value);
        }
    }
    
    [RelationshipSchemaName("user_msdyn_workordertype")]
    public IEnumerable<msdyn_workordertype> user_msdyn_workordertype {
        get {
            return GetRelatedEntities<msdyn_workordertype>("user_msdyn_workordertype", null);
        }
        set {
            SetRelatedEntities("user_msdyn_workordertype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_aircarrier")]
    public IEnumerable<ovs_AirCarrier> user_ovs_aircarrier {
        get {
            return GetRelatedEntities<ovs_AirCarrier>("user_ovs_aircarrier", null);
        }
        set {
            SetRelatedEntities("user_ovs_aircarrier", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_finding")]
    public IEnumerable<ovs_Finding> user_ovs_finding {
        get {
            return GetRelatedEntities<ovs_Finding>("user_ovs_finding", null);
        }
        set {
            SetRelatedEntities("user_ovs_finding", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_lob")]
    public IEnumerable<ovs_lob> user_ovs_lob {
        get {
            return GetRelatedEntities<ovs_lob>("user_ovs_lob", null);
        }
        set {
            SetRelatedEntities("user_ovs_lob", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_operation")]
    public IEnumerable<ovs_operation> user_ovs_operation {
        get {
            return GetRelatedEntities<ovs_operation>("user_ovs_operation", null);
        }
        set {
            SetRelatedEntities("user_ovs_operation", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_operationtype")]
    public IEnumerable<ovs_operationtype> user_ovs_operationtype {
        get {
            return GetRelatedEntities<ovs_operationtype>("user_ovs_operationtype", null);
        }
        set {
            SetRelatedEntities("user_ovs_operationtype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_questionnaire")]
    public IEnumerable<ovs_Questionnaire> user_ovs_questionnaire {
        get {
            return GetRelatedEntities<ovs_Questionnaire>("user_ovs_questionnaire", null);
        }
        set {
            SetRelatedEntities("user_ovs_questionnaire", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_sitetype")]
    public IEnumerable<ovs_SiteType> user_ovs_sitetype {
        get {
            return GetRelatedEntities<ovs_SiteType>("user_ovs_sitetype", null);
        }
        set {
            SetRelatedEntities("user_ovs_sitetype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_tyrational")]
    public IEnumerable<ovs_TYRational> user_ovs_tyrational {
        get {
            return GetRelatedEntities<ovs_TYRational>("user_ovs_tyrational", null);
        }
        set {
            SetRelatedEntities("user_ovs_tyrational", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ovs_workorderservicetaskprovision")]
    public IEnumerable<ovs_workorderservicetaskprovision> user_ovs_workorderservicetaskprovision {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("user_ovs_workorderservicetaskprovision", null);
        }
        set {
            SetRelatedEntities("user_ovs_workorderservicetaskprovision", null, value);
        }
    }
    
    [RelationshipSchemaName("user_phonecall")]
    public IEnumerable<PhoneCall> user_phonecall {
        get {
            return GetRelatedEntities<PhoneCall>("user_phonecall", null);
        }
        set {
            SetRelatedEntities("user_phonecall", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ppp_traveller")]
    public IEnumerable<ppp_Traveller> user_ppp_traveller {
        get {
            return GetRelatedEntities<ppp_Traveller>("user_ppp_traveller", null);
        }
        set {
            SetRelatedEntities("user_ppp_traveller", null, value);
        }
    }
    
    [RelationshipSchemaName("user_recurringappointmentmaster")]
    public IEnumerable<RecurringAppointmentMaster> user_recurringappointmentmaster {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("user_recurringappointmentmaster", null);
        }
        set {
            SetRelatedEntities("user_recurringappointmentmaster", null, value);
        }
    }
    
    [RelationshipSchemaName("user_task")]
    public IEnumerable<Task> user_task {
        get {
            return GetRelatedEntities<Task>("user_task", null);
        }
        set {
            SetRelatedEntities("user_task", null, value);
        }
    }
    
    [RelationshipSchemaName("user_tc_province")]
    public IEnumerable<tc_Province> user_tc_province {
        get {
            return GetRelatedEntities<tc_Province>("user_tc_province", null);
        }
        set {
            SetRelatedEntities("user_tc_province", null, value);
        }
    }
    
    [RelationshipSchemaName("user_tc_tcfiscalperiod")]
    public IEnumerable<tc_TCFiscalPeriod> user_tc_tcfiscalperiod {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("user_tc_tcfiscalperiod", null);
        }
        set {
            SetRelatedEntities("user_tc_tcfiscalperiod", null, value);
        }
    }
    
    [RelationshipSchemaName("user_tc_tcfiscalquarter")]
    public IEnumerable<tc_TCFiscalQuarter> user_tc_tcfiscalquarter {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("user_tc_tcfiscalquarter", null);
        }
        set {
            SetRelatedEntities("user_tc_tcfiscalquarter", null, value);
        }
    }
    
    [RelationshipSchemaName("user_tc_tcfiscalyear")]
    public IEnumerable<tc_TCFiscalYear> user_tc_tcfiscalyear {
        get {
            return GetRelatedEntities<tc_TCFiscalYear>("user_tc_tcfiscalyear", null);
        }
        set {
            SetRelatedEntities("user_tc_tcfiscalyear", null, value);
        }
    }
    
    [RelationshipSchemaName("user_tc_tcmonth")]
    public IEnumerable<tc_TCMonth> user_tc_tcmonth {
        get {
            return GetRelatedEntities<tc_TCMonth>("user_tc_tcmonth", null);
        }
        set {
            SetRelatedEntities("user_tc_tcmonth", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_provisioncategory")]
    public IEnumerable<ts_ProvisionCategory> user_ts_provisioncategory {
        get {
            return GetRelatedEntities<ts_ProvisionCategory>("user_ts_provisioncategory", null);
        }
        set {
            SetRelatedEntities("user_ts_provisioncategory", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_questionnaireversion")]
    public IEnumerable<ts_questionnaireversion> user_ts_questionnaireversion {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("user_ts_questionnaireversion", null);
        }
        set {
            SetRelatedEntities("user_ts_questionnaireversion", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_request")]
    public IEnumerable<ts_request> user_ts_request {
        get {
            return GetRelatedEntities<ts_request>("user_ts_request", null);
        }
        set {
            SetRelatedEntities("user_ts_request", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_tradename")]
    public IEnumerable<ts_tradename> user_ts_tradename {
        get {
            return GetRelatedEntities<ts_tradename>("user_ts_tradename", null);
        }
        set {
            SetRelatedEntities("user_ts_tradename", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_workorderactivitytype")]
    public IEnumerable<ts_workorderactivitytype> user_ts_workorderactivitytype {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("user_ts_workorderactivitytype", null);
        }
        set {
            SetRelatedEntities("user_ts_workorderactivitytype", null, value);
        }
    }
    
    [RelationshipSchemaName("user_ts_workordercreationwizard")]
    public IEnumerable<ts_workordercreationwizard> user_ts_workordercreationwizard {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("user_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntities("user_ts_workordercreationwizard", null, value);
        }
    }
    
    public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
    /// </summary>
    public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
    /// </summary>
    public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
        KeyAttributes.Clear();
        KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
    }
}

/// <summary>
/// <para>Generic activity representing work needed to be done.</para>
/// <para>Display Name: Task</para>
/// </summary>
[EntityLogicalName("task")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Task : ExtendedEntity<TaskState, Task_StatusCode> {
    
    public const string EntityLogicalName = "task";
    
    public const int EntityTypeCode = 4212;
    
    public Task() : 
            base(EntityLogicalName) {
    }
    
    public Task(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the task.</para>
    /// <para>Display Name: Task</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Task")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Type the number of minutes spent on the task. The duration is used in reporting.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the actual start date and time for the task. By default, it displays when the task was created.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Category")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Assigned Task Unique Id</para>
    /// <para>Display Name: Assigned Task Unique Id</para>
    /// </summary>
    [AttributeLogicalName("crmtaskassigneduniqueid")]
    [DisplayName("Assigned Task Unique Id")]
    public Guid? CrmTaskAssignedUniqueId {
        get {
            return GetAttributeValue<Guid?>("crmtaskassigneduniqueid");
        }
        set {
            SetAttributeValue("crmtaskassigneduniqueid", value);
        }
    }
    
    /// <summary>
    /// <para>Type additional information to describe the task.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information which specifies whether the task was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information which specifies if the task was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the record owner's business unit.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the task.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the task.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Type the percentage complete value for the task to track tasks to completion.</para>
    /// <para>Display Name: Percent Complete</para>
    /// </summary>
    [AttributeLogicalName("percentcomplete")]
    [DisplayName("Percent Complete")]
    [Range(0, 100)]
    public int? PercentComplete {
        get {
            return GetAttributeValue<int?>("percentcomplete");
        }
        set {
            SetAttributeValue("percentcomplete", value);
        }
    }
    
    /// <summary>
    /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public Task_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Task_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the record that the task relates to.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the Task record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this Task. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the task, specified in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due Date")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the expected due date and time.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service that is associated with this activity.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public TaskState? StateCode {
        get {
            return GetOptionSetValue<TaskState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Select the task's status.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public Task_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Task_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.</para>
    /// <para>Display Name: Sub-Category</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sub-Category")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Type a short description about the objective or primary topic of the task.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Subscription</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Subscription")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the task.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Tasks")]
    public Account Account_Tasks {
        get {
            return GetRelatedEntity<Account>("Account_Tasks", null);
        }
        set {
            SetRelatedEntity("Account_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("CampaignActivity_Tasks")]
    public CampaignActivity CampaignActivity_Tasks {
        get {
            return GetRelatedEntity<CampaignActivity>("CampaignActivity_Tasks", null);
        }
        set {
            SetRelatedEntity("CampaignActivity_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Campaign_Tasks")]
    public Campaign Campaign_Tasks {
        get {
            return GetRelatedEntity<Campaign>("Campaign_Tasks", null);
        }
        set {
            SetRelatedEntity("Campaign_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Tasks")]
    public Contact Contact_Tasks {
        get {
            return GetRelatedEntity<Contact>("Contact_Tasks", null);
        }
        set {
            SetRelatedEntity("Contact_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contract_Tasks")]
    public Contract Contract_Tasks {
        get {
            return GetRelatedEntity<Contract>("Contract_Tasks", null);
        }
        set {
            SetRelatedEntity("Contract_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Tasks")]
    public Incident Incident_Tasks {
        get {
            return GetRelatedEntity<Incident>("Incident_Tasks", null);
        }
        set {
            SetRelatedEntity("Incident_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Tasks")]
    public Invoice Invoice_Tasks {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Tasks", null);
        }
        set {
            SetRelatedEntity("Invoice_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Lead_Tasks")]
    public Lead Lead_Tasks {
        get {
            return GetRelatedEntity<Lead>("Lead_Tasks", null);
        }
        set {
            SetRelatedEntity("Lead_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Opportunity_Tasks")]
    public Opportunity Opportunity_Tasks {
        get {
            return GetRelatedEntity<Opportunity>("Opportunity_Tasks", null);
        }
        set {
            SetRelatedEntity("Opportunity_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Tasks")]
    public Quote Quote_Tasks {
        get {
            return GetRelatedEntity<Quote>("Quote_Tasks", null);
        }
        set {
            SetRelatedEntity("Quote_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Tasks")]
    public SalesOrder SalesOrder_Tasks {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Tasks", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("Task_ProcessSessions")]
    public IEnumerable<ProcessSession> Task_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Task_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Task_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Task_SyncErrors")]
    public IEnumerable<SyncError> Task_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Task_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Task_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_task")]
    public ActivityPointer activity_pointer_task {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_task", null);
        }
        set {
            SetRelatedEntity("activity_pointer_task", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_Tasks")]
    public BookableResourceBooking bookableresourcebooking_Tasks {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Tasks", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_Tasks")]
    public Entitlement entitlement_Tasks {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_Tasks", null);
        }
        set {
            SetRelatedEntity("entitlement_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_Tasks")]
    public EntitlementTemplate entitlementtemplate_Tasks {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_Tasks", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_task_createdby")]
    public SystemUser lk_task_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_task_createdby", null);
        }
        set {
            SetRelatedEntity("lk_task_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_task_createdonbehalfby")]
    public SystemUser lk_task_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_task_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_task_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_task_modifiedby")]
    public SystemUser lk_task_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_task_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_task_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
    public SystemUser lk_task_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_task_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_task_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_Tasks")]
    public msdyn_agreement msdyn_agreement_Tasks {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Tasks")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_Tasks {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_Tasks")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_Tasks {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Tasks")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_Tasks {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_Tasks")]
    public msdyn_customerasset msdyn_customerasset_Tasks {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Tasks")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_Tasks {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_Tasks")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_Tasks {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_Tasks")]
    public msdyn_purchaseorder msdyn_purchaseorder_Tasks {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Tasks")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_Tasks {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_Tasks")]
    public msdyn_rma msdyn_rma_Tasks {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_Tasks")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_Tasks {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_Tasks")]
    public msdyn_workorder msdyn_workorder_Tasks {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_Tasks")]
    public msdyn_workorderincident msdyn_workorderincident_Tasks {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_Tasks")]
    public msdyn_workorderproduct msdyn_workorderproduct_Tasks {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_Tasks")]
    public msdyn_workorderservice msdyn_workorderservice_Tasks {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_Tasks")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_Tasks {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_Tasks", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_Tasks")]
    public ppp_Traveller ppp_traveller_Tasks {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_Tasks", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("task_activity_parties")]
    public IEnumerable<ActivityParty> task_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("task_activity_parties", null);
        }
        set {
            SetRelatedEntities("task_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_Tasks")]
    public ts_request ts_request_Tasks {
        get {
            return GetRelatedEntity<ts_request>("ts_request_Tasks", null);
        }
        set {
            SetRelatedEntity("ts_request_Tasks", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_task")]
    public SystemUser user_task {
        get {
            return GetRelatedEntity<SystemUser>("user_task", null);
        }
        set {
            SetRelatedEntity("user_task", null, value);
        }
    }
    
    public static Task Retrieve(IOrganizationService service, Guid id, params Expression<Func<Task,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Territory represents sales regions. (Work Order Form)</para>
/// <para>Display Name: Region</para>
/// </summary>
[EntityLogicalName("territory")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Territory : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "territory";
    
    public const int EntityTypeCode = 2013;
    
    public Territory() : 
            base(EntityLogicalName) {
    }
    
    public Territory(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("territoryid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the territory.</para>
    /// <para>Display Name: Territory</para>
    /// </summary>
    [AttributeLogicalName("territoryid")]
    [DisplayName("Territory")]
    public Guid? TerritoryId {
        get {
            return GetAttributeValue<Guid?>("territoryid");
        }
        set {
            SetId("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the territory.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the territory.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Description of the territory.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the territory with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the manager of the territory.</para>
    /// <para>Display Name: Manager</para>
    /// </summary>
    [AttributeLogicalName("managerid")]
    [DisplayName("Manager")]
    public EntityReference ManagerId {
        get {
            return GetAttributeValue<EntityReference>("managerid");
        }
        set {
            SetAttributeValue("managerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the territory.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the territory.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Name of the territory.</para>
    /// <para>Display Name: Territory Name</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Territory Name")]
    [MaxLength(200)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the parent for this territory.</para>
    /// <para>Display Name: Parent</para>
    /// </summary>
    [AttributeLogicalName("parentterritoryid")]
    [DisplayName("Parent")]
    public EntityReference ParentTerritoryId {
        get {
            return GetAttributeValue<EntityReference>("parentterritoryid");
        }
        set {
            SetAttributeValue("parentterritoryid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the territory.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Territory Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_territorynameenglish")]
    [DisplayName("Territory Name (English)")]
    [MaxLength(100)]
    public string ovs_TerritoryNameEnglish {
        get {
            return GetAttributeValue<string>("ovs_territorynameenglish");
        }
        set {
            SetAttributeValue("ovs_territorynameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Territory Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_territorynamefrench")]
    [DisplayName("Territory Name (French)")]
    [MaxLength(100)]
    public string ovs_TerritoryNameFrench {
        get {
            return GetAttributeValue<string>("ovs_territorynamefrench");
        }
        set {
            SetAttributeValue("ovs_territorynamefrench", value);
        }
    }
    
    [RelationshipSchemaName("territory_parent_territory", EntityRole.Referenced)]
    public IEnumerable<Territory> Referencedterritory_parent_territory {
        get {
            return GetRelatedEntities<Territory>("territory_parent_territory", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("territory_parent_territory", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentterritoryid")]
    [RelationshipSchemaName("territory_parent_territory", EntityRole.Referencing)]
    public Territory Referencingterritory_parent_territory {
        get {
            return GetRelatedEntity<Territory>("territory_parent_territory", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("territory_parent_territory", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("Territory_ProcessSessions")]
    public IEnumerable<ProcessSession> Territory_ProcessSessions {
        get {
            return GetRelatedEntities<ProcessSession>("Territory_ProcessSessions", null);
        }
        set {
            SetRelatedEntities("Territory_ProcessSessions", null, value);
        }
    }
    
    [RelationshipSchemaName("Territory_SyncErrors")]
    public IEnumerable<SyncError> Territory_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("Territory_SyncErrors", null);
        }
        set {
            SetRelatedEntities("Territory_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_territory_createdonbehalfby")]
    public SystemUser lk_territory_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_territory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_territory_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_territory_modifiedonbehalfby")]
    public SystemUser lk_territory_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_territory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_territory_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_territorybase_createdby")]
    public SystemUser lk_territorybase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_territorybase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_territorybase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_territorybase_modifiedby")]
    public SystemUser lk_territorybase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_territorybase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_territorybase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_territory_account_ServiceTerritory")]
    public IEnumerable<Account> msdyn_territory_account_ServiceTerritory {
        get {
            return GetRelatedEntities<Account>("msdyn_territory_account_ServiceTerritory", null);
        }
        set {
            SetRelatedEntities("msdyn_territory_account_ServiceTerritory", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_territory_msdyn_agreement_ServiceTerritory")]
    public IEnumerable<msdyn_agreement> msdyn_territory_msdyn_agreement_ServiceTerritory {
        get {
            return GetRelatedEntities<msdyn_agreement>("msdyn_territory_msdyn_agreement_ServiceTerritory", null);
        }
        set {
            SetRelatedEntities("msdyn_territory_msdyn_agreement_ServiceTerritory", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_territory_msdyn_workorder_ServiceTerritory")]
    public IEnumerable<msdyn_workorder> msdyn_territory_msdyn_workorder_ServiceTerritory {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_territory_msdyn_workorder_ServiceTerritory", null);
        }
        set {
            SetRelatedEntities("msdyn_territory_msdyn_workorder_ServiceTerritory", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_Region_Territory")]
    public IEnumerable<msdyn_workorder> msdyn_workorder_Region_Territory {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_workorder_Region_Territory", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_Region_Territory", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_Incident_Region_Territory")]
    public IEnumerable<Incident> ovs_Incident_Region_Territory {
        get {
            return GetRelatedEntities<Incident>("ovs_Incident_Region_Territory", null);
        }
        set {
            SetRelatedEntities("ovs_Incident_Region_Territory", null, value);
        }
    }
    
    [AttributeLogicalName("managerid")]
    [RelationshipSchemaName("system_user_territories")]
    public SystemUser system_user_territories {
        get {
            return GetRelatedEntity<SystemUser>("system_user_territories", null);
        }
        set {
            SetRelatedEntity("system_user_territories", null, value);
        }
    }
    
    [RelationshipSchemaName("territory_accounts")]
    public IEnumerable<Account> territory_accounts {
        get {
            return GetRelatedEntities<Account>("territory_accounts", null);
        }
        set {
            SetRelatedEntities("territory_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("territory_system_users")]
    public IEnumerable<SystemUser> territory_system_users {
        get {
            return GetRelatedEntities<SystemUser>("territory_system_users", null);
        }
        set {
            SetRelatedEntities("territory_system_users", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_FunctionalLocation_Region_Territory")]
    public IEnumerable<msdyn_FunctionalLocation> ts_msdyn_FunctionalLocation_Region_Territory {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("ts_msdyn_FunctionalLocation_Region_Territory", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_FunctionalLocation_Region_Territory", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_territory_ts_workordercreationwizard")]
    public IEnumerable<ts_workordercreationwizard> ts_territory_ts_workordercreationwizard {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_territory_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntities("ts_territory_ts_workordercreationwizard", null, value);
        }
    }
    
    public static Territory Retrieve(IOrganizationService service, Guid id, params Expression<Func<Territory,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Functional Location</para>
/// </summary>
[EntityLogicalName("msdyn_functionallocation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_FunctionalLocation : ExtendedEntity<msdyn_FunctionalLocationState, msdyn_FunctionalLocation_statuscode> {
    
    public const string EntityLogicalName = "msdyn_functionallocation";
    
    public const int EntityTypeCode = 10117;
    
    public msdyn_FunctionalLocation() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_FunctionalLocation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_functionallocationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_functionallocationid")]
    [DisplayName("Functional Location")]
    public Guid? msdyn_FunctionalLocationId {
        get {
            return GetAttributeValue<Guid?>("msdyn_functionallocationid");
        }
        set {
            SetId("msdyn_functionallocationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address1")]
    [DisplayName("Street 1")]
    [MaxLength(250)]
    public string msdyn_Address1 {
        get {
            return GetAttributeValue<string>("msdyn_address1");
        }
        set {
            SetAttributeValue("msdyn_address1", value);
        }
    }
    
    /// <summary>
    /// <para>Street 2</para>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address2")]
    [DisplayName("Street 2")]
    [MaxLength(250)]
    public string msdyn_Address2 {
        get {
            return GetAttributeValue<string>("msdyn_address2");
        }
        set {
            SetAttributeValue("msdyn_address2", value);
        }
    }
    
    /// <summary>
    /// <para>Street 3</para>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address3")]
    [DisplayName("Street 3")]
    [MaxLength(250)]
    public string msdyn_Address3 {
        get {
            return GetAttributeValue<string>("msdyn_address3");
        }
        set {
            SetAttributeValue("msdyn_address3", value);
        }
    }
    
    /// <summary>
    /// <para>Address Name</para>
    /// <para>Display Name: Address Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_addressname")]
    [DisplayName("Address Name")]
    [MaxLength(250)]
    public string msdyn_AddressName {
        get {
            return GetAttributeValue<string>("msdyn_addressname");
        }
        set {
            SetAttributeValue("msdyn_addressname", value);
        }
    }
    
    /// <summary>
    /// <para>City</para>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("msdyn_city")]
    [DisplayName("City")]
    [MaxLength(80)]
    public string msdyn_City {
        get {
            return GetAttributeValue<string>("msdyn_city");
        }
        set {
            SetAttributeValue("msdyn_city", value);
        }
    }
    
    /// <summary>
    /// <para>Country/Region</para>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("msdyn_country")]
    [DisplayName("Country/Region")]
    [MaxLength(80)]
    public string msdyn_Country {
        get {
            return GetAttributeValue<string>("msdyn_country");
        }
        set {
            SetAttributeValue("msdyn_country", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude</para>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude</para>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(150)]
    public string msdyn_Name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Parent Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_parentfunctionallocation")]
    [DisplayName("Parent Functional Location")]
    public EntityReference msdyn_ParentFunctionalLocation {
        get {
            return GetAttributeValue<EntityReference>("msdyn_parentfunctionallocation");
        }
        set {
            SetAttributeValue("msdyn_parentfunctionallocation", value);
        }
    }
    
    /// <summary>
    /// <para>Postal Code</para>
    /// <para>Display Name: Postal Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_postalcode")]
    [DisplayName("Postal Code")]
    [MaxLength(20)]
    public string msdyn_PostalCode {
        get {
            return GetAttributeValue<string>("msdyn_postalcode");
        }
        set {
            SetAttributeValue("msdyn_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Relative order of functional location entity node in hierarchy control</para>
    /// <para>Display Name: Sequence</para>
    /// </summary>
    [AttributeLogicalName("msdyn_sequence")]
    [DisplayName("Sequence")]
    [Range(0, 2147483647)]
    public int? msdyn_Sequence {
        get {
            return GetAttributeValue<int?>("msdyn_sequence");
        }
        set {
            SetAttributeValue("msdyn_sequence", value);
        }
    }
    
    /// <summary>
    /// <para>State Or Province</para>
    /// <para>Display Name: State Or Province</para>
    /// </summary>
    [AttributeLogicalName("msdyn_stateorprovince")]
    [DisplayName("State Or Province")]
    [MaxLength(50)]
    public string msdyn_StateOrProvince {
        get {
            return GetAttributeValue<string>("msdyn_stateorprovince");
        }
        set {
            SetAttributeValue("msdyn_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Functional Location</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_FunctionalLocationState? statecode {
        get {
            return GetOptionSetValue<msdyn_FunctionalLocationState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Functional Location</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_FunctionalLocation_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_FunctionalLocation_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Placeholder field for Business Unit</para>
    /// <para>Display Name: BusinessUnit</para>
    /// </summary>
    [AttributeLogicalName("ts_businessunit")]
    [DisplayName("BusinessUnit")]
    [MaxLength(100)]
    public string ts_BusinessUnit {
        get {
            return GetAttributeValue<string>("ts_businessunit");
        }
        set {
            SetAttributeValue("ts_businessunit", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Class</para>
    /// </summary>
    [AttributeLogicalName("ts_class")]
    [DisplayName("Class")]
    public msdyn_FunctionalLocation_ts_Class? ts_Class {
        get {
            return GetOptionSetValue<msdyn_FunctionalLocation_ts_Class>("ts_class");
        }
        set {
            SetOptionSetValue("ts_class", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_country")]
    [DisplayName("Country")]
    public EntityReference ts_Country {
        get {
            return GetAttributeValue<EntityReference>("ts_country");
        }
        set {
            SetAttributeValue("ts_country", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: IATA Code</para>
    /// </summary>
    [AttributeLogicalName("ts_iatacode")]
    [DisplayName("IATA Code")]
    [MaxLength(100)]
    public string ts_IATACode {
        get {
            return GetAttributeValue<string>("ts_iatacode");
        }
        set {
            SetAttributeValue("ts_iatacode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ICAO Code</para>
    /// </summary>
    [AttributeLogicalName("ts_icaocode")]
    [DisplayName("ICAO Code")]
    [MaxLength(100)]
    public string ts_ICAOCode {
        get {
            return GetAttributeValue<string>("ts_icaocode");
        }
        set {
            SetAttributeValue("ts_icaocode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Region</para>
    /// </summary>
    [AttributeLogicalName("ts_region")]
    [DisplayName("Region")]
    public EntityReference ts_Region {
        get {
            return GetAttributeValue<EntityReference>("ts_region");
        }
        set {
            SetAttributeValue("ts_region", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site Type</para>
    /// </summary>
    [AttributeLogicalName("ts_sitetype")]
    [DisplayName("Site Type")]
    public EntityReference ts_SiteType {
        get {
            return GetAttributeValue<EntityReference>("ts_sitetype");
        }
        set {
            SetAttributeValue("ts_sitetype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Functional Location Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ts_functionallocationnameenglish")]
    [DisplayName("Functional Location Name (English)")]
    [MaxLength(100)]
    public string ts_functionallocationnameenglish {
        get {
            return GetAttributeValue<string>("ts_functionallocationnameenglish");
        }
        set {
            SetAttributeValue("ts_functionallocationnameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Functional Location Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ts_functionallocationnamefrench")]
    [DisplayName("Functional Location Name (French)")]
    [MaxLength(100)]
    public string ts_functionallocationnamefrench {
        get {
            return GetAttributeValue<string>("ts_functionallocationnamefrench");
        }
        set {
            SetAttributeValue("ts_functionallocationnamefrench", value);
        }
    }
    
    [RelationshipSchemaName("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referenced)]
    public IEnumerable<msdyn_FunctionalLocation> Referencedmsdyn_FunctionalLocation_ParentFunctional {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("msdyn_parentfunctionallocation")]
    [RelationshipSchemaName("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referencing)]
    public msdyn_FunctionalLocation Referencingmsdyn_FunctionalLocation_ParentFunctional {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_FunctionalLocation_ParentFunctional", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_functionallocation_createdby")]
    public SystemUser lk_msdyn_functionallocation_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_functionallocation_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_functionallocation_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_functionallocation_createdonbehalfby")]
    public SystemUser lk_msdyn_functionallocation_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_functionallocation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_functionallocation_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_functionallocation_modifiedby")]
    public SystemUser lk_msdyn_functionallocation_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_functionallocation_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_functionallocation_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_functionallocation_modifiedonbehalfby")]
    public SystemUser lk_msdyn_functionallocation_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_functionallocation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_functionallocation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_FunctionalLocation_ms")]
    public IEnumerable<msdyn_customerasset> msdyn_customerasset_FunctionalLocation_ms {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_customerasset_FunctionalLocation_ms", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_FunctionalLocation_ms", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_functionallocation_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_functionallocation_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_functionallocation_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_functionallocation_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_functionallocation_SyncErrors")]
    public IEnumerable<SyncError> msdyn_functionallocation_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_functionallocation_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_functionallocation_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_account")]
    public IEnumerable<Account> msdyn_msdyn_functionallocation_account {
        get {
            return GetRelatedEntities<Account>("msdyn_msdyn_functionallocation_account", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_functionallocation_account", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_incident_FunctionalLocation")]
    public IEnumerable<Incident> msdyn_msdyn_functionallocation_incident_FunctionalLocation {
        get {
            return GetRelatedEntities<Incident>("msdyn_msdyn_functionallocation_incident_FunctionalLocation", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_functionallocation_incident_FunctionalLocation", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation")]
    public IEnumerable<msdyn_workorderincident> msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation", null, value);
        }
    }
    
    [AttributeLogicalName("ts_region")]
    [RelationshipSchemaName("ts_msdyn_FunctionalLocation_Region_Territory")]
    public Territory ts_msdyn_FunctionalLocation_Region_Territory {
        get {
            return GetRelatedEntity<Territory>("ts_msdyn_FunctionalLocation_Region_Territory", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_FunctionalLocation_Region_Territory", null, value);
        }
    }
    
    [AttributeLogicalName("ts_sitetype")]
    [RelationshipSchemaName("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit")]
    public ovs_SiteType ts_msdyn_FunctionalLocation_SiteType_ovs_Sit {
        get {
            return GetRelatedEntity<ovs_SiteType>("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_functionallocation_msdyn_pl")]
    public IEnumerable<msdyn_propertylog> ts_msdyn_functionallocation_msdyn_pl {
        get {
            return GetRelatedEntities<msdyn_propertylog>("ts_msdyn_functionallocation_msdyn_pl", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_functionallocation_msdyn_pl", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_functionallocation_msdyn_ppa")]
    public IEnumerable<msdyn_propertyassetassociation> ts_msdyn_functionallocation_msdyn_ppa {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("ts_msdyn_functionallocation_msdyn_ppa", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_functionallocation_msdyn_ppa", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_functionallocation_ts_workordercrea")]
    public IEnumerable<ts_workordercreationwizard> ts_msdyn_functionallocation_ts_workordercrea {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_msdyn_functionallocation_ts_workordercrea", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_functionallocation_ts_workordercrea", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_functionallocation_ts_workordercw")]
    public IEnumerable<ts_workordercreationwizard> ts_msdyn_functionallocation_ts_workordercw {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_msdyn_functionallocation_ts_workordercw", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_functionallocation_ts_workordercw", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workorder_Site_msdyn_FunctionalLoca")]
    public IEnumerable<msdyn_workorder> ts_msdyn_workorder_Site_msdyn_FunctionalLoca {
        get {
            return GetRelatedEntities<msdyn_workorder>("ts_msdyn_workorder_Site_msdyn_FunctionalLoca", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workorder_Site_msdyn_FunctionalLoca", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operation_site_msdyn_functionallocati")]
    public IEnumerable<ovs_operation> ts_ovs_operation_site_msdyn_functionallocati {
        get {
            return GetRelatedEntities<ovs_operation>("ts_ovs_operation_site_msdyn_functionallocati", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operation_site_msdyn_functionallocati", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operation_subsite_msdyn_functionalloc")]
    public IEnumerable<ovs_operation> ts_ovs_operation_subsite_msdyn_functionalloc {
        get {
            return GetRelatedEntities<ovs_operation>("ts_ovs_operation_subsite_msdyn_functionalloc", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operation_subsite_msdyn_functionalloc", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_functionallocation")]
    public SystemUser user_msdyn_functionallocation {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_functionallocation", null);
        }
        set {
            SetRelatedEntity("user_msdyn_functionallocation", null, value);
        }
    }
    
    public static msdyn_FunctionalLocation Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_FunctionalLocation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Provides ability to store details about service agreements you have with your customers</para>
/// <para>Display Name: Agreement</para>
/// </summary>
[EntityLogicalName("msdyn_agreement")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_agreement : ExtendedEntity<msdyn_agreementState, msdyn_agreement_statuscode> {
    
    public const string EntityLogicalName = "msdyn_agreement";
    
    public const int EntityTypeCode = 10291;
    
    public msdyn_agreement() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_agreement(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_agreementid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_agreementid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementid")]
    [DisplayName("Agreement")]
    public Guid? msdyn_agreementId {
        get {
            return GetAttributeValue<Guid?>("msdyn_agreementid");
        }
        set {
            SetId("msdyn_agreementid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Shows the details of this agreement, as presented to the customer</para>
    /// <para>Display Name: Agreement Details</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementdetails")]
    [DisplayName("Agreement Details")]
    public string msdyn_AgreementDetails {
        get {
            return GetAttributeValue<string>("msdyn_agreementdetails");
        }
        set {
            SetAttributeValue("msdyn_agreementdetails", value);
        }
    }
    
    /// <summary>
    /// <para>This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record.</para>
    /// <para>Display Name: Agreement Record Generation</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementrecordgeneration")]
    [DisplayName("Agreement Record Generation")]
    public DateTime? msdyn_AgreementRecordGeneration {
        get {
            return GetAttributeValue<DateTime?>("msdyn_agreementrecordgeneration");
        }
        set {
            SetAttributeValue("msdyn_agreementrecordgeneration", value);
        }
    }
    
    /// <summary>
    /// <para>Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field.</para>
    /// <para>Display Name: Auto-Numbering</para>
    /// </summary>
    [AttributeLogicalName("msdyn_autonumbering")]
    [DisplayName("Auto-Numbering")]
    [MaxLength(100)]
    public string msdyn_AutoNumbering {
        get {
            return GetAttributeValue<string>("msdyn_autonumbering");
        }
        set {
            SetAttributeValue("msdyn_autonumbering", value);
        }
    }
    
    /// <summary>
    /// <para>Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account.</para>
    /// <para>Display Name: Billing Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_billingaccount")]
    [DisplayName("Billing Account")]
    public EntityReference msdyn_BillingAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_billingaccount");
        }
        set {
            SetAttributeValue("msdyn_billingaccount", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Child Index</para>
    /// </summary>
    [AttributeLogicalName("msdyn_childindex")]
    [DisplayName("Child Index")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_ChildIndex {
        get {
            return GetAttributeValue<int?>("msdyn_childindex");
        }
        set {
            SetAttributeValue("msdyn_childindex", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date this agreement was canceled.</para>
    /// <para>Display Name: Date Canceled</para>
    /// </summary>
    [AttributeLogicalName("msdyn_datecanceled")]
    [DisplayName("Date Canceled")]
    public DateTime? msdyn_DateCanceled {
        get {
            return GetAttributeValue<DateTime?>("msdyn_datecanceled");
        }
        set {
            SetAttributeValue("msdyn_datecanceled", value);
        }
    }
    
    /// <summary>
    /// <para>Type a description of the agreement.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    [MaxLength(200)]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration how long this agreement is active.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date when this agreement is no longer active.</para>
    /// <para>Display Name: End Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_enddate")]
    [DisplayName("End Date")]
    public DateTime? msdyn_EndDate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_enddate");
        }
        set {
            SetAttributeValue("msdyn_enddate", value);
        }
    }
    
    /// <summary>
    /// <para>If this agreement originates from another agreement, you should specify the originating agreement here</para>
    /// <para>Display Name: Originating Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_originatingagreement")]
    [DisplayName("Originating Agreement")]
    public EntityReference msdyn_OriginatingAgreement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_originatingagreement");
        }
        set {
            SetAttributeValue("msdyn_originatingagreement", value);
        }
    }
    
    /// <summary>
    /// <para>Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only</para>
    /// <para>Display Name: Process Started On</para>
    /// </summary>
    [AttributeLogicalName("msdyn_processstartedon")]
    [DisplayName("Process Started On")]
    public DateTime? msdyn_ProcessStartedOn {
        get {
            return GetAttributeValue<DateTime?>("msdyn_processstartedon");
        }
        set {
            SetAttributeValue("msdyn_processstartedon", value);
        }
    }
    
    /// <summary>
    /// <para>Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account</para>
    /// <para>Display Name: Sales Tax Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_salestaxcode")]
    [DisplayName("Sales Tax Code")]
    public EntityReference msdyn_SalesTaxCode {
        get {
            return GetAttributeValue<EntityReference>("msdyn_salestaxcode");
        }
        set {
            SetAttributeValue("msdyn_salestaxcode", value);
        }
    }
    
    /// <summary>
    /// <para>Account to be serviced</para>
    /// <para>Display Name: Service Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceaccount")]
    [DisplayName("Service Account")]
    public EntityReference msdyn_ServiceAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceaccount");
        }
        set {
            SetAttributeValue("msdyn_serviceaccount", value);
        }
    }
    
    /// <summary>
    /// <para>The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account</para>
    /// <para>Display Name: Service Territory</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceterritory")]
    [DisplayName("Service Territory")]
    public EntityReference msdyn_ServiceTerritory {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceterritory");
        }
        set {
            SetAttributeValue("msdyn_serviceterritory", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date from when this agreement is active.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_startdate")]
    [DisplayName("Start Date")]
    public DateTime? msdyn_StartDate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_startdate");
        }
        set {
            SetAttributeValue("msdyn_startdate", value);
        }
    }
    
    /// <summary>
    /// <para>Agreement Substatus</para>
    /// <para>Display Name: Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_substatus")]
    [DisplayName("Substatus")]
    public EntityReference msdyn_SubStatus {
        get {
            return GetAttributeValue<EntityReference>("msdyn_substatus");
        }
        set {
            SetAttributeValue("msdyn_substatus", value);
        }
    }
    
    /// <summary>
    /// <para>Tracks the current system status.</para>
    /// <para>Display Name: System Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_systemstatus")]
    [DisplayName("System Status")]
    public msdyn_agreementsystemstatus? msdyn_SystemStatus {
        get {
            return GetOptionSetValue<msdyn_agreementsystemstatus>("msdyn_systemstatus");
        }
        set {
            SetOptionSetValue("msdyn_systemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Agreement Number</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Agreement Number")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the ID of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? processid {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the ID of the stage where the entity is located.</para>
    /// <para>Display Name: Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("Stage Id")]
    public Guid? stageid {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Agreement</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_agreementState? statecode {
        get {
            return GetOptionSetValue<msdyn_agreementState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Agreement</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_agreement_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_agreement_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows a comma-separated list of string values that represent the unique identifiers of stages in a business process flow instance in the order that they occur.</para>
    /// <para>Display Name: Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("Traversed Path")]
    [MaxLength(1250)]
    public string traversedpath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced)]
    public IEnumerable<msdyn_agreement> Referencedmsdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement {
        get {
            return GetRelatedEntities<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("msdyn_originatingagreement")]
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing)]
    public msdyn_agreement Referencingmsdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_agreement_createdby")]
    public SystemUser lk_msdyn_agreement_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreement_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreement_createdonbehalfby")]
    public SystemUser lk_msdyn_agreement_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreement_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_agreement_modifiedby")]
    public SystemUser lk_msdyn_agreement_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreement_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreement_modifiedonbehalfby")]
    public SystemUser lk_msdyn_agreement_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreement_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_billingaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_agreement_BillingAccount")]
    public Account msdyn_account_msdyn_agreement_BillingAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_agreement_BillingAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_agreement_BillingAccount", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_agreement_ServiceAccount")]
    public Account msdyn_account_msdyn_agreement_ServiceAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_agreement_ServiceAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_agreement_ServiceAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_agreement_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_agreement_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_Appointments")]
    public IEnumerable<Appointment> msdyn_agreement_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_agreement_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_Emails")]
    public IEnumerable<Email> msdyn_agreement_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_agreement_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_agreement_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_agreement_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_agreement_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_agreement_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_agreement_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_agreement_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_agreement_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_agreement_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_SyncErrors")]
    public IEnumerable<SyncError> msdyn_agreement_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_agreement_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_Tasks")]
    public IEnumerable<Task> msdyn_agreement_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_agreement_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_agreement_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_agreement_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreement_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_agreement_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_agreement_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreement_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement")]
    public IEnumerable<msdyn_agreementbookingproduct> msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement")]
    public IEnumerable<msdyn_agreementbookingservice> msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement")]
    public IEnumerable<msdyn_agreementinvoiceproduct> msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement {
        get {
            return GetRelatedEntities<msdyn_agreementinvoiceproduct>("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_workorder_Agreement")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_agreement_msdyn_workorder_Agreement {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_agreement_msdyn_workorder_Agreement", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreement_msdyn_workorder_Agreement", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceterritory")]
    [RelationshipSchemaName("msdyn_territory_msdyn_agreement_ServiceTerritory")]
    public Territory msdyn_territory_msdyn_agreement_ServiceTerritory {
        get {
            return GetRelatedEntity<Territory>("msdyn_territory_msdyn_agreement_ServiceTerritory", null);
        }
        set {
            SetRelatedEntity("msdyn_territory_msdyn_agreement_ServiceTerritory", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_agreement")]
    public SystemUser user_msdyn_agreement {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_agreement", null);
        }
        set {
            SetRelatedEntity("user_msdyn_agreement", null, value);
        }
    }
    
    public static msdyn_agreement Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_agreement,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify the booking product for the agreement.</para>
/// <para>Display Name: Agreement Booking Product</para>
/// </summary>
[EntityLogicalName("msdyn_agreementbookingproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_agreementbookingproduct : ExtendedEntity<msdyn_agreementbookingproductState, msdyn_agreementbookingproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_agreementbookingproduct";
    
    public const int EntityTypeCode = 10294;
    
    public msdyn_agreementbookingproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_agreementbookingproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_agreementbookingproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_agreementbookingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Agreement Booking Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingproductid")]
    [DisplayName("Agreement Booking Product")]
    public Guid? msdyn_agreementbookingproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_agreementbookingproductid");
        }
        set {
            SetId("msdyn_agreementbookingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement associated with Agreement Booking Product.</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreement")]
    [DisplayName("Agreement")]
    public EntityReference msdyn_Agreement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreement");
        }
        set {
            SetAttributeValue("msdyn_agreement", value);
        }
    }
    
    /// <summary>
    /// <para>The Agreement Booking Incident related to this product</para>
    /// <para>Display Name: Agreement Booking Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingincident")]
    [DisplayName("Agreement Booking Incident")]
    public EntityReference msdyn_AgreementBookingIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingincident");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingincident", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement Booking Setup associated with Agreement Booking Product.</para>
    /// <para>Display Name: Agreement Booking Setup</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingsetup")]
    [DisplayName("Agreement Booking Setup")]
    public EntityReference msdyn_AgreementBookingSetup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingsetup");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingsetup", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("msdyn_currency")]
    [DisplayName("Currency")]
    public decimal? msdyn_Currency {
        get {
            return GetMoneyValue("msdyn_currency");
        }
        set {
            SetMoneyValue("msdyn_currency", value);
        }
    }
    
    /// <summary>
    /// <para>Customer asset related to this Product</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Copied</para>
    /// </summary>
    [AttributeLogicalName("msdyn_iscopied")]
    [DisplayName("Is Copied")]
    public bool? msdyn_IsCopied {
        get {
            return GetAttributeValue<bool?>("msdyn_iscopied");
        }
        set {
            SetAttributeValue("msdyn_iscopied", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this task within the agreement booking products.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Optionally set Price List that will determine the pricing for this product on the Work Order</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Product/Service associated with Agreement Booking Product.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity you wish to bill the customer for. By default, this will default to the same value as "Quantity."</para>
    /// <para>Display Name: Quantity To Bill</para>
    /// </summary>
    [AttributeLogicalName("msdyn_qtytobill")]
    [DisplayName("Quantity To Bill")]
    public double? msdyn_QtyToBill {
        get {
            return GetAttributeValue<double?>("msdyn_qtytobill");
        }
        set {
            SetAttributeValue("msdyn_qtytobill", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual quantity of the product.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public double? msdyn_Quantity {
        get {
            return GetAttributeValue<double?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this product when Price List is set</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you wish to charge the customer per unit. This field is optional.</para>
    /// <para>Display Name: Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount")]
    [DisplayName("Unit Amount")]
    public decimal? msdyn_UnitAmount {
        get {
            return GetMoneyValue("msdyn_unitamount");
        }
        set {
            SetMoneyValue("msdyn_unitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the currency in the base currency.</para>
    /// <para>Display Name: Currency (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_currency_base")]
    [DisplayName("Currency (Base)")]
    public decimal? msdyn_currency_Base {
        get {
            return GetMoneyValue("msdyn_currency_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit amount in the base currency.</para>
    /// <para>Display Name: Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount_base")]
    [DisplayName("Unit Amount (Base)")]
    public decimal? msdyn_unitamount_Base {
        get {
            return GetMoneyValue("msdyn_unitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Agreement Booking Product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_agreementbookingproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_agreementbookingproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Agreement Booking Product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_agreementbookingproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_agreementbookingproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_createdby")]
    public SystemUser lk_msdyn_agreementbookingproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_agreementbookingproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_modifiedby")]
    public SystemUser lk_msdyn_agreementbookingproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_agreementbookingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_agreementbookingproduct_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_agreementbookingproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Appointments")]
    public IEnumerable<Appointment> msdyn_agreementbookingproduct_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_agreementbookingproduct_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Emails")]
    public IEnumerable<Email> msdyn_agreementbookingproduct_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_agreementbookingproduct_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_agreementbookingproduct_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_agreementbookingproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_agreementbookingproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_agreementbookingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_agreementbookingproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_agreementbookingproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_agreementbookingproduct_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_agreementbookingproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_agreementbookingproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_agreementbookingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_Tasks")]
    public IEnumerable<Task> msdyn_agreementbookingproduct_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_agreementbookingproduct_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_agreementbookingproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_agreementbookingproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingproduct_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_agreementbookingproduct_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_agreementbookingproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreement")]
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement")]
    public msdyn_agreement msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreement_msdyn_agreementbookingproduct_Agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
        "t")]
    public IEnumerable<msdyn_workorderproduct> msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduct {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
                    "t", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
                    "t", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_agreementbookingproduct_Product")]
    public Product msdyn_product_msdyn_agreementbookingproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_agreementbookingproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_agreementbookingproduct_Product", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_agreementbookingproduct")]
    public SystemUser user_msdyn_agreementbookingproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_agreementbookingproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_agreementbookingproduct", null, value);
        }
    }
    
    public static msdyn_agreementbookingproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_agreementbookingproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify the booking service for the agreement.</para>
/// <para>Display Name: Agreement Booking Service</para>
/// </summary>
[EntityLogicalName("msdyn_agreementbookingservice")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_agreementbookingservice : ExtendedEntity<msdyn_agreementbookingserviceState, msdyn_agreementbookingservice_statuscode> {
    
    public const string EntityLogicalName = "msdyn_agreementbookingservice";
    
    public const int EntityTypeCode = 10295;
    
    public msdyn_agreementbookingservice() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_agreementbookingservice(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_agreementbookingserviceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_agreementbookingserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Agreement Booking Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingserviceid")]
    [DisplayName("Agreement Booking Service")]
    public Guid? msdyn_agreementbookingserviceId {
        get {
            return GetAttributeValue<Guid?>("msdyn_agreementbookingserviceid");
        }
        set {
            SetId("msdyn_agreementbookingserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement associated with Agreement Booking Service.</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreement")]
    [DisplayName("Agreement")]
    public EntityReference msdyn_Agreement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreement");
        }
        set {
            SetAttributeValue("msdyn_agreement", value);
        }
    }
    
    /// <summary>
    /// <para>The Agreement Booking Incident related to this service</para>
    /// <para>Display Name: Agreement Booking Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingincident")]
    [DisplayName("Agreement Booking Incident")]
    public EntityReference msdyn_AgreementBookingIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingincident");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingincident", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement Booking Setup associated with Agreement Booking Service.</para>
    /// <para>Display Name: Agreement Booking Setup</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingsetup")]
    [DisplayName("Agreement Booking Setup")]
    public EntityReference msdyn_AgreementBookingSetup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingsetup");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingsetup", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("msdyn_currency")]
    [DisplayName("Currency")]
    public decimal? msdyn_Currency {
        get {
            return GetMoneyValue("msdyn_currency");
        }
        set {
            SetMoneyValue("msdyn_currency", value);
        }
    }
    
    /// <summary>
    /// <para>Customer Asset related to this Service</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual duration of service.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the duration you want to bill the customer for. By default, this will default to the same value as the "Duration" field.</para>
    /// <para>Display Name: Duration To Bill</para>
    /// </summary>
    [AttributeLogicalName("msdyn_durationtobill")]
    [DisplayName("Duration To Bill")]
    [Range(0, 2147483647)]
    public int? msdyn_DurationToBill {
        get {
            return GetAttributeValue<int?>("msdyn_durationtobill");
        }
        set {
            SetAttributeValue("msdyn_durationtobill", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Copied</para>
    /// </summary>
    [AttributeLogicalName("msdyn_iscopied")]
    [DisplayName("Is Copied")]
    public bool? msdyn_IsCopied {
        get {
            return GetAttributeValue<bool?>("msdyn_iscopied");
        }
        set {
            SetAttributeValue("msdyn_iscopied", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this service within the agreement services.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Optionally set Price List that will determine the pricing for this service on the Work Order</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Product/Service associated with Agreement Booking Service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_service")]
    [DisplayName("Service")]
    public EntityReference msdyn_Service {
        get {
            return GetAttributeValue<EntityReference>("msdyn_service");
        }
        set {
            SetAttributeValue("msdyn_service", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this service when Price List is set</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you wish to charge the customer per unit. This field is optional.</para>
    /// <para>Display Name: Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount")]
    [DisplayName("Unit Amount")]
    public decimal? msdyn_UnitAmount {
        get {
            return GetMoneyValue("msdyn_unitamount");
        }
        set {
            SetMoneyValue("msdyn_unitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the currency in the base currency.</para>
    /// <para>Display Name: Currency (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_currency_base")]
    [DisplayName("Currency (Base)")]
    public decimal? msdyn_currency_Base {
        get {
            return GetMoneyValue("msdyn_currency_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit amount in the base currency.</para>
    /// <para>Display Name: Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount_base")]
    [DisplayName("Unit Amount (Base)")]
    public decimal? msdyn_unitamount_Base {
        get {
            return GetMoneyValue("msdyn_unitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Agreement Booking Service</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_agreementbookingserviceState? statecode {
        get {
            return GetOptionSetValue<msdyn_agreementbookingserviceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Agreement Booking Service</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_agreementbookingservice_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_agreementbookingservice_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_createdby")]
    public SystemUser lk_msdyn_agreementbookingservice_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingservice_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingservice_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_createdonbehalfby")]
    public SystemUser lk_msdyn_agreementbookingservice_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingservice_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_modifiedby")]
    public SystemUser lk_msdyn_agreementbookingservice_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingservice_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingservice_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementbookingservice_modifiedonbehalfby")]
    public SystemUser lk_msdyn_agreementbookingservice_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementbookingservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementbookingservice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_agreementbookingservice_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_agreementbookingservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_Appointments")]
    public IEnumerable<Appointment> msdyn_agreementbookingservice_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_agreementbookingservice_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_Emails")]
    public IEnumerable<Email> msdyn_agreementbookingservice_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_agreementbookingservice_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_agreementbookingservice_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_agreementbookingservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_agreementbookingservice_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_agreementbookingservice_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_agreementbookingservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_agreementbookingservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_agreementbookingservice_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_agreementbookingservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_SyncErrors")]
    public IEnumerable<SyncError> msdyn_agreementbookingservice_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_agreementbookingservice_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_Tasks")]
    public IEnumerable<Task> msdyn_agreementbookingservice_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_agreementbookingservice_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_agreementbookingservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_agreementbookingservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementbookingservice_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_agreementbookingservice_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_agreementbookingservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementbookingservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreement")]
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement")]
    public msdyn_agreement msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreement_msdyn_agreementbookingservice_Agreement", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
        "e")]
    public IEnumerable<msdyn_workorderservice> msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingService {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
                    "e", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
                    "e", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_service")]
    [RelationshipSchemaName("msdyn_product_msdyn_agreementbookingservice_Service")]
    public Product msdyn_product_msdyn_agreementbookingservice_Service {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_agreementbookingservice_Service", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_agreementbookingservice_Service", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_agreementbookingservice")]
    public SystemUser user_msdyn_agreementbookingservice {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_agreementbookingservice", null);
        }
        set {
            SetRelatedEntity("user_msdyn_agreementbookingservice", null, value);
        }
    }
    
    public static msdyn_agreementbookingservice Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_agreementbookingservice,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify the booking product invoice for the agreement.</para>
/// <para>Display Name: Agreement Invoice Product</para>
/// </summary>
[EntityLogicalName("msdyn_agreementinvoiceproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_agreementinvoiceproduct : ExtendedEntity<msdyn_agreementinvoiceproductState, msdyn_agreementinvoiceproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_agreementinvoiceproduct";
    
    public const int EntityTypeCode = 10299;
    
    public msdyn_agreementinvoiceproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_agreementinvoiceproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_agreementinvoiceproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_agreementinvoiceproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Agreement Invoice Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementinvoiceproductid")]
    [DisplayName("Agreement Invoice Product")]
    public Guid? msdyn_agreementinvoiceproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_agreementinvoiceproductid");
        }
        set {
            SetId("msdyn_agreementinvoiceproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement associated with Agreement Invoice Product.</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreement")]
    [DisplayName("Agreement")]
    public EntityReference msdyn_Agreement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreement");
        }
        set {
            SetAttributeValue("msdyn_agreement", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Agreement Invoice Setup associated with Agreement Invoice Product.</para>
    /// <para>Display Name: Agreement Invoice Setup</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementinvoicesetup")]
    [DisplayName("Agreement Invoice Setup")]
    public EntityReference msdyn_AgreementInvoiceSetup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementinvoicesetup");
        }
        set {
            SetAttributeValue("msdyn_agreementinvoicesetup", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this product within the agreement invoice setup.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Price List associated with Agreement Invoice Product.</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Product/Service associated with Agreement Invoice Product.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity to bill.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public double? msdyn_Quantity {
        get {
            return GetAttributeValue<double?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you want to charge the customer per unit.</para>
    /// <para>Display Name: Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount")]
    [DisplayName("Unit Amount")]
    public decimal? msdyn_UnitAmount {
        get {
            return GetMoneyValue("msdyn_unitamount");
        }
        set {
            SetMoneyValue("msdyn_unitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit amount in the base currency.</para>
    /// <para>Display Name: Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount_base")]
    [DisplayName("Unit Amount (Base)")]
    public decimal? msdyn_unitamount_Base {
        get {
            return GetMoneyValue("msdyn_unitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Agreement Invoice Product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_agreementinvoiceproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_agreementinvoiceproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Agreement Invoice Product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_agreementinvoiceproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_agreementinvoiceproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_createdby")]
    public SystemUser lk_msdyn_agreementinvoiceproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementinvoiceproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementinvoiceproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_agreementinvoiceproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementinvoiceproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementinvoiceproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_modifiedby")]
    public SystemUser lk_msdyn_agreementinvoiceproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementinvoiceproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementinvoiceproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_agreementinvoiceproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_agreementinvoiceproduct_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_agreementinvoiceproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Appointments")]
    public IEnumerable<Appointment> msdyn_agreementinvoiceproduct_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_agreementinvoiceproduct_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Emails")]
    public IEnumerable<Email> msdyn_agreementinvoiceproduct_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_agreementinvoiceproduct_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_agreementinvoiceproduct_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_agreementinvoiceproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_agreementinvoiceproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_agreementinvoiceproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_agreementinvoiceproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_agreementinvoiceproduct_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_agreementinvoiceproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_agreementinvoiceproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_agreementinvoiceproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_Tasks")]
    public IEnumerable<Task> msdyn_agreementinvoiceproduct_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_agreementinvoiceproduct_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_agreementinvoiceproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_agreementinvoiceproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_agreementinvoiceproduct_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_agreementinvoiceproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_agreementinvoiceproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreement")]
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement")]
    public msdyn_agreement msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreement_msdyn_agreementinvoiceproduct_Agreement", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_agreementinvoiceproduct_Product")]
    public Product msdyn_product_msdyn_agreementinvoiceproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_agreementinvoiceproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_agreementinvoiceproduct_Product", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_agreementinvoiceproduct")]
    public SystemUser user_msdyn_agreementinvoiceproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_agreementinvoiceproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_agreementinvoiceproduct", null, value);
        }
    }
    
    public static msdyn_agreementinvoiceproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_agreementinvoiceproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Alerts that notify schedule board users of booking issues or information.</para>
/// <para>Display Name: Booking Alert</para>
/// </summary>
[EntityLogicalName("msdyn_bookingalert")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_bookingalert : ExtendedEntity<msdyn_bookingalertState, msdyn_bookingalert_StatusCode> {
    
    public const string EntityLogicalName = "msdyn_bookingalert";
    
    public const int EntityTypeCode = 10256;
    
    public msdyn_bookingalert() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_bookingalert(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the activity.</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Activity")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows additional information provided by the external application as JSON. For internal use only.</para>
    /// <para>Display Name: Activity Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Activity Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Shows the actual duration of the activity in minutes.</para>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual end time of the activity.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual start time of the activity.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the blind carbon-copy (bcc) recipients of the activity.</para>
    /// <para>Display Name: BCC</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("BCC")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the carbon-copy (cc) recipients of the activity.</para>
    /// <para>Display Name: CC</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("CC")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the activity was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the activity pointer on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Enter the customer that the activity is associated with.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Customers")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Enter the priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Type a description of the activity.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the person who the activity is from.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public msdyn_bookingalert_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<msdyn_bookingalert_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether a voice mail was left.</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the activity was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the activity pointer on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Shows the list of optional attendees for the activity.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the person who organized the activity.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Shows the outsource vendor that the activity is associated with.</para>
    /// <para>Display Name: Outsource Vendors</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Outsource Vendors")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Priority of the activity.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public msdyn_bookingalert_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<msdyn_bookingalert_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the object with which the activity is associated.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the list of assignees to be notified by alert.</para>
    /// <para>Display Name: Assignees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Assignees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the users or facility/equipment that are required for the activity.</para>
    /// <para>Display Name: Resources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Resources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the last service level agreement (SLA) that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Enter the scheduled duration of the activity, in minutes.</para>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the scheduled end time of the activity.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due Date")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the scheduled start time of the activity.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Enter the date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the stage.</para>
    /// <para>Display Name: Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the activity.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public msdyn_bookingalertState? StateCode {
        get {
            return GetOptionSetValue<msdyn_bookingalertState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the activity.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_bookingalert_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<msdyn_bookingalert_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the subject associated with the activity.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the person who is the receiver of the activity.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the activitypointer.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_msdyn_bookingalerts")]
    public IEnumerable<CampaignResponse> CampaignResponse_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<CampaignResponse>("CampaignResponse_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("account_msdyn_bookingalerts")]
    public Account account_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Account>("account_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("account_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_msdyn_bookingalert")]
    public ActivityPointer activity_pointer_msdyn_bookingalert {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_msdyn_bookingalert", null);
        }
        set {
            SetRelatedEntity("activity_pointer_msdyn_bookingalert", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_msdyn_bookingalerts")]
    public BookableResourceBooking bookableresourcebooking_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaign_msdyn_bookingalerts")]
    public Campaign campaign_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Campaign>("campaign_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("campaign_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaignactivity_msdyn_bookingalerts")]
    public CampaignActivity campaignactivity_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("campaignactivity_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contact_msdyn_bookingalerts")]
    public Contact contact_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Contact>("contact_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("contact_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contract_msdyn_bookingalerts")]
    public Contract contract_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Contract>("contract_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("contract_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_msdyn_bookingalerts")]
    public Entitlement entitlement_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("entitlement_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_msdyn_bookingalerts")]
    public EntitlementTemplate entitlementtemplate_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("incident_msdyn_bookingalerts")]
    public Incident incident_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Incident>("incident_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("incident_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("invoice_msdyn_bookingalerts")]
    public Invoice invoice_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Invoice>("invoice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("invoice_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("lead_msdyn_bookingalerts")]
    public Lead lead_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Lead>("lead_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("lead_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_msdyn_bookingalerts")]
    public msdyn_agreement msdyn_agreement_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_msdyn_bookingalerts")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_msdyn_bookingalerts")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_msdyn_bookingalerts")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_bookingalert_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_bookingalert_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_SyncErrors")]
    public IEnumerable<SyncError> msdyn_bookingalert_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_bookingalert_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingalert_activity_parties")]
    public IEnumerable<ActivityParty> msdyn_bookingalert_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("msdyn_bookingalert_activity_parties", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingalert_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_createdby")]
    public SystemUser msdyn_bookingalert_systemuser_createdby {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_bookingalert_systemuser_createdby", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_systemuser_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_createdonbehalfby")]
    public SystemUser msdyn_bookingalert_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_bookingalert_systemuser_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_systemuser_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_modifiedby")]
    public SystemUser msdyn_bookingalert_systemuser_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_bookingalert_systemuser_modifiedby", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_systemuser_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_modifiedonbehalfby")]
    public SystemUser msdyn_bookingalert_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_bookingalert_systemuser_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_systemuser_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("msdyn_bookingalert_systemuser_owninguser")]
    public SystemUser msdyn_bookingalert_systemuser_owninguser {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_bookingalert_systemuser_owninguser", null);
        }
        set {
            SetRelatedEntity("msdyn_bookingalert_systemuser_owninguser", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_msdyn_bookingalerts")]
    public msdyn_customerasset msdyn_customerasset_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_msdyn_bookingalerts")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_msdyn_bookingalerts")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_msdyn_bookingalerts")]
    public msdyn_purchaseorder msdyn_purchaseorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_msdyn_bookingalerts")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_msdyn_bookingalerts")]
    public msdyn_rma msdyn_rma_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_msdyn_bookingalerts")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_msdyn_bookingalerts")]
    public msdyn_workorder msdyn_workorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_msdyn_bookingalerts")]
    public msdyn_workorderincident msdyn_workorderincident_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_msdyn_bookingalerts")]
    public msdyn_workorderproduct msdyn_workorderproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_msdyn_bookingalerts")]
    public msdyn_workorderservice msdyn_workorderservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_msdyn_bookingalerts")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("opportunity_msdyn_bookingalerts")]
    public Opportunity opportunity_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("opportunity_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_msdyn_bookingalerts")]
    public ppp_Traveller ppp_traveller_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("quote_msdyn_bookingalerts")]
    public Quote quote_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<Quote>("quote_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("quote_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("salesorder_msdyn_bookingalerts")]
    public SalesOrder salesorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<SalesOrder>("salesorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("salesorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_msdyn_bookingalerts")]
    public ts_request ts_request_msdyn_bookingalerts {
        get {
            return GetRelatedEntity<ts_request>("ts_request_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntity("ts_request_msdyn_bookingalerts", null, value);
        }
    }
    
    public static msdyn_bookingalert Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_bookingalert,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>System generated journal to calculate the cost of the resource bookings</para>
/// <para>Display Name: Booking Journal</para>
/// </summary>
[EntityLogicalName("msdyn_bookingjournal")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_bookingjournal : ExtendedEntity<msdyn_bookingjournalState, msdyn_bookingjournal_statuscode> {
    
    public const string EntityLogicalName = "msdyn_bookingjournal";
    
    public const int EntityTypeCode = 10302;
    
    public msdyn_bookingjournal() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_bookingjournal(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_bookingjournalid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_bookingjournalid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Booking Journal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_bookingjournalid")]
    [DisplayName("Booking Journal")]
    public Guid? msdyn_bookingjournalId {
        get {
            return GetAttributeValue<Guid?>("msdyn_bookingjournalid");
        }
        set {
            SetId("msdyn_bookingjournalid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Shows the additional cost associated with this journal, if any. (This amount is not multiplied by quantity)</para>
    /// <para>Display Name: Additional Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost")]
    [DisplayName("Additional Cost")]
    public decimal? msdyn_AdditionalCost {
        get {
            return GetMoneyValue("msdyn_additionalcost");
        }
        set {
            SetMoneyValue("msdyn_additionalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Shows if this journal is billable.</para>
    /// <para>Display Name: Billable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_billable")]
    [DisplayName("Billable")]
    public bool? msdyn_Billable {
        get {
            return GetAttributeValue<bool?>("msdyn_billable");
        }
        set {
            SetAttributeValue("msdyn_billable", value);
        }
    }
    
    /// <summary>
    /// <para>This Resource Booking this journal pertains to</para>
    /// <para>Display Name: Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booking")]
    [DisplayName("Booking")]
    public EntityReference msdyn_Booking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_booking");
        }
        set {
            SetAttributeValue("msdyn_booking", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the total duration of this journal record.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the end time of this journal record.</para>
    /// <para>Display Name: End Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_endtime")]
    [DisplayName("End Time")]
    public DateTime? msdyn_EndTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_endtime");
        }
        set {
            SetAttributeValue("msdyn_endtime", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the type of journal.</para>
    /// <para>Display Name: Journal Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_journaltype")]
    [DisplayName("Journal Type")]
    public msdyn_bookingjournaltype? msdyn_JournalType {
        get {
            return GetOptionSetValue<msdyn_bookingjournaltype>("msdyn_journaltype");
        }
        set {
            SetOptionSetValue("msdyn_journaltype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Resource Pay Type associated with Booking Journal.</para>
    /// <para>Display Name: Pay Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_paytype")]
    [DisplayName("Pay Type")]
    public EntityReference msdyn_PayType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_paytype");
        }
        set {
            SetAttributeValue("msdyn_paytype", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the start time of this journal record.</para>
    /// <para>Display Name: Start Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_starttime")]
    [DisplayName("Start Time")]
    public DateTime? msdyn_StartTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_starttime");
        }
        set {
            SetAttributeValue("msdyn_starttime", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total cost company pays to resource.</para>
    /// <para>Display Name: Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost")]
    [DisplayName("Total Cost")]
    public decimal? msdyn_TotalCost {
        get {
            return GetMoneyValue("msdyn_totalcost");
        }
        set {
            SetMoneyValue("msdyn_totalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the hourly cost that company pays to the resource.</para>
    /// <para>Display Name: Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost")]
    [DisplayName("Unit Cost")]
    public decimal? msdyn_UnitCost {
        get {
            return GetMoneyValue("msdyn_unitcost");
        }
        set {
            SetMoneyValue("msdyn_unitcost", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the additional cost in the base currency.</para>
    /// <para>Display Name: Additional Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost_base")]
    [DisplayName("Additional Cost (Base)")]
    public decimal? msdyn_additionalcost_Base {
        get {
            return GetMoneyValue("msdyn_additionalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total cost in the base currency.</para>
    /// <para>Display Name: Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost_base")]
    [DisplayName("Total Cost (Base)")]
    public decimal? msdyn_totalcost_Base {
        get {
            return GetMoneyValue("msdyn_totalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit cost in the base currency.</para>
    /// <para>Display Name: Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost_base")]
    [DisplayName("Unit Cost (Base)")]
    public decimal? msdyn_unitcost_Base {
        get {
            return GetMoneyValue("msdyn_unitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Booking Journal</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_bookingjournalState? statecode {
        get {
            return GetOptionSetValue<msdyn_bookingjournalState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Booking Journal</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_bookingjournal_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_bookingjournal_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_bookingjournal_createdby")]
    public SystemUser lk_msdyn_bookingjournal_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_bookingjournal_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_bookingjournal_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_bookingjournal_createdonbehalfby")]
    public SystemUser lk_msdyn_bookingjournal_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_bookingjournal_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_bookingjournal_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_bookingjournal_modifiedby")]
    public SystemUser lk_msdyn_bookingjournal_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_bookingjournal_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_bookingjournal_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_bookingjournal_modifiedonbehalfby")]
    public SystemUser lk_msdyn_bookingjournal_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_bookingjournal_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_bookingjournal_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_booking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_bookingjournal_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingjournal_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_bookingjournal_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_bookingjournal_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingjournal_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_bookingjournal_SyncErrors")]
    public IEnumerable<SyncError> msdyn_bookingjournal_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_bookingjournal_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_bookingjournal_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_bookingjournal")]
    public SystemUser user_msdyn_bookingjournal {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_bookingjournal", null);
        }
        set {
            SetRelatedEntity("user_msdyn_bookingjournal", null, value);
        }
    }
    
    public static msdyn_bookingjournal Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_bookingjournal,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify Customer Asset.</para>
/// <para>Display Name: Customer Asset</para>
/// </summary>
[EntityLogicalName("msdyn_customerasset")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_customerasset : ExtendedEntity<msdyn_customerassetState, msdyn_customerasset_statuscode> {
    
    public const string EntityLogicalName = "msdyn_customerasset";
    
    public const int EntityTypeCode = 10114;
    
    public msdyn_customerasset() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_customerasset(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_customerassetid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerassetid")]
    [DisplayName("Customer Asset")]
    public Guid? msdyn_customerassetId {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetid");
        }
        set {
            SetId("msdyn_customerassetid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Parent Customer of this Asset</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_account")]
    [DisplayName("Account")]
    public EntityReference msdyn_Account {
        get {
            return GetAttributeValue<EntityReference>("msdyn_account");
        }
        set {
            SetAttributeValue("msdyn_account", value);
        }
    }
    
    /// <summary>
    /// <para>The category of the customer asset</para>
    /// <para>Display Name: Category</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerassetcategory")]
    [DisplayName("Category")]
    public EntityReference msdyn_CustomerAssetCategory {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerassetcategory");
        }
        set {
            SetAttributeValue("msdyn_customerassetcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Device ID used to register with the IoT provider. This will not be used if there are two or more connected devices for this asset. This value will be updated based on the connected devices.</para>
    /// <para>Display Name: Device ID</para>
    /// </summary>
    [AttributeLogicalName("msdyn_deviceid")]
    [DisplayName("Device ID")]
    [MaxLength(100)]
    public string msdyn_DeviceId {
        get {
            return GetAttributeValue<string>("msdyn_deviceid");
        }
        set {
            SetAttributeValue("msdyn_deviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_functionallocation")]
    [DisplayName("Functional Location")]
    public EntityReference msdyn_FunctionalLocation {
        get {
            return GetAttributeValue<EntityReference>("msdyn_functionallocation");
        }
        set {
            SetAttributeValue("msdyn_functionallocation", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Last active alert time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastalerttime")]
    [DisplayName("Last active alert time")]
    public DateTime? msdyn_LastAlertTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_lastalerttime");
        }
    }
    
    /// <summary>
    /// <para>Last Updated time of rollup field Last active alert time.</para>
    /// <para>Display Name: Last active alert time (Last Updated On)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastalerttime_date")]
    [DisplayName("Last active alert time (Last Updated On)")]
    public DateTime? msdyn_LastAlertTime_Date {
        get {
            return GetAttributeValue<DateTime?>("msdyn_lastalerttime_date");
        }
    }
    
    /// <summary>
    /// <para>State of rollup field Last active alert time.</para>
    /// <para>Display Name: Last active alert time (State)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastalerttime_state")]
    [DisplayName("Last active alert time (State)")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LastAlertTime_State {
        get {
            return GetAttributeValue<int?>("msdyn_lastalerttime_state");
        }
    }
    
    /// <summary>
    /// <para>The last command sent to any of the connected devices for this asset.</para>
    /// <para>Display Name: Last Command Sent</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastcommandsent")]
    [DisplayName("Last Command Sent")]
    public EntityReference msdyn_LastCommandSent {
        get {
            return GetAttributeValue<EntityReference>("msdyn_lastcommandsent");
        }
        set {
            SetAttributeValue("msdyn_lastcommandsent", value);
        }
    }
    
    /// <summary>
    /// <para>The timestamp of the last command sent for any of the connected devices for this asset.</para>
    /// <para>Display Name: Last Command Sent Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastcommandsenttime")]
    [DisplayName("Last Command Sent Time")]
    public DateTime? msdyn_LastCommandSentTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_lastcommandsenttime");
        }
        set {
            SetAttributeValue("msdyn_lastcommandsenttime", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Top-Level Asset, (if this asset is a sub asset)</para>
    /// <para>Display Name: Top-Level Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_masterasset")]
    [DisplayName("Top-Level Asset")]
    public EntityReference msdyn_MasterAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_masterasset");
        }
        set {
            SetAttributeValue("msdyn_masterasset", value);
        }
    }
    
    /// <summary>
    /// <para>Parent Asset</para>
    /// <para>Display Name: Parent Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_parentasset")]
    [DisplayName("Parent Asset")]
    public EntityReference msdyn_ParentAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_parentasset");
        }
        set {
            SetAttributeValue("msdyn_parentasset", value);
        }
    }
    
    /// <summary>
    /// <para>Reference to Product associated with this Asset</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>A status field that denotes whether all the devices connected to this asset are registered with the IoT provider.</para>
    /// <para>Display Name: Registration Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_registrationstatus")]
    [DisplayName("Registration Status")]
    public msdyn_customerasset_msdyn_RegistrationStatus? msdyn_RegistrationStatus {
        get {
            return GetOptionSetValue<msdyn_customerasset_msdyn_RegistrationStatus>("msdyn_registrationstatus");
        }
        set {
            SetOptionSetValue("msdyn_registrationstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates a link to the Work Order Product from where this Asset was auto created by the system.</para>
    /// <para>Display Name: Work Order Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderproduct")]
    [DisplayName("Work Order Product")]
    public EntityReference msdyn_WorkOrderProduct {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderproduct");
        }
        set {
            SetAttributeValue("msdyn_workorderproduct", value);
        }
    }
    
    /// <summary>
    /// <para>If active parent alerts exist for the device</para>
    /// <para>Display Name: Active or in-progress alerts</para>
    /// </summary>
    [AttributeLogicalName("msdyn_alert")]
    [DisplayName("Active or in-progress alerts")]
    public bool? msdyn_alert {
        get {
            return GetAttributeValue<bool?>("msdyn_alert");
        }
    }
    
    /// <summary>
    /// <para>Count of parent alerts for this device</para>
    /// <para>Display Name: Alert Count</para>
    /// </summary>
    [AttributeLogicalName("msdyn_alertcount")]
    [DisplayName("Alert Count")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_alertcount {
        get {
            return GetAttributeValue<int?>("msdyn_alertcount");
        }
    }
    
    /// <summary>
    /// <para>Last Updated time of rollup field Alert Count.</para>
    /// <para>Display Name: Alert Count (Last Updated On)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_alertcount_date")]
    [DisplayName("Alert Count (Last Updated On)")]
    public DateTime? msdyn_alertcount_Date {
        get {
            return GetAttributeValue<DateTime?>("msdyn_alertcount_date");
        }
    }
    
    /// <summary>
    /// <para>State of rollup field Alert Count.</para>
    /// <para>Display Name: Alert Count (State)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_alertcount_state")]
    [DisplayName("Alert Count (State)")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_alertcount_State {
        get {
            return GetAttributeValue<int?>("msdyn_alertcount_state");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Customer Asset</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_customerassetState? statecode {
        get {
            return GetOptionSetValue<msdyn_customerassetState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Customer Asset</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_customerasset_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_customerasset_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer Asset Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ts_customerassetenglish")]
    [DisplayName("Customer Asset Name (English)")]
    [MaxLength(100)]
    public string ts_customerassetenglish {
        get {
            return GetAttributeValue<string>("ts_customerassetenglish");
        }
        set {
            SetAttributeValue("ts_customerassetenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer Asset Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ts_customerassetfrench")]
    [DisplayName("Customer Asset Name (French)")]
    [MaxLength(100)]
    public string ts_customerassetfrench {
        get {
            return GetAttributeValue<string>("ts_customerassetfrench");
        }
        set {
            SetAttributeValue("ts_customerassetfrench", value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referenced)]
    public IEnumerable<msdyn_customerasset> Referencedmsdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referenced)]
    public IEnumerable<msdyn_customerasset> Referencedmsdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("msdyn_masterasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referencing)]
    public msdyn_customerasset Referencingmsdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_customerasset_MasterAsset", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("msdyn_parentasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referencing)]
    public msdyn_customerasset Referencingmsdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_customerasset_ParentAsset", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_customerasset_createdby")]
    public SystemUser lk_msdyn_customerasset_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerasset_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerasset_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_customerasset_createdonbehalfby")]
    public SystemUser lk_msdyn_customerasset_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerasset_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerasset_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_customerasset_modifiedby")]
    public SystemUser lk_msdyn_customerasset_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerasset_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerasset_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_customerasset_modifiedonbehalfby")]
    public SystemUser lk_msdyn_customerasset_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerasset_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerasset_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_account")]
    [RelationshipSchemaName("msdyn_account_msdyn_customerasset_Account")]
    public Account msdyn_account_msdyn_customerasset_Account {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_customerasset_Account", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_customerasset_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_customerasset_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_customerasset_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_Appointments")]
    public IEnumerable<Appointment> msdyn_customerasset_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_customerasset_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_Emails")]
    public IEnumerable<Email> msdyn_customerasset_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_customerasset_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocation")]
    [RelationshipSchemaName("msdyn_customerasset_FunctionalLocation_ms")]
    public msdyn_FunctionalLocation msdyn_customerasset_FunctionalLocation_ms {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_customerasset_FunctionalLocation_ms", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_FunctionalLocation_ms", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_customerasset_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_customerasset_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_customerasset_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_customerasset_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_customerasset_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_customerasset_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_customerasset_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_customerasset_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_SyncErrors")]
    public IEnumerable<SyncError> msdyn_customerasset_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_customerasset_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_Tasks")]
    public IEnumerable<Task> msdyn_customerasset_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_customerasset_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_customerasset_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_customerasset_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerasset_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_customerasset_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_customerasset_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_customerasset_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incident_msdyn_customerasset")]
    public IEnumerable<Incident> msdyn_incident_msdyn_customerasset {
        get {
            return GetRelatedEntities<Incident>("msdyn_incident_msdyn_customerasset", null);
        }
        set {
            SetRelatedEntities("msdyn_incident_msdyn_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset")]
    public IEnumerable<msdyn_agreementbookingproduct> msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_agreementbookingproduct>("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_agreementbookingproduct_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset")]
    public IEnumerable<msdyn_agreementbookingservice> msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_agreementbookingservice>("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_agreementbookingservice_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset")]
    public IEnumerable<msdyn_propertyassetassociation> msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset {
        get {
            return GetRelatedEntities<msdyn_propertyassetassociation>("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset")]
    public IEnumerable<msdyn_propertylog> msdyn_msdyn_customerasset_msdyn_propertylog_customerasset {
        get {
            return GetRelatedEntities<msdyn_propertylog>("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset")]
    public IEnumerable<msdyn_workorderincident> msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset")]
    public IEnumerable<msdyn_workorderproduct> msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset")]
    public IEnumerable<msdyn_workorderservice> msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset")]
    public IEnumerable<msdyn_workorderservicetask> msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetcategory")]
    [RelationshipSchemaName("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory")]
    public msdyn_customerassetcategory msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory {
        get {
            return GetRelatedEntity<msdyn_customerassetcategory>("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorderproduct")]
    [RelationshipSchemaName("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct")]
    public msdyn_workorderproduct msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_customerasset_Product")]
    public Product msdyn_product_msdyn_customerasset_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_customerasset_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_customerasset_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_ovs_asset_msdyn_customera")]
    public IEnumerable<msdyn_workorder> msdyn_workorder_ovs_asset_msdyn_customera {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_workorder_ovs_asset_msdyn_customera", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_ovs_asset_msdyn_customera", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_customerasset_msdyn_customerasset")]
    public IEnumerable<msdyn_customerasset> ts_msdyn_customerasset_msdyn_customerasset {
        get {
            return GetRelatedEntities<msdyn_customerasset>("ts_msdyn_customerasset_msdyn_customerasset", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_customerasset_msdyn_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_customerasset_msdyn_workorder_msdyn")]
    public IEnumerable<msdyn_workorder> ts_msdyn_customerasset_msdyn_workorder_msdyn {
        get {
            return GetRelatedEntities<msdyn_workorder>("ts_msdyn_customerasset_msdyn_workorder_msdyn", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_customerasset_msdyn_workorder_msdyn", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_customerasset_ts_workordercreationw")]
    public IEnumerable<ts_workordercreationwizard> ts_msdyn_customerasset_ts_workordercreationw {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_msdyn_customerasset_ts_workordercreationw", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_customerasset_ts_workordercreationw", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_customerasset")]
    public SystemUser user_msdyn_customerasset {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_customerasset", null);
        }
        set {
            SetRelatedEntity("user_msdyn_customerasset", null, value);
        }
    }
    
    public static msdyn_customerasset Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_customerasset,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'Device ID Alternate Key'</para>
    /// </summary>
    public static msdyn_customerasset Retrieve_msdyn_DeviceIdAlternateKey(IOrganizationService service, string msdyn_DeviceId, params Expression<Func<msdyn_customerasset,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("msdyn_deviceid", msdyn_DeviceId);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'Device ID Alternate Key'</para>
    /// </summary>
    public void AltKey_msdyn_DeviceIdAlternateKey(string msdyn_DeviceId) {
        KeyAttributes.Clear();
        KeyAttributes.Add("msdyn_deviceid", msdyn_DeviceId);
    }
}

/// <summary>
/// <para>The Category of Customer Asset.</para>
/// <para>Display Name: Customer Asset Category</para>
/// </summary>
[EntityLogicalName("msdyn_customerassetcategory")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_customerassetcategory : ExtendedEntity<msdyn_customerassetcategoryState, msdyn_customerassetcategory_statuscode> {
    
    public const string EntityLogicalName = "msdyn_customerassetcategory";
    
    public const int EntityTypeCode = 10116;
    
    public msdyn_customerassetcategory() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_customerassetcategory(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetcategoryid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_customerassetcategoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Customer Asset Category</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerassetcategoryid")]
    [DisplayName("Customer Asset Category")]
    public Guid? msdyn_customerassetcategoryId {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetcategoryid");
        }
        set {
            SetId("msdyn_customerassetcategoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Customer Asset Category</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_customerassetcategoryState? statecode {
        get {
            return GetOptionSetValue<msdyn_customerassetcategoryState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Customer Asset Category</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_customerassetcategory_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_customerassetcategory_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Asset Category Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ts_assetcategorynameenglish")]
    [DisplayName("Asset Category Name (English)")]
    [MaxLength(100)]
    public string ts_AssetCategoryNameEnglish {
        get {
            return GetAttributeValue<string>("ts_assetcategorynameenglish");
        }
        set {
            SetAttributeValue("ts_assetcategorynameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Asset Category Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ts_assetcategorynamefrench")]
    [DisplayName("Asset Category Name (French)")]
    [MaxLength(100)]
    public string ts_AssetCategoryNameFrench {
        get {
            return GetAttributeValue<string>("ts_assetcategorynamefrench");
        }
        set {
            SetAttributeValue("ts_assetcategorynamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Asset Category Type</para>
    /// </summary>
    [AttributeLogicalName("ts_assetcategorytype")]
    [DisplayName("Asset Category Type")]
    public ts_assetcategorytype? ts_AssetCategoryType {
        get {
            return GetOptionSetValue<ts_assetcategorytype>("ts_assetcategorytype");
        }
        set {
            SetOptionSetValue("ts_assetcategorytype", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_createdby")]
    public SystemUser lk_msdyn_customerassetcategory_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerassetcategory_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerassetcategory_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_createdonbehalfby")]
    public SystemUser lk_msdyn_customerassetcategory_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerassetcategory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerassetcategory_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_modifiedby")]
    public SystemUser lk_msdyn_customerassetcategory_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerassetcategory_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerassetcategory_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_customerassetcategory_modifiedonbehalfby")]
    public SystemUser lk_msdyn_customerassetcategory_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_customerassetcategory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_customerassetcategory_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerassetcategory_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_customerassetcategory_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_customerassetcategory_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_customerassetcategory_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_customerassetcategory_SyncErrors")]
    public IEnumerable<SyncError> msdyn_customerassetcategory_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_customerassetcategory_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_customerassetcategory_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory")]
    public IEnumerable<msdyn_customerasset> msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_customerassetcategory_msdyn_customerasset_CustomerAssetCategory", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_AssetCategory_msdyn_custo")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_AssetCategory_msdyn_custo {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_AssetCategory_msdyn_custo", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_AssetCategory_msdyn_custo", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_customerassetcategory")]
    public SystemUser user_msdyn_customerassetcategory {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_customerassetcategory", null);
        }
        set {
            SetRelatedEntity("user_msdyn_customerassetcategory", null, value);
        }
    }
    
    public static msdyn_customerassetcategory Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_customerassetcategory,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("msdyn_incident_msdyn_customerasset")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_incident_msdyn_customerasset : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "msdyn_incident_msdyn_customerasset";
    
    public const int EntityTypeCode = 10141;
    
    public msdyn_incident_msdyn_customerasset() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_incident_msdyn_customerasset(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("msdyn_incident_msdyn_customerassetid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_incident_msdyn_customerassetid", value);
        }
    }
    
    [AttributeLogicalName("msdyn_incident_msdyn_customerassetid")]
    public Guid? msdyn_incident_msdyn_customerassetId {
        get {
            return GetAttributeValue<Guid?>("msdyn_incident_msdyn_customerassetid");
        }
        set {
            SetId("msdyn_incident_msdyn_customerassetid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("incidentid")]
    public Guid? incidentid {
        get {
            return GetAttributeValue<Guid?>("incidentid");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetid")]
    public Guid? msdyn_customerassetid {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetid");
        }
    }
    
    public static msdyn_incident_msdyn_customerasset Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_incident_msdyn_customerasset,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Incident types define the various types of incidents (issues) that a customer could report, on which work orders are based.</para>
/// <para>Display Name: Incident Type</para>
/// </summary>
[EntityLogicalName("msdyn_incidenttype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_incidenttype : ExtendedEntity<msdyn_incidenttypeState, msdyn_incidenttype_statuscode> {
    
    public const string EntityLogicalName = "msdyn_incidenttype";
    
    public const int EntityTypeCode = 10313;
    
    public msdyn_incidenttype() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_incidenttype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_incidenttypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttypeid")]
    [DisplayName("Incident Type")]
    public Guid? msdyn_incidenttypeId {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeid");
        }
        set {
            SetId("msdyn_incidenttypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Copy Incident Items to Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_copyincidentitemstoagreement")]
    [DisplayName("Copy Incident Items to Agreement")]
    public bool? msdyn_CopyIncidentItemstoAgreement {
        get {
            return GetAttributeValue<bool?>("msdyn_copyincidentitemstoagreement");
        }
        set {
            SetAttributeValue("msdyn_copyincidentitemstoagreement", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Type associated with Incident Type.</para>
    /// <para>Display Name: Default Work Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_defaultworkordertype")]
    [DisplayName("Default Work Order Type")]
    public EntityReference msdyn_DefaultWorkOrderType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_defaultworkordertype");
        }
        set {
            SetAttributeValue("msdyn_defaultworkordertype", value);
        }
    }
    
    /// <summary>
    /// <para>Incident Type description. This will be the default description shown on the work order</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedduration")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows date and time when the Suggested Duration value was updated.</para>
    /// <para>Display Name: Last Calculated Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lastcalculatedtime")]
    [DisplayName("Last Calculated Time")]
    public DateTime? msdyn_LastCalculatedTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_lastcalculatedtime");
        }
        set {
            SetAttributeValue("msdyn_lastcalculatedtime", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Resolution Required on Work Order Completion</para>
    /// </summary>
    [AttributeLogicalName("msdyn_resolutionrequiredonwocompletion")]
    [DisplayName("Resolution Required on Work Order Completion")]
    public bool? msdyn_ResolutionRequiredonWOCompletion {
        get {
            return GetAttributeValue<bool?>("msdyn_resolutionrequiredonwocompletion");
        }
        set {
            SetAttributeValue("msdyn_resolutionrequiredonwocompletion", value);
        }
    }
    
    /// <summary>
    /// <para>Suggested duration is average of actual duration of historical bookings with the same incident type</para>
    /// <para>Display Name: Suggested Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_suggestedduration")]
    [DisplayName("Suggested Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_SuggestedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_suggestedduration");
        }
        set {
            SetAttributeValue("msdyn_suggestedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Incident Type name</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(400)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Incident Type Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_incidenttypenameenglish")]
    [DisplayName("Incident Type Name (English)")]
    [MaxLength(200)]
    public string ovs_IncidentTypeNameEnglish {
        get {
            return GetAttributeValue<string>("ovs_incidenttypenameenglish");
        }
        set {
            SetAttributeValue("ovs_incidenttypenameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Incident Type Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_incidenttypenamefrench")]
    [DisplayName("Incident Type Name (French)")]
    [MaxLength(200)]
    public string ovs_IncidentTypeNameFrench {
        get {
            return GetAttributeValue<string>("ovs_incidenttypenamefrench");
        }
        set {
            SetAttributeValue("ovs_incidenttypenamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Incident Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_incidenttypeState? statecode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Incident Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_incidenttype_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_incidenttype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_incidenttype_createdby")]
    public SystemUser lk_msdyn_incidenttype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttype_createdonbehalfby")]
    public SystemUser lk_msdyn_incidenttype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_incidenttype_modifiedby")]
    public SystemUser lk_msdyn_incidenttype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttype_modifiedonbehalfby")]
    public SystemUser lk_msdyn_incidenttype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttype_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_incidenttype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_incidenttype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttype_SyncErrors")]
    public IEnumerable<SyncError> msdyn_incidenttype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_incidenttype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttype_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_incident_IncidentType")]
    public IEnumerable<Incident> msdyn_msdyn_incidenttype_incident_IncidentType {
        get {
            return GetRelatedEntities<Incident>("msdyn_msdyn_incidenttype_incident_IncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_incident_IncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType")]
    public IEnumerable<msdyn_incidenttypeproduct> msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType {
        get {
            return GetRelatedEntities<msdyn_incidenttypeproduct>("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType")]
    public IEnumerable<msdyn_incidenttypeservice> msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservice>("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType")]
    public IEnumerable<msdyn_incidenttypeservicetask> msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType")]
    public IEnumerable<msdyn_workorderincident> msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_defaultworkordertype")]
    [RelationshipSchemaName("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType")]
    public msdyn_workordertype msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType {
        get {
            return GetRelatedEntity<msdyn_workordertype>("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_incidenttype_ts_workorderactivityty")]
    public IEnumerable<ts_workorderactivitytype> ts_msdyn_incidenttype_ts_workorderactivityty {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("ts_msdyn_incidenttype_ts_workorderactivityty", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_incidenttype_ts_workorderactivityty", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workordertype_msdyn_incidenttype")]
    public IEnumerable<msdyn_workordertype> ts_msdyn_workordertype_msdyn_incidenttype {
        get {
            return GetRelatedEntities<msdyn_workordertype>("ts_msdyn_workordertype_msdyn_incidenttype", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workordertype_msdyn_incidenttype", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operationtypes_msdyn_incidenttypes")]
    public IEnumerable<ovs_operationtype> ts_ovs_operationtypes_msdyn_incidenttypes {
        get {
            return GetRelatedEntities<ovs_operationtype>("ts_ovs_operationtypes_msdyn_incidenttypes", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operationtypes_msdyn_incidenttypes", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_incidenttype")]
    public SystemUser user_msdyn_incidenttype {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_incidenttype", null);
        }
        set {
            SetRelatedEntity("user_msdyn_incidenttype", null, value);
        }
    }
    
    public static msdyn_incidenttype Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_incidenttype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>This entity gives the ability to pre-configure products to be added to a work order when the related incident is added to the work order</para>
/// <para>Display Name: Incident Type Product</para>
/// </summary>
[EntityLogicalName("msdyn_incidenttypeproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_incidenttypeproduct : ExtendedEntity<msdyn_incidenttypeproductState, msdyn_incidenttypeproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_incidenttypeproduct";
    
    public const int EntityTypeCode = 10315;
    
    public msdyn_incidenttypeproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_incidenttypeproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_incidenttypeproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Incident Type Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttypeproductid")]
    [DisplayName("Incident Type Product")]
    public Guid? msdyn_incidenttypeproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeproductid");
        }
        set {
            SetId("msdyn_incidenttypeproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Incident type suggestion result applied to this incident type product.</para>
    /// <para>Display Name: Applied Suggestion Result</para>
    /// </summary>
    [AttributeLogicalName("msdyn_appliedsuggestionresult")]
    [DisplayName("Applied Suggestion Result")]
    public EntityReference msdyn_AppliedSuggestionResult {
        get {
            return GetAttributeValue<EntityReference>("msdyn_appliedsuggestionresult");
        }
        set {
            SetAttributeValue("msdyn_appliedsuggestionresult", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the description of the product as presented to the customer. The value defaults to the description defined on the product.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>The Incident related to this product</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttype")]
    [DisplayName("Incident Type")]
    public EntityReference msdyn_IncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_incidenttype");
        }
        set {
            SetAttributeValue("msdyn_incidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>Enter any internal notes you want to track on this product.</para>
    /// <para>Display Name: Internal Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internaldescription")]
    [DisplayName("Internal Description")]
    public string msdyn_InternalDescription {
        get {
            return GetAttributeValue<string>("msdyn_internaldescription");
        }
        set {
            SetAttributeValue("msdyn_internaldescription", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Product/Service associated with Incident Type Product.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual quantity of the product.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public double? msdyn_Quantity {
        get {
            return GetAttributeValue<double?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing and final quantity for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Incident Type Product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_incidenttypeproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Incident Type Product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_incidenttypeproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_createdby")]
    public SystemUser lk_msdyn_incidenttypeproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_modifiedby")]
    public SystemUser lk_msdyn_incidenttypeproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_incidenttypeproduct_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_incidenttypeproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Appointments")]
    public IEnumerable<Appointment> msdyn_incidenttypeproduct_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_incidenttypeproduct_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Emails")]
    public IEnumerable<Email> msdyn_incidenttypeproduct_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_incidenttypeproduct_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_incidenttypeproduct_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_incidenttypeproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_incidenttypeproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_incidenttypeproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_incidenttypeproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_incidenttypeproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_incidenttypeproduct_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_incidenttypeproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_incidenttypeproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_incidenttypeproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_Tasks")]
    public IEnumerable<Task> msdyn_incidenttypeproduct_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_incidenttypeproduct_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_incidenttypeproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_incidenttypeproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeproduct_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_incidenttypeproduct_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_incidenttypeproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_msdyn_incidenttypeproduct_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_incidenttypeproduct_Product")]
    public Product msdyn_product_msdyn_incidenttypeproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_incidenttypeproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_incidenttypeproduct_Product", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_incidenttypeproduct")]
    public SystemUser user_msdyn_incidenttypeproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_incidenttypeproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_incidenttypeproduct", null, value);
        }
    }
    
    public static msdyn_incidenttypeproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_incidenttypeproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>This entity gives the ability to pre-configure services to be added to a work order when the related incident is added to the work order</para>
/// <para>Display Name: Incident Type Service</para>
/// </summary>
[EntityLogicalName("msdyn_incidenttypeservice")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_incidenttypeservice : ExtendedEntity<msdyn_incidenttypeserviceState, msdyn_incidenttypeservice_statuscode> {
    
    public const string EntityLogicalName = "msdyn_incidenttypeservice";
    
    public const int EntityTypeCode = 10316;
    
    public msdyn_incidenttypeservice() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_incidenttypeservice(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeserviceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_incidenttypeserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Incident Type Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttypeserviceid")]
    [DisplayName("Incident Type Service")]
    public Guid? msdyn_incidenttypeserviceId {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeserviceid");
        }
        set {
            SetId("msdyn_incidenttypeserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Incident type suggestion result applied to this incident type service.</para>
    /// <para>Display Name: Applied Suggestion Result</para>
    /// </summary>
    [AttributeLogicalName("msdyn_appliedsuggestionresult")]
    [DisplayName("Applied Suggestion Result")]
    public EntityReference msdyn_AppliedSuggestionResult {
        get {
            return GetAttributeValue<EntityReference>("msdyn_appliedsuggestionresult");
        }
        set {
            SetAttributeValue("msdyn_appliedsuggestionresult", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the description of the service as presented to the customer. The value defaults to the description defined on the service.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the duration of the service.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>The Incident related to this product</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttype")]
    [DisplayName("Incident Type")]
    public EntityReference msdyn_IncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_incidenttype");
        }
        set {
            SetAttributeValue("msdyn_incidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>Enter any internal notes you want to track on this service.</para>
    /// <para>Display Name: Internal Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internaldescription")]
    [DisplayName("Internal Description")]
    public string msdyn_InternalDescription {
        get {
            return GetAttributeValue<string>("msdyn_internaldescription");
        }
        set {
            SetAttributeValue("msdyn_internaldescription", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Product/Service associated with Incident Type Service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_service")]
    [DisplayName("Service")]
    public EntityReference msdyn_Service {
        get {
            return GetAttributeValue<EntityReference>("msdyn_service");
        }
        set {
            SetAttributeValue("msdyn_service", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this service</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Incident Type Service</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_incidenttypeserviceState? statecode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeserviceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Incident Type Service</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_incidenttypeservice_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeservice_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_createdby")]
    public SystemUser lk_msdyn_incidenttypeservice_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservice_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservice_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_createdonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeservice_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservice_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_modifiedby")]
    public SystemUser lk_msdyn_incidenttypeservice_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservice_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservice_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservice_modifiedonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeservice_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservice_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_incidenttypeservice_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_incidenttypeservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_Appointments")]
    public IEnumerable<Appointment> msdyn_incidenttypeservice_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_incidenttypeservice_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_Emails")]
    public IEnumerable<Email> msdyn_incidenttypeservice_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_incidenttypeservice_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_incidenttypeservice_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_incidenttypeservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_incidenttypeservice_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_incidenttypeservice_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_incidenttypeservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_incidenttypeservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_incidenttypeservice_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_incidenttypeservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_SyncErrors")]
    public IEnumerable<SyncError> msdyn_incidenttypeservice_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_incidenttypeservice_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_Tasks")]
    public IEnumerable<Task> msdyn_incidenttypeservice_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_incidenttypeservice_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_incidenttypeservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_incidenttypeservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservice_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_incidenttypeservice_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_incidenttypeservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_msdyn_incidenttypeservice_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_service")]
    [RelationshipSchemaName("msdyn_product_msdyn_incidenttypeservice_Service")]
    public Product msdyn_product_msdyn_incidenttypeservice_Service {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_incidenttypeservice_Service", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_incidenttypeservice_Service", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_incidenttypeservice")]
    public SystemUser user_msdyn_incidenttypeservice {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_incidenttypeservice", null);
        }
        set {
            SetRelatedEntity("user_msdyn_incidenttypeservice", null, value);
        }
    }
    
    public static msdyn_incidenttypeservice Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_incidenttypeservice,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>In this entity you define all the default service tasks that should be added to the work order as soon as this incident type is added to the work order</para>
/// <para>Display Name: Incident Type Service Task</para>
/// </summary>
[EntityLogicalName("msdyn_incidenttypeservicetask")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_incidenttypeservicetask : ExtendedEntity<msdyn_incidenttypeservicetaskState, msdyn_incidenttypeservicetask_statuscode> {
    
    public const string EntityLogicalName = "msdyn_incidenttypeservicetask";
    
    public const int EntityTypeCode = 10317;
    
    public msdyn_incidenttypeservicetask() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_incidenttypeservicetask(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeservicetaskid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_incidenttypeservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Incident Type Service Task</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttypeservicetaskid")]
    [DisplayName("Incident Type Service Task")]
    public Guid? msdyn_incidenttypeservicetaskId {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeservicetaskid");
        }
        set {
            SetId("msdyn_incidenttypeservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedduration")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Incident Type associated with Incident Type Service Task.</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttype")]
    [DisplayName("Incident Type")]
    public EntityReference msdyn_IncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_incidenttype");
        }
        set {
            SetAttributeValue("msdyn_incidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>Depicts whether inspection is enabled for Incident Type Service Task</para>
    /// <para>Display Name: Has Inspection</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectionenabled")]
    [DisplayName("Has Inspection")]
    public bool? msdyn_InspectionEnabled {
        get {
            return GetAttributeValue<bool?>("msdyn_inspectionenabled");
        }
        set {
            SetAttributeValue("msdyn_inspectionenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this task within the incident tasks.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Service Task Type associated with Incident Type Service Task.</para>
    /// <para>Display Name: Task Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_tasktype")]
    [DisplayName("Task Type")]
    public EntityReference msdyn_TaskType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_tasktype");
        }
        set {
            SetAttributeValue("msdyn_tasktype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Inspection associated with Incident Type Service Task.</para>
    /// <para>Display Name: Inspection</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspection")]
    [DisplayName("Inspection")]
    public EntityReference msdyn_inspection {
        get {
            return GetAttributeValue<EntityReference>("msdyn_inspection");
        }
        set {
            SetAttributeValue("msdyn_inspection", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaire")]
    [DisplayName("Questionnaire")]
    public EntityReference ovs_Questionnaire {
        get {
            return GetAttributeValue<EntityReference>("ovs_questionnaire");
        }
        set {
            SetAttributeValue("ovs_questionnaire", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Has Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireenabled")]
    [DisplayName("Has Questionnaire")]
    public bool? ovs_questionnaireenabled {
        get {
            return GetAttributeValue<bool?>("ovs_questionnaireenabled");
        }
        set {
            SetAttributeValue("ovs_questionnaireenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Incident Type Service Task</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_incidenttypeservicetaskState? statecode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeservicetaskState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Incident Type Service Task</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_incidenttypeservicetask_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_incidenttypeservicetask_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_createdby")]
    public SystemUser lk_msdyn_incidenttypeservicetask_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservicetask_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservicetask_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_createdonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeservicetask_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservicetask_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservicetask_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_modifiedby")]
    public SystemUser lk_msdyn_incidenttypeservicetask_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservicetask_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservicetask_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby")]
    public SystemUser lk_msdyn_incidenttypeservicetask_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_incidenttypeservicetask_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservicetask_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_incidenttypeservicetask_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_incidenttypeservicetask_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservicetask_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_incidenttypeservicetask_SyncErrors")]
    public IEnumerable<SyncError> msdyn_incidenttypeservicetask_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_incidenttypeservicetask_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_incidenttypeservicetask_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_msdyn_incidenttypeservicetask_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_tasktype")]
    [RelationshipSchemaName("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType")]
    public msdyn_servicetasktype msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType {
        get {
            return GetRelatedEntity<msdyn_servicetasktype>("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_questionnaire")]
    [RelationshipSchemaName("ovs_incidenttypeservicetask_Questionnaire")]
    public ovs_Questionnaire ovs_incidenttypeservicetask_Questionnaire {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ovs_incidenttypeservicetask_Questionnaire", null);
        }
        set {
            SetRelatedEntity("ovs_incidenttypeservicetask_Questionnaire", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_incidenttypeservicetask")]
    public SystemUser user_msdyn_incidenttypeservicetask {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_incidenttypeservicetask", null);
        }
        set {
            SetRelatedEntity("user_msdyn_incidenttypeservicetask", null, value);
        }
    }
    
    public static msdyn_incidenttypeservicetask Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_incidenttypeservicetask,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("msdyn_msdyn_functionallocation_account")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_msdyn_functionallocation_account : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "msdyn_msdyn_functionallocation_account";
    
    public const int EntityTypeCode = 10123;
    
    public msdyn_msdyn_functionallocation_account() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_msdyn_functionallocation_account(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("msdyn_msdyn_functionallocation_accountid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_msdyn_functionallocation_accountid", value);
        }
    }
    
    [AttributeLogicalName("msdyn_msdyn_functionallocation_accountid")]
    public Guid? msdyn_msdyn_functionallocation_accountId {
        get {
            return GetAttributeValue<Guid?>("msdyn_msdyn_functionallocation_accountid");
        }
        set {
            SetId("msdyn_msdyn_functionallocation_accountid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("accountid")]
    public Guid? accountid {
        get {
            return GetAttributeValue<Guid?>("accountid");
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocationid")]
    public Guid? msdyn_functionallocationid {
        get {
            return GetAttributeValue<Guid?>("msdyn_functionallocationid");
        }
    }
    
    public static msdyn_msdyn_functionallocation_account Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_msdyn_functionallocation_account,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Order Invoicing Product</para>
/// </summary>
[EntityLogicalName("msdyn_orderinvoicingproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_orderinvoicingproduct : ExtendedEntity<msdyn_orderinvoicingproductState, msdyn_orderinvoicingproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_orderinvoicingproduct";
    
    public const int EntityTypeCode = 10325;
    
    public msdyn_orderinvoicingproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_orderinvoicingproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_orderinvoicingproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_orderinvoicingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Order invoicing product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_orderinvoicingproductid")]
    [DisplayName("Order invoicing product")]
    public Guid? msdyn_orderinvoicingproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_orderinvoicingproductid");
        }
        set {
            SetId("msdyn_orderinvoicingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Total sales amount for the product line.</para>
    /// <para>Display Name: Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amount")]
    [DisplayName("Amount")]
    public decimal? msdyn_Amount {
        get {
            return GetMoneyValue("msdyn_amount");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this product within the order invoicing setup.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>The invoicing setup this product belongs to.</para>
    /// <para>Display Name: Order Invoicing Setup</para>
    /// </summary>
    [AttributeLogicalName("msdyn_orderinvoicingsetup")]
    [DisplayName("Order Invoicing Setup")]
    public EntityReference msdyn_OrderInvoicingSetup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_orderinvoicingsetup");
        }
        set {
            SetAttributeValue("msdyn_orderinvoicingsetup", value);
        }
    }
    
    /// <summary>
    /// <para>The product associated with the transaction.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity to bill.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public decimal? msdyn_Quantity {
        get {
            return GetAttributeValue<decimal?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you want to charge the customer per unit.</para>
    /// <para>Display Name: Unit Price</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitprice")]
    [DisplayName("Unit Price")]
    public decimal? msdyn_UnitPrice {
        get {
            return GetMoneyValue("msdyn_unitprice");
        }
        set {
            SetMoneyValue("msdyn_unitprice", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Amount in base currency.</para>
    /// <para>Display Name: Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amount_base")]
    [DisplayName("Amount (Base)")]
    public decimal? msdyn_amount_Base {
        get {
            return GetMoneyValue("msdyn_amount_base");
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Unit Price in base currency.</para>
    /// <para>Display Name: Unit Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitprice_base")]
    [DisplayName("Unit Price (Base)")]
    public decimal? msdyn_unitprice_Base {
        get {
            return GetMoneyValue("msdyn_unitprice_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Order invoicing product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_orderinvoicingproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_orderinvoicingproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Order invoicing product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_orderinvoicingproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_orderinvoicingproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_createdby")]
    public SystemUser lk_msdyn_orderinvoicingproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_orderinvoicingproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_orderinvoicingproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_orderinvoicingproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_orderinvoicingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_orderinvoicingproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_modifiedby")]
    public SystemUser lk_msdyn_orderinvoicingproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_orderinvoicingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_orderinvoicingproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_orderinvoicingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_orderinvoicingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_orderinvoicingproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_orderinvoicingproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_orderinvoicingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_orderinvoicingproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_orderinvoicingproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_orderinvoicingproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_orderinvoicingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_orderinvoicingproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_orderinvoicingproduct_Product")]
    public Product msdyn_product_msdyn_orderinvoicingproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_orderinvoicingproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_orderinvoicingproduct_Product", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_orderinvoicingproduct")]
    public SystemUser user_msdyn_orderinvoicingproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_orderinvoicingproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_orderinvoicingproduct", null, value);
        }
    }
    
    public static msdyn_orderinvoicingproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_orderinvoicingproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Property Asset Association</para>
/// </summary>
[EntityLogicalName("msdyn_propertyassetassociation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_propertyassetassociation : ExtendedEntity<msdyn_propertyassetassociationState, msdyn_propertyassetassociation_statuscode> {
    
    public const string EntityLogicalName = "msdyn_propertyassetassociation";
    
    public const int EntityTypeCode = 10119;
    
    public msdyn_propertyassetassociation() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_propertyassetassociation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_propertyassetassociationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_propertyassetassociationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Property Asset Association</para>
    /// </summary>
    [AttributeLogicalName("msdyn_propertyassetassociationid")]
    [DisplayName("Property Asset Association")]
    public Guid? msdyn_propertyassetassociationId {
        get {
            return GetAttributeValue<Guid?>("msdyn_propertyassetassociationid");
        }
        set {
            SetId("msdyn_propertyassetassociationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_customerasset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(850)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Property</para>
    /// </summary>
    [AttributeLogicalName("msdyn_property")]
    [DisplayName("Property")]
    public EntityReference msdyn_property {
        get {
            return GetAttributeValue<EntityReference>("msdyn_property");
        }
        set {
            SetAttributeValue("msdyn_property", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Property Asset Association</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_propertyassetassociationState? statecode {
        get {
            return GetOptionSetValue<msdyn_propertyassetassociationState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Property Asset Association</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_propertyassetassociation_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_propertyassetassociation_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("ts_msdyn_functionallocation_paa")]
    [DisplayName("Functional Location")]
    public EntityReference ts_msdyn_functionallocation_paa {
        get {
            return GetAttributeValue<EntityReference>("ts_msdyn_functionallocation_paa");
        }
        set {
            SetAttributeValue("ts_msdyn_functionallocation_paa", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_createdby")]
    public SystemUser lk_msdyn_propertyassetassociation_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertyassetassociation_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertyassetassociation_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_createdonbehalfby")]
    public SystemUser lk_msdyn_propertyassetassociation_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertyassetassociation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertyassetassociation_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_modifiedby")]
    public SystemUser lk_msdyn_propertyassetassociation_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertyassetassociation_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertyassetassociation_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_propertyassetassociation_modifiedonbehalfby")]
    public SystemUser lk_msdyn_propertyassetassociation_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertyassetassociation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertyassetassociation_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_propertyassetassociation_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_propertyassetassociation_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_propertyassetassociation_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_propertyassetassociation_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_propertyassetassociation_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_propertyassetassociation_SyncErrors")]
    public IEnumerable<SyncError> msdyn_propertyassetassociation_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_propertyassetassociation_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_propertyassetassociation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_functionallocation_paa")]
    [RelationshipSchemaName("ts_msdyn_functionallocation_msdyn_ppa")]
    public msdyn_FunctionalLocation ts_msdyn_functionallocation_msdyn_ppa {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_msdyn_functionallocation_msdyn_ppa", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_functionallocation_msdyn_ppa", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_propertyassetassociation")]
    public SystemUser user_msdyn_propertyassetassociation {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_propertyassetassociation", null);
        }
        set {
            SetRelatedEntity("user_msdyn_propertyassetassociation", null, value);
        }
    }
    
    public static msdyn_propertyassetassociation Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_propertyassetassociation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Property Log</para>
/// </summary>
[EntityLogicalName("msdyn_propertylog")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_propertylog : ExtendedEntity<msdyn_propertylogState, msdyn_propertylog_statuscode> {
    
    public const string EntityLogicalName = "msdyn_propertylog";
    
    public const int EntityTypeCode = 10120;
    
    public msdyn_propertylog() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_propertylog(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_propertylogid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_propertylogid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Property Log</para>
    /// </summary>
    [AttributeLogicalName("msdyn_propertylogid")]
    [DisplayName("Property Log")]
    public Guid? msdyn_propertylogId {
        get {
            return GetAttributeValue<Guid?>("msdyn_propertylogid");
        }
        set {
            SetId("msdyn_propertylogid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Boolean Value</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booleanvalue")]
    [DisplayName("Boolean Value")]
    public bool? msdyn_booleanvalue {
        get {
            return GetAttributeValue<bool?>("msdyn_booleanvalue");
        }
        set {
            SetAttributeValue("msdyn_booleanvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_customerasset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date/time Value</para>
    /// </summary>
    [AttributeLogicalName("msdyn_datevalue")]
    [DisplayName("Date/time Value")]
    public DateTime? msdyn_datevalue {
        get {
            return GetAttributeValue<DateTime?>("msdyn_datevalue");
        }
        set {
            SetAttributeValue("msdyn_datevalue", value);
        }
    }
    
    /// <summary>
    /// <para>For Internal Use only</para>
    /// <para>Display Name: Delta</para>
    /// </summary>
    [AttributeLogicalName("msdyn_delta")]
    [DisplayName("Delta")]
    public decimal? msdyn_delta {
        get {
            return GetAttributeValue<decimal?>("msdyn_delta");
        }
        set {
            SetAttributeValue("msdyn_delta", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Latest</para>
    /// </summary>
    [AttributeLogicalName("msdyn_islatest")]
    [DisplayName("Is Latest")]
    public bool? msdyn_islatest {
        get {
            return GetAttributeValue<bool?>("msdyn_islatest");
        }
        set {
            SetAttributeValue("msdyn_islatest", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(850)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Number Value</para>
    /// </summary>
    [AttributeLogicalName("msdyn_numbervalue")]
    [DisplayName("Number Value")]
    public decimal? msdyn_numbervalue {
        get {
            return GetAttributeValue<decimal?>("msdyn_numbervalue");
        }
        set {
            SetAttributeValue("msdyn_numbervalue", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Property</para>
    /// </summary>
    [AttributeLogicalName("msdyn_property")]
    [DisplayName("Property")]
    public EntityReference msdyn_property {
        get {
            return GetAttributeValue<EntityReference>("msdyn_property");
        }
        set {
            SetAttributeValue("msdyn_property", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Reading Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_readingtime")]
    [DisplayName("Reading Time")]
    public DateTime? msdyn_readingtime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_readingtime");
        }
        set {
            SetAttributeValue("msdyn_readingtime", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: String Value</para>
    /// </summary>
    [AttributeLogicalName("msdyn_stringvalue")]
    [DisplayName("String Value")]
    [MaxLength(4000)]
    public string msdyn_stringvalue {
        get {
            return GetAttributeValue<string>("msdyn_stringvalue");
        }
        set {
            SetAttributeValue("msdyn_stringvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Value</para>
    /// </summary>
    [AttributeLogicalName("msdyn_valuetodisplay")]
    [DisplayName("Value")]
    [MaxLength(850)]
    public string msdyn_valuetodisplay {
        get {
            return GetAttributeValue<string>("msdyn_valuetodisplay");
        }
        set {
            SetAttributeValue("msdyn_valuetodisplay", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Property Log</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_propertylogState? statecode {
        get {
            return GetOptionSetValue<msdyn_propertylogState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Property Log</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_propertylog_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_propertylog_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("ts_msdyn_functionallocation")]
    [DisplayName("Functional Location")]
    public EntityReference ts_msdyn_functionallocation {
        get {
            return GetAttributeValue<EntityReference>("ts_msdyn_functionallocation");
        }
        set {
            SetAttributeValue("ts_msdyn_functionallocation", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_propertylog_createdby")]
    public SystemUser lk_msdyn_propertylog_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertylog_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertylog_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_propertylog_createdonbehalfby")]
    public SystemUser lk_msdyn_propertylog_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertylog_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertylog_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_propertylog_modifiedby")]
    public SystemUser lk_msdyn_propertylog_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertylog_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertylog_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_propertylog_modifiedonbehalfby")]
    public SystemUser lk_msdyn_propertylog_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_propertylog_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_propertylog_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_propertylog_customerasset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_propertylog_customerasset", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_propertylog_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_propertylog_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_propertylog_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_propertylog_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_propertylog_SyncErrors")]
    public IEnumerable<SyncError> msdyn_propertylog_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_propertylog_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_propertylog_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_functionallocation")]
    [RelationshipSchemaName("ts_msdyn_functionallocation_msdyn_pl")]
    public msdyn_FunctionalLocation ts_msdyn_functionallocation_msdyn_pl {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_msdyn_functionallocation_msdyn_pl", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_functionallocation_msdyn_pl", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_propertylog")]
    public SystemUser user_msdyn_propertylog {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_propertylog", null);
        }
        set {
            SetRelatedEntity("user_msdyn_propertylog", null, value);
        }
    }
    
    public static msdyn_propertylog Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_propertylog,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Record Purchase Orders pertaining to Work Orders or otherwise</para>
/// <para>Display Name: Purchase Order</para>
/// </summary>
[EntityLogicalName("msdyn_purchaseorder")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_purchaseorder : ExtendedEntity<msdyn_purchaseorderState, msdyn_purchaseorder_statuscode> {
    
    public const string EntityLogicalName = "msdyn_purchaseorder";
    
    public const int EntityTypeCode = 10334;
    
    public msdyn_purchaseorder() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_purchaseorder(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_purchaseorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_purchaseorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Purchase Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchaseorderid")]
    [DisplayName("Purchase Order")]
    public Guid? msdyn_purchaseorderId {
        get {
            return GetAttributeValue<Guid?>("msdyn_purchaseorderid");
        }
        set {
            SetId("msdyn_purchaseorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address1")]
    [DisplayName("Street 1")]
    [MaxLength(250)]
    public string msdyn_Address1 {
        get {
            return GetAttributeValue<string>("msdyn_address1");
        }
        set {
            SetAttributeValue("msdyn_address1", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address2")]
    [DisplayName("Street 2")]
    [MaxLength(250)]
    public string msdyn_Address2 {
        get {
            return GetAttributeValue<string>("msdyn_address2");
        }
        set {
            SetAttributeValue("msdyn_address2", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address3")]
    [DisplayName("Street 3")]
    [MaxLength(250)]
    public string msdyn_Address3 {
        get {
            return GetAttributeValue<string>("msdyn_address3");
        }
        set {
            SetAttributeValue("msdyn_address3", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the location to ship the products of this PO to.</para>
    /// <para>Display Name: Address Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_addressname")]
    [DisplayName("Address Name")]
    [MaxLength(250)]
    public string msdyn_AddressName {
        get {
            return GetAttributeValue<string>("msdyn_addressname");
        }
        set {
            SetAttributeValue("msdyn_addressname", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Amount Billed</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amountbilled")]
    [DisplayName("Amount Billed")]
    public decimal? msdyn_AmountBilled {
        get {
            return GetMoneyValue("msdyn_amountbilled");
        }
        set {
            SetMoneyValue("msdyn_amountbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of the approval.</para>
    /// <para>Display Name: Approval Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_approvalstatus")]
    [DisplayName("Approval Status")]
    public msdyn_poapprovalstatus? msdyn_ApprovalStatus {
        get {
            return GetOptionSetValue<msdyn_poapprovalstatus>("msdyn_approvalstatus");
        }
        set {
            SetOptionSetValue("msdyn_approvalstatus", value);
        }
    }
    
    /// <summary>
    /// <para>The user who approved or rejected this PO</para>
    /// <para>Display Name: Approved/Rejected By</para>
    /// </summary>
    [AttributeLogicalName("msdyn_approvedrejectedby")]
    [DisplayName("Approved/Rejected By")]
    public EntityReference msdyn_ApprovedRejectedBy {
        get {
            return GetAttributeValue<EntityReference>("msdyn_approvedrejectedby");
        }
        set {
            SetAttributeValue("msdyn_approvedrejectedby", value);
        }
    }
    
    /// <summary>
    /// <para>Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field.</para>
    /// <para>Display Name: Auto-Numbering</para>
    /// </summary>
    [AttributeLogicalName("msdyn_autonumbering")]
    [DisplayName("Auto-Numbering")]
    [MaxLength(100)]
    public string msdyn_AutoNumbering {
        get {
            return GetAttributeValue<string>("msdyn_autonumbering");
        }
        set {
            SetAttributeValue("msdyn_autonumbering", value);
        }
    }
    
    /// <summary>
    /// <para>If purchase order is being ordered directly to a booking specify here. Note, when specified, by default all products will receive directly to booking.</para>
    /// <para>Display Name: Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booking")]
    [DisplayName("Booking")]
    public EntityReference msdyn_Booking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_booking");
        }
        set {
            SetAttributeValue("msdyn_booking", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("msdyn_city")]
    [DisplayName("City")]
    [MaxLength(80)]
    public string msdyn_City {
        get {
            return GetAttributeValue<string>("msdyn_city");
        }
        set {
            SetAttributeValue("msdyn_city", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("msdyn_country")]
    [DisplayName("Country/Region")]
    [MaxLength(80)]
    public string msdyn_Country {
        get {
            return GetAttributeValue<string>("msdyn_country");
        }
        set {
            SetAttributeValue("msdyn_country", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date you expect to receive your order. Note that products added once the date is specified here will automatically be set to this date.</para>
    /// <para>Display Name: Date Expected</para>
    /// </summary>
    [AttributeLogicalName("msdyn_dateexpected")]
    [DisplayName("Date Expected")]
    public DateTime? msdyn_DateExpected {
        get {
            return GetAttributeValue<DateTime?>("msdyn_dateexpected");
        }
        set {
            SetAttributeValue("msdyn_dateexpected", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for User associated with Purchase Order.</para>
    /// <para>Display Name: Ordered By</para>
    /// </summary>
    [AttributeLogicalName("msdyn_orderedby")]
    [DisplayName("Ordered By")]
    public EntityReference msdyn_OrderedBy {
        get {
            return GetAttributeValue<EntityReference>("msdyn_orderedby");
        }
        set {
            SetAttributeValue("msdyn_orderedby", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date you submitted your order to the vendor. Note this field is for information only.</para>
    /// <para>Display Name: Purchase Order Date</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchaseorderdate")]
    [DisplayName("Purchase Order Date")]
    public DateTime? msdyn_PODate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_purchaseorderdate");
        }
        set {
            SetAttributeValue("msdyn_purchaseorderdate", value);
        }
    }
    
    /// <summary>
    /// <para>The payment terms for this PO</para>
    /// <para>Display Name: Payment Term</para>
    /// </summary>
    [AttributeLogicalName("msdyn_paymentterm")]
    [DisplayName("Payment Term")]
    public EntityReference msdyn_PaymentTerm {
        get {
            return GetAttributeValue<EntityReference>("msdyn_paymentterm");
        }
        set {
            SetAttributeValue("msdyn_paymentterm", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Postal Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_postalcode")]
    [DisplayName("Postal Code")]
    [MaxLength(20)]
    public string msdyn_PostalCode {
        get {
            return GetAttributeValue<string>("msdyn_postalcode");
        }
        set {
            SetAttributeValue("msdyn_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Warehouse where products of this PO will be received to</para>
    /// <para>Display Name: Receive to Warehouse</para>
    /// </summary>
    [AttributeLogicalName("msdyn_receivetowarehouse")]
    [DisplayName("Receive to Warehouse")]
    public EntityReference msdyn_ReceivetoWarehouse {
        get {
            return GetAttributeValue<EntityReference>("msdyn_receivetowarehouse");
        }
        set {
            SetAttributeValue("msdyn_receivetowarehouse", value);
        }
    }
    
    /// <summary>
    /// <para>Resource that requested the purchase</para>
    /// <para>Display Name: Requested By Resource</para>
    /// </summary>
    [AttributeLogicalName("msdyn_requestedbyresource")]
    [DisplayName("Requested By Resource")]
    public EntityReference msdyn_RequestedByResource {
        get {
            return GetAttributeValue<EntityReference>("msdyn_requestedbyresource");
        }
        set {
            SetAttributeValue("msdyn_requestedbyresource", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the location to ship to. If the PO has been associated to a work order or a schedule, you can ship directly to the service account address.</para>
    /// <para>Display Name: Ship To</para>
    /// </summary>
    [AttributeLogicalName("msdyn_shipto")]
    [DisplayName("Ship To")]
    public msdyn_poshiptotype? msdyn_ShipTo {
        get {
            return GetOptionSetValue<msdyn_poshiptotype>("msdyn_shipto");
        }
        set {
            SetOptionSetValue("msdyn_shipto", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment by vendor</para>
    /// <para>Display Name: Ship Via</para>
    /// </summary>
    [AttributeLogicalName("msdyn_shipvia")]
    [DisplayName("Ship Via")]
    public EntityReference msdyn_ShipVia {
        get {
            return GetAttributeValue<EntityReference>("msdyn_shipvia");
        }
        set {
            SetAttributeValue("msdyn_shipvia", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: State Or Province</para>
    /// </summary>
    [AttributeLogicalName("msdyn_stateorprovince")]
    [DisplayName("State Or Province")]
    [MaxLength(50)]
    public string msdyn_StateOrProvince {
        get {
            return GetAttributeValue<string>("msdyn_stateorprovince");
        }
        set {
            SetAttributeValue("msdyn_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Purchase Order Substatus</para>
    /// <para>Display Name: Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_substatus")]
    [DisplayName("Substatus")]
    public EntityReference msdyn_SubStatus {
        get {
            return GetAttributeValue<EntityReference>("msdyn_substatus");
        }
        set {
            SetAttributeValue("msdyn_substatus", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of the purchase order.</para>
    /// <para>Display Name: System Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_systemstatus")]
    [DisplayName("System Status")]
    public msdyn_posystemstatus? msdyn_SystemStatus {
        get {
            return GetOptionSetValue<msdyn_posystemstatus>("msdyn_systemstatus");
        }
        set {
            SetOptionSetValue("msdyn_systemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Total Amount (used by Field Service only)</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("Total Amount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
        set {
            SetMoneyValue("msdyn_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Vendor you wish to purchase from</para>
    /// <para>Display Name: Vendor</para>
    /// </summary>
    [AttributeLogicalName("msdyn_vendor")]
    [DisplayName("Vendor")]
    public EntityReference msdyn_Vendor {
        get {
            return GetAttributeValue<EntityReference>("msdyn_vendor");
        }
        set {
            SetAttributeValue("msdyn_vendor", value);
        }
    }
    
    /// <summary>
    /// <para>If you wish to display a note for the vendor on this PO specify it here</para>
    /// <para>Display Name: Vendor Note</para>
    /// </summary>
    [AttributeLogicalName("msdyn_vendornote")]
    [DisplayName("Vendor Note")]
    public string msdyn_VendorNote {
        get {
            return GetAttributeValue<string>("msdyn_vendornote");
        }
        set {
            SetAttributeValue("msdyn_vendornote", value);
        }
    }
    
    /// <summary>
    /// <para>If purchase order is being ordered directly to a work order specify here. Note, when specified, by default all products will receive directly to work order.</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the amount billed in the base currency.</para>
    /// <para>Display Name: Amount Billed (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amountbilled_base")]
    [DisplayName("Amount Billed (Base)")]
    public decimal? msdyn_amountbilled_Base {
        get {
            return GetMoneyValue("msdyn_amountbilled_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total amount in the base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? processid {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? stageid {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Purchase Order</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_purchaseorderState? statecode {
        get {
            return GetOptionSetValue<msdyn_purchaseorderState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Purchase Order</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_purchaseorder_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_purchaseorder_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string traversedpath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorder_createdby")]
    public SystemUser lk_msdyn_purchaseorder_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorder_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorder_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorder_createdonbehalfby")]
    public SystemUser lk_msdyn_purchaseorder_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorder_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorder_modifiedby")]
    public SystemUser lk_msdyn_purchaseorder_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorder_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorder_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorder_modifiedonbehalfby")]
    public SystemUser lk_msdyn_purchaseorder_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorder_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_vendor")]
    [RelationshipSchemaName("msdyn_account_msdyn_purchaseorder_Vendor")]
    public Account msdyn_account_msdyn_purchaseorder_Vendor {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_purchaseorder_Vendor", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_purchaseorder_Vendor", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_requestedbyresource")]
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource")]
    public BookableResource msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_msdyn_purchaseorder_RequestedByResource", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_booking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_purchaseorder_Booking", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder")]
    public IEnumerable<msdyn_purchaseorderproduct> msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_purchaseorder_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_purchaseorder_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_Appointments")]
    public IEnumerable<Appointment> msdyn_purchaseorder_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_purchaseorder_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_Emails")]
    public IEnumerable<Email> msdyn_purchaseorder_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_purchaseorder_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_purchaseorder_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_purchaseorder_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_purchaseorder_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_purchaseorder_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_purchaseorder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_purchaseorder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_purchaseorder_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_purchaseorder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_SyncErrors")]
    public IEnumerable<SyncError> msdyn_purchaseorder_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_purchaseorder_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_Tasks")]
    public IEnumerable<Task> msdyn_purchaseorder_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_purchaseorder_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_purchaseorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_purchaseorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorder_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_purchaseorder_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_purchaseorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_approvedrejectedby")]
    [RelationshipSchemaName("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy")]
    public SystemUser msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy", null);
        }
        set {
            SetRelatedEntity("msdyn_systemuser_msdyn_purchaseorder_ApprovedRejectedBy", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_orderedby")]
    [RelationshipSchemaName("msdyn_systemuser_msdyn_purchaseorder_OrderedBy")]
    public SystemUser msdyn_systemuser_msdyn_purchaseorder_OrderedBy {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_systemuser_msdyn_purchaseorder_OrderedBy", null);
        }
        set {
            SetRelatedEntity("msdyn_systemuser_msdyn_purchaseorder_OrderedBy", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_purchaseorder")]
    public SystemUser user_msdyn_purchaseorder {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_purchaseorder", null);
        }
        set {
            SetRelatedEntity("user_msdyn_purchaseorder", null, value);
        }
    }
    
    public static msdyn_purchaseorder Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_purchaseorder,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Record products to be ordered on purchase order</para>
/// <para>Display Name: Purchase Order Product</para>
/// </summary>
[EntityLogicalName("msdyn_purchaseorderproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_purchaseorderproduct : ExtendedEntity<msdyn_purchaseorderproductState, msdyn_purchaseorderproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_purchaseorderproduct";
    
    public const int EntityTypeCode = 10336;
    
    public msdyn_purchaseorderproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_purchaseorderproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_purchaseorderproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_purchaseorderproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Purchase Order Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchaseorderproductid")]
    [DisplayName("Purchase Order Product")]
    public Guid? msdyn_purchaseorderproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_purchaseorderproductid");
        }
        set {
            SetId("msdyn_purchaseorderproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Link this product to Booking. If specified and warehouse is not set then product will be added to Resource Booking</para>
    /// <para>Display Name: Associate To Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_associatetobooking")]
    [DisplayName("Associate To Booking")]
    public EntityReference msdyn_AssociateToBooking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_associatetobooking");
        }
        set {
            SetAttributeValue("msdyn_associatetobooking", value);
        }
    }
    
    /// <summary>
    /// <para>Warehouse to which this product should be received to</para>
    /// <para>Display Name: Associate To Warehouse</para>
    /// </summary>
    [AttributeLogicalName("msdyn_associatetowarehouse")]
    [DisplayName("Associate To Warehouse")]
    public EntityReference msdyn_AssociateToWarehouse {
        get {
            return GetAttributeValue<EntityReference>("msdyn_associatetowarehouse");
        }
        set {
            SetAttributeValue("msdyn_associatetowarehouse", value);
        }
    }
    
    /// <summary>
    /// <para>Link this product to Work Order. If specified and warehouse is not set then product will be added to work order</para>
    /// <para>Display Name: Associate To Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_associatetoworkorder")]
    [DisplayName("Associate To Work Order")]
    public EntityReference msdyn_AssociateToWorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_associatetoworkorder");
        }
        set {
            SetAttributeValue("msdyn_associatetoworkorder", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date you expect this product to arrive to the shipping address. This value defaults to the date set on the PO.</para>
    /// <para>Display Name: Date Expected</para>
    /// </summary>
    [AttributeLogicalName("msdyn_dateexpected")]
    [DisplayName("Date Expected")]
    public DateTime? msdyn_DateExpected {
        get {
            return GetAttributeValue<DateTime?>("msdyn_dateexpected");
        }
        set {
            SetAttributeValue("msdyn_dateexpected", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the product description to display for the vendor.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Ordered</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isordered")]
    [DisplayName("Is Ordered")]
    public bool? msdyn_IsOrdered {
        get {
            return GetAttributeValue<bool?>("msdyn_isordered");
        }
        set {
            SetAttributeValue("msdyn_isordered", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of this product.</para>
    /// <para>Display Name: Item Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_itemstatus")]
    [DisplayName("Item Status")]
    public msdyn_purchaseorderproductstatus? msdyn_ItemStatus {
        get {
            return GetOptionSetValue<msdyn_purchaseorderproductstatus>("msdyn_itemstatus");
        }
        set {
            SetOptionSetValue("msdyn_itemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this product within the purchase order.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Product to order</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Purchase order this line item relates to</para>
    /// <para>Display Name: Purchase Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchaseorder")]
    [DisplayName("Purchase Order")]
    public EntityReference msdyn_PurchaseOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_purchaseorder");
        }
        set {
            SetAttributeValue("msdyn_purchaseorder", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity currently billed.</para>
    /// <para>Display Name: Quantity Billed</para>
    /// </summary>
    [AttributeLogicalName("msdyn_qtybilled")]
    [DisplayName("Quantity Billed")]
    public double? msdyn_QtyBilled {
        get {
            return GetAttributeValue<double?>("msdyn_qtybilled");
        }
        set {
            SetAttributeValue("msdyn_qtybilled", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity currently received.</para>
    /// <para>Display Name: Quantity Received</para>
    /// </summary>
    [AttributeLogicalName("msdyn_qtyreceived")]
    [DisplayName("Quantity Received")]
    public double? msdyn_QtyReceived {
        get {
            return GetAttributeValue<double?>("msdyn_qtyreceived");
        }
        set {
            SetAttributeValue("msdyn_qtyreceived", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity ordered.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public double? msdyn_Quantity {
        get {
            return GetAttributeValue<double?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total cost of this product. This is calculated by (Unit Cost * Units) + Additional Cost + Commission Costs</para>
    /// <para>Display Name: Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost")]
    [DisplayName("Total Cost")]
    public decimal? msdyn_TotalCost {
        get {
            return GetMoneyValue("msdyn_totalcost");
        }
        set {
            SetMoneyValue("msdyn_totalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Unit for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the cost of this product per unit.</para>
    /// <para>Display Name: Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost")]
    [DisplayName("Unit Cost")]
    public decimal? msdyn_UnitCost {
        get {
            return GetMoneyValue("msdyn_unitcost");
        }
        set {
            SetMoneyValue("msdyn_unitcost", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total cost in the base currency.</para>
    /// <para>Display Name: Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost_base")]
    [DisplayName("Total Cost (Base)")]
    public decimal? msdyn_totalcost_Base {
        get {
            return GetMoneyValue("msdyn_totalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit cost in the base currency.</para>
    /// <para>Display Name: Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost_base")]
    [DisplayName("Unit Cost (Base)")]
    public decimal? msdyn_unitcost_Base {
        get {
            return GetMoneyValue("msdyn_unitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Purchase Order Product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_purchaseorderproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_purchaseorderproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Purchase Order Product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_purchaseorderproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_purchaseorderproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_createdby")]
    public SystemUser lk_msdyn_purchaseorderproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorderproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorderproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_purchaseorderproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorderproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorderproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_modifiedby")]
    public SystemUser lk_msdyn_purchaseorderproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorderproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorderproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_purchaseorderproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_purchaseorderproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_purchaseorderproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_purchaseorderproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_associatetobooking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_purchaseorderproduct_AssociateToBooking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_purchaseorder")]
    [RelationshipSchemaName("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder")]
    public msdyn_purchaseorder msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_purchaseorder_msdyn_purchaseorderproduct_PurchaseOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_associatetoworkorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_purchaseorderproduct_Product")]
    public Product msdyn_product_msdyn_purchaseorderproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_purchaseorderproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_purchaseorderproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_purchaseorderproduct_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_purchaseorderproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Appointments")]
    public IEnumerable<Appointment> msdyn_purchaseorderproduct_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_purchaseorderproduct_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Emails")]
    public IEnumerable<Email> msdyn_purchaseorderproduct_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_purchaseorderproduct_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_purchaseorderproduct_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_purchaseorderproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_purchaseorderproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_purchaseorderproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_purchaseorderproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_purchaseorderproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_purchaseorderproduct_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_purchaseorderproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_purchaseorderproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_purchaseorderproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_Tasks")]
    public IEnumerable<Task> msdyn_purchaseorderproduct_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_purchaseorderproduct_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_purchaseorderproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_purchaseorderproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_purchaseorderproduct_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_purchaseorderproduct_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_purchaseorderproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_purchaseorderproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_purchaseorderproduct")]
    public SystemUser user_msdyn_purchaseorderproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_purchaseorderproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_purchaseorderproduct", null, value);
        }
    }
    
    public static msdyn_purchaseorderproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_purchaseorderproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Quote Invoicing Product</para>
/// </summary>
[EntityLogicalName("msdyn_quoteinvoicingproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_quoteinvoicingproduct : ExtendedEntity<msdyn_quoteinvoicingproductState, msdyn_quoteinvoicingproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_quoteinvoicingproduct";
    
    public const int EntityTypeCode = 10345;
    
    public msdyn_quoteinvoicingproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_quoteinvoicingproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_quoteinvoicingproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_quoteinvoicingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Quote Invoicing Produc</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quoteinvoicingproductid")]
    [DisplayName("Quote Invoicing Produc")]
    public Guid? msdyn_quoteinvoicingproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_quoteinvoicingproductid");
        }
        set {
            SetId("msdyn_quoteinvoicingproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Total sales amount for the product line.</para>
    /// <para>Display Name: Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amount")]
    [DisplayName("Amount")]
    public decimal? msdyn_Amount {
        get {
            return GetMoneyValue("msdyn_amount");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this product within the quote invoicing setup.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>The product associated with the transaction.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity to bill.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public decimal? msdyn_Quantity {
        get {
            return GetAttributeValue<decimal?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>The invoicing setup this product belongs to.</para>
    /// <para>Display Name: Quote Invoicing Setup</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quoteinvoicingsetup")]
    [DisplayName("Quote Invoicing Setup")]
    public EntityReference msdyn_QuoteInvoicingSetup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_quoteinvoicingsetup");
        }
        set {
            SetAttributeValue("msdyn_quoteinvoicingsetup", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you want to charge the customer per unit.</para>
    /// <para>Display Name: Unit Price</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitprice")]
    [DisplayName("Unit Price")]
    public decimal? msdyn_UnitPrice {
        get {
            return GetMoneyValue("msdyn_unitprice");
        }
        set {
            SetMoneyValue("msdyn_unitprice", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Amount in base currency.</para>
    /// <para>Display Name: Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_amount_base")]
    [DisplayName("Amount (Base)")]
    public decimal? msdyn_amount_Base {
        get {
            return GetMoneyValue("msdyn_amount_base");
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Value of the Unit Price in base currency.</para>
    /// <para>Display Name: Unit Price (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitprice_base")]
    [DisplayName("Unit Price (Base)")]
    public decimal? msdyn_unitprice_Base {
        get {
            return GetMoneyValue("msdyn_unitprice_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Quote Invoicing Produc</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_quoteinvoicingproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_quoteinvoicingproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Quote Invoicing Produc</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_quoteinvoicingproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_quoteinvoicingproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_createdby")]
    public SystemUser lk_msdyn_quoteinvoicingproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_quoteinvoicingproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_quoteinvoicingproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_quoteinvoicingproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_quoteinvoicingproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_quoteinvoicingproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_modifiedby")]
    public SystemUser lk_msdyn_quoteinvoicingproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_quoteinvoicingproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_quoteinvoicingproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_quoteinvoicingproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_quoteinvoicingproduct_Product")]
    public Product msdyn_product_msdyn_quoteinvoicingproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_quoteinvoicingproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_quoteinvoicingproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_quoteinvoicingproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_quoteinvoicingproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_quoteinvoicingproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_quoteinvoicingproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_quoteinvoicingproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_quoteinvoicingproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_quoteinvoicingproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_quoteinvoicingproduct_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_quoteinvoicingproduct")]
    public SystemUser user_msdyn_quoteinvoicingproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_quoteinvoicingproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_quoteinvoicingproduct", null, value);
        }
    }
    
    public static msdyn_quoteinvoicingproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_quoteinvoicingproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Records RMAs for products to be retuned from customers</para>
/// <para>Display Name: RMA</para>
/// </summary>
[EntityLogicalName("msdyn_rma")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_rma : ExtendedEntity<msdyn_rmaState, msdyn_rma_statuscode> {
    
    public const string EntityLogicalName = "msdyn_rma";
    
    public const int EntityTypeCode = 10348;
    
    public msdyn_rma() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_rma(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_rmaid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_rmaid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: RMA</para>
    /// </summary>
    [AttributeLogicalName("msdyn_rmaid")]
    [DisplayName("RMA")]
    public Guid? msdyn_rmaId {
        get {
            return GetAttributeValue<Guid?>("msdyn_rmaid");
        }
        set {
            SetId("msdyn_rmaid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>User who approved RMA</para>
    /// <para>Display Name: Approved By</para>
    /// </summary>
    [AttributeLogicalName("msdyn_approvedby")]
    [DisplayName("Approved By")]
    public EntityReference msdyn_ApprovedBy {
        get {
            return GetAttributeValue<EntityReference>("msdyn_approvedby");
        }
        set {
            SetAttributeValue("msdyn_approvedby", value);
        }
    }
    
    /// <summary>
    /// <para>Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field.</para>
    /// <para>Display Name: Auto-Numbering</para>
    /// </summary>
    [AttributeLogicalName("msdyn_autonumbering")]
    [DisplayName("Auto-Numbering")]
    [MaxLength(100)]
    public string msdyn_AutoNumbering {
        get {
            return GetAttributeValue<string>("msdyn_autonumbering");
        }
        set {
            SetAttributeValue("msdyn_autonumbering", value);
        }
    }
    
    /// <summary>
    /// <para>Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account.</para>
    /// <para>Display Name: Billing Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_billingaccount")]
    [DisplayName("Billing Account")]
    public EntityReference msdyn_BillingAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_billingaccount");
        }
        set {
            SetAttributeValue("msdyn_billingaccount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the date RMA was requested by the customer.</para>
    /// <para>Display Name: Date Requested</para>
    /// </summary>
    [AttributeLogicalName("msdyn_daterequested")]
    [DisplayName("Date Requested")]
    public DateTime? msdyn_DateRequested {
        get {
            return GetAttributeValue<DateTime?>("msdyn_daterequested");
        }
        set {
            SetAttributeValue("msdyn_daterequested", value);
        }
    }
    
    /// <summary>
    /// <para>Enter a short description of the RMA.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    [MaxLength(100)]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>ETA</para>
    /// <para>Display Name: ETA</para>
    /// </summary>
    [AttributeLogicalName("msdyn_eta")]
    [DisplayName("ETA")]
    public DateTime? msdyn_ETA {
        get {
            return GetAttributeValue<DateTime?>("msdyn_eta");
        }
        set {
            SetAttributeValue("msdyn_eta", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the tracking number of package</para>
    /// <para>Display Name: Packaging Tracking No</para>
    /// </summary>
    [AttributeLogicalName("msdyn_packagingtrackingno")]
    [DisplayName("Packaging Tracking No")]
    [MaxLength(100)]
    public string msdyn_PackagingTrackingNo {
        get {
            return GetAttributeValue<string>("msdyn_packagingtrackingno");
        }
        set {
            SetAttributeValue("msdyn_packagingtrackingno", value);
        }
    }
    
    /// <summary>
    /// <para>Price List that determines the pricing for this product</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the default action to be taken on all RMA Products.</para>
    /// <para>Display Name: Processing Action</para>
    /// </summary>
    [AttributeLogicalName("msdyn_processingaction")]
    [DisplayName("Processing Action")]
    public msdyn_rmaprocessingaction? msdyn_ProcessingAction {
        get {
            return GetOptionSetValue<msdyn_rmaprocessingaction>("msdyn_processingaction");
        }
        set {
            SetOptionSetValue("msdyn_processingaction", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Reference No</para>
    /// </summary>
    [AttributeLogicalName("msdyn_referenceno")]
    [DisplayName("Reference No")]
    [MaxLength(100)]
    public string msdyn_ReferenceNo {
        get {
            return GetAttributeValue<string>("msdyn_referenceno");
        }
        set {
            SetAttributeValue("msdyn_referenceno", value);
        }
    }
    
    /// <summary>
    /// <para>Contact who requested this return</para>
    /// <para>Display Name: Requested By Contact</para>
    /// </summary>
    [AttributeLogicalName("msdyn_requestedbycontact")]
    [DisplayName("Requested By Contact")]
    public EntityReference msdyn_RequestedByContact {
        get {
            return GetAttributeValue<EntityReference>("msdyn_requestedbycontact");
        }
        set {
            SetAttributeValue("msdyn_requestedbycontact", value);
        }
    }
    
    /// <summary>
    /// <para>Account to be serviced</para>
    /// <para>Display Name: Service Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceaccount")]
    [DisplayName("Service Account")]
    public EntityReference msdyn_ServiceAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceaccount");
        }
        set {
            SetAttributeValue("msdyn_serviceaccount", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment by Customer</para>
    /// <para>Display Name: Ship Via</para>
    /// </summary>
    [AttributeLogicalName("msdyn_shipvia")]
    [DisplayName("Ship Via")]
    public EntityReference msdyn_ShipVia {
        get {
            return GetAttributeValue<EntityReference>("msdyn_shipvia");
        }
        set {
            SetAttributeValue("msdyn_shipvia", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the tracking number of the shipment.</para>
    /// <para>Display Name: Shipping Tracking No</para>
    /// </summary>
    [AttributeLogicalName("msdyn_shippingtrackingno")]
    [DisplayName("Shipping Tracking No")]
    [MaxLength(100)]
    public string msdyn_ShippingTrackingNo {
        get {
            return GetAttributeValue<string>("msdyn_shippingtrackingno");
        }
        set {
            SetAttributeValue("msdyn_shippingtrackingno", value);
        }
    }
    
    /// <summary>
    /// <para>RMA Substatus</para>
    /// <para>Display Name: Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_substatus")]
    [DisplayName("Substatus")]
    public EntityReference msdyn_SubStatus {
        get {
            return GetAttributeValue<EntityReference>("msdyn_substatus");
        }
        set {
            SetAttributeValue("msdyn_substatus", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of the RMA.</para>
    /// <para>Display Name: System Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_systemstatus")]
    [DisplayName("System Status")]
    public msdyn_rmasystemstatus? msdyn_SystemStatus {
        get {
            return GetOptionSetValue<msdyn_rmasystemstatus>("msdyn_systemstatus");
        }
        set {
            SetOptionSetValue("msdyn_systemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Tax Code to be used to calculate tax when RMA is taxable. By default the system will use the tax code specified on the service account</para>
    /// <para>Display Name: Tax Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxcode")]
    [DisplayName("Tax Code")]
    public EntityReference msdyn_TaxCode {
        get {
            return GetAttributeValue<EntityReference>("msdyn_taxcode");
        }
        set {
            SetAttributeValue("msdyn_taxcode", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if RMA is taxable</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount of all RMA Products including tax.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("Total Amount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
        set {
            SetMoneyValue("msdyn_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Work Order this RMA is linked to</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the unique number identifying this RMA record.</para>
    /// <para>Display Name: RMA Number</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("RMA Number")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total amount in the base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the RMA</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_rmaState? statecode {
        get {
            return GetOptionSetValue<msdyn_rmaState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the RMA</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_rma_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_rma_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_rma_createdby")]
    public SystemUser lk_msdyn_rma_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_rma_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_rma_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_rma_createdonbehalfby")]
    public SystemUser lk_msdyn_rma_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_rma_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_rma_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_rma_modifiedby")]
    public SystemUser lk_msdyn_rma_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_rma_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_rma_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_rma_modifiedonbehalfby")]
    public SystemUser lk_msdyn_rma_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_rma_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_rma_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_billingaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_rma_BillingAccount")]
    public Account msdyn_account_msdyn_rma_BillingAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_rma_BillingAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_rma_BillingAccount", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_rma_ServiceAccount")]
    public Account msdyn_account_msdyn_rma_ServiceAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_rma_ServiceAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_rma_ServiceAccount", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_requestedbycontact")]
    [RelationshipSchemaName("msdyn_contact_msdyn_rma_RequestedByContact")]
    public Contact msdyn_contact_msdyn_rma_RequestedByContact {
        get {
            return GetRelatedEntity<Contact>("msdyn_contact_msdyn_rma_RequestedByContact", null);
        }
        set {
            SetRelatedEntity("msdyn_contact_msdyn_rma_RequestedByContact", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_rma_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_rma_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_rma_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_rma_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_rma_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_rma_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_Appointments")]
    public IEnumerable<Appointment> msdyn_rma_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_rma_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_Emails")]
    public IEnumerable<Email> msdyn_rma_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_rma_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_rma_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_rma_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_rma_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_rma_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_rma_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_rma_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_rma_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_rma_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_SyncErrors")]
    public IEnumerable<SyncError> msdyn_rma_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_rma_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_Tasks")]
    public IEnumerable<Task> msdyn_rma_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_rma_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_rma_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_rma_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_rma_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_rma_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_rma_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_rma_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_approvedby")]
    [RelationshipSchemaName("msdyn_systemuser_msdyn_rma_ApprovedBy")]
    public SystemUser msdyn_systemuser_msdyn_rma_ApprovedBy {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_systemuser_msdyn_rma_ApprovedBy", null);
        }
        set {
            SetRelatedEntity("msdyn_systemuser_msdyn_rma_ApprovedBy", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_rma")]
    public SystemUser user_msdyn_rma {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_rma", null);
        }
        set {
            SetRelatedEntity("user_msdyn_rma", null, value);
        }
    }
    
    public static msdyn_rma Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_rma,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify the different service task and labor types that your resources perform as part of their work orders.</para>
/// <para>Display Name: Service Task Type</para>
/// </summary>
[EntityLogicalName("msdyn_servicetasktype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_servicetasktype : ExtendedEntity<msdyn_servicetasktypeState, msdyn_servicetasktype_statuscode> {
    
    public const string EntityLogicalName = "msdyn_servicetasktype";
    
    public const int EntityTypeCode = 10356;
    
    public msdyn_servicetasktype() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_servicetasktype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_servicetasktypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_servicetasktypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Service Task Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_servicetasktypeid")]
    [DisplayName("Service Task Type")]
    public Guid? msdyn_servicetasktypeId {
        get {
            return GetAttributeValue<Guid?>("msdyn_servicetasktypeid");
        }
        set {
            SetId("msdyn_servicetasktypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedduration")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Inspection associated with Service Task Type.</para>
    /// <para>Display Name: Inspection</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspection")]
    [DisplayName("Inspection")]
    public EntityReference msdyn_Inspection {
        get {
            return GetAttributeValue<EntityReference>("msdyn_inspection");
        }
        set {
            SetAttributeValue("msdyn_inspection", value);
        }
    }
    
    /// <summary>
    /// <para>Depicts whether inspection is enabled for ServiceTaskType.</para>
    /// <para>Display Name: Has Inspection</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectionenabled")]
    [DisplayName("Has Inspection")]
    public bool? msdyn_InspectionEnabled {
        get {
            return GetAttributeValue<bool?>("msdyn_inspectionenabled");
        }
        set {
            SetAttributeValue("msdyn_inspectionenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaire")]
    [DisplayName("Questionnaire")]
    public EntityReference ovs_Questionnaire {
        get {
            return GetAttributeValue<EntityReference>("ovs_questionnaire");
        }
        set {
            SetAttributeValue("ovs_questionnaire", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Has Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireenabled")]
    [DisplayName("Has Questionnaire")]
    public bool? ovs_questionnaireenabled {
        get {
            return GetAttributeValue<bool?>("ovs_questionnaireenabled");
        }
        set {
            SetAttributeValue("ovs_questionnaireenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire Result JSON</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireresultjson")]
    [DisplayName("Questionnaire Result JSON")]
    public string ovs_questionnaireresultjson {
        get {
            return GetAttributeValue<string>("ovs_questionnaireresultjson");
        }
        set {
            SetAttributeValue("ovs_questionnaireresultjson", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Service Task Type Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_servicetasktypenameenglish")]
    [DisplayName("Service Task Type Name (English)")]
    [MaxLength(100)]
    public string ovs_servicetasktypenameenglish {
        get {
            return GetAttributeValue<string>("ovs_servicetasktypenameenglish");
        }
        set {
            SetAttributeValue("ovs_servicetasktypenameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Service Task Type Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_servicetasktypenamefrench")]
    [DisplayName("Service Task Type Name (French)")]
    [MaxLength(100)]
    public string ovs_servicetasktypenamefrench {
        get {
            return GetAttributeValue<string>("ovs_servicetasktypenamefrench");
        }
        set {
            SetAttributeValue("ovs_servicetasktypenamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Service Task Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_servicetasktypeState? statecode {
        get {
            return GetOptionSetValue<msdyn_servicetasktypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Service Task Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_servicetasktype_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_servicetasktype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_servicetasktype_createdby")]
    public SystemUser lk_msdyn_servicetasktype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_servicetasktype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_servicetasktype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_servicetasktype_createdonbehalfby")]
    public SystemUser lk_msdyn_servicetasktype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_servicetasktype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_servicetasktype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_servicetasktype_modifiedby")]
    public SystemUser lk_msdyn_servicetasktype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_servicetasktype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_servicetasktype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_servicetasktype_modifiedonbehalfby")]
    public SystemUser lk_msdyn_servicetasktype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_servicetasktype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_servicetasktype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType")]
    public IEnumerable<msdyn_incidenttypeservicetask> msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_servicetasktype_msdyn_incidenttypeservicetask_TaskType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType")]
    public IEnumerable<msdyn_workorderservicetask> msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_servicetasktype_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_servicetasktype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_servicetasktype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_servicetasktype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_servicetasktype_SyncErrors")]
    public IEnumerable<SyncError> msdyn_servicetasktype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_servicetasktype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_servicetasktype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_questionnaire")]
    [RelationshipSchemaName("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q")]
    public ovs_Questionnaire ovs_msdyn_servicetasktype_Questionnaire_ovs_Q {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_servicetasktype_qm_rclegislation")]
    public IEnumerable<qm_rclegislation> ovs_msdyn_servicetasktype_qm_rclegislation {
        get {
            return GetRelatedEntities<qm_rclegislation>("ovs_msdyn_servicetasktype_qm_rclegislation", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_servicetasktype_qm_rclegislation", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_servicetasktype")]
    public SystemUser user_msdyn_servicetasktype {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_servicetasktype", null);
        }
        set {
            SetRelatedEntity("user_msdyn_servicetasktype", null, value);
        }
    }
    
    public static msdyn_servicetasktype Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_servicetasktype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify time resource time off request.</para>
/// <para>Display Name: Time Off Request</para>
/// </summary>
[EntityLogicalName("msdyn_timeoffrequest")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_timeoffrequest : ExtendedEntity<msdyn_timeoffrequestState, msdyn_timeoffrequest_statuscode> {
    
    public const string EntityLogicalName = "msdyn_timeoffrequest";
    
    public const int EntityTypeCode = 10360;
    
    public msdyn_timeoffrequest() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_timeoffrequest(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_timeoffrequestid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_timeoffrequestid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Time Off Request</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timeoffrequestid")]
    [DisplayName("Time Off Request")]
    public Guid? msdyn_timeoffrequestId {
        get {
            return GetAttributeValue<Guid?>("msdyn_timeoffrequestid");
        }
        set {
            SetId("msdyn_timeoffrequestid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for User associated with Time Off Request.</para>
    /// <para>Display Name: Approved by</para>
    /// </summary>
    [AttributeLogicalName("msdyn_approvedby")]
    [DisplayName("Approved by")]
    public EntityReference msdyn_Approvedby {
        get {
            return GetAttributeValue<EntityReference>("msdyn_approvedby");
        }
        set {
            SetAttributeValue("msdyn_approvedby", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Duration (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration (Deprecated)")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the end time of the time off request.</para>
    /// <para>Display Name: End Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_endtime")]
    [DisplayName("End Time")]
    public DateTime? msdyn_EndTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_endtime");
        }
        set {
            SetAttributeValue("msdyn_endtime", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Resource associated with Time Off Request</para>
    /// <para>Display Name: Resource</para>
    /// </summary>
    [AttributeLogicalName("msdyn_resource")]
    [DisplayName("Resource")]
    public EntityReference msdyn_Resource {
        get {
            return GetAttributeValue<EntityReference>("msdyn_resource");
        }
        set {
            SetAttributeValue("msdyn_resource", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the start time of the time off request</para>
    /// <para>Display Name: Start Time</para>
    /// </summary>
    [AttributeLogicalName("msdyn_starttime")]
    [DisplayName("Start Time")]
    public DateTime? msdyn_StartTime {
        get {
            return GetAttributeValue<DateTime?>("msdyn_starttime");
        }
        set {
            SetAttributeValue("msdyn_starttime", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_internalflags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Time Off Request</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_timeoffrequestState? statecode {
        get {
            return GetOptionSetValue<msdyn_timeoffrequestState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Time Off Request</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_timeoffrequest_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_timeoffrequest_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_createdby")]
    public SystemUser lk_msdyn_timeoffrequest_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_timeoffrequest_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_timeoffrequest_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_createdonbehalfby")]
    public SystemUser lk_msdyn_timeoffrequest_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_timeoffrequest_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_timeoffrequest_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_modifiedby")]
    public SystemUser lk_msdyn_timeoffrequest_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_timeoffrequest_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_timeoffrequest_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_timeoffrequest_modifiedonbehalfby")]
    public SystemUser lk_msdyn_timeoffrequest_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_timeoffrequest_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_timeoffrequest_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_resource")]
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_timeoffrequest_Resource")]
    public BookableResource msdyn_bookableresource_msdyn_timeoffrequest_Resource {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_msdyn_timeoffrequest_Resource", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_msdyn_timeoffrequest_Resource", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_approvedby")]
    [RelationshipSchemaName("msdyn_systemuser_msdyn_timeoffrequest_Approvedby")]
    public SystemUser msdyn_systemuser_msdyn_timeoffrequest_Approvedby {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_systemuser_msdyn_timeoffrequest_Approvedby", null);
        }
        set {
            SetRelatedEntity("msdyn_systemuser_msdyn_timeoffrequest_Approvedby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_timeoffrequest_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_timeoffrequest_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_Appointments")]
    public IEnumerable<Appointment> msdyn_timeoffrequest_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_timeoffrequest_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_Emails")]
    public IEnumerable<Email> msdyn_timeoffrequest_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_timeoffrequest_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_timeoffrequest_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_timeoffrequest_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_timeoffrequest_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_timeoffrequest_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_timeoffrequest_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_timeoffrequest_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_timeoffrequest_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_timeoffrequest_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_SyncErrors")]
    public IEnumerable<SyncError> msdyn_timeoffrequest_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_timeoffrequest_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_Tasks")]
    public IEnumerable<Task> msdyn_timeoffrequest_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_timeoffrequest_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_timeoffrequest_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_timeoffrequest_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_timeoffrequest_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_timeoffrequest_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_timeoffrequest_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_timeoffrequest_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_timeoffrequest")]
    public SystemUser user_msdyn_timeoffrequest {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_timeoffrequest", null);
        }
        set {
            SetRelatedEntity("user_msdyn_timeoffrequest", null, value);
        }
    }
    
    public static msdyn_timeoffrequest Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_timeoffrequest,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Work orders store all information about the job performed for an account. Stores incident details, resource, expenses, tasks, communications, billing and more</para>
/// <para>Display Name: Work Order</para>
/// </summary>
[EntityLogicalName("msdyn_workorder")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workorder : ExtendedEntity<msdyn_workorderState, msdyn_workorder_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workorder";
    
    public const int EntityTypeCode = 10363;
    
    public msdyn_workorder() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workorder(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: WO Number</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderid")]
    [DisplayName("WO Number")]
    public Guid? msdyn_workorderId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderid");
        }
        set {
            SetId("msdyn_workorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address1")]
    [DisplayName("Street 1")]
    [MaxLength(250)]
    public string msdyn_Address1 {
        get {
            return GetAttributeValue<string>("msdyn_address1");
        }
        set {
            SetAttributeValue("msdyn_address1", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address2")]
    [DisplayName("Street 2")]
    [MaxLength(250)]
    public string msdyn_Address2 {
        get {
            return GetAttributeValue<string>("msdyn_address2");
        }
        set {
            SetAttributeValue("msdyn_address2", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("msdyn_address3")]
    [DisplayName("Street 3")]
    [MaxLength(250)]
    public string msdyn_Address3 {
        get {
            return GetAttributeValue<string>("msdyn_address3");
        }
        set {
            SetAttributeValue("msdyn_address3", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Address Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_addressname")]
    [DisplayName("Address Name")]
    [MaxLength(250)]
    public string msdyn_AddressName {
        get {
            return GetAttributeValue<string>("msdyn_addressname");
        }
        set {
            SetAttributeValue("msdyn_addressname", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the agreement linked to this work order.</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreement")]
    [DisplayName("Agreement")]
    public EntityReference msdyn_Agreement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreement");
        }
        set {
            SetAttributeValue("msdyn_agreement", value);
        }
    }
    
    /// <summary>
    /// <para>Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field.</para>
    /// <para>Display Name: Auto-Numbering</para>
    /// </summary>
    [AttributeLogicalName("msdyn_autonumbering")]
    [DisplayName("Auto-Numbering")]
    [MaxLength(100)]
    public string msdyn_AutoNumbering {
        get {
            return GetAttributeValue<string>("msdyn_autonumbering");
        }
        set {
            SetAttributeValue("msdyn_autonumbering", value);
        }
    }
    
    /// <summary>
    /// <para>Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account.</para>
    /// <para>Display Name: Billing Account</para>
    /// </summary>
    [AttributeLogicalName("msdyn_billingaccount")]
    [DisplayName("Billing Account")]
    public EntityReference msdyn_BillingAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_billingaccount");
        }
        set {
            SetAttributeValue("msdyn_billingaccount", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Booking Summary</para>
    /// </summary>
    [AttributeLogicalName("msdyn_bookingsummary")]
    [DisplayName("Booking Summary")]
    public string msdyn_BookingSummary {
        get {
            return GetAttributeValue<string>("msdyn_bookingsummary");
        }
        set {
            SetAttributeValue("msdyn_bookingsummary", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Child Index</para>
    /// </summary>
    [AttributeLogicalName("msdyn_childindex")]
    [DisplayName("Child Index")]
    [Range(1, 2147483647)]
    public int? msdyn_ChildIndex {
        get {
            return GetAttributeValue<int?>("msdyn_childindex");
        }
        set {
            SetAttributeValue("msdyn_childindex", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("msdyn_city")]
    [DisplayName("City")]
    [MaxLength(80)]
    public string msdyn_City {
        get {
            return GetAttributeValue<string>("msdyn_city");
        }
        set {
            SetAttributeValue("msdyn_city", value);
        }
    }
    
    /// <summary>
    /// <para>The user that last closed this work order</para>
    /// <para>Display Name: Closed By</para>
    /// </summary>
    [AttributeLogicalName("msdyn_closedby")]
    [DisplayName("Closed By")]
    public EntityReference msdyn_ClosedBy {
        get {
            return GetAttributeValue<EntityReference>("msdyn_closedby");
        }
        set {
            SetAttributeValue("msdyn_closedby", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("msdyn_country")]
    [DisplayName("Country/Region")]
    [MaxLength(80)]
    public string msdyn_Country {
        get {
            return GetAttributeValue<string>("msdyn_country");
        }
        set {
            SetAttributeValue("msdyn_country", value);
        }
    }
    
    /// <summary>
    /// <para>Customer Asset related to this incident reported</para>
    /// <para>Display Name: Primary Incident Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Primary Incident Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date Window End</para>
    /// </summary>
    [AttributeLogicalName("msdyn_datewindowend")]
    [DisplayName("Date Window End")]
    public DateTime? msdyn_DateWindowEnd {
        get {
            return GetAttributeValue<DateTime?>("msdyn_datewindowend");
        }
        set {
            SetAttributeValue("msdyn_datewindowend", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date Window Start</para>
    /// </summary>
    [AttributeLogicalName("msdyn_datewindowstart")]
    [DisplayName("Date Window Start")]
    public DateTime? msdyn_DateWindowStart {
        get {
            return GetAttributeValue<DateTime?>("msdyn_datewindowstart");
        }
        set {
            SetAttributeValue("msdyn_datewindowstart", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the summary of total estimated billing amount for this work order</para>
    /// <para>Display Name: Estimate Subtotal Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotalamount")]
    [DisplayName("Estimate Subtotal Amount")]
    public decimal? msdyn_EstimateSubtotalAmount {
        get {
            return GetMoneyValue("msdyn_estimatesubtotalamount");
        }
        set {
            SetMoneyValue("msdyn_estimatesubtotalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Indicate the details of the follow up work</para>
    /// <para>Display Name: Follow Up Note (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_followupnote")]
    [DisplayName("Follow Up Note (Deprecated)")]
    public string msdyn_FollowUpNote {
        get {
            return GetAttributeValue<string>("msdyn_followupnote");
        }
        set {
            SetAttributeValue("msdyn_followupnote", value);
        }
    }
    
    /// <summary>
    /// <para>Allows indication if follow up work is required for a work order.</para>
    /// <para>Display Name: Follow Up Required (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_followuprequired")]
    [DisplayName("Follow Up Required (Deprecated)")]
    public bool? msdyn_FollowUpRequired {
        get {
            return GetAttributeValue<bool?>("msdyn_followuprequired");
        }
        set {
            SetAttributeValue("msdyn_followuprequired", value);
        }
    }
    
    /// <summary>
    /// <para>Work order's functional location</para>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_functionallocation")]
    [DisplayName("Functional Location")]
    public EntityReference msdyn_FunctionalLocation {
        get {
            return GetAttributeValue<EntityReference>("msdyn_functionallocation");
        }
        set {
            SetAttributeValue("msdyn_functionallocation", value);
        }
    }
    
    /// <summary>
    /// <para>Shows instructions for booked resources. By default, this information is taken from the work order instructions field on the service account.</para>
    /// <para>Display Name: Instructions</para>
    /// </summary>
    [AttributeLogicalName("msdyn_instructions")]
    [DisplayName("Instructions")]
    public string msdyn_Instructions {
        get {
            return GetAttributeValue<string>("msdyn_instructions");
        }
        set {
            SetAttributeValue("msdyn_instructions", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>The iot alert which initiated this work order.</para>
    /// <para>Display Name: IoT Alert</para>
    /// </summary>
    [AttributeLogicalName("msdyn_iotalert")]
    [DisplayName("IoT Alert")]
    public EntityReference msdyn_IoTAlert {
        get {
            return GetAttributeValue<EntityReference>("msdyn_iotalert");
        }
        set {
            SetAttributeValue("msdyn_iotalert", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is FollowUp (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isfollowup")]
    [DisplayName("Is FollowUp (Deprecated)")]
    public bool? msdyn_IsFollowUp {
        get {
            return GetAttributeValue<bool?>("msdyn_isfollowup");
        }
        set {
            SetAttributeValue("msdyn_isfollowup", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Mobile</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ismobile")]
    [DisplayName("Is Mobile")]
    public bool? msdyn_IsMobile {
        get {
            return GetAttributeValue<bool?>("msdyn_ismobile");
        }
        set {
            SetAttributeValue("msdyn_ismobile", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Latitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_latitude")]
    [DisplayName("Latitude")]
    public double? msdyn_Latitude {
        get {
            return GetAttributeValue<double?>("msdyn_latitude");
        }
        set {
            SetAttributeValue("msdyn_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Longitude</para>
    /// </summary>
    [AttributeLogicalName("msdyn_longitude")]
    [DisplayName("Longitude")]
    public double? msdyn_Longitude {
        get {
            return GetAttributeValue<double?>("msdyn_longitude");
        }
        set {
            SetAttributeValue("msdyn_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Opportunity associated with Work Order.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_opportunityid")]
    [DisplayName("Opportunity")]
    public EntityReference msdyn_OpportunityId {
        get {
            return GetAttributeValue<EntityReference>("msdyn_opportunityid");
        }
        set {
            SetAttributeValue("msdyn_opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order associated with Work Order.</para>
    /// <para>Display Name: Parent Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_parentworkorder")]
    [DisplayName("Parent Work Order")]
    public EntityReference msdyn_ParentWorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_parentworkorder");
        }
        set {
            SetAttributeValue("msdyn_parentworkorder", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Postal Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_postalcode")]
    [DisplayName("Postal Code")]
    [MaxLength(20)]
    public string msdyn_PostalCode {
        get {
            return GetAttributeValue<string>("msdyn_postalcode");
        }
        set {
            SetAttributeValue("msdyn_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>The customer Preferred Resource to work on this job. Should be taken into consideration while scheduling resources</para>
    /// <para>Display Name: Preferred Resource (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_preferredresource")]
    [DisplayName("Preferred Resource (Deprecated)")]
    public EntityReference msdyn_PreferredResource {
        get {
            return GetAttributeValue<EntityReference>("msdyn_preferredresource");
        }
        set {
            SetAttributeValue("msdyn_preferredresource", value);
        }
    }
    
    /// <summary>
    /// <para>Price List that controls pricing for products / services added to this work order. By default the system will use the Price List specified on the account</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Incident description</para>
    /// <para>Display Name: Primary Incident Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryincidentdescription")]
    [DisplayName("Primary Incident Description")]
    public string msdyn_PrimaryIncidentDescription {
        get {
            return GetAttributeValue<string>("msdyn_primaryincidentdescription");
        }
        set {
            SetAttributeValue("msdyn_primaryincidentdescription", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time estimated to resolve this incident.</para>
    /// <para>Display Name: Primary Incident Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryincidentestimatedduration")]
    [DisplayName("Primary Incident Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_PrimaryIncidentEstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_primaryincidentestimatedduration");
        }
        set {
            SetAttributeValue("msdyn_primaryincidentestimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Primary incident type reported</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryincidenttype")]
    [DisplayName("Activity Type")]
    public EntityReference msdyn_PrimaryIncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_primaryincidenttype");
        }
        set {
            SetAttributeValue("msdyn_primaryincidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Primary Resolution</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryresolution")]
    [DisplayName("Primary Resolution")]
    public EntityReference msdyn_PrimaryResolution {
        get {
            return GetAttributeValue<EntityReference>("msdyn_primaryresolution");
        }
        set {
            SetAttributeValue("msdyn_primaryresolution", value);
        }
    }
    
    /// <summary>
    /// <para>Priority of the Work Order. To be taken into consideration while scheduling resources</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("msdyn_priority")]
    [DisplayName("Priority")]
    public EntityReference msdyn_Priority {
        get {
            return GetAttributeValue<EntityReference>("msdyn_priority");
        }
        set {
            SetAttributeValue("msdyn_priority", value);
        }
    }
    
    /// <summary>
    /// <para>The contact that reported this Work Order</para>
    /// <para>Display Name: Reported By Contact</para>
    /// </summary>
    [AttributeLogicalName("msdyn_reportedbycontact")]
    [DisplayName("Reported By Contact")]
    public EntityReference msdyn_ReportedByContact {
        get {
            return GetAttributeValue<EntityReference>("msdyn_reportedbycontact");
        }
        set {
            SetAttributeValue("msdyn_reportedbycontact", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Stakeholder</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceaccount")]
    [DisplayName("Stakeholder")]
    public EntityReference msdyn_ServiceAccount {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceaccount");
        }
        set {
            SetAttributeValue("msdyn_serviceaccount", value);
        }
    }
    
    /// <summary>
    /// <para>Case of which this work order originates from</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [AttributeLogicalName("msdyn_servicerequest")]
    [DisplayName("Case")]
    public EntityReference msdyn_ServiceRequest {
        get {
            return GetAttributeValue<EntityReference>("msdyn_servicerequest");
        }
        set {
            SetAttributeValue("msdyn_servicerequest", value);
        }
    }
    
    /// <summary>
    /// <para>The service territory this work order relates to. By default this will be set to the Service Territory defined on the service account</para>
    /// <para>Display Name: Service Territory</para>
    /// </summary>
    [AttributeLogicalName("msdyn_serviceterritory")]
    [DisplayName("Service Territory")]
    public EntityReference msdyn_ServiceTerritory {
        get {
            return GetAttributeValue<EntityReference>("msdyn_serviceterritory");
        }
        set {
            SetAttributeValue("msdyn_serviceterritory", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Province</para>
    /// </summary>
    [AttributeLogicalName("msdyn_stateorprovince")]
    [DisplayName("Province")]
    [MaxLength(50)]
    public string msdyn_StateOrProvince {
        get {
            return GetAttributeValue<string>("msdyn_stateorprovince");
        }
        set {
            SetAttributeValue("msdyn_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Work Order substatus</para>
    /// <para>Display Name: Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_substatus")]
    [DisplayName("Substatus")]
    public EntityReference msdyn_SubStatus {
        get {
            return GetAttributeValue<EntityReference>("msdyn_substatus");
        }
        set {
            SetAttributeValue("msdyn_substatus", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the summary of subtotal billing amount excluding tax for this work order.</para>
    /// <para>Display Name: Subtotal Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotalamount")]
    [DisplayName("Subtotal Amount")]
    public decimal? msdyn_SubtotalAmount {
        get {
            return GetMoneyValue("msdyn_subtotalamount");
        }
        set {
            SetMoneyValue("msdyn_subtotalamount", value);
        }
    }
    
    /// <summary>
    /// <para>A support contact can be specified so that the individual working on the work order has someone to contact for assistance.</para>
    /// <para>Display Name: Support Contact</para>
    /// </summary>
    [AttributeLogicalName("msdyn_supportcontact")]
    [DisplayName("Support Contact")]
    public EntityReference msdyn_SupportContact {
        get {
            return GetAttributeValue<EntityReference>("msdyn_supportcontact");
        }
        set {
            SetAttributeValue("msdyn_supportcontact", value);
        }
    }
    
    /// <summary>
    /// <para>Tracks the current record status.</para>
    /// <para>Display Name: Record Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_systemstatus")]
    [DisplayName("Record Status")]
    public msdyn_wosystemstatus? msdyn_SystemStatus {
        get {
            return GetOptionSetValue<msdyn_wosystemstatus>("msdyn_systemstatus");
        }
        set {
            SetOptionSetValue("msdyn_systemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Tax Code to be used to calculate tax when Work Order is taxable. By default the system will use the tax code specified on the service account</para>
    /// <para>Display Name: Sales Tax Code</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxcode")]
    [DisplayName("Sales Tax Code")]
    public EntityReference msdyn_TaxCode {
        get {
            return GetAttributeValue<EntityReference>("msdyn_taxcode");
        }
        set {
            SetAttributeValue("msdyn_taxcode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows whether sales tax is to be charged for this work order.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the time this work order was last closed.</para>
    /// <para>Display Name: Closed On</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timeclosed")]
    [DisplayName("Closed On")]
    public DateTime? msdyn_TimeClosed {
        get {
            return GetAttributeValue<DateTime?>("msdyn_timeclosed");
        }
        set {
            SetAttributeValue("msdyn_timeclosed", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the starting range of the time promised to the account that incidents will be resolved.</para>
    /// <para>Display Name: Time From Promised</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timefrompromised")]
    [DisplayName("Time From Promised")]
    public DateTime? msdyn_TimeFromPromised {
        get {
            return GetAttributeValue<DateTime?>("msdyn_timefrompromised");
        }
        set {
            SetAttributeValue("msdyn_timefrompromised", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Fulfillment Preference</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timegroup")]
    [DisplayName("Fulfillment Preference")]
    public EntityReference msdyn_TimeGroup {
        get {
            return GetAttributeValue<EntityReference>("msdyn_timegroup");
        }
        set {
            SetAttributeValue("msdyn_timegroup", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Time Group Detail Selected (Deprecated)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timegroupdetailselected")]
    [DisplayName("Time Group Detail Selected (Deprecated)")]
    public EntityReference msdyn_TimeGroupDetailSelected {
        get {
            return GetAttributeValue<EntityReference>("msdyn_timegroupdetailselected");
        }
        set {
            SetAttributeValue("msdyn_timegroupdetailselected", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the ending range of the time promised to the account that incidents will be resolved.</para>
    /// <para>Display Name: Time To Promised</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timetopromised")]
    [DisplayName("Time To Promised")]
    public DateTime? msdyn_TimeToPromised {
        get {
            return GetAttributeValue<DateTime?>("msdyn_timetopromised");
        }
        set {
            SetAttributeValue("msdyn_timetopromised", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Time Window End</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timewindowend")]
    [DisplayName("Time Window End")]
    public DateTime? msdyn_TimeWindowEnd {
        get {
            return GetAttributeValue<DateTime?>("msdyn_timewindowend");
        }
        set {
            SetAttributeValue("msdyn_timewindowend", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Time Window Start</para>
    /// </summary>
    [AttributeLogicalName("msdyn_timewindowstart")]
    [DisplayName("Time Window Start")]
    public DateTime? msdyn_TimeWindowStart {
        get {
            return GetAttributeValue<DateTime?>("msdyn_timewindowstart");
        }
        set {
            SetAttributeValue("msdyn_timewindowstart", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the summary of total billing amount for this work order.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("Total Amount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
        set {
            SetMoneyValue("msdyn_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the summary of total sales tax charged for this work order.</para>
    /// <para>Display Name: Total Sales Tax</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalsalestax")]
    [DisplayName("Total Sales Tax")]
    public decimal? msdyn_TotalSalesTax {
        get {
            return GetMoneyValue("msdyn_totalsalestax");
        }
        set {
            SetMoneyValue("msdyn_totalsalestax", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_worklocation")]
    [DisplayName("Work Location")]
    public msdyn_worklocation? msdyn_WorkLocation {
        get {
            return GetOptionSetValue<msdyn_worklocation>("msdyn_worklocation");
        }
        set {
            SetOptionSetValue("msdyn_worklocation", value);
        }
    }
    
    /// <summary>
    /// <para>Type a summary description of the job.</para>
    /// <para>Display Name: Work Order Summary</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workordersummary")]
    [DisplayName("Work Order Summary")]
    public string msdyn_WorkOrderSummary {
        get {
            return GetAttributeValue<string>("msdyn_workordersummary");
        }
        set {
            SetAttributeValue("msdyn_workordersummary", value);
        }
    }
    
    /// <summary>
    /// <para>Work Order Type</para>
    /// <para>Display Name: Work Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workordertype")]
    [DisplayName("Work Order Type")]
    public EntityReference msdyn_WorkOrderType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workordertype");
        }
        set {
            SetAttributeValue("msdyn_workordertype", value);
        }
    }
    
    /// <summary>
    /// <para>When Bookings are used on a Work Order, this field is auto-populated based on the latest End Time from the related Bookings. Otherwise, this field is populated based on the change of System Status</para>
    /// <para>Display Name: Completed On</para>
    /// </summary>
    [AttributeLogicalName("msdyn_completedon")]
    [DisplayName("Completed On")]
    public DateTime? msdyn_completedon {
        get {
            return GetAttributeValue<DateTime?>("msdyn_completedon");
        }
        set {
            SetAttributeValue("msdyn_completedon", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate subtotal amount in the base currency.</para>
    /// <para>Display Name: Estimate Subtotal Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotalamount_base")]
    [DisplayName("Estimate Subtotal Amount (Base)")]
    public decimal? msdyn_estimatesubtotalamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatesubtotalamount_base");
        }
    }
    
    /// <summary>
    /// <para>When Bookings are used on a Work Order, this field is auto-populated based on the earliest Actual Arrival Time from the related Bookings.</para>
    /// <para>Display Name: First Arrived On</para>
    /// </summary>
    [AttributeLogicalName("msdyn_firstarrivedon")]
    [DisplayName("First Arrived On")]
    public DateTime? msdyn_firstarrivedon {
        get {
            return GetAttributeValue<DateTime?>("msdyn_firstarrivedon");
        }
        set {
            SetAttributeValue("msdyn_firstarrivedon", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: This field should only be used to load the custom map control</para>
    /// </summary>
    [AttributeLogicalName("msdyn_mapcontrol")]
    [DisplayName("This field should only be used to load the custom map control")]
    [MaxLength(100)]
    public string msdyn_mapcontrol {
        get {
            return GetAttributeValue<string>("msdyn_mapcontrol");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Work Order Number</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Work Order Number")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the subtotal amount in the base currency.</para>
    /// <para>Display Name: Subtotal Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotalamount_base")]
    [DisplayName("Subtotal Amount (Base)")]
    public decimal? msdyn_subtotalamount_Base {
        get {
            return GetMoneyValue("msdyn_subtotalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total amount in the base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Calculated from the estimated duration of Work Order Incidents and Work Order Service Tasks not related to a Work Order Incident on the Work Order. Intended to be read-only.</para>
    /// <para>Display Name: Total Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalestimatedduration")]
    [DisplayName("Total Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_totalestimatedduration {
        get {
            return GetAttributeValue<int?>("msdyn_totalestimatedduration");
        }
        set {
            SetAttributeValue("msdyn_totalestimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total sales tax in the base currency.</para>
    /// <para>Display Name: Total Sales Tax (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalsalestax_base")]
    [DisplayName("Total Sales Tax (Base)")]
    public decimal? msdyn_totalsalestax_Base {
        get {
            return GetMoneyValue("msdyn_totalsalestax_base");
        }
    }
    
    /// <summary>
    /// <para>The working hours for a requirement.</para>
    /// <para>Display Name: Work Hour Template</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workhourtemplate")]
    [DisplayName("Work Hour Template")]
    public EntityReference msdyn_workhourtemplate {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workhourtemplate");
        }
        set {
            SetAttributeValue("msdyn_workhourtemplate", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Work Order Arrival Time KPI</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderarrivaltimekpiid")]
    [DisplayName("Work Order Arrival Time KPI")]
    public EntityReference msdyn_workorderarrivaltimekpiid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderarrivaltimekpiid");
        }
        set {
            SetAttributeValue("msdyn_workorderarrivaltimekpiid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Work Order Resolution KPI</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderresolutionkpiid")]
    [DisplayName("Work Order Resolution KPI")]
    public EntityReference msdyn_workorderresolutionkpiid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderresolutionkpiid");
        }
        set {
            SetAttributeValue("msdyn_workorderresolutionkpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Asset Category</para>
    /// </summary>
    [AttributeLogicalName("ovs_assetcategory")]
    [DisplayName("Operation Asset Category")]
    public EntityReference ovs_AssetCategory {
        get {
            return GetAttributeValue<EntityReference>("ovs_assetcategory");
        }
        set {
            SetAttributeValue("ovs_assetcategory", value);
        }
    }
    
    /// <summary>
    /// <para>This field is used to generate the Overdue work order view. Default to planned fiscal quarter or Revised fiscal quarter if there is one.</para>
    /// <para>Display Name: Current Fiscal Quarter</para>
    /// </summary>
    [AttributeLogicalName("ovs_currentfiscalquarter")]
    [DisplayName("Current Fiscal Quarter")]
    public EntityReference ovs_CurrentFiscalQuarter {
        get {
            return GetAttributeValue<EntityReference>("ovs_currentfiscalquarter");
        }
        set {
            SetAttributeValue("ovs_currentfiscalquarter", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Planned Fiscal Quarter</para>
    /// </summary>
    [AttributeLogicalName("ovs_fiscalquarter")]
    [DisplayName("Planned Fiscal Quarter")]
    public EntityReference ovs_FiscalQuarter {
        get {
            return GetAttributeValue<EntityReference>("ovs_fiscalquarter");
        }
        set {
            SetAttributeValue("ovs_fiscalquarter", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Planned Fiscal Year</para>
    /// </summary>
    [AttributeLogicalName("ovs_fiscalyear")]
    [DisplayName("Planned Fiscal Year")]
    public EntityReference ovs_FiscalYear {
        get {
            return GetAttributeValue<EntityReference>("ovs_fiscalyear");
        }
        set {
            SetAttributeValue("ovs_fiscalyear", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: IIS ID</para>
    /// </summary>
    [AttributeLogicalName("ovs_iisid")]
    [DisplayName("IIS ID")]
    [MaxLength(100)]
    public string ovs_IISID {
        get {
            return GetAttributeValue<string>("ovs_iisid");
        }
        set {
            SetAttributeValue("ovs_iisid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MOC ID</para>
    /// </summary>
    [AttributeLogicalName("ovs_mocid")]
    [DisplayName("MOC ID")]
    [MaxLength(100)]
    public string ovs_MOCID {
        get {
            return GetAttributeValue<string>("ovs_mocid");
        }
        set {
            SetAttributeValue("ovs_mocid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Operation associated with Work Order.</para>
    /// <para>Display Name: Operation</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationid")]
    [DisplayName("Operation")]
    public EntityReference ovs_OperationId {
        get {
            return GetAttributeValue<EntityReference>("ovs_operationid");
        }
        set {
            SetAttributeValue("ovs_operationid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Primary Inspector</para>
    /// </summary>
    [AttributeLogicalName("ovs_primaryinspector")]
    [DisplayName("Primary Inspector")]
    public EntityReference ovs_PrimaryInspector {
        get {
            return GetAttributeValue<EntityReference>("ovs_primaryinspector");
        }
        set {
            SetAttributeValue("ovs_primaryinspector", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rationale</para>
    /// </summary>
    [AttributeLogicalName("ovs_rational")]
    [DisplayName("Rationale")]
    public EntityReference ovs_Rational {
        get {
            return GetAttributeValue<EntityReference>("ovs_rational");
        }
        set {
            SetAttributeValue("ovs_rational", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for TCFiscalQuarter associated with Work Order.</para>
    /// <para>Display Name: Revised Quarter</para>
    /// </summary>
    [AttributeLogicalName("ovs_revisedquarterid")]
    [DisplayName("Revised Quarter")]
    public EntityReference ovs_RevisedQuarterId {
        get {
            return GetAttributeValue<EntityReference>("ovs_revisedquarterid");
        }
        set {
            SetAttributeValue("ovs_revisedquarterid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Secondary Inspector</para>
    /// </summary>
    [AttributeLogicalName("ovs_secondaryinspector")]
    [DisplayName("Secondary Inspector")]
    public EntityReference ovs_SecondaryInspector {
        get {
            return GetAttributeValue<EntityReference>("ovs_secondaryinspector");
        }
        set {
            SetAttributeValue("ovs_secondaryinspector", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site of Violation (to delete)</para>
    /// </summary>
    [AttributeLogicalName("ovs_siteofviolation")]
    [DisplayName("Site of Violation (to delete)")]
    public EntityReference ovs_SiteofViolation {
        get {
            return GetAttributeValue<EntityReference>("ovs_siteofviolation");
        }
        set {
            SetAttributeValue("ovs_siteofviolation", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rationale</para>
    /// </summary>
    [AttributeLogicalName("ovs_tyrational")]
    [DisplayName("Rationale")]
    public EntityReference ovs_TYRational {
        get {
            return GetAttributeValue<EntityReference>("ovs_tyrational");
        }
        set {
            SetAttributeValue("ovs_tyrational", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Asset (old, to delete)</para>
    /// </summary>
    [AttributeLogicalName("ovs_asset")]
    [DisplayName("Operation Asset (old, to delete)")]
    public EntityReference ovs_asset {
        get {
            return GetAttributeValue<EntityReference>("ovs_asset");
        }
        set {
            SetAttributeValue("ovs_asset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Type</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationtypeid")]
    [DisplayName("Operation Type")]
    public EntityReference ovs_operationtypeid {
        get {
            return GetAttributeValue<EntityReference>("ovs_operationtypeid");
        }
        set {
            SetAttributeValue("ovs_operationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Regulated Entity (to delete)</para>
    /// </summary>
    [AttributeLogicalName("ovs_regulatedentity")]
    [DisplayName("Regulated Entity (to delete)")]
    public EntityReference ovs_regulatedentity {
        get {
            return GetAttributeValue<EntityReference>("ovs_regulatedentity");
        }
        set {
            SetAttributeValue("ovs_regulatedentity", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? processid {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Blob Path</para>
    /// </summary>
    [AttributeLogicalName("qm_blobpath")]
    [DisplayName("Blob Path")]
    [MaxLength(200)]
    public string qm_BlobPath {
        get {
            return GetAttributeValue<string>("qm_blobpath");
        }
        set {
            SetAttributeValue("qm_blobpath", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Remote</para>
    /// </summary>
    [AttributeLogicalName("qm_remote")]
    [DisplayName("Remote")]
    public bool? qm_Remote {
        get {
            return GetAttributeValue<bool?>("qm_remote");
        }
        set {
            SetAttributeValue("qm_remote", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Contact associated with Work Order.</para>
    /// <para>Display Name: Report Contact</para>
    /// </summary>
    [AttributeLogicalName("qm_reportcontactid")]
    [DisplayName("Report Contact")]
    public EntityReference qm_ReportContactId {
        get {
            return GetAttributeValue<EntityReference>("qm_reportcontactid");
        }
        set {
            SetAttributeValue("qm_reportcontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage where the entity is located.</para>
    /// <para>Display Name: Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("Stage Id")]
    public Guid? stageid {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workorderState? statecode {
        get {
            return GetOptionSetValue<msdyn_workorderState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workorder_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workorder_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows a comma-separated list of string values representing the unique identifiers of stages in a business process flow instance in the order that they occur.</para>
    /// <para>Display Name: Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("Traversed Path")]
    [MaxLength(1250)]
    public string traversedpath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_country")]
    [DisplayName("Country")]
    public EntityReference ts_Country {
        get {
            return GetAttributeValue<EntityReference>("ts_country");
        }
        set {
            SetAttributeValue("ts_country", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Region</para>
    /// </summary>
    [AttributeLogicalName("ts_region")]
    [DisplayName("Region")]
    public EntityReference ts_Region {
        get {
            return GetAttributeValue<EntityReference>("ts_region");
        }
        set {
            SetAttributeValue("ts_region", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("ts_site")]
    [DisplayName("Site")]
    public EntityReference ts_Site {
        get {
            return GetAttributeValue<EntityReference>("ts_site");
        }
        set {
            SetAttributeValue("ts_site", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Creation Wizard associated with Work Order.</para>
    /// <para>Display Name: Work Order Creation Wizard</para>
    /// </summary>
    [AttributeLogicalName("ts_workordercreationwizardid")]
    [DisplayName("Work Order Creation Wizard")]
    public EntityReference ts_WorkOrderCreationWizardId {
        get {
            return GetAttributeValue<EntityReference>("ts_workordercreationwizardid");
        }
        set {
            SetAttributeValue("ts_workordercreationwizardid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Trade Name</para>
    /// </summary>
    [AttributeLogicalName("ts_tradenameid")]
    [DisplayName("Trade Name")]
    public EntityReference ts_tradenameId {
        get {
            return GetAttributeValue<EntityReference>("ts_tradenameid");
        }
        set {
            SetAttributeValue("ts_tradenameid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order End Date</para>
    /// </summary>
    [AttributeLogicalName("ts_workorderenddate")]
    [DisplayName("Work Order End Date")]
    public DateTime? ts_workorderenddate {
        get {
            return GetAttributeValue<DateTime?>("ts_workorderenddate");
        }
        set {
            SetAttributeValue("ts_workorderenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order Start Date</para>
    /// </summary>
    [AttributeLogicalName("ts_workorderstartdate")]
    [DisplayName("Work Order Start Date")]
    public DateTime? ts_workorderstartdate {
        get {
            return GetAttributeValue<DateTime?>("ts_workorderstartdate");
        }
        set {
            SetAttributeValue("ts_workorderstartdate", value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referenced)]
    public IEnumerable<msdyn_workorder> Referencedmsdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("msdyn_parentworkorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referencing)]
    public msdyn_workorder Referencingmsdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_workorder_ParentWorkOrder", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workorder_createdby")]
    public SystemUser lk_msdyn_workorder_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorder_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorder_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorder_createdonbehalfby")]
    public SystemUser lk_msdyn_workorder_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorder_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workorder_modifiedby")]
    public SystemUser lk_msdyn_workorder_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorder_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorder_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorder_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workorder_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorder_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_billingaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_workorder_BillingAccount")]
    public Account msdyn_account_msdyn_workorder_BillingAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_workorder_BillingAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_workorder_BillingAccount", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceaccount")]
    [RelationshipSchemaName("msdyn_account_msdyn_workorder_ServiceAccount")]
    public Account msdyn_account_msdyn_workorder_ServiceAccount {
        get {
            return GetRelatedEntity<Account>("msdyn_account_msdyn_workorder_ServiceAccount", null);
        }
        set {
            SetRelatedEntity("msdyn_account_msdyn_workorder_ServiceAccount", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_preferredresource")]
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_workorder_PreferredResource")]
    public BookableResource msdyn_bookableresource_msdyn_workorder_PreferredResource {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_msdyn_workorder_PreferredResource", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_msdyn_workorder_PreferredResource", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_supportcontact")]
    [RelationshipSchemaName("msdyn_bookableresource_msdyn_workorder_SupportContact")]
    public BookableResource msdyn_bookableresource_msdyn_workorder_SupportContact {
        get {
            return GetRelatedEntity<BookableResource>("msdyn_bookableresource_msdyn_workorder_SupportContact", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresource_msdyn_workorder_SupportContact", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_reportedbycontact")]
    [RelationshipSchemaName("msdyn_contact_msdyn_workorder_ReportedByContact")]
    public Contact msdyn_contact_msdyn_workorder_ReportedByContact {
        get {
            return GetRelatedEntity<Contact>("msdyn_contact_msdyn_workorder_ReportedByContact", null);
        }
        set {
            SetRelatedEntity("msdyn_contact_msdyn_workorder_ReportedByContact", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_servicerequest")]
    [RelationshipSchemaName("msdyn_incident_msdyn_workorder_ServiceRequest")]
    public Incident msdyn_incident_msdyn_workorder_ServiceRequest {
        get {
            return GetRelatedEntity<Incident>("msdyn_incident_msdyn_workorder_ServiceRequest", null);
        }
        set {
            SetRelatedEntity("msdyn_incident_msdyn_workorder_ServiceRequest", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreement")]
    [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_workorder_Agreement")]
    public msdyn_agreement msdyn_msdyn_agreement_msdyn_workorder_Agreement {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_workorder_Agreement", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreement_msdyn_workorder_Agreement", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_workorder_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocation")]
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation")]
    public msdyn_FunctionalLocation msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_functionallocation_msdyn_workorder_FunctionalLocation", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_primaryincidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_msdyn_workorder_PrimaryIncidentType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder")]
    public IEnumerable<BookableResourceBooking> msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder {
        get {
            return GetRelatedEntities<BookableResourceBooking>("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_bookableresourcebooking_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder")]
    public IEnumerable<msdyn_purchaseorder> msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_purchaseorder>("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_purchaseorder_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder")]
    public IEnumerable<msdyn_purchaseorderproduct> msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder {
        get {
            return GetRelatedEntities<msdyn_purchaseorderproduct>("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_purchaseorderproduct_AssociateToWorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_rma_WorkOrder")]
    public IEnumerable<msdyn_rma> msdyn_msdyn_workorder_msdyn_rma_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_rma>("msdyn_msdyn_workorder_msdyn_rma_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_rma_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder")]
    public IEnumerable<msdyn_workorderincident> msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_workorderincident>("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder")]
    public IEnumerable<msdyn_workorderproduct> msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder")]
    public IEnumerable<msdyn_workorderservice> msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder")]
    public IEnumerable<msdyn_workorderservicetask> msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_substatus")]
    [RelationshipSchemaName("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status")]
    public msdyn_workordersubstatus msdyn_msdyn_workordersubstatus_msdyn_workorder_Status {
        get {
            return GetRelatedEntity<msdyn_workordersubstatus>("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workordertype")]
    [RelationshipSchemaName("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType")]
    public msdyn_workordertype msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType {
        get {
            return GetRelatedEntity<msdyn_workordertype>("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_opportunityid")]
    [RelationshipSchemaName("msdyn_opportunity_msdyn_workorder")]
    public Opportunity msdyn_opportunity_msdyn_workorder {
        get {
            return GetRelatedEntity<Opportunity>("msdyn_opportunity_msdyn_workorder", null);
        }
        set {
            SetRelatedEntity("msdyn_opportunity_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_closedby")]
    [RelationshipSchemaName("msdyn_systemuser_msdyn_workorder_ClosedBy")]
    public SystemUser msdyn_systemuser_msdyn_workorder_ClosedBy {
        get {
            return GetRelatedEntity<SystemUser>("msdyn_systemuser_msdyn_workorder_ClosedBy", null);
        }
        set {
            SetRelatedEntity("msdyn_systemuser_msdyn_workorder_ClosedBy", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_serviceterritory")]
    [RelationshipSchemaName("msdyn_territory_msdyn_workorder_ServiceTerritory")]
    public Territory msdyn_territory_msdyn_workorder_ServiceTerritory {
        get {
            return GetRelatedEntity<Territory>("msdyn_territory_msdyn_workorder_ServiceTerritory", null);
        }
        set {
            SetRelatedEntity("msdyn_territory_msdyn_workorder_ServiceTerritory", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_workorder_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_workorder_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_Appointments")]
    public IEnumerable<Appointment> msdyn_workorder_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_workorder_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_Emails")]
    public IEnumerable<Email> msdyn_workorder_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_workorder_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_workorder_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_workorder_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workorder_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workorder_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_workorder_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_workorder_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_RecurringAppointmentMasters", null, value);
        }
    }
    
    [AttributeLogicalName("ts_region")]
    [RelationshipSchemaName("msdyn_workorder_Region_Territory")]
    public Territory msdyn_workorder_Region_Territory {
        get {
            return GetRelatedEntity<Territory>("msdyn_workorder_Region_Territory", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_Region_Territory", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_workorder_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_workorder_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workorder_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workorder_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_tyrational")]
    [RelationshipSchemaName("msdyn_workorder_TYRational_ovs_TYRational")]
    public ovs_TYRational msdyn_workorder_TYRational_ovs_TYRational {
        get {
            return GetRelatedEntity<ovs_TYRational>("msdyn_workorder_TYRational_ovs_TYRational", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_TYRational_ovs_TYRational", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_Tasks")]
    public IEnumerable<Task> msdyn_workorder_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_workorder_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_workorder_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_workorder_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_workorder_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_workorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_asset")]
    [RelationshipSchemaName("msdyn_workorder_ovs_asset_msdyn_customera")]
    public msdyn_customerasset msdyn_workorder_ovs_asset_msdyn_customera {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_workorder_ovs_asset_msdyn_customera", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_ovs_asset_msdyn_customera", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_assetcategory")]
    [RelationshipSchemaName("ovs_msdyn_workorder_AssetCategory_msdyn_custo")]
    public msdyn_customerassetcategory ovs_msdyn_workorder_AssetCategory_msdyn_custo {
        get {
            return GetRelatedEntity<msdyn_customerassetcategory>("ovs_msdyn_workorder_AssetCategory_msdyn_custo", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_AssetCategory_msdyn_custo", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_currentfiscalquarter")]
    [RelationshipSchemaName("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T")]
    public tc_TCFiscalQuarter ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_fiscalquarter")]
    [RelationshipSchemaName("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal")]
    public tc_TCFiscalQuarter ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_fiscalyear")]
    [RelationshipSchemaName("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea")]
    public tc_TCFiscalYear ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_primaryinspector")]
    [RelationshipSchemaName("ovs_msdyn_workorder_PrimaryInspector_Bookable")]
    public BookableResource ovs_msdyn_workorder_PrimaryInspector_Bookable {
        get {
            return GetRelatedEntity<BookableResource>("ovs_msdyn_workorder_PrimaryInspector_Bookable", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_PrimaryInspector_Bookable", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_rational")]
    [RelationshipSchemaName("ovs_msdyn_workorder_Rational_ovs_TYRational")]
    public ovs_TYRational ovs_msdyn_workorder_Rational_ovs_TYRational {
        get {
            return GetRelatedEntity<ovs_TYRational>("ovs_msdyn_workorder_Rational_ovs_TYRational", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_Rational_ovs_TYRational", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_secondaryinspector")]
    [RelationshipSchemaName("ovs_msdyn_workorder_SecondaryInspector_Bookab")]
    public BookableResource ovs_msdyn_workorder_SecondaryInspector_Bookab {
        get {
            return GetRelatedEntity<BookableResource>("ovs_msdyn_workorder_SecondaryInspector_Bookab", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_SecondaryInspector_Bookab", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_operationtypeid")]
    [RelationshipSchemaName("ovs_msdyn_workorder_operationtype")]
    public ovs_operationtype ovs_msdyn_workorder_operationtype {
        get {
            return GetRelatedEntity<ovs_operationtype>("ovs_msdyn_workorder_operationtype", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_operationtype", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_regulatedentity")]
    [RelationshipSchemaName("ovs_msdyn_workorder_regulatedentity_account")]
    public Account ovs_msdyn_workorder_regulatedentity_account {
        get {
            return GetRelatedEntity<Account>("ovs_msdyn_workorder_regulatedentity_account", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorder_regulatedentity_account", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_operationid")]
    [RelationshipSchemaName("ovs_ovs_operation_msdyn_workorder")]
    public ovs_operation ovs_ovs_operation_msdyn_workorder {
        get {
            return GetRelatedEntity<ovs_operation>("ovs_ovs_operation_msdyn_workorder", null);
        }
        set {
            SetRelatedEntity("ovs_ovs_operation_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_revisedquarterid")]
    [RelationshipSchemaName("ovs_tc_tcfiscalquarter_msdyn_workorder")]
    public tc_TCFiscalQuarter ovs_tc_tcfiscalquarter_msdyn_workorder {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("ovs_tc_tcfiscalquarter_msdyn_workorder", null);
        }
        set {
            SetRelatedEntity("ovs_tc_tcfiscalquarter_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_siteofviolation")]
    [RelationshipSchemaName("ovs_workorder_SiteofViolation_Account")]
    public Account ovs_workorder_SiteofViolation_Account {
        get {
            return GetRelatedEntity<Account>("ovs_workorder_SiteofViolation_Account", null);
        }
        set {
            SetRelatedEntity("ovs_workorder_SiteofViolation_Account", null, value);
        }
    }
    
    [AttributeLogicalName("qm_reportcontactid")]
    [RelationshipSchemaName("qm_contact_workorder")]
    public Contact qm_contact_workorder {
        get {
            return GetRelatedEntity<Contact>("qm_contact_workorder", null);
        }
        set {
            SetRelatedEntity("qm_contact_workorder", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_customerasset_msdyn_workorder_msdyn")]
    public IEnumerable<msdyn_customerasset> ts_msdyn_customerasset_msdyn_workorder_msdyn {
        get {
            return GetRelatedEntities<msdyn_customerasset>("ts_msdyn_customerasset_msdyn_workorder_msdyn", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_customerasset_msdyn_workorder_msdyn", null, value);
        }
    }
    
    [AttributeLogicalName("ts_site")]
    [RelationshipSchemaName("ts_msdyn_workorder_Site_msdyn_FunctionalLoca")]
    public msdyn_FunctionalLocation ts_msdyn_workorder_Site_msdyn_FunctionalLoca {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_msdyn_workorder_Site_msdyn_FunctionalLoca", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_workorder_Site_msdyn_FunctionalLoca", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workorder_msdyn_workorder_Account")]
    public IEnumerable<Account> ts_msdyn_workorder_msdyn_workorder_Account {
        get {
            return GetRelatedEntities<Account>("ts_msdyn_workorder_msdyn_workorder_Account", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workorder_msdyn_workorder_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workorder_ovs_operation_ovs_operati")]
    public IEnumerable<ovs_operation> ts_msdyn_workorder_ovs_operation_ovs_operati {
        get {
            return GetRelatedEntities<ovs_operation>("ts_msdyn_workorder_ovs_operation_ovs_operati", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workorder_ovs_operation_ovs_operati", null, value);
        }
    }
    
    [AttributeLogicalName("ts_tradenameid")]
    [RelationshipSchemaName("ts_msdyn_workorder_ts_tradenameId_ts_tradena")]
    public ts_tradename ts_msdyn_workorder_ts_tradenameId_ts_tradena {
        get {
            return GetRelatedEntity<ts_tradename>("ts_msdyn_workorder_ts_tradenameId_ts_tradena", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_workorder_ts_tradenameId_ts_tradena", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_Finding_WorkOrder_msdyn_workorder")]
    public IEnumerable<ovs_Finding> ts_ovs_Finding_WorkOrder_msdyn_workorder {
        get {
            return GetRelatedEntities<ovs_Finding>("ts_ovs_Finding_WorkOrder_msdyn_workorder", null);
        }
        set {
            SetRelatedEntities("ts_ovs_Finding_WorkOrder_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("ts_workordercreationwizardid")]
    [RelationshipSchemaName("ts_ts_workordercreationwizard_msdyn_workorde")]
    public ts_workordercreationwizard ts_ts_workordercreationwizard_msdyn_workorde {
        get {
            return GetRelatedEntity<ts_workordercreationwizard>("ts_ts_workordercreationwizard_msdyn_workorde", null);
        }
        set {
            SetRelatedEntity("ts_ts_workordercreationwizard_msdyn_workorde", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workorder")]
    public SystemUser user_msdyn_workorder {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workorder", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workorder", null, value);
        }
    }
    
    public static msdyn_workorder Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workorder,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify work order incidents reported to you by the client. These are also referred to as problem codes.</para>
/// <para>Display Name: Work Order Incident</para>
/// </summary>
[EntityLogicalName("msdyn_workorderincident")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workorderincident : ExtendedEntity<msdyn_workorderincidentState, msdyn_workorderincident_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workorderincident";
    
    public const int EntityTypeCode = 10366;
    
    public msdyn_workorderincident() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workorderincident(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderincidentid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workorderincidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderincidentid")]
    [DisplayName("Work Order Incident")]
    public Guid? msdyn_workorderincidentId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderincidentid");
        }
        set {
            SetId("msdyn_workorderincidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Agreement Booking Incident linked to this Work Order Incident</para>
    /// <para>Display Name: Agreement Booking Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingincident")]
    [DisplayName("Agreement Booking Incident")]
    public EntityReference msdyn_AgreementBookingIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingincident");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingincident", value);
        }
    }
    
    /// <summary>
    /// <para>Customer Asset related to this incident reported</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Incident description</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time estimated to resolve this incident.</para>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedduration")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Workorder incident's functional location.</para>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("msdyn_functionallocation")]
    [DisplayName("Functional Location")]
    public EntityReference msdyn_FunctionalLocation {
        get {
            return GetAttributeValue<EntityReference>("msdyn_functionallocation");
        }
        set {
            SetAttributeValue("msdyn_functionallocation", value);
        }
    }
    
    /// <summary>
    /// <para>Shows if the incident has been resolved by one of its related tasks.</para>
    /// <para>Display Name: Incident Resolved</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidentresolved")]
    [DisplayName("Incident Resolved")]
    public bool? msdyn_IncidentResolved {
        get {
            return GetAttributeValue<bool?>("msdyn_incidentresolved");
        }
        set {
            SetAttributeValue("msdyn_incidentresolved", value);
        }
    }
    
    /// <summary>
    /// <para>Incident type reported</para>
    /// <para>Display Name: Incident Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidenttype")]
    [DisplayName("Incident Type")]
    public EntityReference msdyn_IncidentType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_incidenttype");
        }
        set {
            SetAttributeValue("msdyn_incidenttype", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Mobile</para>
    /// </summary>
    [AttributeLogicalName("msdyn_ismobile")]
    [DisplayName("Is Mobile")]
    public bool? msdyn_IsMobile {
        get {
            return GetAttributeValue<bool?>("msdyn_ismobile");
        }
        set {
            SetAttributeValue("msdyn_ismobile", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Primary</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isprimary")]
    [DisplayName("Is Primary")]
    public bool? msdyn_IsPrimary {
        get {
            return GetAttributeValue<bool?>("msdyn_isprimary");
        }
        set {
            SetAttributeValue("msdyn_isprimary", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Items Populated</para>
    /// </summary>
    [AttributeLogicalName("msdyn_itemspopulated")]
    [DisplayName("Items Populated")]
    public bool? msdyn_ItemsPopulated {
        get {
            return GetAttributeValue<bool?>("msdyn_itemspopulated");
        }
        set {
            SetAttributeValue("msdyn_itemspopulated", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Primary Resolution</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primaryresolution")]
    [DisplayName("Primary Resolution")]
    public EntityReference msdyn_PrimaryResolution {
        get {
            return GetAttributeValue<EntityReference>("msdyn_primaryresolution");
        }
        set {
            SetAttributeValue("msdyn_primaryresolution", value);
        }
    }
    
    /// <summary>
    /// <para>Resource Requirement</para>
    /// <para>Display Name: Resource Requirement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_resourcerequirement")]
    [DisplayName("Resource Requirement")]
    public EntityReference msdyn_ResourceRequirement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_resourcerequirement");
        }
        set {
            SetAttributeValue("msdyn_resourcerequirement", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the percent completed on associated tasks. This indicates the total of completed tasks, but not if the incident was resolved.</para>
    /// <para>Display Name: Tasks % Completed</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taskspercentcompleted")]
    [DisplayName("Tasks % Completed")]
    public double? msdyn_TasksPercentCompleted {
        get {
            return GetAttributeValue<double?>("msdyn_taskspercentcompleted");
        }
        set {
            SetAttributeValue("msdyn_taskspercentcompleted", value);
        }
    }
    
    /// <summary>
    /// <para>Parent Work Order where incident was reported on</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Incident</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workorderincidentState? statecode {
        get {
            return GetOptionSetValue<msdyn_workorderincidentState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Incident</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workorderincident_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workorderincident_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workorderincident_createdby")]
    public SystemUser lk_msdyn_workorderincident_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderincident_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderincident_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderincident_createdonbehalfby")]
    public SystemUser lk_msdyn_workorderincident_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderincident_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderincident_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workorderincident_modifiedby")]
    public SystemUser lk_msdyn_workorderincident_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderincident_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderincident_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderincident_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workorderincident_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderincident_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderincident_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_workorderincident_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_functionallocation")]
    [RelationshipSchemaName("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation")]
    public msdyn_FunctionalLocation msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_functionallocation_msdyn_workorderincident_FunctionalLocation", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttype")]
    [RelationshipSchemaName("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType")]
    public msdyn_incidenttype msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_incidenttype_msdyn_workorderincident_IncidentType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_workorderincident_WorkOrder", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident")]
    public IEnumerable<msdyn_workorderproduct> msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident {
        get {
            return GetRelatedEntities<msdyn_workorderproduct>("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident")]
    public IEnumerable<msdyn_workorderservice> msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident {
        get {
            return GetRelatedEntities<msdyn_workorderservice>("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident")]
    public IEnumerable<msdyn_workorderservicetask> msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_workorderincident_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_workorderincident_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_Appointments")]
    public IEnumerable<Appointment> msdyn_workorderincident_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_workorderincident_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_Emails")]
    public IEnumerable<Email> msdyn_workorderincident_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_workorderincident_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_workorderincident_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_workorderincident_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workorderincident_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workorderincident_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_workorderincident_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_workorderincident_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_workorderincident_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_workorderincident_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workorderincident_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workorderincident_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_Tasks")]
    public IEnumerable<Task> msdyn_workorderincident_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_workorderincident_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_workorderincident_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_workorderincident_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderincident_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_workorderincident_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_workorderincident_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderincident_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workorderincident")]
    public SystemUser user_msdyn_workorderincident {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workorderincident", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workorderincident", null, value);
        }
    }
    
    public static msdyn_workorderincident Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workorderincident,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>In this entity you record all the products proposed and used for a work order</para>
/// <para>Display Name: Work Order Product</para>
/// </summary>
[EntityLogicalName("msdyn_workorderproduct")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workorderproduct : ExtendedEntity<msdyn_workorderproductState, msdyn_workorderproduct_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workorderproduct";
    
    public const int EntityTypeCode = 10367;
    
    public msdyn_workorderproduct() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workorderproduct(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderproductid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workorderproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderproductid")]
    [DisplayName("Work Order Product")]
    public Guid? msdyn_workorderproductId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderproductid");
        }
        set {
            SetId("msdyn_workorderproductid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Enter any additional costs associated with this product. The values are manually entered. Note: additional cost is not unit dependent.</para>
    /// <para>Display Name: Additional Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost")]
    [DisplayName("Additional Cost")]
    public decimal? msdyn_AdditionalCost {
        get {
            return GetMoneyValue("msdyn_additionalcost");
        }
        set {
            SetMoneyValue("msdyn_additionalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Agreement Booking Product linked to this Work Order Product</para>
    /// <para>Display Name: Agreement Booking Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingproduct")]
    [DisplayName("Agreement Booking Product")]
    public EntityReference msdyn_AgreementBookingProduct {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingproduct");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingproduct", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Allocated</para>
    /// </summary>
    [AttributeLogicalName("msdyn_allocated")]
    [DisplayName("Allocated")]
    public bool? msdyn_Allocated {
        get {
            return GetAttributeValue<bool?>("msdyn_allocated");
        }
        set {
            SetAttributeValue("msdyn_allocated", value);
        }
    }
    
    /// <summary>
    /// <para>The booking where this product was added</para>
    /// <para>Display Name: Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booking")]
    [DisplayName("Booking")]
    public EntityReference msdyn_Booking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_booking");
        }
        set {
            SetAttributeValue("msdyn_booking", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the commission costs associated with this product. The value is manually specified and isn't automatically calculated.</para>
    /// <para>Display Name: Commission Costs</para>
    /// </summary>
    [AttributeLogicalName("msdyn_commissioncosts")]
    [DisplayName("Commission Costs")]
    public decimal? msdyn_CommissionCosts {
        get {
            return GetMoneyValue("msdyn_commissioncosts");
        }
        set {
            SetMoneyValue("msdyn_commissioncosts", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Customer Asset associated with Work Order Product.</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the description of the product as presented to the customer. The value defaults to the description defined on the product.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether to disable entitlement selection for this work order product.</para>
    /// <para>Display Name: Disable Entitlement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_disableentitlement")]
    [DisplayName("Disable Entitlement")]
    public bool? msdyn_DisableEntitlement {
        get {
            return GetAttributeValue<bool?>("msdyn_disableentitlement");
        }
        set {
            SetAttributeValue("msdyn_disableentitlement", value);
        }
    }
    
    /// <summary>
    /// <para>Specify any discount amount on this product. Note: If you enter a discount amount you cannot enter a discount %</para>
    /// <para>Display Name: Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountamount")]
    [DisplayName("Discount Amount")]
    public decimal? msdyn_DiscountAmount {
        get {
            return GetMoneyValue("msdyn_discountamount");
        }
        set {
            SetMoneyValue("msdyn_discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Specify any discount % on this product. Note: If you enter a discount % it will overwrite the discount $</para>
    /// <para>Display Name: Discount %</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountpercent")]
    [DisplayName("Discount %")]
    public double? msdyn_DiscountPercent {
        get {
            return GetAttributeValue<double?>("msdyn_discountpercent");
        }
        set {
            SetAttributeValue("msdyn_discountpercent", value);
        }
    }
    
    /// <summary>
    /// <para>Entitlement to apply to the Work Order Product.</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_entitlement")]
    [DisplayName("Entitlement")]
    public EntityReference msdyn_Entitlement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_entitlement");
        }
        set {
            SetAttributeValue("msdyn_entitlement", value);
        }
    }
    
    /// <summary>
    /// <para>Enter a discount amount on the subtotal amount. Note: If you enter a discount amount you cannot enter a discount %</para>
    /// <para>Display Name: Estimate Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountamount")]
    [DisplayName("Estimate Discount Amount")]
    public decimal? msdyn_EstimateDiscountAmount {
        get {
            return GetMoneyValue("msdyn_estimatediscountamount");
        }
        set {
            SetMoneyValue("msdyn_estimatediscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter a discount % on the subtotal amount. Note: If you enter a discount % it will overwrite the discount $</para>
    /// <para>Display Name: Estimate Discount %</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountpercent")]
    [DisplayName("Estimate Discount %")]
    public double? msdyn_EstimateDiscountPercent {
        get {
            return GetAttributeValue<double?>("msdyn_estimatediscountpercent");
        }
        set {
            SetAttributeValue("msdyn_estimatediscountpercent", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the estimated required quantity of this product.</para>
    /// <para>Display Name: Estimate Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatequantity")]
    [DisplayName("Estimate Quantity")]
    public double? msdyn_EstimateQuantity {
        get {
            return GetAttributeValue<double?>("msdyn_estimatequantity");
        }
        set {
            SetAttributeValue("msdyn_estimatequantity", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount for this product, excluding discounts.</para>
    /// <para>Display Name: Estimate Subtotal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotal")]
    [DisplayName("Estimate Subtotal")]
    public decimal? msdyn_EstimateSubtotal {
        get {
            return GetMoneyValue("msdyn_estimatesubtotal");
        }
        set {
            SetMoneyValue("msdyn_estimatesubtotal", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated total amount of this product, including discounts.</para>
    /// <para>Display Name: Estimate Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalamount")]
    [DisplayName("Estimate Total Amount")]
    public decimal? msdyn_EstimateTotalAmount {
        get {
            return GetMoneyValue("msdyn_estimatetotalamount");
        }
        set {
            SetMoneyValue("msdyn_estimatetotalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated total cost of this product.</para>
    /// <para>Display Name: Estimate Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalcost")]
    [DisplayName("Estimate Total Cost")]
    public decimal? msdyn_EstimateTotalCost {
        get {
            return GetMoneyValue("msdyn_estimatetotalcost");
        }
        set {
            SetMoneyValue("msdyn_estimatetotalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated sale amount per unit.</para>
    /// <para>Display Name: Estimate Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitamount")]
    [DisplayName("Estimate Unit Amount")]
    public decimal? msdyn_EstimateUnitAmount {
        get {
            return GetMoneyValue("msdyn_estimateunitamount");
        }
        set {
            SetMoneyValue("msdyn_estimateunitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated cost amount per unit.</para>
    /// <para>Display Name: Estimate Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitcost")]
    [DisplayName("Estimate Unit Cost")]
    public decimal? msdyn_EstimateUnitCost {
        get {
            return GetMoneyValue("msdyn_estimateunitcost");
        }
        set {
            SetMoneyValue("msdyn_estimateunitcost", value);
        }
    }
    
    /// <summary>
    /// <para>Enter any internal notes you want to track on this product.</para>
    /// <para>Display Name: Internal Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internaldescription")]
    [DisplayName("Internal Description")]
    public string msdyn_InternalDescription {
        get {
            return GetAttributeValue<string>("msdyn_internaldescription");
        }
        set {
            SetAttributeValue("msdyn_internaldescription", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of the line, estimate or used.</para>
    /// <para>Display Name: Line Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_linestatus")]
    [DisplayName("Line Status")]
    public msdyn_productservicestatus? msdyn_LineStatus {
        get {
            return GetOptionSetValue<msdyn_productservicestatus>("msdyn_linestatus");
        }
        set {
            SetOptionSetValue("msdyn_linestatus", value);
        }
    }
    
    /// <summary>
    /// <para>Price List that determines the pricing for this product</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Product to use</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_product")]
    [DisplayName("Product")]
    public EntityReference msdyn_Product {
        get {
            return GetAttributeValue<EntityReference>("msdyn_product");
        }
        set {
            SetAttributeValue("msdyn_product", value);
        }
    }
    
    /// <summary>
    /// <para>Purchase Order Receipt Product linked to this Work Order Product</para>
    /// <para>Display Name: Purchase Order Receipt Product</para>
    /// </summary>
    [AttributeLogicalName("msdyn_purchaseorderreceiptproduct")]
    [DisplayName("Purchase Order Receipt Product")]
    public EntityReference msdyn_PurchaseOrderReceiptProduct {
        get {
            return GetAttributeValue<EntityReference>("msdyn_purchaseorderreceiptproduct");
        }
        set {
            SetAttributeValue("msdyn_purchaseorderreceiptproduct", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity you wish to bill the customer for. By default, this will default to the same value as "Quantity."</para>
    /// <para>Display Name: Quantity To Bill</para>
    /// </summary>
    [AttributeLogicalName("msdyn_qtytobill")]
    [DisplayName("Quantity To Bill")]
    public double? msdyn_QtyToBill {
        get {
            return GetAttributeValue<double?>("msdyn_qtytobill");
        }
        set {
            SetAttributeValue("msdyn_qtytobill", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual quantity of the product.</para>
    /// <para>Display Name: Quantity</para>
    /// </summary>
    [AttributeLogicalName("msdyn_quantity")]
    [DisplayName("Quantity")]
    public double? msdyn_Quantity {
        get {
            return GetAttributeValue<double?>("msdyn_quantity");
        }
        set {
            SetAttributeValue("msdyn_quantity", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the total amount excluding discounts.</para>
    /// <para>Display Name: Subtotal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotal")]
    [DisplayName("Subtotal")]
    public decimal? msdyn_Subtotal {
        get {
            return GetMoneyValue("msdyn_subtotal");
        }
        set {
            SetMoneyValue("msdyn_subtotal", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if product is taxable. If you do not wish to charge tax set this field to No.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the total amount charged to the customer.</para>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("Total Amount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
        set {
            SetMoneyValue("msdyn_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total cost of this product. This is calculated by (Unit Cost * Units) + Additional Cost + Commission Costs.</para>
    /// <para>Display Name: Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost")]
    [DisplayName("Total Cost")]
    public decimal? msdyn_TotalCost {
        get {
            return GetMoneyValue("msdyn_totalcost");
        }
        set {
            SetMoneyValue("msdyn_totalcost", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the pricing and final quantity for this product</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you want to charge the customer per unit. By default, this is calculated based on the selected price list. The amount can be changed.</para>
    /// <para>Display Name: Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount")]
    [DisplayName("Unit Amount")]
    public decimal? msdyn_UnitAmount {
        get {
            return GetMoneyValue("msdyn_unitamount");
        }
        set {
            SetMoneyValue("msdyn_unitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual cost per unit.</para>
    /// <para>Display Name: Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost")]
    [DisplayName("Unit Cost")]
    public decimal? msdyn_UnitCost {
        get {
            return GetMoneyValue("msdyn_unitcost");
        }
        set {
            SetMoneyValue("msdyn_unitcost", value);
        }
    }
    
    /// <summary>
    /// <para>Warehouse this product is being retrieved from</para>
    /// <para>Display Name: Warehouse</para>
    /// </summary>
    [AttributeLogicalName("msdyn_warehouse")]
    [DisplayName("Warehouse")]
    public EntityReference msdyn_Warehouse {
        get {
            return GetAttributeValue<EntityReference>("msdyn_warehouse");
        }
        set {
            SetAttributeValue("msdyn_warehouse", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order associated with Work Order Product.</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>The Incident related to this product</para>
    /// <para>Display Name: Work Order Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderincident")]
    [DisplayName("Work Order Incident")]
    public EntityReference msdyn_WorkOrderIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderincident");
        }
        set {
            SetAttributeValue("msdyn_workorderincident", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the additional cost in the base currency.</para>
    /// <para>Display Name: Additional Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost_base")]
    [DisplayName("Additional Cost (Base)")]
    public decimal? msdyn_additionalcost_Base {
        get {
            return GetMoneyValue("msdyn_additionalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the commission costs in the base currency.</para>
    /// <para>Display Name: Commission Costs (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_commissioncosts_base")]
    [DisplayName("Commission Costs (Base)")]
    public decimal? msdyn_commissioncosts_Base {
        get {
            return GetMoneyValue("msdyn_commissioncosts_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the discount amount in the base currency.</para>
    /// <para>Display Name: Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountamount_base")]
    [DisplayName("Discount Amount (Base)")]
    public decimal? msdyn_discountamount_Base {
        get {
            return GetMoneyValue("msdyn_discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate discount amount in the base currency.</para>
    /// <para>Display Name: Estimate Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountamount_base")]
    [DisplayName("Estimate Discount Amount (Base)")]
    public decimal? msdyn_estimatediscountamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatediscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate subtotal in the base currency.</para>
    /// <para>Display Name: Estimate Subtotal (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotal_base")]
    [DisplayName("Estimate Subtotal (Base)")]
    public decimal? msdyn_estimatesubtotal_Base {
        get {
            return GetMoneyValue("msdyn_estimatesubtotal_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate total amount in the base currency.</para>
    /// <para>Display Name: Estimate Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalamount_base")]
    [DisplayName("Estimate Total Amount (Base)")]
    public decimal? msdyn_estimatetotalamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatetotalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate total cost in the base currency.</para>
    /// <para>Display Name: Estimate Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalcost_base")]
    [DisplayName("Estimate Total Cost (Base)")]
    public decimal? msdyn_estimatetotalcost_Base {
        get {
            return GetMoneyValue("msdyn_estimatetotalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate unit amount in the base currency.</para>
    /// <para>Display Name: Estimate Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitamount_base")]
    [DisplayName("Estimate Unit Amount (Base)")]
    public decimal? msdyn_estimateunitamount_Base {
        get {
            return GetMoneyValue("msdyn_estimateunitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate unit cost in the base currency.</para>
    /// <para>Display Name: Estimate Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitcost_base")]
    [DisplayName("Estimate Unit Cost (Base)")]
    public decimal? msdyn_estimateunitcost_Base {
        get {
            return GetMoneyValue("msdyn_estimateunitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the subtotal in the base currency.</para>
    /// <para>Display Name: Subtotal (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotal_base")]
    [DisplayName("Subtotal (Base)")]
    public decimal? msdyn_subtotal_Base {
        get {
            return GetMoneyValue("msdyn_subtotal_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total amount in the base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total cost in the base currency.</para>
    /// <para>Display Name: Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost_base")]
    [DisplayName("Total Cost (Base)")]
    public decimal? msdyn_totalcost_Base {
        get {
            return GetMoneyValue("msdyn_totalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit amount in the base currency.</para>
    /// <para>Display Name: Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount_base")]
    [DisplayName("Unit Amount (Base)")]
    public decimal? msdyn_unitamount_Base {
        get {
            return GetMoneyValue("msdyn_unitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit cost in the base currency.</para>
    /// <para>Display Name: Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost_base")]
    [DisplayName("Unit Cost (Base)")]
    public decimal? msdyn_unitcost_Base {
        get {
            return GetMoneyValue("msdyn_unitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Product</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workorderproductState? statecode {
        get {
            return GetOptionSetValue<msdyn_workorderproductState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Product</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workorderproduct_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workorderproduct_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workorderproduct_createdby")]
    public SystemUser lk_msdyn_workorderproduct_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderproduct_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderproduct_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderproduct_createdonbehalfby")]
    public SystemUser lk_msdyn_workorderproduct_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderproduct_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderproduct_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workorderproduct_modifiedby")]
    public SystemUser lk_msdyn_workorderproduct_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderproduct_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderproduct_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderproduct_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workorderproduct_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderproduct_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderproduct_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_booking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_workorderproduct_Booking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_entitlement")]
    [RelationshipSchemaName("msdyn_entitlement_msdyn_workorderproduct_Entitlement")]
    public Entitlement msdyn_entitlement_msdyn_workorderproduct_Entitlement {
        get {
            return GetRelatedEntity<Entitlement>("msdyn_entitlement_msdyn_workorderproduct_Entitlement", null);
        }
        set {
            SetRelatedEntity("msdyn_entitlement_msdyn_workorderproduct_Entitlement", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreementbookingproduct")]
    [RelationshipSchemaName("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
        "t")]
    public msdyn_agreementbookingproduct msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduct {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
                    "t", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreementbookingproduct_msdyn_workorderproduct_AgreementBookingProduc" +
                    "t", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_workorderproduct_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_workorderproduct_WorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorderincident")]
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident")]
    public msdyn_workorderincident msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorderincident_msdyn_workorderproduct_WorkOrderIncident", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct")]
    public IEnumerable<msdyn_customerasset> msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct {
        get {
            return GetRelatedEntities<msdyn_customerasset>("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workorderproduct_msdyn_customerasset_WorkOrderProduct", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_product")]
    [RelationshipSchemaName("msdyn_product_msdyn_workorderproduct_Product")]
    public Product msdyn_product_msdyn_workorderproduct_Product {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_workorderproduct_Product", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_workorderproduct_Product", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_workorderproduct_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_workorderproduct_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_Appointments")]
    public IEnumerable<Appointment> msdyn_workorderproduct_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_workorderproduct_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_Emails")]
    public IEnumerable<Email> msdyn_workorderproduct_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_workorderproduct_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_workorderproduct_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_workorderproduct_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workorderproduct_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workorderproduct_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_workorderproduct_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_workorderproduct_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_workorderproduct_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_workorderproduct_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workorderproduct_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workorderproduct_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_Tasks")]
    public IEnumerable<Task> msdyn_workorderproduct_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_workorderproduct_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_workorderproduct_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_workorderproduct_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderproduct_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_workorderproduct_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_workorderproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workorderproduct")]
    public SystemUser user_msdyn_workorderproduct {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workorderproduct", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workorderproduct", null, value);
        }
    }
    
    public static msdyn_workorderproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workorderproduct,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Record all services proposed and performed for work order</para>
/// <para>Display Name: Work Order Service</para>
/// </summary>
[EntityLogicalName("msdyn_workorderservice")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workorderservice : ExtendedEntity<msdyn_workorderserviceState, msdyn_workorderservice_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workorderservice";
    
    public const int EntityTypeCode = 10369;
    
    public msdyn_workorderservice() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workorderservice(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderserviceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workorderserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderserviceid")]
    [DisplayName("Work Order Service")]
    public Guid? msdyn_workorderserviceId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderserviceid");
        }
        set {
            SetId("msdyn_workorderserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the exchange rate for the currency associated with the entity with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the entity.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Enter any additional costs associated with this service. The values are manually entered. Note: additional cost is not unit dependent.</para>
    /// <para>Display Name: Additional Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost")]
    [DisplayName("Additional Cost")]
    public decimal? msdyn_AdditionalCost {
        get {
            return GetMoneyValue("msdyn_additionalcost");
        }
        set {
            SetMoneyValue("msdyn_additionalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Agreement Booking Service linked to this Work Order Service</para>
    /// <para>Display Name: Agreement Booking Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingservice")]
    [DisplayName("Agreement Booking Service")]
    public EntityReference msdyn_AgreementBookingService {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingservice");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingservice", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the resource booking detail where this product was added.</para>
    /// <para>Display Name: Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booking")]
    [DisplayName("Booking")]
    public EntityReference msdyn_Booking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_booking");
        }
        set {
            SetAttributeValue("msdyn_booking", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the sale amount per unit calculated by the system considering the minimum charge, if applicable.</para>
    /// <para>Display Name: Calculated Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_calculatedunitamount")]
    [DisplayName("Calculated Unit Amount")]
    public decimal? msdyn_CalculatedUnitAmount {
        get {
            return GetMoneyValue("msdyn_calculatedunitamount");
        }
        set {
            SetMoneyValue("msdyn_calculatedunitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the commission costs associated with this service. The value is manually specified and isn't automatically calculated.</para>
    /// <para>Display Name: Commission Costs</para>
    /// </summary>
    [AttributeLogicalName("msdyn_commissioncosts")]
    [DisplayName("Commission Costs")]
    public decimal? msdyn_CommissionCosts {
        get {
            return GetMoneyValue("msdyn_commissioncosts");
        }
        set {
            SetMoneyValue("msdyn_commissioncosts", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Customer Asset associated with Work Order Service.</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the description of the service as presented to the customer. The value defaults to the description defined on the service.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Choose whether to disable entitlement selection for this work order service.</para>
    /// <para>Display Name: Disable Entitlement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_disableentitlement")]
    [DisplayName("Disable Entitlement")]
    public bool? msdyn_DisableEntitlement {
        get {
            return GetAttributeValue<bool?>("msdyn_disableentitlement");
        }
        set {
            SetAttributeValue("msdyn_disableentitlement", value);
        }
    }
    
    /// <summary>
    /// <para>Specify any discount amount on this service. Note: If you enter a discount amount you cannot enter a discount %</para>
    /// <para>Display Name: Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountamount")]
    [DisplayName("Discount Amount")]
    public decimal? msdyn_DiscountAmount {
        get {
            return GetMoneyValue("msdyn_discountamount");
        }
        set {
            SetMoneyValue("msdyn_discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Specify any discount % on this service. Note: If you enter a discount % it will overwrite the discount $</para>
    /// <para>Display Name: Discount %</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountpercent")]
    [DisplayName("Discount %")]
    public double? msdyn_DiscountPercent {
        get {
            return GetAttributeValue<double?>("msdyn_discountpercent");
        }
        set {
            SetAttributeValue("msdyn_discountpercent", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual duration of service.</para>
    /// <para>Display Name: Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_duration")]
    [DisplayName("Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_Duration {
        get {
            return GetAttributeValue<int?>("msdyn_duration");
        }
        set {
            SetAttributeValue("msdyn_duration", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the quantity you wish to bill the customer for. By default, this will default to the same value as "Quantity."</para>
    /// <para>Display Name: Duration To Bill</para>
    /// </summary>
    [AttributeLogicalName("msdyn_durationtobill")]
    [DisplayName("Duration To Bill")]
    [Range(0, 2147483647)]
    public int? msdyn_DurationToBill {
        get {
            return GetAttributeValue<int?>("msdyn_durationtobill");
        }
        set {
            SetAttributeValue("msdyn_durationtobill", value);
        }
    }
    
    /// <summary>
    /// <para>Entitlement to apply to the Work Order Service.</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [AttributeLogicalName("msdyn_entitlement")]
    [DisplayName("Entitlement")]
    public EntityReference msdyn_Entitlement {
        get {
            return GetAttributeValue<EntityReference>("msdyn_entitlement");
        }
        set {
            SetAttributeValue("msdyn_entitlement", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated sale amount per unit calculated by the system considering the initial charge (if applicable).</para>
    /// <para>Display Name: Estimate Calculated Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatecalculatedunitamount")]
    [DisplayName("Estimate Calculated Unit Amount")]
    public decimal? msdyn_EstimateCalculatedUnitAmount {
        get {
            return GetMoneyValue("msdyn_estimatecalculatedunitamount");
        }
        set {
            SetMoneyValue("msdyn_estimatecalculatedunitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter a discount amount on the subtotal amount. Note: If you enter a discount amount you cannot enter a discount %</para>
    /// <para>Display Name: Estimate Discount Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountamount")]
    [DisplayName("Estimate Discount Amount")]
    public decimal? msdyn_EstimateDiscountAmount {
        get {
            return GetMoneyValue("msdyn_estimatediscountamount");
        }
        set {
            SetMoneyValue("msdyn_estimatediscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter a discount % on the subtotal amount. Note: If you enter a discount % it will overwrite the discount $</para>
    /// <para>Display Name: Estimate Discount %</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountpercent")]
    [DisplayName("Estimate Discount %")]
    public double? msdyn_EstimateDiscountPercent {
        get {
            return GetAttributeValue<double?>("msdyn_estimatediscountpercent");
        }
        set {
            SetAttributeValue("msdyn_estimatediscountpercent", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the estimated duration of this service.</para>
    /// <para>Display Name: Estimate Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateduration")]
    [DisplayName("Estimate Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimateDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimateduration");
        }
        set {
            SetAttributeValue("msdyn_estimateduration", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total amount for this service, excluding discounts.</para>
    /// <para>Display Name: Estimate Subtotal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotal")]
    [DisplayName("Estimate Subtotal")]
    public decimal? msdyn_EstimateSubtotal {
        get {
            return GetMoneyValue("msdyn_estimatesubtotal");
        }
        set {
            SetMoneyValue("msdyn_estimatesubtotal", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated total amount of this service, including discounts.</para>
    /// <para>Display Name: Estimate Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalamount")]
    [DisplayName("Estimate Total Amount")]
    public decimal? msdyn_EstimateTotalAmount {
        get {
            return GetMoneyValue("msdyn_estimatetotalamount");
        }
        set {
            SetMoneyValue("msdyn_estimatetotalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated total cost of this service.</para>
    /// <para>Display Name: Estimate Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalcost")]
    [DisplayName("Estimate Total Cost")]
    public decimal? msdyn_EstimateTotalCost {
        get {
            return GetMoneyValue("msdyn_estimatetotalcost");
        }
        set {
            SetMoneyValue("msdyn_estimatetotalcost", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated sale amount per unit.</para>
    /// <para>Display Name: Estimate Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitamount")]
    [DisplayName("Estimate Unit Amount")]
    public decimal? msdyn_EstimateUnitAmount {
        get {
            return GetMoneyValue("msdyn_estimateunitamount");
        }
        set {
            SetMoneyValue("msdyn_estimateunitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the estimated cost amount per unit.</para>
    /// <para>Display Name: Estimate Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitcost")]
    [DisplayName("Estimate Unit Cost")]
    public decimal? msdyn_EstimateUnitCost {
        get {
            return GetMoneyValue("msdyn_estimateunitcost");
        }
        set {
            SetMoneyValue("msdyn_estimateunitcost", value);
        }
    }
    
    /// <summary>
    /// <para>Enter any internal notes you want to track on this service.</para>
    /// <para>Display Name: Internal Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internaldescription")]
    [DisplayName("Internal Description")]
    public string msdyn_InternalDescription {
        get {
            return GetAttributeValue<string>("msdyn_internaldescription");
        }
        set {
            SetAttributeValue("msdyn_internaldescription", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the current status of the line, estimate or used.</para>
    /// <para>Display Name: Line Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_linestatus")]
    [DisplayName("Line Status")]
    public msdyn_productservicestatus? msdyn_LineStatus {
        get {
            return GetOptionSetValue<msdyn_productservicestatus>("msdyn_linestatus");
        }
        set {
            SetOptionSetValue("msdyn_linestatus", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount charged as a minimum charge.</para>
    /// <para>Display Name: Minimum Charge Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_minimumchargeamount")]
    [DisplayName("Minimum Charge Amount")]
    public decimal? msdyn_MinimumChargeAmount {
        get {
            return GetMoneyValue("msdyn_minimumchargeamount");
        }
        set {
            SetMoneyValue("msdyn_minimumchargeamount", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the duration of up to how long the minimum charge applies.</para>
    /// <para>Display Name: Minimum Charge Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_minimumchargeduration")]
    [DisplayName("Minimum Charge Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_MinimumChargeDuration {
        get {
            return GetAttributeValue<int?>("msdyn_minimumchargeduration");
        }
        set {
            SetAttributeValue("msdyn_minimumchargeduration", value);
        }
    }
    
    /// <summary>
    /// <para>Price List that determines the pricing for this service</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Service proposed or used for this work order</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("msdyn_service")]
    [DisplayName("Service")]
    public EntityReference msdyn_Service {
        get {
            return GetAttributeValue<EntityReference>("msdyn_service");
        }
        set {
            SetAttributeValue("msdyn_service", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the total amount excluding discounts.</para>
    /// <para>Display Name: Subtotal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotal")]
    [DisplayName("Subtotal")]
    public decimal? msdyn_Subtotal {
        get {
            return GetMoneyValue("msdyn_subtotal");
        }
        set {
            SetMoneyValue("msdyn_subtotal", value);
        }
    }
    
    /// <summary>
    /// <para>Specify if service is taxable. If you do not wish to charge tax set this field to No.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Total Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount")]
    [DisplayName("Total Amount")]
    public decimal? msdyn_TotalAmount {
        get {
            return GetMoneyValue("msdyn_totalamount");
        }
        set {
            SetMoneyValue("msdyn_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the total cost of this service. This is calculated by (Unit Cost * Units) + Additional Cost + Commission Costs.</para>
    /// <para>Display Name: Total Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost")]
    [DisplayName("Total Cost")]
    public decimal? msdyn_TotalCost {
        get {
            return GetMoneyValue("msdyn_totalcost");
        }
        set {
            SetMoneyValue("msdyn_totalcost", value);
        }
    }
    
    /// <summary>
    /// <para>The unit that determines the final quantity for this service</para>
    /// <para>Display Name: Unit</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unit")]
    [DisplayName("Unit")]
    public EntityReference msdyn_Unit {
        get {
            return GetAttributeValue<EntityReference>("msdyn_unit");
        }
        set {
            SetAttributeValue("msdyn_unit", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the amount you want to charge the customer per unit. By default, this is calculated based on the selected price list. The amount can be changed.</para>
    /// <para>Display Name: Unit Amount</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount")]
    [DisplayName("Unit Amount")]
    public decimal? msdyn_UnitAmount {
        get {
            return GetMoneyValue("msdyn_unitamount");
        }
        set {
            SetMoneyValue("msdyn_unitamount", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the actual cost per unit.</para>
    /// <para>Display Name: Unit Cost</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost")]
    [DisplayName("Unit Cost")]
    public decimal? msdyn_UnitCost {
        get {
            return GetMoneyValue("msdyn_unitcost");
        }
        set {
            SetMoneyValue("msdyn_unitcost", value);
        }
    }
    
    /// <summary>
    /// <para>The work order this service relates to</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>The Incident related to this product</para>
    /// <para>Display Name: Work Order Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderincident")]
    [DisplayName("Work Order Incident")]
    public EntityReference msdyn_WorkOrderIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderincident");
        }
        set {
            SetAttributeValue("msdyn_workorderincident", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the additional cost in the base currency.</para>
    /// <para>Display Name: Additional Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_additionalcost_base")]
    [DisplayName("Additional Cost (Base)")]
    public decimal? msdyn_additionalcost_Base {
        get {
            return GetMoneyValue("msdyn_additionalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the calculated unit amount in the base currency.</para>
    /// <para>Display Name: Calculated Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_calculatedunitamount_base")]
    [DisplayName("Calculated Unit Amount (Base)")]
    public decimal? msdyn_calculatedunitamount_Base {
        get {
            return GetMoneyValue("msdyn_calculatedunitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the commission costs in the base currency.</para>
    /// <para>Display Name: Commission Costs (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_commissioncosts_base")]
    [DisplayName("Commission Costs (Base)")]
    public decimal? msdyn_commissioncosts_Base {
        get {
            return GetMoneyValue("msdyn_commissioncosts_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the discount Amount in the base currency.</para>
    /// <para>Display Name: Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_discountamount_base")]
    [DisplayName("Discount Amount (Base)")]
    public decimal? msdyn_discountamount_Base {
        get {
            return GetMoneyValue("msdyn_discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate calculated unit amount in the base currency.</para>
    /// <para>Display Name: Estimate Calculated Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatecalculatedunitamount_base")]
    [DisplayName("Estimate Calculated Unit Amount (Base)")]
    public decimal? msdyn_estimatecalculatedunitamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatecalculatedunitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate discount amount in the base currency.</para>
    /// <para>Display Name: Estimate Discount Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatediscountamount_base")]
    [DisplayName("Estimate Discount Amount (Base)")]
    public decimal? msdyn_estimatediscountamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatediscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate subtotal in the base currency.</para>
    /// <para>Display Name: Estimate Subtotal (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatesubtotal_base")]
    [DisplayName("Estimate Subtotal (Base)")]
    public decimal? msdyn_estimatesubtotal_Base {
        get {
            return GetMoneyValue("msdyn_estimatesubtotal_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate total amount in the base currency.</para>
    /// <para>Display Name: Estimate Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalamount_base")]
    [DisplayName("Estimate Total Amount (Base)")]
    public decimal? msdyn_estimatetotalamount_Base {
        get {
            return GetMoneyValue("msdyn_estimatetotalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate total cost in the base currency.</para>
    /// <para>Display Name: Estimate Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatetotalcost_base")]
    [DisplayName("Estimate Total Cost (Base)")]
    public decimal? msdyn_estimatetotalcost_Base {
        get {
            return GetMoneyValue("msdyn_estimatetotalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate unit amount in the base currency.</para>
    /// <para>Display Name: Estimate Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitamount_base")]
    [DisplayName("Estimate Unit Amount (Base)")]
    public decimal? msdyn_estimateunitamount_Base {
        get {
            return GetMoneyValue("msdyn_estimateunitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the estimate unit cost in the base currency.</para>
    /// <para>Display Name: Estimate Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimateunitcost_base")]
    [DisplayName("Estimate Unit Cost (Base)")]
    public decimal? msdyn_estimateunitcost_Base {
        get {
            return GetMoneyValue("msdyn_estimateunitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the minimum charge amount in the base currency.</para>
    /// <para>Display Name: Minimum Charge Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_minimumchargeamount_base")]
    [DisplayName("Minimum Charge Amount (Base)")]
    public decimal? msdyn_minimumchargeamount_Base {
        get {
            return GetMoneyValue("msdyn_minimumchargeamount_base");
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the subtotal in the base currency.</para>
    /// <para>Display Name: Subtotal (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_subtotal_base")]
    [DisplayName("Subtotal (Base)")]
    public decimal? msdyn_subtotal_Base {
        get {
            return GetMoneyValue("msdyn_subtotal_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total amount in the base currency.</para>
    /// <para>Display Name: Total Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalamount_base")]
    [DisplayName("Total Amount (Base)")]
    public decimal? msdyn_totalamount_Base {
        get {
            return GetMoneyValue("msdyn_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the total cost in the base currency.</para>
    /// <para>Display Name: Total Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_totalcost_base")]
    [DisplayName("Total Cost (Base)")]
    public decimal? msdyn_totalcost_Base {
        get {
            return GetMoneyValue("msdyn_totalcost_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit amount in the base currency.</para>
    /// <para>Display Name: Unit Amount (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitamount_base")]
    [DisplayName("Unit Amount (Base)")]
    public decimal? msdyn_unitamount_Base {
        get {
            return GetMoneyValue("msdyn_unitamount_base");
        }
    }
    
    /// <summary>
    /// <para>Shows the value of the unit cost in the base currency.</para>
    /// <para>Display Name: Unit Cost (Base)</para>
    /// </summary>
    [AttributeLogicalName("msdyn_unitcost_base")]
    [DisplayName("Unit Cost (Base)")]
    public decimal? msdyn_unitcost_Base {
        get {
            return GetMoneyValue("msdyn_unitcost_base");
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Service</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workorderserviceState? statecode {
        get {
            return GetOptionSetValue<msdyn_workorderserviceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Service</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workorderservice_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workorderservice_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workorderservice_createdby")]
    public SystemUser lk_msdyn_workorderservice_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservice_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservice_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderservice_createdonbehalfby")]
    public SystemUser lk_msdyn_workorderservice_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservice_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservice_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workorderservice_modifiedby")]
    public SystemUser lk_msdyn_workorderservice_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservice_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservice_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderservice_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workorderservice_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservice_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservice_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_booking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_workorderservice_Booking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_workorderservice_Booking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_entitlement")]
    [RelationshipSchemaName("msdyn_entitlement_msdyn_workorderservice_entitlement")]
    public Entitlement msdyn_entitlement_msdyn_workorderservice_entitlement {
        get {
            return GetRelatedEntity<Entitlement>("msdyn_entitlement_msdyn_workorderservice_entitlement", null);
        }
        set {
            SetRelatedEntity("msdyn_entitlement_msdyn_workorderservice_entitlement", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_agreementbookingservice")]
    [RelationshipSchemaName("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
        "e")]
    public msdyn_agreementbookingservice msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingService {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
                    "e", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_agreementbookingservice_msdyn_workorderservice_AgreementBookingServic" +
                    "e", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_workorderservice_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_workorderservice_WorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorderincident")]
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident")]
    public msdyn_workorderincident msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorderincident_msdyn_workorderservice_WorkOrderIncident", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_service")]
    [RelationshipSchemaName("msdyn_product_msdyn_workorderservice_Service")]
    public Product msdyn_product_msdyn_workorderservice_Service {
        get {
            return GetRelatedEntity<Product>("msdyn_product_msdyn_workorderservice_Service", null);
        }
        set {
            SetRelatedEntity("msdyn_product_msdyn_workorderservice_Service", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_workorderservice_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_workorderservice_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_Appointments")]
    public IEnumerable<Appointment> msdyn_workorderservice_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_workorderservice_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_Emails")]
    public IEnumerable<Email> msdyn_workorderservice_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_workorderservice_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_workorderservice_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_workorderservice_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workorderservice_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workorderservice_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_workorderservice_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_workorderservice_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_workorderservice_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_workorderservice_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workorderservice_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workorderservice_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_Tasks")]
    public IEnumerable<Task> msdyn_workorderservice_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_workorderservice_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_workorderservice_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_workorderservice_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservice_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_workorderservice_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_workorderservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workorderservice")]
    public SystemUser user_msdyn_workorderservice {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workorderservice", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workorderservice", null, value);
        }
    }
    
    public static msdyn_workorderservice Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workorderservice,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Store service tasks that are to be performed for this work order</para>
/// <para>Display Name: Work Order Service Task</para>
/// </summary>
[EntityLogicalName("msdyn_workorderservicetask")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workorderservicetask : ExtendedEntity<msdyn_workorderservicetaskState, msdyn_workorderservicetask_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workorderservicetask";
    
    public const int EntityTypeCode = 10370;
    
    public msdyn_workorderservicetask() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workorderservicetask(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderservicetaskid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workorderservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Service Task</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderservicetaskid")]
    [DisplayName("Work Order Service Task")]
    public Guid? msdyn_workorderservicetaskId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderservicetaskid");
        }
        set {
            SetId("msdyn_workorderservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_actualduration")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_ActualDuration {
        get {
            return GetAttributeValue<int?>("msdyn_actualduration");
        }
        set {
            SetAttributeValue("msdyn_actualduration", value);
        }
    }
    
    /// <summary>
    /// <para>Agreement Booking Service Task linked to this Work Order Service Task</para>
    /// <para>Display Name: Agreement Booking Service Task</para>
    /// </summary>
    [AttributeLogicalName("msdyn_agreementbookingservicetask")]
    [DisplayName("Agreement Booking Service Task")]
    public EntityReference msdyn_AgreementBookingServiceTask {
        get {
            return GetAttributeValue<EntityReference>("msdyn_agreementbookingservicetask");
        }
        set {
            SetAttributeValue("msdyn_agreementbookingservicetask", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Resource Booking associated with Work Order Service Task.</para>
    /// <para>Display Name: Booking</para>
    /// </summary>
    [AttributeLogicalName("msdyn_booking")]
    [DisplayName("Booking")]
    public EntityReference msdyn_Booking {
        get {
            return GetAttributeValue<EntityReference>("msdyn_booking");
        }
        set {
            SetAttributeValue("msdyn_booking", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Customer Asset associated with Work Order Service Task.</para>
    /// <para>Display Name: Customer Asset</para>
    /// </summary>
    [AttributeLogicalName("msdyn_customerasset")]
    [DisplayName("Customer Asset")]
    public EntityReference msdyn_CustomerAsset {
        get {
            return GetAttributeValue<EntityReference>("msdyn_customerasset");
        }
        set {
            SetAttributeValue("msdyn_customerasset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("msdyn_description")]
    [DisplayName("Description")]
    public string msdyn_Description {
        get {
            return GetAttributeValue<string>("msdyn_description");
        }
        set {
            SetAttributeValue("msdyn_description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Estimated Duration</para>
    /// </summary>
    [AttributeLogicalName("msdyn_estimatedduration")]
    [DisplayName("Estimated Duration")]
    [Range(0, 2147483647)]
    public int? msdyn_EstimatedDuration {
        get {
            return GetAttributeValue<int?>("msdyn_estimatedduration");
        }
        set {
            SetAttributeValue("msdyn_estimatedduration", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Inspection Template associated with Work Order Service Task.</para>
    /// <para>Display Name: Inspection Template</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspection")]
    [DisplayName("Inspection Template")]
    public EntityReference msdyn_Inspection {
        get {
            return GetAttributeValue<EntityReference>("msdyn_inspection");
        }
        set {
            SetAttributeValue("msdyn_inspection", value);
        }
    }
    
    /// <summary>
    /// <para>Depicts whether inspection template is enabled for Work Order Service Task Type.</para>
    /// <para>Display Name: Has Inspection</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectionenabled")]
    [DisplayName("Has Inspection")]
    public bool? msdyn_InspectionEnabled {
        get {
            return GetAttributeValue<bool?>("msdyn_inspectionenabled");
        }
        set {
            SetAttributeValue("msdyn_inspectionenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Output of the Inspection.</para>
    /// <para>Display Name: Inspection Result</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectionresult")]
    [DisplayName("Inspection Result")]
    public msdyn_workorderservicetask_msdyn_InspectionResult? msdyn_InspectionResult {
        get {
            return GetOptionSetValue<msdyn_workorderservicetask_msdyn_InspectionResult>("msdyn_inspectionresult");
        }
        set {
            SetOptionSetValue("msdyn_inspectionresult", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Internal Flags</para>
    /// </summary>
    [AttributeLogicalName("msdyn_internalflags")]
    [DisplayName("Internal Flags")]
    public string msdyn_InternalFlags {
        get {
            return GetAttributeValue<string>("msdyn_internalflags");
        }
        set {
            SetAttributeValue("msdyn_internalflags", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the order of this task within the work order service tasks.</para>
    /// <para>Display Name: Line Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_lineorder")]
    [DisplayName("Line Order")]
    [Range(-2147483648, 2147483647)]
    public int? msdyn_LineOrder {
        get {
            return GetAttributeValue<int?>("msdyn_lineorder");
        }
        set {
            SetAttributeValue("msdyn_lineorder", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: % Complete</para>
    /// </summary>
    [AttributeLogicalName("msdyn_percentcomplete")]
    [DisplayName("% Complete")]
    public double? msdyn_PercentComplete {
        get {
            return GetAttributeValue<double?>("msdyn_percentcomplete");
        }
        set {
            SetAttributeValue("msdyn_percentcomplete", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Service Task Type associated with Work Order Service Task.</para>
    /// <para>Display Name: Task Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_tasktype")]
    [DisplayName("Task Type")]
    public EntityReference msdyn_TaskType {
        get {
            return GetAttributeValue<EntityReference>("msdyn_tasktype");
        }
        set {
            SetAttributeValue("msdyn_tasktype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order associated with Work Order Service Task.</para>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorder")]
    [DisplayName("Work Order")]
    public EntityReference msdyn_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorder");
        }
        set {
            SetAttributeValue("msdyn_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Incident associated with Work Order Service Task.</para>
    /// <para>Display Name: Work Order Incident</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workorderincident")]
    [DisplayName("Work Order Incident")]
    public EntityReference msdyn_WorkOrderIncident {
        get {
            return GetAttributeValue<EntityReference>("msdyn_workorderincident");
        }
        set {
            SetAttributeValue("msdyn_workorderincident", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Inspection Definition associated with Work Order Service Task.</para>
    /// <para>Display Name: Inspection Template Version Id</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectiondefinitionid")]
    [DisplayName("Inspection Template Version Id")]
    public EntityReference msdyn_inspectiondefinitionid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_inspectiondefinitionid");
        }
        set {
            SetAttributeValue("msdyn_inspectiondefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Inspection Response associated with Work Order Service Task.</para>
    /// <para>Display Name: Inspection Response Id</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectionresponseid")]
    [DisplayName("Inspection Response Id")]
    public EntityReference msdyn_inspectionresponseid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_inspectionresponseid");
        }
        set {
            SetAttributeValue("msdyn_inspectionresponseid", value);
        }
    }
    
    /// <summary>
    /// <para>Depicts the result of Inspection that the user enters</para>
    /// <para>Display Name: Result</para>
    /// </summary>
    [AttributeLogicalName("msdyn_inspectiontaskresult")]
    [DisplayName("Result")]
    public msdyn_inspectionresult? msdyn_inspectiontaskresult {
        get {
            return GetOptionSetValue<msdyn_inspectionresult>("msdyn_inspectiontaskresult");
        }
        set {
            SetOptionSetValue("msdyn_inspectiontaskresult", value);
        }
    }
    
    /// <summary>
    /// <para>Enter the name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only</para>
    /// <para>Display Name: SurveyControl</para>
    /// </summary>
    [AttributeLogicalName("msdyn_surveyboundedoutput")]
    [DisplayName("SurveyControl")]
    public string msdyn_surveyboundedoutput {
        get {
            return GetAttributeValue<string>("msdyn_surveyboundedoutput");
        }
        set {
            SetAttributeValue("msdyn_surveyboundedoutput", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Case associated with Work Order Service Task.</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [AttributeLogicalName("ovs_caseid")]
    [DisplayName("Case")]
    public EntityReference ovs_CaseId {
        get {
            return GetAttributeValue<EntityReference>("ovs_caseid");
        }
        set {
            SetAttributeValue("ovs_caseid", value);
        }
    }
    
    /// <summary>
    /// <para>Field For Internal Logic Required for Service Task form and the Questionnaire Web Resource Component</para>
    /// <para>Display Name: Is Questionnaire Complete</para>
    /// </summary>
    [AttributeLogicalName("ovs_isquestionnairecomplete")]
    [DisplayName("Is Questionnaire Complete")]
    public bool? ovs_IsQuestionnaireComplete {
        get {
            return GetAttributeValue<bool?>("ovs_isquestionnairecomplete");
        }
        set {
            SetAttributeValue("ovs_isquestionnairecomplete", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaire")]
    [DisplayName("Questionnaire")]
    public EntityReference ovs_Questionnaire {
        get {
            return GetAttributeValue<EntityReference>("ovs_questionnaire");
        }
        set {
            SetAttributeValue("ovs_questionnaire", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire Definition</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnairedefinition")]
    [DisplayName("Questionnaire Definition")]
    public string ovs_QuestionnaireDefinition {
        get {
            return GetAttributeValue<string>("ovs_questionnairedefinition");
        }
        set {
            SetAttributeValue("ovs_questionnairedefinition", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire Response</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireresponse")]
    [DisplayName("Questionnaire Response")]
    public string ovs_QuestionnaireResponse {
        get {
            return GetAttributeValue<string>("ovs_questionnaireresponse");
        }
        set {
            SetAttributeValue("ovs_questionnaireresponse", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire Result JSON</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireresultjson")]
    [DisplayName("Questionnaire Result JSON")]
    public string ovs_questionnaireresultjson {
        get {
            return GetAttributeValue<string>("ovs_questionnaireresultjson");
        }
        set {
            SetAttributeValue("ovs_questionnaireresultjson", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Blob Path</para>
    /// </summary>
    [AttributeLogicalName("qm_blobpath")]
    [DisplayName("Blob Path")]
    [MaxLength(200)]
    public string qm_BlobPath {
        get {
            return GetAttributeValue<string>("qm_blobpath");
        }
        set {
            SetAttributeValue("qm_blobpath", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Questionnaire Updated</para>
    /// </summary>
    [AttributeLogicalName("qm_isquestionnaireupdated")]
    [DisplayName("Is Questionnaire Updated")]
    public bool? qm_IsQuestionnaireUpdated {
        get {
            return GetAttributeValue<bool?>("qm_isquestionnaireupdated");
        }
        set {
            SetAttributeValue("qm_isquestionnaireupdated", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Service Task</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workorderservicetaskState? statecode {
        get {
            return GetOptionSetValue<msdyn_workorderservicetaskState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Service Task</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workorderservicetask_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workorderservicetask_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_createdby")]
    public SystemUser lk_msdyn_workorderservicetask_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservicetask_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservicetask_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_createdonbehalfby")]
    public SystemUser lk_msdyn_workorderservicetask_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservicetask_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservicetask_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_modifiedby")]
    public SystemUser lk_msdyn_workorderservicetask_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservicetask_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservicetask_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workorderservicetask_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workorderservicetask_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workorderservicetask_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workorderservicetask_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_booking")]
    [RelationshipSchemaName("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking")]
    public BookableResourceBooking msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking {
        get {
            return GetRelatedEntity<BookableResourceBooking>("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking", null);
        }
        set {
            SetRelatedEntity("msdyn_bookableresourcebooking_msdyn_workorderservicetask_Booking", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_customerasset")]
    [RelationshipSchemaName("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset")]
    public msdyn_customerasset msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_customerasset_msdyn_workorderservicetask_CustomerAsset", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_tasktype")]
    [RelationshipSchemaName("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType")]
    public msdyn_servicetasktype msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType {
        get {
            return GetRelatedEntity<msdyn_servicetasktype>("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_servicetasktype_msdyn_workorderservicetask_TaskType", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorder")]
    [RelationshipSchemaName("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder")]
    public msdyn_workorder msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorder_msdyn_workorderservicetask_WorkOrder", null, value);
        }
    }
    
    [AttributeLogicalName("msdyn_workorderincident")]
    [RelationshipSchemaName("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident")]
    public msdyn_workorderincident msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident", null);
        }
        set {
            SetRelatedEntity("msdyn_msdyn_workorderincident_msdyn_workorderservicetask_WorkOrderIncident", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_ActivityPointers")]
    public IEnumerable<ActivityPointer> msdyn_workorderservicetask_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("msdyn_workorderservicetask_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_Appointments")]
    public IEnumerable<Appointment> msdyn_workorderservicetask_Appointments {
        get {
            return GetRelatedEntities<Appointment>("msdyn_workorderservicetask_Appointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_Emails")]
    public IEnumerable<Email> msdyn_workorderservicetask_Emails {
        get {
            return GetRelatedEntities<Email>("msdyn_workorderservicetask_Emails", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_PhoneCalls")]
    public IEnumerable<PhoneCall> msdyn_workorderservicetask_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("msdyn_workorderservicetask_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workorderservicetask_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workorderservicetask_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> msdyn_workorderservicetask_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_workorderservicetask_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> msdyn_workorderservicetask_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("msdyn_workorderservicetask_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workorderservicetask_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workorderservicetask_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_Tasks")]
    public IEnumerable<Task> msdyn_workorderservicetask_Tasks {
        get {
            return GetRelatedEntities<Task>("msdyn_workorderservicetask_Tasks", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> msdyn_workorderservicetask_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("msdyn_workorderservicetask_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorderservicetask_msfp_alerts")]
    public IEnumerable<msfp_alert> msdyn_workorderservicetask_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("msdyn_workorderservicetask_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("msdyn_workorderservicetask_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_questionnaire")]
    [RelationshipSchemaName("ovs_ServiceTask_Questionnaire")]
    public ovs_Questionnaire ovs_ServiceTask_Questionnaire {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ovs_ServiceTask_Questionnaire", null);
        }
        set {
            SetRelatedEntity("ovs_ServiceTask_Questionnaire", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_caseid")]
    [RelationshipSchemaName("ovs_incident_msdyn_workorderservicetask")]
    public Incident ovs_incident_msdyn_workorderservicetask {
        get {
            return GetRelatedEntity<Incident>("ovs_incident_msdyn_workorderservicetask", null);
        }
        set {
            SetRelatedEntity("ovs_incident_msdyn_workorderservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorderservicetask_ovs_finding")]
    public IEnumerable<ovs_Finding> ovs_msdyn_workorderservicetask_ovs_finding {
        get {
            return GetRelatedEntities<ovs_Finding>("ovs_msdyn_workorderservicetask_ovs_finding", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorderservicetask_ovs_finding", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorderservicetask_ovs_workorders")]
    public IEnumerable<ovs_workorderservicetaskprovision> ovs_msdyn_workorderservicetask_ovs_workorders {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("ovs_msdyn_workorderservicetask_ovs_workorders", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorderservicetask_ovs_workorders", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workorderservicetask")]
    public SystemUser user_msdyn_workorderservicetask {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workorderservicetask", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workorderservicetask", null, value);
        }
    }
    
    public static msdyn_workorderservicetask Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workorderservicetask,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Specify custom work order substatuses, which can be used to specify the current work order status more precisely.</para>
/// <para>Display Name: Work Order Substatus</para>
/// </summary>
[EntityLogicalName("msdyn_workordersubstatus")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workordersubstatus : ExtendedEntity<msdyn_workordersubstatusState, msdyn_workordersubstatus_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workordersubstatus";
    
    public const int EntityTypeCode = 10371;
    
    public msdyn_workordersubstatus() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workordersubstatus(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workordersubstatusid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workordersubstatusid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workordersubstatusid")]
    [DisplayName("Work Order Substatus")]
    public Guid? msdyn_workordersubstatusId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workordersubstatusid");
        }
        set {
            SetId("msdyn_workordersubstatusid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Specify whether this substatus should be the default substatus for this status type.</para>
    /// <para>Display Name: Default Substatus</para>
    /// </summary>
    [AttributeLogicalName("msdyn_defaultsubstatus")]
    [DisplayName("Default Substatus")]
    public bool? msdyn_DefaultSubStatus {
        get {
            return GetAttributeValue<bool?>("msdyn_defaultsubstatus");
        }
        set {
            SetAttributeValue("msdyn_defaultsubstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Specify the system status.</para>
    /// <para>Display Name: System Status</para>
    /// </summary>
    [AttributeLogicalName("msdyn_systemstatus")]
    [DisplayName("System Status")]
    public msdyn_wosystemstatus? msdyn_SystemStatus {
        get {
            return GetOptionSetValue<msdyn_wosystemstatus>("msdyn_systemstatus");
        }
        set {
            SetOptionSetValue("msdyn_systemstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the work order status name.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Substatus</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workordersubstatusState? statecode {
        get {
            return GetOptionSetValue<msdyn_workordersubstatusState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Substatus</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workordersubstatus_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workordersubstatus_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_createdby")]
    public SystemUser lk_msdyn_workordersubstatus_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordersubstatus_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordersubstatus_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_createdonbehalfby")]
    public SystemUser lk_msdyn_workordersubstatus_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordersubstatus_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordersubstatus_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_modifiedby")]
    public SystemUser lk_msdyn_workordersubstatus_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordersubstatus_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordersubstatus_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workordersubstatus_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workordersubstatus_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordersubstatus_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordersubstatus_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_workordersubstatus_msdyn_workorder_Status {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workordersubstatus_msdyn_workorder_Status", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workordersubstatus_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workordersubstatus_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workordersubstatus_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workordersubstatus_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workordersubstatus_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workordersubstatus_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workordersubstatus_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workordersubstatus_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workordersubstatus")]
    public SystemUser user_msdyn_workordersubstatus {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workordersubstatus", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workordersubstatus", null, value);
        }
    }
    
    public static msdyn_workordersubstatus Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workordersubstatus,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Create different work order types to reflect the different types of work that your company offers. Work Order types are used to control various settings on a work order.</para>
/// <para>Display Name: Work Order Type</para>
/// </summary>
[EntityLogicalName("msdyn_workordertype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msdyn_workordertype : ExtendedEntity<msdyn_workordertypeState, msdyn_workordertype_statuscode> {
    
    public const string EntityLogicalName = "msdyn_workordertype";
    
    public const int EntityTypeCode = 10372;
    
    public msdyn_workordertype() : 
            base(EntityLogicalName) {
    }
    
    public msdyn_workordertype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("msdyn_name");
        }
    }
    
    [AttributeLogicalName("msdyn_workordertypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("msdyn_workordertypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the entity instances.</para>
    /// <para>Display Name: Work Order Type</para>
    /// </summary>
    [AttributeLogicalName("msdyn_workordertypeid")]
    [DisplayName("Work Order Type")]
    public Guid? msdyn_workordertypeId {
        get {
            return GetAttributeValue<Guid?>("msdyn_workordertypeid");
        }
        set {
            SetId("msdyn_workordertypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Shows who created the record on behalf of another user.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Shows who last updated the record on behalf of another user.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Select whether work orders of this type require an incident to be recorded on the work order.</para>
    /// <para>Display Name: Incident Required</para>
    /// </summary>
    [AttributeLogicalName("msdyn_incidentrequired")]
    [DisplayName("Incident Required")]
    public bool? msdyn_IncidentRequired {
        get {
            return GetAttributeValue<bool?>("msdyn_incidentrequired");
        }
        set {
            SetAttributeValue("msdyn_incidentrequired", value);
        }
    }
    
    /// <summary>
    /// <para>Default Price List to be used on Work Orders linked to this Work Order Type. Please review the help for further details on Price Lists</para>
    /// <para>Display Name: Price List</para>
    /// </summary>
    [AttributeLogicalName("msdyn_pricelist")]
    [DisplayName("Price List")]
    public EntityReference msdyn_PriceList {
        get {
            return GetAttributeValue<EntityReference>("msdyn_pricelist");
        }
        set {
            SetAttributeValue("msdyn_pricelist", value);
        }
    }
    
    /// <summary>
    /// <para>Select whether work orders of this type are taxable.</para>
    /// <para>Display Name: Taxable</para>
    /// </summary>
    [AttributeLogicalName("msdyn_taxable")]
    [DisplayName("Taxable")]
    public bool? msdyn_Taxable {
        get {
            return GetAttributeValue<bool?>("msdyn_taxable");
        }
        set {
            SetAttributeValue("msdyn_taxable", value);
        }
    }
    
    /// <summary>
    /// <para>Type the name of the work order type.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("msdyn_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string msdyn_name {
        get {
            return GetAttributeValue<string>("msdyn_name");
        }
        set {
            SetAttributeValue("msdyn_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order Type Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_workordertypenameenglish")]
    [DisplayName("Work Order Type Name (English)")]
    [MaxLength(100)]
    public string ovs_WorkOrderTypeNameEnglish {
        get {
            return GetAttributeValue<string>("ovs_workordertypenameenglish");
        }
        set {
            SetAttributeValue("ovs_workordertypenameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order Type Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_workordertypenamefrench")]
    [DisplayName("Work Order Type Name (French)")]
    [MaxLength(100)]
    public string ovs_WorkOrderTypeNameFrench {
        get {
            return GetAttributeValue<string>("ovs_workordertypenamefrench");
        }
        set {
            SetAttributeValue("ovs_workordertypenamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public msdyn_workordertypeState? statecode {
        get {
            return GetOptionSetValue<msdyn_workordertypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msdyn_workordertype_statuscode? statuscode {
        get {
            return GetOptionSetValue<msdyn_workordertype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_msdyn_workordertype_createdby")]
    public SystemUser lk_msdyn_workordertype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordertype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordertype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workordertype_createdonbehalfby")]
    public SystemUser lk_msdyn_workordertype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordertype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordertype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_msdyn_workordertype_modifiedby")]
    public SystemUser lk_msdyn_workordertype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordertype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordertype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_msdyn_workordertype_modifiedonbehalfby")]
    public SystemUser lk_msdyn_workordertype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_msdyn_workordertype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_msdyn_workordertype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType")]
    public IEnumerable<msdyn_incidenttype> msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workordertype_msdyn_incidenttype_DefaultWorkOrderType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType")]
    public IEnumerable<msdyn_workorder> msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workordertype_msdyn_workorder_WorkOrderType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_msdyn_workordertype_opportunity_WorkOrderType")]
    public IEnumerable<Opportunity> msdyn_msdyn_workordertype_opportunity_WorkOrderType {
        get {
            return GetRelatedEntities<Opportunity>("msdyn_msdyn_workordertype_opportunity_WorkOrderType", null);
        }
        set {
            SetRelatedEntities("msdyn_msdyn_workordertype_opportunity_WorkOrderType", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workordertype_ProcessSession")]
    public IEnumerable<ProcessSession> msdyn_workordertype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msdyn_workordertype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msdyn_workordertype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workordertype_SyncErrors")]
    public IEnumerable<SyncError> msdyn_workordertype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msdyn_workordertype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msdyn_workordertype_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workordertype_msdyn_incidenttype")]
    public IEnumerable<msdyn_incidenttype> ts_msdyn_workordertype_msdyn_incidenttype {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("ts_msdyn_workordertype_msdyn_incidenttype", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workordertype_msdyn_incidenttype", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workordertype_ts_workordercreationw")]
    public IEnumerable<ts_workordercreationwizard> ts_msdyn_workordertype_ts_workordercreationw {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_msdyn_workordertype_ts_workordercreationw", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workordertype_ts_workordercreationw", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_msdyn_workordertype")]
    public SystemUser user_msdyn_workordertype {
        get {
            return GetRelatedEntity<SystemUser>("user_msdyn_workordertype", null);
        }
        set {
            SetRelatedEntity("user_msdyn_workordertype", null, value);
        }
    }
    
    public static msdyn_workordertype Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_workordertype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Customer Voice alert</para>
/// </summary>
[EntityLogicalName("msfp_alert")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class msfp_alert : ExtendedEntity<msfp_alertState, msfp_alert_StatusCode> {
    
    public const string EntityLogicalName = "msfp_alert";
    
    public const int EntityTypeCode = 10235;
    
    public msfp_alert() : 
            base(EntityLogicalName) {
    }
    
    public msfp_alert(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the activity.</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Activity")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
    /// <para>Display Name: Activity Additional Parameters</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Activity Additional Parameters")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type of activity.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Activity Type")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Actual duration of the activity in minutes.</para>
    /// <para>Display Name: Actual Duration</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Actual Duration")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Actual end time of the activity.</para>
    /// <para>Display Name: Actual End</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Actual End")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Actual start time of the activity.</para>
    /// <para>Display Name: Actual Start</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Actual Start")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
    /// <para>Display Name: BCC</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("BCC")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Carbon-copy (cc) recipients of the activity.</para>
    /// <para>Display Name: CC</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("CC")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
    /// <para>Display Name: Social Channel</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Social Channel")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the activity.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was created.</para>
    /// <para>Display Name: Date Created</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Date Created")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Customer with which the activity is associated.</para>
    /// <para>Display Name: Customers</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Customers")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time when the delivery of the activity was last attempted.</para>
    /// <para>Display Name: Date Delivery Last Attempted</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date Delivery Last Attempted")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
    }
    
    /// <summary>
    /// <para>Priority of delivery of the activity to the email server.</para>
    /// <para>Display Name: Delivery Priority</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Delivery Priority")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Description of the activity.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>The message id of activity which is returned from Exchange Server.</para>
    /// <para>Display Name: Exchange Item ID</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("Exchange Item ID")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Exchange Rate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Shows the web link of Activity of type email.</para>
    /// <para>Display Name: Exchange WebLink</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("Exchange WebLink")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Person who the activity is from.</para>
    /// <para>Display Name: From</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("From")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type of instance of a recurring series.</para>
    /// <para>Display Name: Recurring Instance Type</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Recurring Instance Type")]
    public msfp_alert_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<msfp_alert_InstanceTypeCode>("instancetypecode");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
    /// <para>Display Name: Is Billed</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Is Billed")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Private</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Is Private")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
    /// <para>Display Name: Is Regular Activity</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Is Regular Activity")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information regarding whether the activity was created from a workflow rule.</para>
    /// <para>Display Name: Is Workflow Created</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Is Workflow Created")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the date and time stamp of the last on hold time.</para>
    /// <para>Display Name: Last On Hold Time</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Last On Hold Time")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Left the voice mail</para>
    /// <para>Display Name: Left Voice Mail</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Left Voice Mail")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of user who last modified the activity.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when activity was last modified.</para>
    /// <para>Display Name: Last Updated</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Last Updated")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Shows how long, in minutes, that the record was on hold.</para>
    /// <para>Display Name: On Hold Time (Minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("On Hold Time (Minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>List of optional attendees for the activity.</para>
    /// <para>Display Name: Optional Attendees</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Optional Attendees")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Person who organized the activity.</para>
    /// <para>Display Name: Organizer</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organizer")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user or team who owns the activity.</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit that owns the activity.</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the team that owns the activity.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user that owns the activity.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Outsource vendor with which activity is associated.</para>
    /// <para>Display Name: Outsource Vendors</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Outsource Vendors")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Delay activity processing until</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Delay activity processing until")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Priority of the activity.</para>
    /// <para>Display Name: Priority</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priority")]
    public msfp_alert_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<msfp_alert_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the object with which the activity is associated.</para>
    /// <para>Display Name: Regarding</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Regarding")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>List of required attendees for the activity.</para>
    /// <para>Display Name: Required Attendees</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Required Attendees")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Users or facility/equipment that are required for the activity.</para>
    /// <para>Display Name: Resources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Resources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
    /// <para>Display Name: Last SLA applied</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Last SLA applied")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Scheduled duration of the activity, specified in minutes.</para>
    /// <para>Display Name: Scheduled Duration</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Scheduled Duration")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Scheduled end time of the activity.</para>
    /// <para>Display Name: Due Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Due Date")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Scheduled start time of the activity.</para>
    /// <para>Display Name: Start Date</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Start Date")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
    /// <para>Display Name: Sender's Mailbox</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Sender\'s Mailbox")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the activity was sent.</para>
    /// <para>Display Name: Date Sent</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date Sent")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
    /// <para>Display Name: Series Id</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("Series Id")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of an associated service.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time by which the activities are sorted.</para>
    /// <para>Display Name: Sort Date</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Sort Date")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Process Stage")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the activity.</para>
    /// <para>Display Name: Activity Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Activity Status")]
    public msfp_alertState? StateCode {
        get {
            return GetOptionSetValue<msfp_alertState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the activity.</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public msfp_alert_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<msfp_alert_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Subject associated with the activity.</para>
    /// <para>Display Name: Subject</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Subject")]
    [MaxLength(400)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Person who is the receiver of the activity.</para>
    /// <para>Display Name: To</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("To")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the activitypointer.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Currency")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version number of the activity.</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Rule associated with this alert.</para>
    /// <para>Display Name: Alert rule</para>
    /// </summary>
    [AttributeLogicalName("msfp_alertrule")]
    [DisplayName("Alert rule")]
    public EntityReference msfp_alertrule {
        get {
            return GetAttributeValue<EntityReference>("msfp_alertrule");
        }
        set {
            SetAttributeValue("msfp_alertrule", value);
        }
    }
    
    /// <summary>
    /// <para>Email address of the assignee of the alert.</para>
    /// <para>Display Name: Assignee email</para>
    /// </summary>
    [AttributeLogicalName("msfp_assigneeemail")]
    [DisplayName("Assignee email")]
    [MaxLength(200)]
    public string msfp_assigneeemail {
        get {
            return GetAttributeValue<string>("msfp_assigneeemail");
        }
        set {
            SetAttributeValue("msfp_assigneeemail", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the assignee of the alert.</para>
    /// <para>Display Name: Assignee name</para>
    /// </summary>
    [AttributeLogicalName("msfp_assigneename")]
    [DisplayName("Assignee name")]
    [MaxLength(200)]
    public string msfp_assigneename {
        get {
            return GetAttributeValue<string>("msfp_assigneename");
        }
        set {
            SetAttributeValue("msfp_assigneename", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer email</para>
    /// </summary>
    [AttributeLogicalName("msfp_customeremail")]
    [DisplayName("Customer email")]
    [MaxLength(100)]
    public string msfp_customeremail {
        get {
            return GetAttributeValue<string>("msfp_customeremail");
        }
        set {
            SetAttributeValue("msfp_customeremail", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Customer name</para>
    /// </summary>
    [AttributeLogicalName("msfp_customername")]
    [DisplayName("Customer name")]
    [MaxLength(100)]
    public string msfp_customername {
        get {
            return GetAttributeValue<string>("msfp_customername");
        }
        set {
            SetAttributeValue("msfp_customername", value);
        }
    }
    
    /// <summary>
    /// <para>Additional detail for the alert.</para>
    /// <para>Display Name: Notes</para>
    /// </summary>
    [AttributeLogicalName("msfp_notes")]
    [DisplayName("Notes")]
    [MaxLength(4000)]
    public string msfp_notes {
        get {
            return GetAttributeValue<string>("msfp_notes");
        }
        set {
            SetAttributeValue("msfp_notes", value);
        }
    }
    
    /// <summary>
    /// <para>Project to which the alert belongs.</para>
    /// <para>Display Name: Project</para>
    /// </summary>
    [AttributeLogicalName("msfp_project")]
    [DisplayName("Project")]
    public EntityReference msfp_project {
        get {
            return GetAttributeValue<EntityReference>("msfp_project");
        }
        set {
            SetAttributeValue("msfp_project", value);
        }
    }
    
    /// <summary>
    /// <para>Questions associated with the alert.</para>
    /// <para>Display Name: Questions</para>
    /// </summary>
    [AttributeLogicalName("msfp_questions")]
    [DisplayName("Questions")]
    [MaxLength(4000)]
    public string msfp_questions {
        get {
            return GetAttributeValue<string>("msfp_questions");
        }
        set {
            SetAttributeValue("msfp_questions", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for creating the alert.</para>
    /// <para>Display Name: Reason</para>
    /// </summary>
    [AttributeLogicalName("msfp_reason")]
    [DisplayName("Reason")]
    [MaxLength(4000)]
    public string msfp_reason {
        get {
            return GetAttributeValue<string>("msfp_reason");
        }
        set {
            SetAttributeValue("msfp_reason", value);
        }
    }
    
    /// <summary>
    /// <para>Detail on how the alert was resolved.</para>
    /// <para>Display Name: Resolution detail</para>
    /// </summary>
    [AttributeLogicalName("msfp_resolutiondetail")]
    [DisplayName("Resolution detail")]
    public string msfp_resolutiondetail {
        get {
            return GetAttributeValue<string>("msfp_resolutiondetail");
        }
        set {
            SetAttributeValue("msfp_resolutiondetail", value);
        }
    }
    
    /// <summary>
    /// <para>Sentiment while resolving the alert.</para>
    /// <para>Display Name: Resolution sentiment</para>
    /// </summary>
    [AttributeLogicalName("msfp_resolutionsentiment")]
    [DisplayName("Resolution sentiment")]
    [Range(-2147483648, 2147483647)]
    public int? msfp_resolutionsentiment {
        get {
            return GetAttributeValue<int?>("msfp_resolutionsentiment");
        }
        set {
            SetAttributeValue("msfp_resolutionsentiment", value);
        }
    }
    
    /// <summary>
    /// <para>Email address of the user who resolved the alert.</para>
    /// <para>Display Name: Resolver email</para>
    /// </summary>
    [AttributeLogicalName("msfp_resolveremail")]
    [DisplayName("Resolver email")]
    [MaxLength(100)]
    public string msfp_resolveremail {
        get {
            return GetAttributeValue<string>("msfp_resolveremail");
        }
        set {
            SetAttributeValue("msfp_resolveremail", value);
        }
    }
    
    /// <summary>
    /// <para>Name of the user who resolved the alert.</para>
    /// <para>Display Name: Resolver name</para>
    /// </summary>
    [AttributeLogicalName("msfp_resolvername")]
    [DisplayName("Resolver name")]
    [MaxLength(100)]
    public string msfp_resolvername {
        get {
            return GetAttributeValue<string>("msfp_resolvername");
        }
        set {
            SetAttributeValue("msfp_resolvername", value);
        }
    }
    
    /// <summary>
    /// <para>Satisfaction metric associated with the alert.</para>
    /// <para>Display Name: Satisfaction metric</para>
    /// </summary>
    [AttributeLogicalName("msfp_satisfactionmetric")]
    [DisplayName("Satisfaction metric")]
    public EntityReference msfp_satisfactionmetric {
        get {
            return GetAttributeValue<EntityReference>("msfp_satisfactionmetric");
        }
        set {
            SetAttributeValue("msfp_satisfactionmetric", value);
        }
    }
    
    /// <summary>
    /// <para>Survey associated with the alert.</para>
    /// <para>Display Name: Survey</para>
    /// </summary>
    [AttributeLogicalName("msfp_survey")]
    [DisplayName("Survey")]
    public EntityReference msfp_survey {
        get {
            return GetAttributeValue<EntityReference>("msfp_survey");
        }
        set {
            SetAttributeValue("msfp_survey", value);
        }
    }
    
    /// <summary>
    /// <para>Survey response associated with the alert.</para>
    /// <para>Display Name: Survey Response</para>
    /// </summary>
    [AttributeLogicalName("msfp_surveyresponse")]
    [DisplayName("Survey Response")]
    public EntityReference msfp_surveyresponse {
        get {
            return GetAttributeValue<EntityReference>("msfp_surveyresponse");
        }
        set {
            SetAttributeValue("msfp_surveyresponse", value);
        }
    }
    
    [RelationshipSchemaName("CampaignResponse_msfp_alerts")]
    public IEnumerable<CampaignResponse> CampaignResponse_msfp_alerts {
        get {
            return GetRelatedEntities<CampaignResponse>("CampaignResponse_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("CampaignResponse_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("account_msfp_alerts")]
    public Account account_msfp_alerts {
        get {
            return GetRelatedEntity<Account>("account_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("account_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("activityid")]
    [RelationshipSchemaName("activity_pointer_msfp_alert")]
    public ActivityPointer activity_pointer_msfp_alert {
        get {
            return GetRelatedEntity<ActivityPointer>("activity_pointer_msfp_alert", null);
        }
        set {
            SetRelatedEntity("activity_pointer_msfp_alert", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("bookableresourcebooking_msfp_alerts")]
    public BookableResourceBooking bookableresourcebooking_msfp_alerts {
        get {
            return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("bookableresourcebooking_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaign_msfp_alerts")]
    public Campaign campaign_msfp_alerts {
        get {
            return GetRelatedEntity<Campaign>("campaign_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("campaign_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("campaignactivity_msfp_alerts")]
    public CampaignActivity campaignactivity_msfp_alerts {
        get {
            return GetRelatedEntity<CampaignActivity>("campaignactivity_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("campaignactivity_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contact_msfp_alerts")]
    public Contact contact_msfp_alerts {
        get {
            return GetRelatedEntity<Contact>("contact_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("contact_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contract_msfp_alerts")]
    public Contract contract_msfp_alerts {
        get {
            return GetRelatedEntity<Contract>("contract_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("contract_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlement_msfp_alerts")]
    public Entitlement entitlement_msfp_alerts {
        get {
            return GetRelatedEntity<Entitlement>("entitlement_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("entitlement_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("entitlementtemplate_msfp_alerts")]
    public EntitlementTemplate entitlementtemplate_msfp_alerts {
        get {
            return GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("entitlementtemplate_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("incident_msfp_alerts")]
    public Incident incident_msfp_alerts {
        get {
            return GetRelatedEntity<Incident>("incident_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("incident_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("invoice_msfp_alerts")]
    public Invoice invoice_msfp_alerts {
        get {
            return GetRelatedEntity<Invoice>("invoice_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("invoice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("lead_msfp_alerts")]
    public Lead lead_msfp_alerts {
        get {
            return GetRelatedEntity<Lead>("lead_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("lead_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreement_msfp_alerts")]
    public msdyn_agreement msdyn_agreement_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreement_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingproduct_msfp_alerts")]
    public msdyn_agreementbookingproduct msdyn_agreementbookingproduct_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_agreementbookingproduct>("msdyn_agreementbookingproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementbookingservice_msfp_alerts")]
    public msdyn_agreementbookingservice msdyn_agreementbookingservice_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_agreementbookingservice>("msdyn_agreementbookingservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementbookingservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_agreementinvoiceproduct_msfp_alerts")]
    public msdyn_agreementinvoiceproduct msdyn_agreementinvoiceproduct_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_agreementinvoiceproduct>("msdyn_agreementinvoiceproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_agreementinvoiceproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_customerasset_msfp_alerts")]
    public msdyn_customerasset msdyn_customerasset_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_customerasset>("msdyn_customerasset_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_customerasset_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeproduct_msfp_alerts")]
    public msdyn_incidenttypeproduct msdyn_incidenttypeproduct_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_incidenttypeproduct>("msdyn_incidenttypeproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_incidenttypeservice_msfp_alerts")]
    public msdyn_incidenttypeservice msdyn_incidenttypeservice_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_incidenttypeservice>("msdyn_incidenttypeservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_incidenttypeservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorder_msfp_alerts")]
    public msdyn_purchaseorder msdyn_purchaseorder_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_purchaseorder>("msdyn_purchaseorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_purchaseorderproduct_msfp_alerts")]
    public msdyn_purchaseorderproduct msdyn_purchaseorderproduct_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_purchaseorderproduct>("msdyn_purchaseorderproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_purchaseorderproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_rma_msfp_alerts")]
    public msdyn_rma msdyn_rma_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_rma>("msdyn_rma_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_rma_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_timeoffrequest_msfp_alerts")]
    public msdyn_timeoffrequest msdyn_timeoffrequest_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_timeoffrequest>("msdyn_timeoffrequest_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_timeoffrequest_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorder_msfp_alerts")]
    public msdyn_workorder msdyn_workorder_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_workorder>("msdyn_workorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderincident_msfp_alerts")]
    public msdyn_workorderincident msdyn_workorderincident_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_workorderincident>("msdyn_workorderincident_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderincident_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderproduct_msfp_alerts")]
    public msdyn_workorderproduct msdyn_workorderproduct_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_workorderproduct>("msdyn_workorderproduct_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderproduct_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservice_msfp_alerts")]
    public msdyn_workorderservice msdyn_workorderservice_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_workorderservice>("msdyn_workorderservice_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservice_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("msdyn_workorderservicetask_msfp_alerts")]
    public msdyn_workorderservicetask msdyn_workorderservicetask_msfp_alerts {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("msdyn_workorderservicetask_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("msdyn_workorderservicetask_msfp_alerts", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_ProcessSession")]
    public IEnumerable<ProcessSession> msfp_alert_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("msfp_alert_ProcessSession", null);
        }
        set {
            SetRelatedEntities("msfp_alert_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_SyncErrors")]
    public IEnumerable<SyncError> msfp_alert_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("msfp_alert_SyncErrors", null);
        }
        set {
            SetRelatedEntities("msfp_alert_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("msfp_alert_activity_parties")]
    public IEnumerable<ActivityParty> msfp_alert_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("msfp_alert_activity_parties", null);
        }
        set {
            SetRelatedEntities("msfp_alert_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("msfp_alert_systemuser_createdby")]
    public SystemUser msfp_alert_systemuser_createdby {
        get {
            return GetRelatedEntity<SystemUser>("msfp_alert_systemuser_createdby", null);
        }
        set {
            SetRelatedEntity("msfp_alert_systemuser_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("msfp_alert_systemuser_createdonbehalfby")]
    public SystemUser msfp_alert_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("msfp_alert_systemuser_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("msfp_alert_systemuser_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("msfp_alert_systemuser_modifiedby")]
    public SystemUser msfp_alert_systemuser_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("msfp_alert_systemuser_modifiedby", null);
        }
        set {
            SetRelatedEntity("msfp_alert_systemuser_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("msfp_alert_systemuser_modifiedonbehalfby")]
    public SystemUser msfp_alert_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("msfp_alert_systemuser_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("msfp_alert_systemuser_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("msfp_alert_systemuser_owninguser")]
    public SystemUser msfp_alert_systemuser_owninguser {
        get {
            return GetRelatedEntity<SystemUser>("msfp_alert_systemuser_owninguser", null);
        }
        set {
            SetRelatedEntity("msfp_alert_systemuser_owninguser", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("opportunity_msfp_alerts")]
    public Opportunity opportunity_msfp_alerts {
        get {
            return GetRelatedEntity<Opportunity>("opportunity_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("opportunity_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ppp_traveller_msfp_alerts")]
    public ppp_Traveller ppp_traveller_msfp_alerts {
        get {
            return GetRelatedEntity<ppp_Traveller>("ppp_traveller_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("ppp_traveller_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("quote_msfp_alerts")]
    public Quote quote_msfp_alerts {
        get {
            return GetRelatedEntity<Quote>("quote_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("quote_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("salesorder_msfp_alerts")]
    public SalesOrder salesorder_msfp_alerts {
        get {
            return GetRelatedEntity<SalesOrder>("salesorder_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("salesorder_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("ts_request_msfp_alerts")]
    public ts_request ts_request_msfp_alerts {
        get {
            return GetRelatedEntity<ts_request>("ts_request_msfp_alerts", null);
        }
        set {
            SetRelatedEntity("ts_request_msfp_alerts", null, value);
        }
    }
    
    public static msfp_alert Retrieve(IOrganizationService service, Guid id, params Expression<Func<msfp_alert,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>A person who operates a commercial air service.</para>
/// <para>Display Name: Air Carrier</para>
/// </summary>
[EntityLogicalName("ovs_aircarrier")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_AirCarrier : ExtendedEntity<ovs_AirCarrierState, ovs_AirCarrier_statuscode> {
    
    public const string EntityLogicalName = "ovs_aircarrier";
    
    public const int EntityTypeCode = 10418;
    
    public ovs_AirCarrier() : 
            base(EntityLogicalName) {
    }
    
    public ovs_AirCarrier(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_aircarriername");
        }
    }
    
    [AttributeLogicalName("ovs_aircarrierid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_aircarrierid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Air Carrier</para>
    /// </summary>
    [AttributeLogicalName("ovs_aircarrierid")]
    [DisplayName("Air Carrier")]
    public Guid? ovs_AirCarrierId {
        get {
            return GetAttributeValue<Guid?>("ovs_aircarrierid");
        }
        set {
            SetId("ovs_aircarrierid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The legal name of the Air Carrier.</para>
    /// <para>Display Name: Air Carrier Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_aircarriername")]
    [DisplayName("Air Carrier Name")]
    [MaxLength(100)]
    public string ovs_AirCarrierName {
        get {
            return GetAttributeValue<string>("ovs_aircarriername");
        }
        set {
            SetAttributeValue("ovs_aircarriername", value);
        }
    }
    
    /// <summary>
    /// <para>The international radio call sign of the Air carrier.</para>
    /// <para>Display Name: Call Sign</para>
    /// </summary>
    [AttributeLogicalName("ovs_callsign")]
    [DisplayName("Call Sign")]
    [MaxLength(100)]
    public string ovs_CallSign {
        get {
            return GetAttributeValue<string>("ovs_callsign");
        }
        set {
            SetAttributeValue("ovs_callsign", value);
        }
    }
    
    /// <summary>
    /// <para>The Air Carrier designation code assigned by the International Civil Aviation Organization (ICAO). </para>
    /// <para>Display Name: ICAO Code</para>
    /// </summary>
    [AttributeLogicalName("ovs_icaocode")]
    [DisplayName("ICAO Code")]
    [MaxLength(3)]
    public string ovs_ICAOCode {
        get {
            return GetAttributeValue<string>("ovs_icaocode");
        }
        set {
            SetAttributeValue("ovs_icaocode", value);
        }
    }
    
    /// <summary>
    /// <para>Organizations, including but not limited to  Regulated Entities, that Transport Canada has interactions with.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [AttributeLogicalName("ovs_organization")]
    [DisplayName("Organization")]
    public EntityReference ovs_Organization {
        get {
            return GetAttributeValue<EntityReference>("ovs_organization");
        }
        set {
            SetAttributeValue("ovs_organization", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Air Carrier</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_AirCarrierState? statecode {
        get {
            return GetOptionSetValue<ovs_AirCarrierState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Air Carrier</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_AirCarrier_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_AirCarrier_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_country")]
    [DisplayName("Country")]
    public EntityReference ts_Country {
        get {
            return GetAttributeValue<EntityReference>("ts_country");
        }
        set {
            SetAttributeValue("ts_country", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_aircarrier_createdby")]
    public SystemUser lk_ovs_aircarrier_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_aircarrier_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_aircarrier_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_aircarrier_createdonbehalfby")]
    public SystemUser lk_ovs_aircarrier_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_aircarrier_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_aircarrier_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_aircarrier_modifiedby")]
    public SystemUser lk_ovs_aircarrier_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_aircarrier_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_aircarrier_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_aircarrier_modifiedonbehalfby")]
    public SystemUser lk_ovs_aircarrier_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_aircarrier_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_aircarrier_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_organization")]
    [RelationshipSchemaName("ovs_AirCarrier_Organization_Account")]
    public Account ovs_AirCarrier_Organization_Account {
        get {
            return GetRelatedEntity<Account>("ovs_AirCarrier_Organization_Account", null);
        }
        set {
            SetRelatedEntity("ovs_AirCarrier_Organization_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_aircarrier_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_aircarrier_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_aircarrier_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_aircarrier_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_aircarrier_SyncErrors")]
    public IEnumerable<SyncError> ovs_aircarrier_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_aircarrier_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_aircarrier_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_Traveller_AirCarrier_ovs_AirCarrier")]
    public IEnumerable<ppp_Traveller> ppp_Traveller_AirCarrier_ovs_AirCarrier {
        get {
            return GetRelatedEntities<ppp_Traveller>("ppp_Traveller_AirCarrier_ovs_AirCarrier", null);
        }
        set {
            SetRelatedEntities("ppp_Traveller_AirCarrier_ovs_AirCarrier", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_aircarrier")]
    public SystemUser user_ovs_aircarrier {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_aircarrier", null);
        }
        set {
            SetRelatedEntity("user_ovs_aircarrier", null, value);
        }
    }
    
    public static ovs_AirCarrier Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_AirCarrier,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>TSIS 2.0 Finding against a Provision in an Inspection Questionnaire</para>
/// <para>Display Name: Finding</para>
/// </summary>
[EntityLogicalName("ovs_finding")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_Finding : ExtendedEntity<ovs_FindingState, ovs_Finding_statuscode> {
    
    public const string EntityLogicalName = "ovs_finding";
    
    public const int EntityTypeCode = 10424;
    
    public ovs_Finding() : 
            base(EntityLogicalName) {
    }
    
    public ovs_Finding(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_finding");
        }
    }
    
    [AttributeLogicalName("ovs_findingid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_findingid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Finding</para>
    /// </summary>
    [AttributeLogicalName("ovs_findingid")]
    [DisplayName("Finding")]
    public Guid? ovs_FindingId {
        get {
            return GetAttributeValue<Guid?>("ovs_findingid");
        }
        set {
            SetId("ovs_findingid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the case in which this record belongs</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [AttributeLogicalName("ovs_caseid")]
    [DisplayName("Case")]
    public EntityReference ovs_CaseId {
        get {
            return GetAttributeValue<EntityReference>("ovs_caseid");
        }
        set {
            SetAttributeValue("ovs_caseid", value);
        }
    }
    
    /// <summary>
    /// <para>Free text area for comments against this finding</para>
    /// <para>Display Name: Finding Comments</para>
    /// </summary>
    [AttributeLogicalName("ovs_findingcomments")]
    [DisplayName("Finding Comments")]
    [MaxLength(1000)]
    public string ovs_FindingComments {
        get {
            return GetAttributeValue<string>("ovs_findingcomments");
        }
        set {
            SetAttributeValue("ovs_findingcomments", value);
        }
    }
    
    /// <summary>
    /// <para>Link to a file for documentary evidence against a finding</para>
    /// <para>Display Name: Finding File</para>
    /// </summary>
    [AttributeLogicalName("ovs_findingfile")]
    [DisplayName("Finding File")]
    [MaxLength(100)]
    public string ovs_FindingFile {
        get {
            return GetAttributeValue<string>("ovs_findingfile");
        }
        set {
            SetAttributeValue("ovs_findingfile", value);
        }
    }
    
    /// <summary>
    /// <para>Provision reference in which this Finding is against</para>
    /// <para>Display Name: Provision Reference</para>
    /// </summary>
    [AttributeLogicalName("ovs_findingprovisionreference")]
    [DisplayName("Provision Reference")]
    [MaxLength(1000)]
    public string ovs_FindingProvisionReference {
        get {
            return GetAttributeValue<string>("ovs_findingprovisionreference");
        }
        set {
            SetAttributeValue("ovs_findingprovisionreference", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Provision Text (to delete)</para>
    /// </summary>
    [AttributeLogicalName("ovs_findingprovisiontext")]
    [DisplayName("Provision Text (to delete)")]
    public string ovs_FindingProvisionText {
        get {
            return GetAttributeValue<string>("ovs_findingprovisiontext");
        }
        set {
            SetAttributeValue("ovs_findingprovisiontext", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Finding</para>
    /// </summary>
    [AttributeLogicalName("ovs_finding")]
    [DisplayName("Finding")]
    [MaxLength(100)]
    public string ovs_Finding_1 {
        get {
            return GetAttributeValue<string>("ovs_finding");
        }
        set {
            SetAttributeValue("ovs_finding", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the work order service task in which this record belongs</para>
    /// <para>Display Name: Work Order Service Task</para>
    /// </summary>
    [AttributeLogicalName("ovs_workorderservicetaskid")]
    [DisplayName("Work Order Service Task")]
    public EntityReference ovs_WorkOrderServiceTaskId {
        get {
            return GetAttributeValue<EntityReference>("ovs_workorderservicetaskid");
        }
        set {
            SetAttributeValue("ovs_workorderservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Finding</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_FindingState? statecode {
        get {
            return GetOptionSetValue<ovs_FindingState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Finding</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_Finding_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_Finding_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Enforcement Action</para>
    /// </summary>
    [AttributeLogicalName("ts_enforcementaction")]
    [DisplayName("Enforcement Action")]
    public ovs_Finding_ts_EnforcementAction? ts_EnforcementAction {
        get {
            return GetOptionSetValue<ovs_Finding_ts_EnforcementAction>("ts_enforcementaction");
        }
        set {
            SetOptionSetValue("ts_enforcementaction", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Justification of Enforcement Action</para>
    /// </summary>
    [AttributeLogicalName("ts_justificationof")]
    [DisplayName("Justification of Enforcement Action")]
    public string ts_Justificationof {
        get {
            return GetAttributeValue<string>("ts_justificationof");
        }
        set {
            SetAttributeValue("ts_justificationof", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Provision Category</para>
    /// </summary>
    [AttributeLogicalName("ts_provisioncategory")]
    [DisplayName("Provision Category")]
    public EntityReference ts_ProvisionCategory {
        get {
            return GetAttributeValue<EntityReference>("ts_provisioncategory");
        }
        set {
            SetAttributeValue("ts_provisioncategory", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Work Order</para>
    /// </summary>
    [AttributeLogicalName("ts_workorder")]
    [DisplayName("Work Order")]
    public EntityReference ts_WorkOrder {
        get {
            return GetAttributeValue<EntityReference>("ts_workorder");
        }
        set {
            SetAttributeValue("ts_workorder", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Account</para>
    /// </summary>
    [AttributeLogicalName("ts_accountid")]
    [DisplayName("Account")]
    public EntityReference ts_accountid {
        get {
            return GetAttributeValue<EntityReference>("ts_accountid");
        }
        set {
            SetAttributeValue("ts_accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Provision Text (EN)</para>
    /// </summary>
    [AttributeLogicalName("ts_findingprovisiontexten")]
    [DisplayName("Provision Text (EN)")]
    public string ts_findingProvisionTextEn {
        get {
            return GetAttributeValue<string>("ts_findingprovisiontexten");
        }
        set {
            SetAttributeValue("ts_findingprovisiontexten", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Provision Text (FR)</para>
    /// </summary>
    [AttributeLogicalName("ts_findingprovisiontextfr")]
    [DisplayName("Provision Text (FR)")]
    public string ts_findingProvisionTextFr {
        get {
            return GetAttributeValue<string>("ts_findingprovisiontextfr");
        }
        set {
            SetAttributeValue("ts_findingprovisiontextfr", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier that maps this finding to a finding in a questionnaire (SurveyJS)</para>
    /// <para>Display Name: Finding Mapping Key</para>
    /// </summary>
    [AttributeLogicalName("ts_findingmappingkey")]
    [DisplayName("Finding Mapping Key")]
    [MaxLength(200)]
    public string ts_findingmappingkey {
        get {
            return GetAttributeValue<string>("ts_findingmappingkey");
        }
        set {
            SetAttributeValue("ts_findingmappingkey", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Finding Type</para>
    /// </summary>
    [AttributeLogicalName("ts_findingtype")]
    [DisplayName("Finding Type")]
    public ts_findingtype? ts_findingtype {
        get {
            return GetOptionSetValue<ts_findingtype>("ts_findingtype");
        }
        set {
            SetOptionSetValue("ts_findingtype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation</para>
    /// </summary>
    [AttributeLogicalName("ts_operationid")]
    [DisplayName("Operation")]
    public EntityReference ts_operationid {
        get {
            return GetAttributeValue<EntityReference>("ts_operationid");
        }
        set {
            SetAttributeValue("ts_operationid", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_finding_createdby")]
    public SystemUser lk_ovs_finding_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_finding_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_finding_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_finding_createdonbehalfby")]
    public SystemUser lk_ovs_finding_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_finding_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_finding_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_finding_modifiedby")]
    public SystemUser lk_ovs_finding_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_finding_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_finding_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_finding_modifiedonbehalfby")]
    public SystemUser lk_ovs_finding_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_finding_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_finding_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_finding_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_finding_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_finding_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_finding_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_finding_SyncErrors")]
    public IEnumerable<SyncError> ovs_finding_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_finding_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_finding_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_caseid")]
    [RelationshipSchemaName("ovs_incident_ovs_finding")]
    public Incident ovs_incident_ovs_finding {
        get {
            return GetRelatedEntity<Incident>("ovs_incident_ovs_finding", null);
        }
        set {
            SetRelatedEntity("ovs_incident_ovs_finding", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_workorderservicetaskid")]
    [RelationshipSchemaName("ovs_msdyn_workorderservicetask_ovs_finding")]
    public msdyn_workorderservicetask ovs_msdyn_workorderservicetask_ovs_finding {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("ovs_msdyn_workorderservicetask_ovs_finding", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorderservicetask_ovs_finding", null, value);
        }
    }
    
    [AttributeLogicalName("ts_workorder")]
    [RelationshipSchemaName("ts_ovs_Finding_WorkOrder_msdyn_workorder")]
    public msdyn_workorder ts_ovs_Finding_WorkOrder_msdyn_workorder {
        get {
            return GetRelatedEntity<msdyn_workorder>("ts_ovs_Finding_WorkOrder_msdyn_workorder", null);
        }
        set {
            SetRelatedEntity("ts_ovs_Finding_WorkOrder_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("ts_accountid")]
    [RelationshipSchemaName("ts_ovs_Finding_accountid_Account")]
    public Account ts_ovs_Finding_accountid_Account {
        get {
            return GetRelatedEntity<Account>("ts_ovs_Finding_accountid_Account", null);
        }
        set {
            SetRelatedEntity("ts_ovs_Finding_accountid_Account", null, value);
        }
    }
    
    [AttributeLogicalName("ts_operationid")]
    [RelationshipSchemaName("ts_ovs_Finding_operationid_ovs_operation")]
    public ovs_operation ts_ovs_Finding_operationid_ovs_operation {
        get {
            return GetRelatedEntity<ovs_operation>("ts_ovs_Finding_operationid_ovs_operation", null);
        }
        set {
            SetRelatedEntity("ts_ovs_Finding_operationid_ovs_operation", null, value);
        }
    }
    
    [AttributeLogicalName("ts_provisioncategory")]
    [RelationshipSchemaName("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi")]
    public ts_ProvisionCategory ts_ovs_Finding_ts_ProvisionCategory_ts_Provi {
        get {
            return GetRelatedEntity<ts_ProvisionCategory>("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi", null);
        }
        set {
            SetRelatedEntity("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_finding")]
    public SystemUser user_ovs_finding {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_finding", null);
        }
        set {
            SetRelatedEntity("user_ovs_finding", null, value);
        }
    }
    
    public static ovs_Finding Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_Finding,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Questionnaire</para>
/// </summary>
[EntityLogicalName("ovs_questionnaire")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_Questionnaire : ExtendedEntity<ovs_QuestionnaireState, ovs_Questionnaire_statuscode> {
    
    public const string EntityLogicalName = "ovs_questionnaire";
    
    public const int EntityTypeCode = 10428;
    
    public ovs_Questionnaire() : 
            base(EntityLogicalName) {
    }
    
    public ovs_Questionnaire(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_questionnaireid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_questionnaireid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnaireid")]
    [DisplayName("Questionnaire")]
    public Guid? ovs_QuestionnaireId {
        get {
            return GetAttributeValue<Guid?>("ovs_questionnaireid");
        }
        set {
            SetId("ovs_questionnaireid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Description of the Questionnaire</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("ovs_description")]
    [DisplayName("Description")]
    [MaxLength(1000)]
    public string ovs_Description {
        get {
            return GetAttributeValue<string>("ovs_description");
        }
        set {
            SetAttributeValue("ovs_description", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the Questionnaire would be Effective. By default its the questionnaire published date. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Effective date</para>
    /// </summary>
    [AttributeLogicalName("ovs_effectivedate")]
    [DisplayName("Effective date")]
    public DateTime? ovs_Effectivedate {
        get {
            return GetAttributeValue<DateTime?>("ovs_effectivedate");
        }
        set {
            SetAttributeValue("ovs_effectivedate", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_Name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the date and time when the record was Published. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
    /// <para>Display Name: Published On</para>
    /// </summary>
    [AttributeLogicalName("ovs_publishedon")]
    [DisplayName("Published On")]
    public DateTime? ovs_PublishedOn {
        get {
            return GetAttributeValue<DateTime?>("ovs_publishedon");
        }
        set {
            SetAttributeValue("ovs_publishedon", value);
        }
    }
    
    /// <summary>
    /// <para>Questionnaire definition Json</para>
    /// <para>Display Name: Questionnaire Definition</para>
    /// </summary>
    [AttributeLogicalName("ovs_questionnairedefinition")]
    [DisplayName("Questionnaire Definition")]
    public string ovs_QuestionnaireDefinition {
        get {
            return GetAttributeValue<string>("ovs_questionnairedefinition");
        }
        set {
            SetAttributeValue("ovs_questionnairedefinition", value);
        }
    }
    
    /// <summary>
    /// <para>Version of the Questionnaire</para>
    /// <para>Display Name: Version</para>
    /// </summary>
    [AttributeLogicalName("ovs_version")]
    [DisplayName("Version")]
    [MaxLength(100)]
    public string ovs_Version {
        get {
            return GetAttributeValue<string>("ovs_version");
        }
        set {
            SetAttributeValue("ovs_version", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Questionnaire</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_QuestionnaireState? statecode {
        get {
            return GetOptionSetValue<ovs_QuestionnaireState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Questionnaire</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_Questionnaire_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_Questionnaire_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_questionnaire_createdby")]
    public SystemUser lk_ovs_questionnaire_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_questionnaire_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_questionnaire_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_questionnaire_createdonbehalfby")]
    public SystemUser lk_ovs_questionnaire_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_questionnaire_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_questionnaire_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_questionnaire_modifiedby")]
    public SystemUser lk_ovs_questionnaire_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_questionnaire_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_questionnaire_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_questionnaire_modifiedonbehalfby")]
    public SystemUser lk_ovs_questionnaire_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_questionnaire_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_questionnaire_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_ServiceTask_Questionnaire")]
    public IEnumerable<msdyn_workorderservicetask> ovs_ServiceTask_Questionnaire {
        get {
            return GetRelatedEntities<msdyn_workorderservicetask>("ovs_ServiceTask_Questionnaire", null);
        }
        set {
            SetRelatedEntities("ovs_ServiceTask_Questionnaire", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_incidenttypeservicetask_Questionnaire")]
    public IEnumerable<msdyn_incidenttypeservicetask> ovs_incidenttypeservicetask_Questionnaire {
        get {
            return GetRelatedEntities<msdyn_incidenttypeservicetask>("ovs_incidenttypeservicetask_Questionnaire", null);
        }
        set {
            SetRelatedEntities("ovs_incidenttypeservicetask_Questionnaire", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q")]
    public IEnumerable<msdyn_servicetasktype> ovs_msdyn_servicetasktype_Questionnaire_ovs_Q {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_servicetasktype_Questionnaire_ovs_Q", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_questionnaire_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_questionnaire_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_questionnaire_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_questionnaire_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_questionnaire_SyncErrors")]
    public IEnumerable<SyncError> ovs_questionnaire_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_questionnaire_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_questionnaire_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_questionnaire_ovs_questionnaire")]
    public IEnumerable<ts_questionnaireversion> ts_ovs_questionnaire_ovs_questionnaire {
        get {
            return GetRelatedEntities<ts_questionnaireversion>("ts_ovs_questionnaire_ovs_questionnaire", null);
        }
        set {
            SetRelatedEntities("ts_ovs_questionnaire_ovs_questionnaire", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_questionnaire")]
    public SystemUser user_ovs_questionnaire {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_questionnaire", null);
        }
        set {
            SetRelatedEntity("user_ovs_questionnaire", null, value);
        }
    }
    
    public static ovs_Questionnaire Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_Questionnaire,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Site Type</para>
/// </summary>
[EntityLogicalName("ovs_sitetype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_SiteType : ExtendedEntity<ovs_SiteTypeState, ovs_SiteType_statuscode> {
    
    public const string EntityLogicalName = "ovs_sitetype";
    
    public const int EntityTypeCode = 10429;
    
    public ovs_SiteType() : 
            base(EntityLogicalName) {
    }
    
    public ovs_SiteType(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_sitetypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_sitetypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Site Type</para>
    /// </summary>
    [AttributeLogicalName("ovs_sitetypeid")]
    [DisplayName("Site Type")]
    public Guid? ovs_SiteTypeId {
        get {
            return GetAttributeValue<Guid?>("ovs_sitetypeid");
        }
        set {
            SetId("ovs_sitetypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_Name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site Type Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_sitetypeelbl")]
    [DisplayName("Site Type Name (English)")]
    [MaxLength(100)]
    public string ovs_SiteTypeElbl {
        get {
            return GetAttributeValue<string>("ovs_sitetypeelbl");
        }
        set {
            SetAttributeValue("ovs_sitetypeelbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site Type Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_sitetypeflbl")]
    [DisplayName("Site Type Name (French)")]
    [MaxLength(100)]
    public string ovs_SiteTypeFlbl {
        get {
            return GetAttributeValue<string>("ovs_sitetypeflbl");
        }
        set {
            SetAttributeValue("ovs_sitetypeflbl", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the SiteType</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_SiteTypeState? statecode {
        get {
            return GetOptionSetValue<ovs_SiteTypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the SiteType</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_SiteType_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_SiteType_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_sitetype_createdby")]
    public SystemUser lk_ovs_sitetype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_sitetype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_sitetype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_sitetype_createdonbehalfby")]
    public SystemUser lk_ovs_sitetype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_sitetype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_sitetype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_sitetype_modifiedby")]
    public SystemUser lk_ovs_sitetype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_sitetype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_sitetype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_sitetype_modifiedonbehalfby")]
    public SystemUser lk_ovs_sitetype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_sitetype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_sitetype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_Account_SiteType_ovs_SiteType")]
    public IEnumerable<Account> ovs_Account_SiteType_ovs_SiteType {
        get {
            return GetRelatedEntities<Account>("ovs_Account_SiteType_ovs_SiteType", null);
        }
        set {
            SetRelatedEntities("ovs_Account_SiteType_ovs_SiteType", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_sitetype_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_sitetype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_sitetype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_sitetype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_sitetype_SyncErrors")]
    public IEnumerable<SyncError> ovs_sitetype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_sitetype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_sitetype_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit")]
    public IEnumerable<msdyn_FunctionalLocation> ts_msdyn_FunctionalLocation_SiteType_ovs_Sit {
        get {
            return GetRelatedEntities<msdyn_FunctionalLocation>("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_FunctionalLocation_SiteType_ovs_Sit", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_sitetype")]
    public SystemUser user_ovs_sitetype {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_sitetype", null);
        }
        set {
            SetRelatedEntity("user_ovs_sitetype", null, value);
        }
    }
    
    public static ovs_SiteType Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_SiteType,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Lookup to represent the list of valid reasons for conducting an oversight activity</para>
/// <para>Display Name: Rationale</para>
/// </summary>
[EntityLogicalName("ovs_tyrational")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_TYRational : ExtendedEntity<ovs_TYRationalState, ovs_TYRational_statuscode> {
    
    public const string EntityLogicalName = "ovs_tyrational";
    
    public const int EntityTypeCode = 10430;
    
    public ovs_TYRational() : 
            base(EntityLogicalName) {
    }
    
    public ovs_TYRational(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_tyrationalid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_tyrationalid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Rationale</para>
    /// </summary>
    [AttributeLogicalName("ovs_tyrationalid")]
    [DisplayName("Rationale")]
    public Guid? ovs_TYRationalId {
        get {
            return GetAttributeValue<Guid?>("ovs_tyrationalid");
        }
        set {
            SetId("ovs_tyrationalid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_Name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rationale (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_rationalelbl")]
    [DisplayName("Rationale (English)")]
    [MaxLength(100)]
    public string ovs_RationalElbl {
        get {
            return GetAttributeValue<string>("ovs_rationalelbl");
        }
        set {
            SetAttributeValue("ovs_rationalelbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rationale (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_rationalflbl")]
    [DisplayName("Rationale (French)")]
    [MaxLength(100)]
    public string ovs_RationalFlbl {
        get {
            return GetAttributeValue<string>("ovs_rationalflbl");
        }
        set {
            SetAttributeValue("ovs_rationalflbl", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the TYRational</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_TYRationalState? statecode {
        get {
            return GetOptionSetValue<ovs_TYRationalState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the TYRational</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_TYRational_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_TYRational_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_tyrational_createdby")]
    public SystemUser lk_ovs_tyrational_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_tyrational_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_tyrational_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_tyrational_createdonbehalfby")]
    public SystemUser lk_ovs_tyrational_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_tyrational_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_tyrational_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_tyrational_modifiedby")]
    public SystemUser lk_ovs_tyrational_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_tyrational_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_tyrational_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_tyrational_modifiedonbehalfby")]
    public SystemUser lk_ovs_tyrational_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_tyrational_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_tyrational_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msdyn_workorder_TYRational_ovs_TYRational")]
    public IEnumerable<msdyn_workorder> msdyn_workorder_TYRational_ovs_TYRational {
        get {
            return GetRelatedEntities<msdyn_workorder>("msdyn_workorder_TYRational_ovs_TYRational", null);
        }
        set {
            SetRelatedEntities("msdyn_workorder_TYRational_ovs_TYRational", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_Rational_ovs_TYRational")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_Rational_ovs_TYRational {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_Rational_ovs_TYRational", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_Rational_ovs_TYRational", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_tyrational_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_tyrational_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_tyrational_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_tyrational_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_tyrational_SyncErrors")]
    public IEnumerable<SyncError> ovs_tyrational_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_tyrational_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_tyrational_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_tyrational")]
    public SystemUser user_ovs_tyrational {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_tyrational", null);
        }
        set {
            SetRelatedEntity("user_ovs_tyrational", null, value);
        }
    }
    
    public static ovs_TYRational Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_TYRational,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: LOB</para>
/// </summary>
[EntityLogicalName("ovs_lob")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_lob : ExtendedEntity<ovs_lobState, ovs_lob_statuscode> {
    
    public const string EntityLogicalName = "ovs_lob";
    
    public const int EntityTypeCode = 10425;
    
    public ovs_lob() : 
            base(EntityLogicalName) {
    }
    
    public ovs_lob(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_lobid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_lobid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: LOB</para>
    /// </summary>
    [AttributeLogicalName("ovs_lobid")]
    [DisplayName("LOB")]
    public Guid? ovs_lobId {
        get {
            return GetAttributeValue<Guid?>("ovs_lobid");
        }
        set {
            SetId("ovs_lobid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line of Business Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_lineofbusinessnameenglish")]
    [DisplayName("Line of Business Name (English)")]
    [MaxLength(100)]
    public string ovs_lineofbusinessnameenglish {
        get {
            return GetAttributeValue<string>("ovs_lineofbusinessnameenglish");
        }
        set {
            SetAttributeValue("ovs_lineofbusinessnameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Line of Business Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_lineofbusinessnamefrench")]
    [DisplayName("Line of Business Name (French)")]
    [MaxLength(100)]
    public string ovs_lineofbusinessnamefrench {
        get {
            return GetAttributeValue<string>("ovs_lineofbusinessnamefrench");
        }
        set {
            SetAttributeValue("ovs_lineofbusinessnamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the LOB</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_lobState? statecode {
        get {
            return GetOptionSetValue<ovs_lobState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the LOB</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_lob_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_lob_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_lob_createdby")]
    public SystemUser lk_ovs_lob_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_lob_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_lob_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_lob_createdonbehalfby")]
    public SystemUser lk_ovs_lob_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_lob_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_lob_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_lob_modifiedby")]
    public SystemUser lk_ovs_lob_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_lob_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_lob_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_lob_modifiedonbehalfby")]
    public SystemUser lk_ovs_lob_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_lob_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_lob_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_lob_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_lob_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_lob_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_lob_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_lob_SyncErrors")]
    public IEnumerable<SyncError> ovs_lob_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_lob_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_lob_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_ovs_lob_ovs_operation")]
    public IEnumerable<ovs_operation> ovs_ovs_lob_ovs_operation {
        get {
            return GetRelatedEntities<ovs_operation>("ovs_ovs_lob_ovs_operation", null);
        }
        set {
            SetRelatedEntities("ovs_ovs_lob_ovs_operation", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_lob_ovs_lob_ovs_operationtype")]
    public IEnumerable<ovs_operationtype> ts_ovs_lob_ovs_lob_ovs_operationtype {
        get {
            return GetRelatedEntities<ovs_operationtype>("ts_ovs_lob_ovs_lob_ovs_operationtype", null);
        }
        set {
            SetRelatedEntities("ts_ovs_lob_ovs_lob_ovs_operationtype", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_lob")]
    public SystemUser user_ovs_lob {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_lob", null);
        }
        set {
            SetRelatedEntity("user_ovs_lob", null, value);
        }
    }
    
    public static ovs_lob Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_lob,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ovs_msdyn_servicetasktype_qm_rclegislation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_msdyn_servicetasktype_qm_rclegislation : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ovs_msdyn_servicetasktype_qm_rclegislation";
    
    public const int EntityTypeCode = 10440;
    
    public ovs_msdyn_servicetasktype_qm_rclegislation() : 
            base(EntityLogicalName) {
    }
    
    public ovs_msdyn_servicetasktype_qm_rclegislation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ovs_msdyn_servicetasktype_qm_rclegislationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_msdyn_servicetasktype_qm_rclegislationid", value);
        }
    }
    
    [AttributeLogicalName("ovs_msdyn_servicetasktype_qm_rclegislationid")]
    public Guid? ovs_msdyn_servicetasktype_qm_rclegislationId {
        get {
            return GetAttributeValue<Guid?>("ovs_msdyn_servicetasktype_qm_rclegislationid");
        }
        set {
            SetId("ovs_msdyn_servicetasktype_qm_rclegislationid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_servicetasktypeid")]
    public Guid? msdyn_servicetasktypeid {
        get {
            return GetAttributeValue<Guid?>("msdyn_servicetasktypeid");
        }
    }
    
    [AttributeLogicalName("qm_rclegislationid")]
    public Guid? qm_rclegislationid {
        get {
            return GetAttributeValue<Guid?>("qm_rclegislationid");
        }
    }
    
    public static ovs_msdyn_servicetasktype_qm_rclegislation Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_msdyn_servicetasktype_qm_rclegislation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Relationship between a Regulated Entity and a Site</para>
/// <para>Display Name: Operation</para>
/// </summary>
[EntityLogicalName("ovs_operation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_operation : ExtendedEntity<ovs_operationState, ovs_operation_statuscode> {
    
    public const string EntityLogicalName = "ovs_operation";
    
    public const int EntityTypeCode = 10426;
    
    public ovs_operation() : 
            base(EntityLogicalName) {
    }
    
    public ovs_operation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_operationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_operationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Operation</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationid")]
    [DisplayName("Operation")]
    public Guid? ovs_operationId {
        get {
            return GetAttributeValue<Guid?>("ovs_operationid");
        }
        set {
            SetId("ovs_operationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for LOB associated with Operation.</para>
    /// <para>Display Name: LOB</para>
    /// </summary>
    [AttributeLogicalName("ovs_lobid")]
    [DisplayName("LOB")]
    public EntityReference ovs_LOBId {
        get {
            return GetAttributeValue<EntityReference>("ovs_lobid");
        }
        set {
            SetAttributeValue("ovs_lobid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Operation Type associated with Operation.</para>
    /// <para>Display Name: Operation Type</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationtypeid")]
    [DisplayName("Operation Type")]
    public EntityReference ovs_OperationTypeId {
        get {
            return GetAttributeValue<EntityReference>("ovs_operationtypeid");
        }
        set {
            SetAttributeValue("ovs_operationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(500)]
    public string ovs_name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Operation</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_operationState? statecode {
        get {
            return GetOptionSetValue<ovs_operationState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Operation</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_operation_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_operation_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ts_operationnameenglish")]
    [DisplayName("Operation Name (English)")]
    [MaxLength(250)]
    public string ts_OperationNameEnglish {
        get {
            return GetAttributeValue<string>("ts_operationnameenglish");
        }
        set {
            SetAttributeValue("ts_operationnameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ts_operationnamefrench")]
    [DisplayName("Operation Name (French)")]
    [MaxLength(250)]
    public string ts_OperationNameFrench {
        get {
            return GetAttributeValue<string>("ts_operationnamefrench");
        }
        set {
            SetAttributeValue("ts_operationnamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>Functional location of this operation</para>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("ts_site")]
    [DisplayName("Site")]
    public EntityReference ts_site {
        get {
            return GetAttributeValue<EntityReference>("ts_site");
        }
        set {
            SetAttributeValue("ts_site", value);
        }
    }
    
    /// <summary>
    /// <para>Stakeholder responsible for this operation</para>
    /// <para>Display Name: Stakeholder</para>
    /// </summary>
    [AttributeLogicalName("ts_stakeholder")]
    [DisplayName("Stakeholder")]
    public EntityReference ts_stakeholder {
        get {
            return GetAttributeValue<EntityReference>("ts_stakeholder");
        }
        set {
            SetAttributeValue("ts_stakeholder", value);
        }
    }
    
    /// <summary>
    /// <para>Subsite of this operation</para>
    /// <para>Display Name: Subsite</para>
    /// </summary>
    [AttributeLogicalName("ts_subsite")]
    [DisplayName("Subsite")]
    public EntityReference ts_subsite {
        get {
            return GetAttributeValue<EntityReference>("ts_subsite");
        }
        set {
            SetAttributeValue("ts_subsite", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_operation_createdby")]
    public SystemUser lk_ovs_operation_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operation_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operation_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_operation_createdonbehalfby")]
    public SystemUser lk_ovs_operation_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operation_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_operation_modifiedby")]
    public SystemUser lk_ovs_operation_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operation_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operation_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_operation_modifiedonbehalfby")]
    public SystemUser lk_ovs_operation_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_operation_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_operation_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_operation_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_operation_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_operation_SyncErrors")]
    public IEnumerable<SyncError> ovs_operation_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_operation_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_operation_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_lobid")]
    [RelationshipSchemaName("ovs_ovs_lob_ovs_operation")]
    public ovs_lob ovs_ovs_lob_ovs_operation {
        get {
            return GetRelatedEntity<ovs_lob>("ovs_ovs_lob_ovs_operation", null);
        }
        set {
            SetRelatedEntity("ovs_ovs_lob_ovs_operation", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_ovs_operation_msdyn_workorder")]
    public IEnumerable<msdyn_workorder> ovs_ovs_operation_msdyn_workorder {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_ovs_operation_msdyn_workorder", null);
        }
        set {
            SetRelatedEntities("ovs_ovs_operation_msdyn_workorder", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_operationtypeid")]
    [RelationshipSchemaName("ovs_ovs_operationtype_ovs_operation")]
    public ovs_operationtype ovs_ovs_operationtype_ovs_operation {
        get {
            return GetRelatedEntity<ovs_operationtype>("ovs_ovs_operationtype_ovs_operation", null);
        }
        set {
            SetRelatedEntity("ovs_ovs_operationtype_ovs_operation", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workorder_ovs_operation_ovs_operati")]
    public IEnumerable<msdyn_workorder> ts_msdyn_workorder_ovs_operation_ovs_operati {
        get {
            return GetRelatedEntities<msdyn_workorder>("ts_msdyn_workorder_ovs_operation_ovs_operati", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workorder_ovs_operation_ovs_operati", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_Finding_operationid_ovs_operation")]
    public IEnumerable<ovs_Finding> ts_ovs_Finding_operationid_ovs_operation {
        get {
            return GetRelatedEntities<ovs_Finding>("ts_ovs_Finding_operationid_ovs_operation", null);
        }
        set {
            SetRelatedEntities("ts_ovs_Finding_operationid_ovs_operation", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operation_ovs_operation_ovs_operation")]
    public IEnumerable<ovs_operation> ts_ovs_operation_ovs_operation_ovs_operation {
        get {
            return GetRelatedEntities<ovs_operation>("ts_ovs_operation_ovs_operation_ovs_operation", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operation_ovs_operation_ovs_operation", null, value);
        }
    }
    
    [AttributeLogicalName("ts_site")]
    [RelationshipSchemaName("ts_ovs_operation_site_msdyn_functionallocati")]
    public msdyn_FunctionalLocation ts_ovs_operation_site_msdyn_functionallocati {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_ovs_operation_site_msdyn_functionallocati", null);
        }
        set {
            SetRelatedEntity("ts_ovs_operation_site_msdyn_functionallocati", null, value);
        }
    }
    
    [AttributeLogicalName("ts_stakeholder")]
    [RelationshipSchemaName("ts_ovs_operation_stakeholder_account")]
    public Account ts_ovs_operation_stakeholder_account {
        get {
            return GetRelatedEntity<Account>("ts_ovs_operation_stakeholder_account", null);
        }
        set {
            SetRelatedEntity("ts_ovs_operation_stakeholder_account", null, value);
        }
    }
    
    [AttributeLogicalName("ts_subsite")]
    [RelationshipSchemaName("ts_ovs_operation_subsite_msdyn_functionalloc")]
    public msdyn_FunctionalLocation ts_ovs_operation_subsite_msdyn_functionalloc {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_ovs_operation_subsite_msdyn_functionalloc", null);
        }
        set {
            SetRelatedEntity("ts_ovs_operation_subsite_msdyn_functionalloc", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_operation")]
    public SystemUser user_ovs_operation {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_operation", null);
        }
        set {
            SetRelatedEntity("user_ovs_operation", null, value);
        }
    }
    
    public static ovs_operation Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_operation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Operation Type</para>
/// </summary>
[EntityLogicalName("ovs_operationtype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_operationtype : ExtendedEntity<ovs_operationtypeState, ovs_operationtype_statuscode> {
    
    public const string EntityLogicalName = "ovs_operationtype";
    
    public const int EntityTypeCode = 10427;
    
    public ovs_operationtype() : 
            base(EntityLogicalName) {
    }
    
    public ovs_operationtype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_operationtypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_operationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Operation Type</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationtypeid")]
    [DisplayName("Operation Type")]
    public Guid? ovs_operationtypeId {
        get {
            return GetAttributeValue<Guid?>("ovs_operationtypeid");
        }
        set {
            SetId("ovs_operationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Type Name (English)</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationtypenameenglish")]
    [DisplayName("Operation Type Name (English)")]
    [MaxLength(100)]
    public string ovs_OperationTypeNameEnglish {
        get {
            return GetAttributeValue<string>("ovs_operationtypenameenglish");
        }
        set {
            SetAttributeValue("ovs_operationtypenameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Type Name (French)</para>
    /// </summary>
    [AttributeLogicalName("ovs_operationtypenamefrench")]
    [DisplayName("Operation Type Name (French)")]
    [MaxLength(100)]
    public string ovs_OperationTypeNameFrench {
        get {
            return GetAttributeValue<string>("ovs_operationtypenamefrench");
        }
        set {
            SetAttributeValue("ovs_operationtypenamefrench", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Operation Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_operationtypeState? statecode {
        get {
            return GetOptionSetValue<ovs_operationtypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Operation Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_operationtype_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_operationtype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: LOB</para>
    /// </summary>
    [AttributeLogicalName("ts_ovs_lob")]
    [DisplayName("LOB")]
    public EntityReference ts_ovs_lob {
        get {
            return GetAttributeValue<EntityReference>("ts_ovs_lob");
        }
        set {
            SetAttributeValue("ts_ovs_lob", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether this Operation Type is regulated or non-regulated</para>
    /// <para>Display Name: Regulated</para>
    /// </summary>
    [AttributeLogicalName("ts_regulated")]
    [DisplayName("Regulated")]
    public bool? ts_regulated {
        get {
            return GetAttributeValue<bool?>("ts_regulated");
        }
        set {
            SetAttributeValue("ts_regulated", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_operationtype_createdby")]
    public SystemUser lk_ovs_operationtype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operationtype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operationtype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_operationtype_createdonbehalfby")]
    public SystemUser lk_ovs_operationtype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operationtype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operationtype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_operationtype_modifiedby")]
    public SystemUser lk_ovs_operationtype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operationtype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operationtype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_operationtype_modifiedonbehalfby")]
    public SystemUser lk_ovs_operationtype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_operationtype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_operationtype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_operationtype")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_operationtype {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_operationtype", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_operationtype", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_operationtype_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_operationtype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_operationtype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_operationtype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_operationtype_SyncErrors")]
    public IEnumerable<SyncError> ovs_operationtype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_operationtype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_operationtype_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_ovs_operationtype_ovs_operation")]
    public IEnumerable<ovs_operation> ovs_ovs_operationtype_ovs_operation {
        get {
            return GetRelatedEntities<ovs_operation>("ovs_ovs_operationtype_ovs_operation", null);
        }
        set {
            SetRelatedEntities("ovs_ovs_operationtype_ovs_operation", null, value);
        }
    }
    
    [AttributeLogicalName("ts_ovs_lob")]
    [RelationshipSchemaName("ts_ovs_lob_ovs_lob_ovs_operationtype")]
    public ovs_lob ts_ovs_lob_ovs_lob_ovs_operationtype {
        get {
            return GetRelatedEntity<ovs_lob>("ts_ovs_lob_ovs_lob_ovs_operationtype", null);
        }
        set {
            SetRelatedEntity("ts_ovs_lob_ovs_lob_ovs_operationtype", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operationtype_ts_workordercreationwiz")]
    public IEnumerable<ts_workordercreationwizard> ts_ovs_operationtype_ts_workordercreationwiz {
        get {
            return GetRelatedEntities<ts_workordercreationwizard>("ts_ovs_operationtype_ts_workordercreationwiz", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operationtype_ts_workordercreationwiz", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_operationtypes_msdyn_incidenttypes")]
    public IEnumerable<msdyn_incidenttype> ts_ovs_operationtypes_msdyn_incidenttypes {
        get {
            return GetRelatedEntities<msdyn_incidenttype>("ts_ovs_operationtypes_msdyn_incidenttypes", null);
        }
        set {
            SetRelatedEntities("ts_ovs_operationtypes_msdyn_incidenttypes", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_operationtype")]
    public SystemUser user_ovs_operationtype {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_operationtype", null);
        }
        set {
            SetRelatedEntity("user_ovs_operationtype", null, value);
        }
    }
    
    public static ovs_operationtype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_operationtype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Work Order Service Task Provision</para>
/// </summary>
[EntityLogicalName("ovs_workorderservicetaskprovision")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ovs_workorderservicetaskprovision : ExtendedEntity<ovs_workorderservicetaskprovisionState, ovs_workorderservicetaskprovision_statuscode> {
    
    public const string EntityLogicalName = "ovs_workorderservicetaskprovision";
    
    public const int EntityTypeCode = 10431;
    
    public ovs_workorderservicetaskprovision() : 
            base(EntityLogicalName) {
    }
    
    public ovs_workorderservicetaskprovision(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ovs_name");
        }
    }
    
    [AttributeLogicalName("ovs_workorderservicetaskprovisionid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ovs_workorderservicetaskprovisionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Work Order Service Task Provision</para>
    /// </summary>
    [AttributeLogicalName("ovs_workorderservicetaskprovisionid")]
    [DisplayName("Work Order Service Task Provision")]
    public Guid? ovs_workorderservicetaskprovisionId {
        get {
            return GetAttributeValue<Guid?>("ovs_workorderservicetaskprovisionid");
        }
        set {
            SetId("ovs_workorderservicetaskprovisionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Finding Created</para>
    /// </summary>
    [AttributeLogicalName("ovs_isfindingcreated")]
    [DisplayName("Is Finding Created")]
    public bool? ovs_IsFindingCreated {
        get {
            return GetAttributeValue<bool?>("ovs_isfindingcreated");
        }
        set {
            SetAttributeValue("ovs_isfindingcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Legislation associated with Work Order Service Task Provision.</para>
    /// <para>Display Name: Provision</para>
    /// </summary>
    [AttributeLogicalName("ovs_provisionid")]
    [DisplayName("Provision")]
    public EntityReference ovs_ProvisionId {
        get {
            return GetAttributeValue<EntityReference>("ovs_provisionid");
        }
        set {
            SetAttributeValue("ovs_provisionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Service Task associated with Work Order Service Task Provision.</para>
    /// <para>Display Name: Work Order Service Task</para>
    /// </summary>
    [AttributeLogicalName("ovs_workorderservicetaskid")]
    [DisplayName("Work Order Service Task")]
    public EntityReference ovs_WorkOrderServiceTaskId {
        get {
            return GetAttributeValue<EntityReference>("ovs_workorderservicetaskid");
        }
        set {
            SetAttributeValue("ovs_workorderservicetaskid", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ovs_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ovs_name {
        get {
            return GetAttributeValue<string>("ovs_name");
        }
        set {
            SetAttributeValue("ovs_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Service Task Provision</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ovs_workorderservicetaskprovisionState? statecode {
        get {
            return GetOptionSetValue<ovs_workorderservicetaskprovisionState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Service Task Provision</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ovs_workorderservicetaskprovision_statuscode? statuscode {
        get {
            return GetOptionSetValue<ovs_workorderservicetaskprovision_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_createdby")]
    public SystemUser lk_ovs_workorderservicetaskprovision_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_workorderservicetaskprovision_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_workorderservicetaskprovision_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_createdonbehalfby")]
    public SystemUser lk_ovs_workorderservicetaskprovision_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_workorderservicetaskprovision_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_workorderservicetaskprovision_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_modifiedby")]
    public SystemUser lk_ovs_workorderservicetaskprovision_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_workorderservicetaskprovision_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_workorderservicetaskprovision_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby")]
    public SystemUser lk_ovs_workorderservicetaskprovision_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ovs_workorderservicetaskprovision_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_workorderservicetaskid")]
    [RelationshipSchemaName("ovs_msdyn_workorderservicetask_ovs_workorders")]
    public msdyn_workorderservicetask ovs_msdyn_workorderservicetask_ovs_workorders {
        get {
            return GetRelatedEntity<msdyn_workorderservicetask>("ovs_msdyn_workorderservicetask_ovs_workorders", null);
        }
        set {
            SetRelatedEntity("ovs_msdyn_workorderservicetask_ovs_workorders", null, value);
        }
    }
    
    [AttributeLogicalName("ovs_provisionid")]
    [RelationshipSchemaName("ovs_qm_rclegislation_ovs_workorderservicetask")]
    public qm_rclegislation ovs_qm_rclegislation_ovs_workorderservicetask {
        get {
            return GetRelatedEntity<qm_rclegislation>("ovs_qm_rclegislation_ovs_workorderservicetask", null);
        }
        set {
            SetRelatedEntity("ovs_qm_rclegislation_ovs_workorderservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_workorderservicetaskprovision_ProcessSession")]
    public IEnumerable<ProcessSession> ovs_workorderservicetaskprovision_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ovs_workorderservicetaskprovision_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ovs_workorderservicetaskprovision_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_workorderservicetaskprovision_SyncErrors")]
    public IEnumerable<SyncError> ovs_workorderservicetaskprovision_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ovs_workorderservicetaskprovision_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ovs_workorderservicetaskprovision_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ovs_workorderservicetaskprovision")]
    public SystemUser user_ovs_workorderservicetaskprovision {
        get {
            return GetRelatedEntity<SystemUser>("user_ovs_workorderservicetaskprovision", null);
        }
        set {
            SetRelatedEntity("user_ovs_workorderservicetaskprovision", null, value);
        }
    }
    
    public static ovs_workorderservicetaskprovision Retrieve(IOrganizationService service, Guid id, params Expression<Func<ovs_workorderservicetaskprovision,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Entity represents the record to validate a traveller who may be prohibited from flying</para>
/// <para>Display Name: Traveller Validation</para>
/// </summary>
[EntityLogicalName("ppp_traveller")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ppp_Traveller : ExtendedEntity<ppp_TravellerState, ppp_Traveller_statuscode> {
    
    public const string EntityLogicalName = "ppp_traveller";
    
    public const int EntityTypeCode = 10420;
    
    public ppp_Traveller() : 
            base(EntityLogicalName) {
    }
    
    public ppp_Traveller(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ppp_name");
        }
    }
    
    [AttributeLogicalName("ppp_travellerid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ppp_travellerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Traveller</para>
    /// </summary>
    [AttributeLogicalName("ppp_travellerid")]
    [DisplayName("Traveller")]
    public Guid? ppp_TravellerId {
        get {
            return GetAttributeValue<Guid?>("ppp_travellerid");
        }
        set {
            SetId("ppp_travellerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time on which the record was created.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The Air Carrier associated with the Traveller's travel itinerary.</para>
    /// <para>Display Name: Air Carrier</para>
    /// </summary>
    [AttributeLogicalName("ppp_aircarrier")]
    [DisplayName("Air Carrier")]
    public EntityReference ppp_AirCarrier {
        get {
            return GetAttributeValue<EntityReference>("ppp_aircarrier");
        }
        set {
            SetAttributeValue("ppp_aircarrier", value);
        }
    }
    
    /// <summary>
    /// <para>The number of pieces of carry on baggage in the possession of the Traveller.</para>
    /// <para>Display Name: Baggage Carry On</para>
    /// </summary>
    [AttributeLogicalName("ppp_baggagecarryon")]
    [DisplayName("Baggage Carry On")]
    [Range(0, 1000)]
    public int? ppp_BaggageCarryOn {
        get {
            return GetAttributeValue<int?>("ppp_baggagecarryon");
        }
        set {
            SetAttributeValue("ppp_baggagecarryon", value);
        }
    }
    
    /// <summary>
    /// <para>The number of pieces of checked baggage in the possession of the Traveller.</para>
    /// <para>Display Name: Baggage Checked</para>
    /// </summary>
    [AttributeLogicalName("ppp_baggagechecked")]
    [DisplayName("Baggage Checked")]
    [Range(0, 1000)]
    public int? ppp_BaggageChecked {
        get {
            return GetAttributeValue<int?>("ppp_baggagechecked");
        }
        set {
            SetAttributeValue("ppp_baggagechecked", value);
        }
    }
    
    /// <summary>
    /// <para>The type of record to be documented by the analyst.</para>
    /// <para>Display Name: Call Type</para>
    /// </summary>
    [AttributeLogicalName("ppp_calltype")]
    [DisplayName("Call Type")]
    public ppp_calltype? ppp_CallType {
        get {
            return GetOptionSetValue<ppp_calltype>("ppp_calltype");
        }
        set {
            SetOptionSetValue("ppp_calltype", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the Case Brief - Other Measure response.</para>
    /// <para>Display Name: Case Brief Option Other</para>
    /// </summary>
    [AttributeLogicalName("ppp_casebriefoptionother")]
    [DisplayName("Case Brief Option Other")]
    [MaxLength(4000)]
    public string ppp_CaseBriefOptionOther {
        get {
            return GetAttributeValue<string>("ppp_casebriefoptionother");
        }
        set {
            SetAttributeValue("ppp_casebriefoptionother", value);
        }
    }
    
    /// <summary>
    /// <para>The list of case brief recommendations that an analyst may select from.</para>
    /// <para>Display Name: Case Brief Recommendation</para>
    /// </summary>
    [AttributeLogicalName("ppp_casebriefoptions")]
    [DisplayName("Case Brief Recommendation")]
    public ppp_casebriefoptions? ppp_CaseBriefOptions {
        get {
            return GetOptionSetValue<ppp_casebriefoptions>("ppp_casebriefoptions");
        }
        set {
            SetOptionSetValue("ppp_casebriefoptions", value);
        }
    }
    
    /// <summary>
    /// <para>The id/number(s) of the Traveller's checked baggage.</para>
    /// <para>Display Name: Checked Baggage Tag Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_checkedbaggagetagnumber")]
    [DisplayName("Checked Baggage Tag Number")]
    [MaxLength(1000)]
    public string ppp_CheckedBaggageTagNumber {
        get {
            return GetAttributeValue<string>("ppp_checkedbaggagetagnumber");
        }
        set {
            SetAttributeValue("ppp_checkedbaggagetagnumber", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's citizenship.</para>
    /// <para>Display Name: Citizenship</para>
    /// </summary>
    [AttributeLogicalName("ppp_citizenship")]
    [DisplayName("Citizenship")]
    public EntityReference ppp_Citizenship {
        get {
            return GetAttributeValue<EntityReference>("ppp_citizenship");
        }
        set {
            SetAttributeValue("ppp_citizenship", value);
        }
    }
    
    /// <summary>
    /// <para>The date on which the analyst closes the record.</para>
    /// <para>Display Name: Closed Date</para>
    /// </summary>
    [AttributeLogicalName("ppp_closeddate")]
    [DisplayName("Closed Date")]
    public DateTime? ppp_ClosedDate {
        get {
            return GetAttributeValue<DateTime?>("ppp_closeddate");
        }
        set {
            SetAttributeValue("ppp_closeddate", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's date of birth.</para>
    /// <para>Display Name: Date of Birth</para>
    /// </summary>
    [AttributeLogicalName("ppp_dateofbirth")]
    [DisplayName("Date of Birth")]
    public DateTime? ppp_DateofBirth {
        get {
            return GetAttributeValue<DateTime?>("ppp_dateofbirth");
        }
        set {
            SetAttributeValue("ppp_dateofbirth", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the decision - Other Measure response.</para>
    /// <para>Display Name: Direction Option Other</para>
    /// </summary>
    [AttributeLogicalName("ppp_directionoptionother")]
    [DisplayName("Direction Option Other")]
    [MaxLength(4000)]
    public string ppp_DirectionOptionOther {
        get {
            return GetAttributeValue<string>("ppp_directionoptionother");
        }
        set {
            SetAttributeValue("ppp_directionoptionother", value);
        }
    }
    
    /// <summary>
    /// <para>The list of decisions that an analyst must select from.</para>
    /// <para>Display Name: Direction Options</para>
    /// </summary>
    [AttributeLogicalName("ppp_directionoptions")]
    [DisplayName("Direction Options")]
    public ppp_directionoptions? ppp_DirectionOptions {
        get {
            return GetOptionSetValue<ppp_directionoptions>("ppp_directionoptions");
        }
        set {
            SetOptionSetValue("ppp_directionoptions", value);
        }
    }
    
    /// <summary>
    /// <para>The time at which the analyst documents the decision.</para>
    /// <para>Display Name: Direction Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_directiontime")]
    [DisplayName("Direction Time")]
    public DateTime? ppp_DirectionTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_directiontime");
        }
        set {
            SetAttributeValue("ppp_directiontime", value);
        }
    }
    
    /// <summary>
    /// <para>The time at which the record is closed.</para>
    /// <para>Display Name: Final Status Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_finalstatustime")]
    [DisplayName("Final Status Time")]
    public DateTime? ppp_FinalStatusTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_finalstatustime");
        }
        set {
            SetAttributeValue("ppp_finalstatustime", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's first name.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("ppp_firstname")]
    [DisplayName("First Name")]
    [MaxLength(100)]
    public string ppp_FirstName {
        get {
            return GetAttributeValue<string>("ppp_firstname");
        }
        set {
            SetAttributeValue("ppp_firstname", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's first flight connection.</para>
    /// <para>Display Name: Flight Connection 1</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection1")]
    [DisplayName("Flight Connection 1")]
    public EntityReference ppp_FlightConnection1 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection1");
        }
        set {
            SetAttributeValue("ppp_flightconnection1", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's  tenth flight connection.</para>
    /// <para>Display Name: Flight Connection 10</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection10")]
    [DisplayName("Flight Connection 10")]
    public EntityReference ppp_FlightConnection10 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection10");
        }
        set {
            SetAttributeValue("ppp_flightconnection10", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's second flight connection.</para>
    /// <para>Display Name: Flight Connection 2</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection2")]
    [DisplayName("Flight Connection 2")]
    public EntityReference ppp_FlightConnection2 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection2");
        }
        set {
            SetAttributeValue("ppp_flightconnection2", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's third flight connection.</para>
    /// <para>Display Name: Flight Connection 3</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection3")]
    [DisplayName("Flight Connection 3")]
    public EntityReference ppp_FlightConnection3 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection3");
        }
        set {
            SetAttributeValue("ppp_flightconnection3", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's fourth flight connection.</para>
    /// <para>Display Name: Flight Connection 4</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection4")]
    [DisplayName("Flight Connection 4")]
    public EntityReference ppp_FlightConnection4 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection4");
        }
        set {
            SetAttributeValue("ppp_flightconnection4", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's fifth flight connection.</para>
    /// <para>Display Name: Flight Connection 5</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection5")]
    [DisplayName("Flight Connection 5")]
    public EntityReference ppp_FlightConnection5 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection5");
        }
        set {
            SetAttributeValue("ppp_flightconnection5", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's sixth flight connection.</para>
    /// <para>Display Name: Flight Connection 6</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection6")]
    [DisplayName("Flight Connection 6")]
    public EntityReference ppp_FlightConnection6 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection6");
        }
        set {
            SetAttributeValue("ppp_flightconnection6", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's seventh flight connection.</para>
    /// <para>Display Name: Flight Connection 7</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection7")]
    [DisplayName("Flight Connection 7")]
    public EntityReference ppp_FlightConnection7 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection7");
        }
        set {
            SetAttributeValue("ppp_flightconnection7", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's eighth flight connection.</para>
    /// <para>Display Name: Flight Connection 8</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection8")]
    [DisplayName("Flight Connection 8")]
    public EntityReference ppp_FlightConnection8 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection8");
        }
        set {
            SetAttributeValue("ppp_flightconnection8", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's ninth flight connection.</para>
    /// <para>Display Name: Flight Connection 9</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnection9")]
    [DisplayName("Flight Connection 9")]
    public EntityReference ppp_FlightConnection9 {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightconnection9");
        }
        set {
            SetAttributeValue("ppp_flightconnection9", value);
        }
    }
    
    /// <summary>
    /// <para>The number of the Traveller's flight connections. </para>
    /// <para>Display Name: Flight Connection Count</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightconnectioncount")]
    [DisplayName("Flight Connection Count")]
    [Range(0, 10)]
    public int? ppp_FlightConnectionCount {
        get {
            return GetAttributeValue<int?>("ppp_flightconnectioncount");
        }
        set {
            SetAttributeValue("ppp_flightconnectioncount", value);
        }
    }
    
    /// <summary>
    /// <para>The Aerodrome identified as the Traveller's final destination.</para>
    /// <para>Display Name: Flight Destination</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightdestination")]
    [DisplayName("Flight Destination")]
    public EntityReference ppp_FlightDestination {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightdestination");
        }
        set {
            SetAttributeValue("ppp_flightdestination", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's departure flight number.</para>
    /// <para>Display Name: Flight Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightnumber")]
    [DisplayName("Flight Number")]
    [MaxLength(20)]
    public string ppp_FlightNumber {
        get {
            return GetAttributeValue<string>("ppp_flightnumber");
        }
        set {
            SetAttributeValue("ppp_flightnumber", value);
        }
    }
    
    /// <summary>
    /// <para>The Aerodrome identified as the Traveller's departure location.</para>
    /// <para>Display Name: Flight Origin</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightorigin")]
    [DisplayName("Flight Origin")]
    public EntityReference ppp_FlightOrigin {
        get {
            return GetAttributeValue<EntityReference>("ppp_flightorigin");
        }
        set {
            SetAttributeValue("ppp_flightorigin", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's departure date of their Origin Flight. </para>
    /// <para>Display Name: Flight Origin Date</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightorigindate")]
    [DisplayName("Flight Origin Date")]
    public DateTime? ppp_FlightOriginDate {
        get {
            return GetAttributeValue<DateTime?>("ppp_flightorigindate");
        }
        set {
            SetAttributeValue("ppp_flightorigindate", value);
        }
    }
    
    /// <summary>
    /// <para>The estimated time of departure associated with the Traveller's flight.</para>
    /// <para>Display Name: Flight Origin Hour</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightoriginhour")]
    [DisplayName("Flight Origin Hour")]
    [Range(0, 23)]
    public int? ppp_FlightOriginHour {
        get {
            return GetAttributeValue<int?>("ppp_flightoriginhour");
        }
        set {
            SetAttributeValue("ppp_flightoriginhour", value);
        }
    }
    
    /// <summary>
    /// <para>The minute (0 -59) associated with the Traveller's intended initial flight departure.</para>
    /// <para>Display Name: Flight Origin Minute</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightoriginminute")]
    [DisplayName("Flight Origin Minute")]
    [Range(0, 59)]
    public int? ppp_FlightOriginMinute {
        get {
            return GetAttributeValue<int?>("ppp_flightoriginminute");
        }
        set {
            SetAttributeValue("ppp_flightoriginminute", value);
        }
    }
    
    /// <summary>
    /// <para>The combination of Flight Origin Date, Flight Origin Hour and Flight Origin Minute associated with the Traveller's intended initial flight departure.</para>
    /// <para>Display Name: Flight Origin Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_flightorigintime")]
    [DisplayName("Flight Origin Time")]
    public DateTime? ppp_FlightOriginTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_flightorigintime");
        }
        set {
            SetAttributeValue("ppp_flightorigintime", value);
        }
    }
    
    /// <summary>
    /// <para>The  Traveller's gender.</para>
    /// <para>Display Name: Gender</para>
    /// </summary>
    [AttributeLogicalName("ppp_gender")]
    [DisplayName("Gender")]
    public ppp_gender? ppp_Gender {
        get {
            return GetOptionSetValue<ppp_gender>("ppp_gender");
        }
        set {
            SetOptionSetValue("ppp_gender", value);
        }
    }
    
    /// <summary>
    /// <para>The Country that issued the identification documentation presented by the Traveller.</para>
    /// <para>Display Name: ID Country</para>
    /// </summary>
    [AttributeLogicalName("ppp_idcountry")]
    [DisplayName("ID Country")]
    public EntityReference ppp_IDCountry {
        get {
            return GetAttributeValue<EntityReference>("ppp_idcountry");
        }
        set {
            SetAttributeValue("ppp_idcountry", value);
        }
    }
    
    /// <summary>
    /// <para>The Identification presented to the Air Carrier Representative by the Traveller.</para>
    /// <para>Display Name: ID Presented</para>
    /// </summary>
    [AttributeLogicalName("ppp_idsused")]
    [DisplayName("ID Presented")]
    public IEnumerable<ppp_idsused> ppp_IDsUsed {
        get {
            return GetOptionSetCollectionValue<ppp_idsused>("ppp_idsused");
        }
        set {
            SetOptionSetCollectionValue("ppp_idsused", value);
        }
    }
    
    /// <summary>
    /// <para>Details regarding the identification provided by the Traveller.</para>
    /// <para>Display Name: ID Details</para>
    /// </summary>
    [AttributeLogicalName("ppp_iddetails")]
    [DisplayName("ID Details")]
    [MaxLength(100)]
    public string ppp_Iddetails {
        get {
            return GetAttributeValue<string>("ppp_iddetails");
        }
        set {
            SetAttributeValue("ppp_iddetails", value);
        }
    }
    
    /// <summary>
    /// <para>An indicator as to whether the Traveller is present at the check-in counter.</para>
    /// <para>Display Name: Is Present</para>
    /// </summary>
    [AttributeLogicalName("ppp_ispresent")]
    [DisplayName("Is Present")]
    public bool? ppp_IsPresent {
        get {
            return GetAttributeValue<bool?>("ppp_ispresent");
        }
        set {
            SetAttributeValue("ppp_ispresent", value);
        }
    }
    
    /// <summary>
    /// <para>The time at which the analyst indicates the Traveller is present at the check-in counter.</para>
    /// <para>Display Name: Is Present Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_ispresenttime")]
    [DisplayName("Is Present Time")]
    public DateTime? ppp_IsPresentTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_ispresenttime");
        }
        set {
            SetAttributeValue("ppp_ispresenttime", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's last known address.</para>
    /// <para>Display Name: Last Known Address</para>
    /// </summary>
    [AttributeLogicalName("ppp_lastknownaddress")]
    [DisplayName("Last Known Address")]
    [MaxLength(4000)]
    public string ppp_LastKnownAddress {
        get {
            return GetAttributeValue<string>("ppp_lastknownaddress");
        }
        set {
            SetAttributeValue("ppp_lastknownaddress", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's last name.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("ppp_lastname")]
    [DisplayName("Last Name")]
    [MaxLength(100)]
    public string ppp_LastName {
        get {
            return GetAttributeValue<string>("ppp_lastname");
        }
        set {
            SetAttributeValue("ppp_lastname", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not a Law Enforcement Agency was notified that a Traveller was denied boarding.</para>
    /// <para>Display Name: Law Enforcement Agency Notified</para>
    /// </summary>
    [AttributeLogicalName("ppp_lawenforcementagency")]
    [DisplayName("Law Enforcement Agency Notified")]
    public ppp_nominatingagencyadditional? ppp_LawEnforcementAgency {
        get {
            return GetOptionSetValue<ppp_nominatingagencyadditional>("ppp_lawenforcementagency");
        }
        set {
            SetOptionSetValue("ppp_lawenforcementagency", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the information provided to the Law Enforcement Agency.</para>
    /// <para>Display Name: Law Enforcement Notified Details</para>
    /// </summary>
    [AttributeLogicalName("ppp_lawenforcementnotifieddetails")]
    [DisplayName("Law Enforcement Notified Details")]
    [MaxLength(100)]
    public string ppp_LawEnforcementNotifiedDetails {
        get {
            return GetAttributeValue<string>("ppp_lawenforcementnotifieddetails");
        }
        set {
            SetAttributeValue("ppp_lawenforcementnotifieddetails", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether the Traveller is a positive match.</para>
    /// <para>Display Name: Match Found</para>
    /// </summary>
    [AttributeLogicalName("ppp_matchfound")]
    [DisplayName("Match Found")]
    public ppp_matchfound? ppp_MatchFound {
        get {
            return GetOptionSetValue<ppp_matchfound>("ppp_matchfound");
        }
        set {
            SetOptionSetValue("ppp_matchfound", value);
        }
    }
    
    /// <summary>
    /// <para>The time at which a positive match was identified.</para>
    /// <para>Display Name: Match Found Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_matchfoundtime")]
    [DisplayName("Match Found Time")]
    public DateTime? ppp_MatchFoundTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_matchfoundtime");
        }
        set {
            SetAttributeValue("ppp_matchfoundtime", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's middle name.</para>
    /// <para>Display Name: Middle Name</para>
    /// </summary>
    [AttributeLogicalName("ppp_middlename")]
    [DisplayName("Middle Name")]
    [MaxLength(100)]
    public string ppp_MiddleName {
        get {
            return GetAttributeValue<string>("ppp_middlename");
        }
        set {
            SetAttributeValue("ppp_middlename", value);
        }
    }
    
    /// <summary>
    /// <para>The number of minutes that the Traveller has been waiting in line, while a SATA check is being performed.</para>
    /// <para>Display Name: Minutes Waiting</para>
    /// </summary>
    [AttributeLogicalName("ppp_minuteswaiting")]
    [DisplayName("Minutes Waiting")]
    [Range(0, 10000)]
    public int? ppp_MinutesWaiting {
        get {
            return GetAttributeValue<int?>("ppp_minuteswaiting");
        }
        set {
            SetAttributeValue("ppp_minuteswaiting", value);
        }
    }
    
    /// <summary>
    /// <para> An indication as to whether the name provided by the Traveller is their primary name, or a variant/alias.</para>
    /// <para>Display Name: Name Provided Options</para>
    /// </summary>
    [AttributeLogicalName("ppp_nameprovidedoptions")]
    [DisplayName("Name Provided Options")]
    public ppp_nameprovidedoptions? ppp_NameProvidedOptions {
        get {
            return GetOptionSetValue<ppp_nameprovidedoptions>("ppp_nameprovidedoptions");
        }
        set {
            SetOptionSetValue("ppp_nameprovidedoptions", value);
        }
    }
    
    /// <summary>
    /// <para>The time when a new Traveller Validation Record is created. </para>
    /// <para>Display Name: New Record Time</para>
    /// </summary>
    [AttributeLogicalName("ppp_newrecordtime")]
    [DisplayName("New Record Time")]
    public DateTime? ppp_NewRecordTime {
        get {
            return GetAttributeValue<DateTime?>("ppp_newrecordtime");
        }
        set {
            SetAttributeValue("ppp_newrecordtime", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not the Nominating Agency provided additional information.</para>
    /// <para>Display Name: Nominating Agency</para>
    /// </summary>
    [AttributeLogicalName("ppp_nominatingagencyadditional")]
    [DisplayName("Nominating Agency")]
    public ppp_nominatingagencyadditional? ppp_NominatingAgencyAdditional {
        get {
            return GetOptionSetValue<ppp_nominatingagencyadditional>("ppp_nominatingagencyadditional");
        }
        set {
            SetOptionSetValue("ppp_nominatingagencyadditional", value);
        }
    }
    
    /// <summary>
    /// <para>Details regarding additional Information provided by the Nominating Agency.</para>
    /// <para>Display Name: Nominating Agency Notes</para>
    /// </summary>
    [AttributeLogicalName("ppp_nominatingagencynotes")]
    [DisplayName("Nominating Agency Notes")]
    [MaxLength(4000)]
    public string ppp_NominatingAgencyNotes {
        get {
            return GetAttributeValue<string>("ppp_nominatingagencynotes");
        }
        set {
            SetAttributeValue("ppp_nominatingagencynotes", value);
        }
    }
    
    /// <summary>
    /// <para>Details regarding the Nominating Agency - Other Measure response.</para>
    /// <para>Display Name: Nominating Agency Option Other</para>
    /// </summary>
    [AttributeLogicalName("ppp_nominatingagencyoptionother")]
    [DisplayName("Nominating Agency Option Other")]
    [MaxLength(4000)]
    public string ppp_NominatingAgencyOptionOther {
        get {
            return GetAttributeValue<string>("ppp_nominatingagencyoptionother");
        }
        set {
            SetAttributeValue("ppp_nominatingagencyoptionother", value);
        }
    }
    
    /// <summary>
    /// <para>The list of options used to select the Nominating Agency Recommendation.</para>
    /// <para>Display Name: Nominating Agency Options</para>
    /// </summary>
    [AttributeLogicalName("ppp_nominatingagencyoptions")]
    [DisplayName("Nominating Agency Options")]
    public ppp_nominatingagencyoptions? ppp_NominatingAgencyOptions {
        get {
            return GetOptionSetValue<ppp_nominatingagencyoptions>("ppp_nominatingagencyoptions");
        }
        set {
            SetOptionSetValue("ppp_nominatingagencyoptions", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not there is additional Open Source information.</para>
    /// <para>Display Name: Open Source</para>
    /// </summary>
    [AttributeLogicalName("ppp_opensourceadditional")]
    [DisplayName("Open Source")]
    public ppp_opensourceadditional? ppp_OpenSourceAdditional {
        get {
            return GetOptionSetValue<ppp_opensourceadditional>("ppp_opensourceadditional");
        }
        set {
            SetOptionSetValue("ppp_opensourceadditional", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the Open Source information.</para>
    /// <para>Display Name: Open Source Notes</para>
    /// </summary>
    [AttributeLogicalName("ppp_opensourcenotes")]
    [DisplayName("Open Source Notes")]
    [MaxLength(4000)]
    public string ppp_OpenSourceNotes {
        get {
            return GetAttributeValue<string>("ppp_opensourcenotes");
        }
        set {
            SetAttributeValue("ppp_opensourcenotes", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the Other Considerations.</para>
    /// <para>Display Name: Other Considerations</para>
    /// </summary>
    [AttributeLogicalName("ppp_otherconsiderations")]
    [DisplayName("Other Considerations")]
    [MaxLength(4000)]
    public string ppp_OtherConsiderations {
        get {
            return GetAttributeValue<string>("ppp_otherconsiderations");
        }
        set {
            SetAttributeValue("ppp_otherconsiderations", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not Other Considerations exist or have been considered.</para>
    /// <para>Display Name: Other Considerations</para>
    /// </summary>
    [AttributeLogicalName("ppp_otherconsiderationsdropdown")]
    [DisplayName("Other Considerations")]
    public ppp_otherconsiderationsdropdown? ppp_OtherConsiderationsDropdown {
        get {
            return GetOptionSetValue<ppp_otherconsiderationsdropdown>("ppp_otherconsiderationsdropdown");
        }
        set {
            SetOptionSetValue("ppp_otherconsiderationsdropdown", value);
        }
    }
    
    /// <summary>
    /// <para>The method of Payment used by the Traveller to purchase their ticket.</para>
    /// <para>Display Name: Payment Method</para>
    /// </summary>
    [AttributeLogicalName("ppp_paymentmethod")]
    [DisplayName("Payment Method")]
    public ppp_paymentmethod? ppp_PaymentMethod {
        get {
            return GetOptionSetValue<ppp_paymentmethod>("ppp_paymentmethod");
        }
        set {
            SetOptionSetValue("ppp_paymentmethod", value);
        }
    }
    
    /// <summary>
    /// <para>Additional details regrading the Traveller's itinerary.</para>
    /// <para>Display Name: Additional Travel Information</para>
    /// </summary>
    [AttributeLogicalName("ppp_questionsfortc")]
    [DisplayName("Additional Travel Information")]
    [MaxLength(4000)]
    public string ppp_QuestionsforTC {
        get {
            return GetAttributeValue<string>("ppp_questionsfortc");
        }
        set {
            SetAttributeValue("ppp_questionsfortc", value);
        }
    }
    
    /// <summary>
    /// <para>The current status of the record.</para>
    /// <para>Display Name: Record Status</para>
    /// </summary>
    [AttributeLogicalName("ppp_recordstatus")]
    [DisplayName("Record Status")]
    public ppp_recordstatus? ppp_RecordStatus {
        get {
            return GetOptionSetValue<ppp_recordstatus>("ppp_recordstatus");
        }
        set {
            SetOptionSetValue("ppp_recordstatus", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not the Traveller was provided with a recourse letter.</para>
    /// <para>Display Name: Recourse Letter Provided</para>
    /// </summary>
    [AttributeLogicalName("ppp_recourseletterprovided")]
    [DisplayName("Recourse Letter Provided")]
    public ppp_nominatingagencyadditional? ppp_RecourseLetterProvided {
        get {
            return GetOptionSetValue<ppp_nominatingagencyadditional>("ppp_recourseletterprovided");
        }
        set {
            SetOptionSetValue("ppp_recourseletterprovided", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's Return flight details.</para>
    /// <para>Display Name: Return Flight Info</para>
    /// </summary>
    [AttributeLogicalName("ppp_returnflightinfo")]
    [DisplayName("Return Flight Info")]
    [MaxLength(100)]
    public string ppp_ReturnFlightInfo {
        get {
            return GetAttributeValue<string>("ppp_returnflightinfo");
        }
        set {
            SetAttributeValue("ppp_returnflightinfo", value);
        }
    }
    
    /// <summary>
    /// <para>The date on which the Travellers return flight is scheduled.</para>
    /// <para>Display Name: Return Flight Date</para>
    /// </summary>
    [AttributeLogicalName("ppp_returnticketdate")]
    [DisplayName("Return Flight Date")]
    public DateTime? ppp_ReturnTicketDate {
        get {
            return GetAttributeValue<DateTime?>("ppp_returnticketdate");
        }
        set {
            SetAttributeValue("ppp_returnticketdate", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's SATA ID.</para>
    /// <para>Display Name: SATA ID</para>
    /// </summary>
    [AttributeLogicalName("ppp_sataid")]
    [DisplayName("SATA ID")]
    [MaxLength(50)]
    public string ppp_SATAID {
        get {
            return GetAttributeValue<string>("ppp_sataid");
        }
        set {
            SetAttributeValue("ppp_sataid", value);
        }
    }
    
    /// <summary>
    /// <para>Details of the seat request made by the Traveller.</para>
    /// <para>Display Name: Seat Request Details</para>
    /// </summary>
    [AttributeLogicalName("ppp_seatrequestdetails")]
    [DisplayName("Seat Request Details")]
    [MaxLength(1000)]
    public string ppp_SeatRequestDetails {
        get {
            return GetAttributeValue<string>("ppp_seatrequestdetails");
        }
        set {
            SetAttributeValue("ppp_seatrequestdetails", value);
        }
    }
    
    /// <summary>
    /// <para>An indication as to whether or not a seat request was made by the Traveller.</para>
    /// <para>Display Name: Seat Request Made</para>
    /// </summary>
    [AttributeLogicalName("ppp_seatrequestmade")]
    [DisplayName("Seat Request Made")]
    public ppp_seatrequestmade? ppp_SeatRequestMade {
        get {
            return GetOptionSetValue<ppp_seatrequestmade>("ppp_seatrequestmade");
        }
        set {
            SetOptionSetValue("ppp_seatrequestmade", value);
        }
    }
    
    /// <summary>
    /// <para>The date on which the Traveller purchased their flight ticket.</para>
    /// <para>Display Name: Ticket Purchase Date</para>
    /// </summary>
    [AttributeLogicalName("ppp_ticketpurchasedate")]
    [DisplayName("Ticket Purchase Date")]
    public DateTime? ppp_TicketPurchaseDate {
        get {
            return GetAttributeValue<DateTime?>("ppp_ticketpurchasedate");
        }
        set {
            SetAttributeValue("ppp_ticketpurchasedate", value);
        }
    }
    
    /// <summary>
    /// <para>The method by which the Traveller purchased their flight ticket. </para>
    /// <para>Display Name: Ticket Purchase Method</para>
    /// </summary>
    [AttributeLogicalName("ppp_ticketpurchasemethod")]
    [DisplayName("Ticket Purchase Method")]
    public ppp_ticketpurchasemethod? ppp_TicketPurchaseMethod {
        get {
            return GetOptionSetValue<ppp_ticketpurchasemethod>("ppp_ticketpurchasemethod");
        }
        set {
            SetOptionSetValue("ppp_ticketpurchasemethod", value);
        }
    }
    
    /// <summary>
    /// <para>The type of ticket purchased by the Traveller.</para>
    /// <para>Display Name: Ticket Type</para>
    /// </summary>
    [AttributeLogicalName("ppp_tickettype")]
    [DisplayName("Ticket Type")]
    public ppp_tickettype? ppp_TicketType {
        get {
            return GetOptionSetValue<ppp_tickettype>("ppp_tickettype");
        }
        set {
            SetOptionSetValue("ppp_tickettype", value);
        }
    }
    
    /// <summary>
    /// <para>The address of the travel agency used by the Traveller to purchase a flight ticket.</para>
    /// <para>Display Name: Travel Agency Address</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelagencyaddress")]
    [DisplayName("Travel Agency Address")]
    [MaxLength(1000)]
    public string ppp_TravelAgencyAddress {
        get {
            return GetAttributeValue<string>("ppp_travelagencyaddress");
        }
        set {
            SetAttributeValue("ppp_travelagencyaddress", value);
        }
    }
    
    /// <summary>
    /// <para>The contact at a travel agency used by the Traveller to purchase a flight ticket.</para>
    /// <para>Display Name: Travel Agency Contact Name</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelagencycontactname")]
    [DisplayName("Travel Agency Contact Name")]
    [MaxLength(1000)]
    public string ppp_TravelAgencyContactName {
        get {
            return GetAttributeValue<string>("ppp_travelagencycontactname");
        }
        set {
            SetAttributeValue("ppp_travelagencycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>The contact phone number at a travel agency.</para>
    /// <para>Display Name: Travel Agency Contact Phone Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelagencycontactphonenumber")]
    [DisplayName("Travel Agency Contact Phone Number")]
    [MaxLength(1000)]
    public string ppp_TravelAgencyContactPhoneNumber {
        get {
            return GetAttributeValue<string>("ppp_travelagencycontactphonenumber");
        }
        set {
            SetAttributeValue("ppp_travelagencycontactphonenumber", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the travel agency used by the Traveller to purchase a flight ticket.</para>
    /// <para>Display Name: Travel Agency Name</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelagencyname")]
    [DisplayName("Travel Agency Name")]
    [MaxLength(1000)]
    public string ppp_TravelAgencyName {
        get {
            return GetAttributeValue<string>("ppp_travelagencyname");
        }
        set {
            SetAttributeValue("ppp_travelagencyname", value);
        }
    }
    
    /// <summary>
    /// <para>A description of the Traveller's companions, if applicable.</para>
    /// <para>Display Name: Travel Companions Details</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelcompanionsdetails")]
    [DisplayName("Travel Companions Details")]
    [MaxLength(4000)]
    public string ppp_TravelCompanionsDetails {
        get {
            return GetAttributeValue<string>("ppp_travelcompanionsdetails");
        }
        set {
            SetAttributeValue("ppp_travelcompanionsdetails", value);
        }
    }
    
    /// <summary>
    /// <para>The number of travel companions accompanying the Traveller.</para>
    /// <para>Display Name: Travel Companions Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelcompanionsnumber")]
    [DisplayName("Travel Companions Number")]
    [Range(0, 1000)]
    public int? ppp_TravelCompanionsNumber {
        get {
            return GetAttributeValue<int?>("ppp_travelcompanionsnumber");
        }
        set {
            SetAttributeValue("ppp_travelcompanionsnumber", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller's identified purpose for travelling.</para>
    /// <para>Display Name: Travel Purpose</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelpurpose")]
    [DisplayName("Travel Purpose")]
    public ppp_travelpurpose? ppp_TravelPurpose {
        get {
            return GetOptionSetValue<ppp_travelpurpose>("ppp_travelpurpose");
        }
        set {
            SetOptionSetValue("ppp_travelpurpose", value);
        }
    }
    
    /// <summary>
    /// <para>Details regarding the Traveller's reason for travelling.</para>
    /// <para>Display Name: Travel Purpose Other</para>
    /// </summary>
    [AttributeLogicalName("ppp_travelpurposeother")]
    [DisplayName("Travel Purpose Other")]
    [MaxLength(100)]
    public string ppp_TravelPurposeOther {
        get {
            return GetAttributeValue<string>("ppp_travelpurposeother");
        }
        set {
            SetAttributeValue("ppp_travelpurposeother", value);
        }
    }
    
    /// <summary>
    /// <para>The unique record number for the Traveller record. </para>
    /// <para>Display Name: Traveller Auto Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_travellerautonumber")]
    [DisplayName("Traveller Auto Number")]
    [MaxLength(100)]
    public string ppp_TravellerAutoNumber {
        get {
            return GetAttributeValue<string>("ppp_travellerautonumber");
        }
        set {
            SetAttributeValue("ppp_travellerautonumber", value);
        }
    }
    
    /// <summary>
    /// <para>The Traveller validation Reference Number.</para>
    /// <para>Display Name: Reference Number</para>
    /// </summary>
    [AttributeLogicalName("ppp_name")]
    [DisplayName("Reference Number")]
    [MaxLength(100)]
    public string ppp_name {
        get {
            return GetAttributeValue<string>("ppp_name");
        }
        set {
            SetAttributeValue("ppp_name", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the process associated with the entity.</para>
    /// <para>Display Name: Process Id</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Process Id")]
    public Guid? processid {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the id of the stage where the entity is located.</para>
    /// <para>Display Name: (Deprecated) Stage Id</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Deprecated) Stage Id")]
    public Guid? stageid {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Traveller</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ppp_TravellerState? statecode {
        get {
            return GetOptionSetValue<ppp_TravellerState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Traveller</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ppp_Traveller_statuscode? statuscode {
        get {
            return GetOptionSetValue<ppp_Traveller_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Deprecated) Traversed Path")]
    [MaxLength(1250)]
    public string traversedpath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ppp_traveller_createdby")]
    public SystemUser lk_ppp_traveller_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ppp_traveller_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ppp_traveller_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ppp_traveller_createdonbehalfby")]
    public SystemUser lk_ppp_traveller_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ppp_traveller_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ppp_traveller_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ppp_traveller_modifiedby")]
    public SystemUser lk_ppp_traveller_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ppp_traveller_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ppp_traveller_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ppp_traveller_modifiedonbehalfby")]
    public SystemUser lk_ppp_traveller_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ppp_traveller_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ppp_traveller_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ppp_aircarrier")]
    [RelationshipSchemaName("ppp_Traveller_AirCarrier_ovs_AirCarrier")]
    public ovs_AirCarrier ppp_Traveller_AirCarrier_ovs_AirCarrier {
        get {
            return GetRelatedEntity<ovs_AirCarrier>("ppp_Traveller_AirCarrier_ovs_AirCarrier", null);
        }
        set {
            SetRelatedEntity("ppp_Traveller_AirCarrier_ovs_AirCarrier", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_ActivityPointers")]
    public IEnumerable<ActivityPointer> ppp_traveller_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("ppp_traveller_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_Appointments")]
    public IEnumerable<Appointment> ppp_traveller_Appointments {
        get {
            return GetRelatedEntities<Appointment>("ppp_traveller_Appointments", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_Emails")]
    public IEnumerable<Email> ppp_traveller_Emails {
        get {
            return GetRelatedEntities<Email>("ppp_traveller_Emails", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_PhoneCalls")]
    public IEnumerable<PhoneCall> ppp_traveller_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("ppp_traveller_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_ProcessSession")]
    public IEnumerable<ProcessSession> ppp_traveller_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ppp_traveller_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> ppp_traveller_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("ppp_traveller_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> ppp_traveller_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("ppp_traveller_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_SyncErrors")]
    public IEnumerable<SyncError> ppp_traveller_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ppp_traveller_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_Tasks")]
    public IEnumerable<Task> ppp_traveller_Tasks {
        get {
            return GetRelatedEntities<Task>("ppp_traveller_Tasks", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> ppp_traveller_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("ppp_traveller_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("ppp_traveller_msfp_alerts")]
    public IEnumerable<msfp_alert> ppp_traveller_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("ppp_traveller_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("ppp_traveller_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ppp_traveller")]
    public SystemUser user_ppp_traveller {
        get {
            return GetRelatedEntity<SystemUser>("user_ppp_traveller", null);
        }
        set {
            SetRelatedEntity("user_ppp_traveller", null, value);
        }
    }
    
    public static ppp_Traveller Retrieve(IOrganizationService service, Guid id, params Expression<Func<ppp_Traveller,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("qm_account_tylegislationcharacteristic")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_account_tylegislationcharacteristic : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "qm_account_tylegislationcharacteristic";
    
    public const int EntityTypeCode = 10441;
    
    public qm_account_tylegislationcharacteristic() : 
            base(EntityLogicalName) {
    }
    
    public qm_account_tylegislationcharacteristic(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("qm_account_tylegislationcharacteristicid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_account_tylegislationcharacteristicid", value);
        }
    }
    
    [AttributeLogicalName("qm_account_tylegislationcharacteristicid")]
    public Guid? qm_account_tylegislationcharacteristicId {
        get {
            return GetAttributeValue<Guid?>("qm_account_tylegislationcharacteristicid");
        }
        set {
            SetId("qm_account_tylegislationcharacteristicid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("accountid")]
    public Guid? accountid {
        get {
            return GetAttributeValue<Guid?>("accountid");
        }
    }
    
    [AttributeLogicalName("qm_tylegislationcharacteristicid")]
    public Guid? qm_tylegislationcharacteristicid {
        get {
            return GetAttributeValue<Guid?>("qm_tylegislationcharacteristicid");
        }
    }
    
    public static qm_account_tylegislationcharacteristic Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_account_tylegislationcharacteristic,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Legislation</para>
/// </summary>
[EntityLogicalName("qm_rclegislation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_rclegislation : ExtendedEntity<qm_rclegislationState, qm_rclegislation_statuscode> {
    
    public const string EntityLogicalName = "qm_rclegislation";
    
    public const int EntityTypeCode = 10432;
    
    public qm_rclegislation() : 
            base(EntityLogicalName) {
    }
    
    public qm_rclegislation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("qm_name");
        }
    }
    
    [AttributeLogicalName("qm_rclegislationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_rclegislationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Legislation</para>
    /// </summary>
    [AttributeLogicalName("qm_rclegislationid")]
    [DisplayName("Legislation")]
    public Guid? qm_rclegislationId {
        get {
            return GetAttributeValue<Guid?>("qm_rclegislationid");
        }
        set {
            SetId("qm_rclegislationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Additional Metadata Text (English)</para>
    /// </summary>
    [AttributeLogicalName("qm_additionalmetadataetxt")]
    [DisplayName("Additional Metadata Text (English)")]
    public string qm_AdditionalMetadataEtxt {
        get {
            return GetAttributeValue<string>("qm_additionalmetadataetxt");
        }
        set {
            SetAttributeValue("qm_additionalmetadataetxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Additional Metadata Text (French)</para>
    /// </summary>
    [AttributeLogicalName("qm_additionalmetadataftxt")]
    [DisplayName("Additional Metadata Text (French)")]
    public string qm_AdditionalMetadataFtxt {
        get {
            return GetAttributeValue<string>("qm_additionalmetadataftxt");
        }
        set {
            SetAttributeValue("qm_additionalmetadataftxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Historical Note (English)</para>
    /// </summary>
    [AttributeLogicalName("qm_historicalnoteetxt")]
    [DisplayName("Historical Note (English)")]
    [MaxLength(2000)]
    public string qm_HistoricalNoteEtxt {
        get {
            return GetAttributeValue<string>("qm_historicalnoteetxt");
        }
        set {
            SetAttributeValue("qm_historicalnoteetxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Historical Note (French)</para>
    /// </summary>
    [AttributeLogicalName("qm_historicalnoteftxt")]
    [DisplayName("Historical Note (French)")]
    [MaxLength(2000)]
    public string qm_HistoricalNoteFtxt {
        get {
            return GetAttributeValue<string>("qm_historicalnoteftxt");
        }
        set {
            SetAttributeValue("qm_historicalnoteftxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: In-Force Date</para>
    /// </summary>
    [AttributeLogicalName("qm_inforcedte")]
    [DisplayName("In-Force Date")]
    public DateTime? qm_InforceDte {
        get {
            return GetAttributeValue<DateTime?>("qm_inforcedte");
        }
        set {
            SetAttributeValue("qm_inforcedte", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: qm_JusticeFId</para>
    /// </summary>
    [AttributeLogicalName("qm_justicefid")]
    [DisplayName("qm_JusticeFId")]
    [Range(0, 2147483647)]
    public int? qm_JusticeFId {
        get {
            return GetAttributeValue<int?>("qm_justicefid");
        }
        set {
            SetAttributeValue("qm_justicefid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Justice Id</para>
    /// </summary>
    [AttributeLogicalName("qm_justiceid")]
    [DisplayName("Justice Id")]
    [Range(0, 2147483647)]
    public int? qm_JusticeId {
        get {
            return GetAttributeValue<int?>("qm_justiceid");
        }
        set {
            SetAttributeValue("qm_justiceid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Last Amended Dte</para>
    /// </summary>
    [AttributeLogicalName("qm_lastamendeddte")]
    [DisplayName("Last Amended Dte")]
    public DateTime? qm_LastAmendedDte {
        get {
            return GetAttributeValue<DateTime?>("qm_lastamendeddte");
        }
        set {
            SetAttributeValue("qm_lastamendeddte", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: English Text</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationetxt")]
    [DisplayName("English Text")]
    public string qm_LegislationEtxt {
        get {
            return GetAttributeValue<string>("qm_legislationetxt");
        }
        set {
            SetAttributeValue("qm_legislationetxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: French Text</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationftxt")]
    [DisplayName("French Text")]
    public string qm_LegislationFtxt {
        get {
            return GetAttributeValue<string>("qm_legislationftxt");
        }
        set {
            SetAttributeValue("qm_legislationftxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Label</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationlbl")]
    [DisplayName("Label")]
    [MaxLength(100)]
    public string qm_LegislationLbl {
        get {
            return GetAttributeValue<string>("qm_legislationlbl");
        }
        set {
            SetAttributeValue("qm_legislationlbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Order</para>
    /// </summary>
    [AttributeLogicalName("qm_ordernbr")]
    [DisplayName("Order")]
    [Range(0, 99999)]
    public int? qm_OrderNbr {
        get {
            return GetAttributeValue<int?>("qm_ordernbr");
        }
        set {
            SetAttributeValue("qm_ordernbr", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Violation Display Text EN</para>
    /// </summary>
    [AttributeLogicalName("qm_violationdisplaytexten")]
    [DisplayName("Violation Display Text EN")]
    public string qm_ViolationDisplayTextEN {
        get {
            return GetAttributeValue<string>("qm_violationdisplaytexten");
        }
        set {
            SetAttributeValue("qm_violationdisplaytexten", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Violation Display Text FR</para>
    /// </summary>
    [AttributeLogicalName("qm_violationdisplaytextfr")]
    [DisplayName("Violation Display Text FR")]
    public string qm_ViolationDisplayTextFR {
        get {
            return GetAttributeValue<string>("qm_violationdisplaytextfr");
        }
        set {
            SetAttributeValue("qm_violationdisplaytextfr", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Enabling Provision</para>
    /// </summary>
    [AttributeLogicalName("qm_enablingprovision")]
    [DisplayName("Enabling Provision")]
    public EntityReference qm_enablingprovision {
        get {
            return GetAttributeValue<EntityReference>("qm_enablingprovision");
        }
        set {
            SetAttributeValue("qm_enablingprovision", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("qm_name")]
    [DisplayName("Name")]
    [MaxLength(200)]
    public string qm_name {
        get {
            return GetAttributeValue<string>("qm_name");
        }
        set {
            SetAttributeValue("qm_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Parent Legislation</para>
    /// </summary>
    [AttributeLogicalName("qm_rcparentlegislationid")]
    [DisplayName("Parent Legislation")]
    public EntityReference qm_rcParentLegislationId {
        get {
            return GetAttributeValue<EntityReference>("qm_rcparentlegislationid");
        }
        set {
            SetAttributeValue("qm_rcparentlegislationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Legislation Source associated with Legislation.</para>
    /// <para>Display Name: Legislation Source</para>
    /// </summary>
    [AttributeLogicalName("qm_tylegislationsourceid")]
    [DisplayName("Legislation Source")]
    public EntityReference qm_tylegislationsourceId {
        get {
            return GetAttributeValue<EntityReference>("qm_tylegislationsourceid");
        }
        set {
            SetAttributeValue("qm_tylegislationsourceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Legislation Section Type associated with Legislation.</para>
    /// <para>Display Name: Legislation Type</para>
    /// </summary>
    [AttributeLogicalName("qm_tylegislationtypeid")]
    [DisplayName("Legislation Type")]
    public EntityReference qm_tylegislationtypeId {
        get {
            return GetAttributeValue<EntityReference>("qm_tylegislationtypeid");
        }
        set {
            SetAttributeValue("qm_tylegislationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Legislation</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public qm_rclegislationState? statecode {
        get {
            return GetOptionSetValue<qm_rclegislationState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Legislation</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public qm_rclegislation_statuscode? statuscode {
        get {
            return GetOptionSetValue<qm_rclegislation_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Provision Category</para>
    /// </summary>
    [AttributeLogicalName("ts_provisioncategory")]
    [DisplayName("Provision Category")]
    public EntityReference ts_ProvisionCategory {
        get {
            return GetAttributeValue<EntityReference>("ts_provisioncategory");
        }
        set {
            SetAttributeValue("ts_provisioncategory", value);
        }
    }
    
    [RelationshipSchemaName("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referenced)]
    public IEnumerable<qm_rclegislation> Referencedqm_qm_rclegislation_qm_rclegislation {
        get {
            return GetRelatedEntities<qm_rclegislation>("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("qm_rclegislation_enablingprovision", EntityRole.Referenced)]
    public IEnumerable<qm_rclegislation> Referencedqm_rclegislation_enablingprovision {
        get {
            return GetRelatedEntities<qm_rclegislation>("qm_rclegislation_enablingprovision", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("qm_rclegislation_enablingprovision", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("qm_rcparentlegislationid")]
    [RelationshipSchemaName("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referencing)]
    public qm_rclegislation Referencingqm_qm_rclegislation_qm_rclegislation {
        get {
            return GetRelatedEntity<qm_rclegislation>("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("qm_qm_rclegislation_qm_rclegislation", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("qm_enablingprovision")]
    [RelationshipSchemaName("qm_rclegislation_enablingprovision", EntityRole.Referencing)]
    public qm_rclegislation Referencingqm_rclegislation_enablingprovision {
        get {
            return GetRelatedEntity<qm_rclegislation>("qm_rclegislation_enablingprovision", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("qm_rclegislation_enablingprovision", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_qm_rclegislation_createdby")]
    public SystemUser lk_qm_rclegislation_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_rclegislation_createdby", null);
        }
        set {
            SetRelatedEntity("lk_qm_rclegislation_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_qm_rclegislation_createdonbehalfby")]
    public SystemUser lk_qm_rclegislation_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_rclegislation_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_rclegislation_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_qm_rclegislation_modifiedby")]
    public SystemUser lk_qm_rclegislation_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_rclegislation_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_qm_rclegislation_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_qm_rclegislation_modifiedonbehalfby")]
    public SystemUser lk_qm_rclegislation_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_rclegislation_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_rclegislation_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_servicetasktype_qm_rclegislation")]
    public IEnumerable<msdyn_servicetasktype> ovs_msdyn_servicetasktype_qm_rclegislation {
        get {
            return GetRelatedEntities<msdyn_servicetasktype>("ovs_msdyn_servicetasktype_qm_rclegislation", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_servicetasktype_qm_rclegislation", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_qm_rclegislation_ovs_workorderservicetask")]
    public IEnumerable<ovs_workorderservicetaskprovision> ovs_qm_rclegislation_ovs_workorderservicetask {
        get {
            return GetRelatedEntities<ovs_workorderservicetaskprovision>("ovs_qm_rclegislation_ovs_workorderservicetask", null);
        }
        set {
            SetRelatedEntities("ovs_qm_rclegislation_ovs_workorderservicetask", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_rclegislation_ProcessSession")]
    public IEnumerable<ProcessSession> qm_rclegislation_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("qm_rclegislation_ProcessSession", null);
        }
        set {
            SetRelatedEntities("qm_rclegislation_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_rclegislation_SyncErrors")]
    public IEnumerable<SyncError> qm_rclegislation_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("qm_rclegislation_SyncErrors", null);
        }
        set {
            SetRelatedEntities("qm_rclegislation_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_rclegislation_tylegislationcharacteristic")]
    public IEnumerable<qm_tylegislationcharacteristic> qm_rclegislation_tylegislationcharacteristic {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("qm_rclegislation_tylegislationcharacteristic", null);
        }
        set {
            SetRelatedEntities("qm_rclegislation_tylegislationcharacteristic", null, value);
        }
    }
    
    [AttributeLogicalName("qm_tylegislationsourceid")]
    [RelationshipSchemaName("qm_tylegislationsource_rclegislation")]
    public qm_tylegislationsource qm_tylegislationsource_rclegislation {
        get {
            return GetRelatedEntity<qm_tylegislationsource>("qm_tylegislationsource_rclegislation", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationsource_rclegislation", null, value);
        }
    }
    
    [AttributeLogicalName("qm_tylegislationtypeid")]
    [RelationshipSchemaName("qm_tylegislationtype_rclegislation")]
    public qm_tylegislationtype qm_tylegislationtype_rclegislation {
        get {
            return GetRelatedEntity<qm_tylegislationtype>("qm_tylegislationtype_rclegislation", null);
        }
        set {
            SetRelatedEntity("qm_tylegislationtype_rclegislation", null, value);
        }
    }
    
    [AttributeLogicalName("ts_provisioncategory")]
    [RelationshipSchemaName("ts_ProvisionCategory_ts_ProvisionCategory")]
    public ts_ProvisionCategory ts_ProvisionCategory_ts_ProvisionCategory {
        get {
            return GetRelatedEntity<ts_ProvisionCategory>("ts_ProvisionCategory_ts_ProvisionCategory", null);
        }
        set {
            SetRelatedEntity("ts_ProvisionCategory_ts_ProvisionCategory", null, value);
        }
    }
    
    public static qm_rclegislation Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_rclegislation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("qm_rclegislation_tylegislationcharacterist")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_rclegislation_tylegislationcharacterist : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "qm_rclegislation_tylegislationcharacterist";
    
    public const int EntityTypeCode = 10442;
    
    public qm_rclegislation_tylegislationcharacterist() : 
            base(EntityLogicalName) {
    }
    
    public qm_rclegislation_tylegislationcharacterist(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("qm_rclegislation_tylegislationcharacteristid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_rclegislation_tylegislationcharacteristid", value);
        }
    }
    
    [AttributeLogicalName("qm_rclegislation_tylegislationcharacteristid")]
    public Guid? qm_rclegislation_tylegislationcharacteristId {
        get {
            return GetAttributeValue<Guid?>("qm_rclegislation_tylegislationcharacteristid");
        }
        set {
            SetId("qm_rclegislation_tylegislationcharacteristid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("qm_rclegislationid")]
    public Guid? qm_rclegislationid {
        get {
            return GetAttributeValue<Guid?>("qm_rclegislationid");
        }
    }
    
    [AttributeLogicalName("qm_tylegislationcharacteristicid")]
    public Guid? qm_tylegislationcharacteristicid {
        get {
            return GetAttributeValue<Guid?>("qm_tylegislationcharacteristicid");
        }
    }
    
    public static qm_rclegislation_tylegislationcharacterist Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_rclegislation_tylegislationcharacterist,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Legislation Characteristic</para>
/// </summary>
[EntityLogicalName("qm_tylegislationcharacteristic")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_tylegislationcharacteristic : ExtendedEntity<qm_tylegislationcharacteristicState, qm_tylegislationcharacteristic_statuscode> {
    
    public const string EntityLogicalName = "qm_tylegislationcharacteristic";
    
    public const int EntityTypeCode = 10433;
    
    public qm_tylegislationcharacteristic() : 
            base(EntityLogicalName) {
    }
    
    public qm_tylegislationcharacteristic(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("qm_name");
        }
    }
    
    [AttributeLogicalName("qm_tylegislationcharacteristicid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_tylegislationcharacteristicid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: tylegislationcharacteristic</para>
    /// </summary>
    [AttributeLogicalName("qm_tylegislationcharacteristicid")]
    [DisplayName("tylegislationcharacteristic")]
    public Guid? qm_tylegislationcharacteristicId {
        get {
            return GetAttributeValue<Guid?>("qm_tylegislationcharacteristicid");
        }
        set {
            SetId("qm_tylegislationcharacteristicid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Legislation Characteristic associated with Legislation Characteristic.</para>
    /// <para>Display Name: Parent Category</para>
    /// </summary>
    [AttributeLogicalName("qm_categoryid")]
    [DisplayName("Parent Category")]
    public EntityReference qm_CategoryId {
        get {
            return GetAttributeValue<EntityReference>("qm_categoryid");
        }
        set {
            SetAttributeValue("qm_categoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("qm_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string qm_Name {
        get {
            return GetAttributeValue<string>("qm_name");
        }
        set {
            SetAttributeValue("qm_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: English Label</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationcharacteristicelbl")]
    [DisplayName("English Label")]
    [MaxLength(100)]
    public string qm_legislationcharacteristicelbl {
        get {
            return GetAttributeValue<string>("qm_legislationcharacteristicelbl");
        }
        set {
            SetAttributeValue("qm_legislationcharacteristicelbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: French Label</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationcharacteristicflbl")]
    [DisplayName("French Label")]
    [MaxLength(100)]
    public string qm_legislationcharacteristicflbl {
        get {
            return GetAttributeValue<string>("qm_legislationcharacteristicflbl");
        }
        set {
            SetAttributeValue("qm_legislationcharacteristicflbl", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the tylegislationcharacteristic</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public qm_tylegislationcharacteristicState? statecode {
        get {
            return GetOptionSetValue<qm_tylegislationcharacteristicState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the tylegislationcharacteristic</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public qm_tylegislationcharacteristic_statuscode? statuscode {
        get {
            return GetOptionSetValue<qm_tylegislationcharacteristic_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationcharacteristic_itself", EntityRole.Referenced)]
    public IEnumerable<qm_tylegislationcharacteristic> Referencedqm_tylegislationcharacteristic_itself {
        get {
            return GetRelatedEntities<qm_tylegislationcharacteristic>("qm_tylegislationcharacteristic_itself", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("qm_tylegislationcharacteristic_itself", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("qm_categoryid")]
    [RelationshipSchemaName("qm_tylegislationcharacteristic_itself", EntityRole.Referencing)]
    public qm_tylegislationcharacteristic Referencingqm_tylegislationcharacteristic_itself {
        get {
            return GetRelatedEntity<qm_tylegislationcharacteristic>("qm_tylegislationcharacteristic_itself", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("qm_tylegislationcharacteristic_itself", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_createdby")]
    public SystemUser lk_qm_tylegislationcharacteristic_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationcharacteristic_createdby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationcharacteristic_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_createdonbehalfby")]
    public SystemUser lk_qm_tylegislationcharacteristic_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationcharacteristic_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationcharacteristic_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_modifiedby")]
    public SystemUser lk_qm_tylegislationcharacteristic_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationcharacteristic_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationcharacteristic_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationcharacteristic_modifiedonbehalfby")]
    public SystemUser lk_qm_tylegislationcharacteristic_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationcharacteristic_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationcharacteristic_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_account_tylegislationcharacteristic")]
    public IEnumerable<Account> qm_account_tylegislationcharacteristic {
        get {
            return GetRelatedEntities<Account>("qm_account_tylegislationcharacteristic", null);
        }
        set {
            SetRelatedEntities("qm_account_tylegislationcharacteristic", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_rclegislation_tylegislationcharacteristic")]
    public IEnumerable<qm_rclegislation> qm_rclegislation_tylegislationcharacteristic {
        get {
            return GetRelatedEntities<qm_rclegislation>("qm_rclegislation_tylegislationcharacteristic", null);
        }
        set {
            SetRelatedEntities("qm_rclegislation_tylegislationcharacteristic", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationcharacteristic_ProcessSession")]
    public IEnumerable<ProcessSession> qm_tylegislationcharacteristic_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("qm_tylegislationcharacteristic_ProcessSession", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationcharacteristic_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationcharacteristic_SyncErrors")]
    public IEnumerable<SyncError> qm_tylegislationcharacteristic_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("qm_tylegislationcharacteristic_SyncErrors", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationcharacteristic_SyncErrors", null, value);
        }
    }
    
    public static qm_tylegislationcharacteristic Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_tylegislationcharacteristic,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Sources of legislation.  TDG Act TDG Regulations TDG Standards Aviation Security Legislation </para>
/// <para>Display Name: Legislation Source</para>
/// </summary>
[EntityLogicalName("qm_tylegislationsource")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_tylegislationsource : ExtendedEntity<qm_tylegislationsourceState, qm_tylegislationsource_statuscode> {
    
    public const string EntityLogicalName = "qm_tylegislationsource";
    
    public const int EntityTypeCode = 10434;
    
    public qm_tylegislationsource() : 
            base(EntityLogicalName) {
    }
    
    public qm_tylegislationsource(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("qm_name");
        }
    }
    
    [AttributeLogicalName("qm_tylegislationsourceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_tylegislationsourceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: tylegislationsource</para>
    /// </summary>
    [AttributeLogicalName("qm_tylegislationsourceid")]
    [DisplayName("tylegislationsource")]
    public Guid? qm_tylegislationsourceId {
        get {
            return GetAttributeValue<Guid?>("qm_tylegislationsourceid");
        }
        set {
            SetId("qm_tylegislationsourceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("qm_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string qm_Name {
        get {
            return GetAttributeValue<string>("qm_name");
        }
        set {
            SetAttributeValue("qm_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Legislation Source Label English</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationsourceelbl")]
    [DisplayName("Legislation Source Label English")]
    [MaxLength(100)]
    public string qm_legislationsourceelbl {
        get {
            return GetAttributeValue<string>("qm_legislationsourceelbl");
        }
        set {
            SetAttributeValue("qm_legislationsourceelbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Legislation Source English</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationsourceetxt")]
    [DisplayName("Legislation Source English")]
    [MaxLength(500)]
    public string qm_legislationsourceetxt {
        get {
            return GetAttributeValue<string>("qm_legislationsourceetxt");
        }
        set {
            SetAttributeValue("qm_legislationsourceetxt", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Legislation Source Label French</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationsourceflbl")]
    [DisplayName("Legislation Source Label French")]
    [MaxLength(100)]
    public string qm_legislationsourceflbl {
        get {
            return GetAttributeValue<string>("qm_legislationsourceflbl");
        }
        set {
            SetAttributeValue("qm_legislationsourceflbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Legislation Source French</para>
    /// </summary>
    [AttributeLogicalName("qm_legislationsourceftxt")]
    [DisplayName("Legislation Source French")]
    [MaxLength(250)]
    public string qm_legislationsourceftxt {
        get {
            return GetAttributeValue<string>("qm_legislationsourceftxt");
        }
        set {
            SetAttributeValue("qm_legislationsourceftxt", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the tylegislationsource</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public qm_tylegislationsourceState? statecode {
        get {
            return GetOptionSetValue<qm_tylegislationsourceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the tylegislationsource</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public qm_tylegislationsource_statuscode? statuscode {
        get {
            return GetOptionSetValue<qm_tylegislationsource_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_qm_tylegislationsource_createdby")]
    public SystemUser lk_qm_tylegislationsource_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationsource_createdby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationsource_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationsource_createdonbehalfby")]
    public SystemUser lk_qm_tylegislationsource_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationsource_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationsource_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_qm_tylegislationsource_modifiedby")]
    public SystemUser lk_qm_tylegislationsource_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationsource_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationsource_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationsource_modifiedonbehalfby")]
    public SystemUser lk_qm_tylegislationsource_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationsource_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationsource_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationsource_ProcessSession")]
    public IEnumerable<ProcessSession> qm_tylegislationsource_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("qm_tylegislationsource_ProcessSession", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationsource_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationsource_SyncErrors")]
    public IEnumerable<SyncError> qm_tylegislationsource_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("qm_tylegislationsource_SyncErrors", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationsource_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationsource_rclegislation")]
    public IEnumerable<qm_rclegislation> qm_tylegislationsource_rclegislation {
        get {
            return GetRelatedEntities<qm_rclegislation>("qm_tylegislationsource_rclegislation", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationsource_rclegislation", null, value);
        }
    }
    
    public static qm_tylegislationsource Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_tylegislationsource,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Legislation Section Type</para>
/// </summary>
[EntityLogicalName("qm_tylegislationtype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class qm_tylegislationtype : ExtendedEntity<qm_tylegislationtypeState, qm_tylegislationtype_statuscode> {
    
    public const string EntityLogicalName = "qm_tylegislationtype";
    
    public const int EntityTypeCode = 10435;
    
    public qm_tylegislationtype() : 
            base(EntityLogicalName) {
    }
    
    public qm_tylegislationtype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("qm_name");
        }
    }
    
    [AttributeLogicalName("qm_tylegislationtypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("qm_tylegislationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Legislation Type</para>
    /// </summary>
    [AttributeLogicalName("qm_tylegislationtypeid")]
    [DisplayName("Legislation Type")]
    public Guid? qm_tylegislationtypeId {
        get {
            return GetAttributeValue<Guid?>("qm_tylegislationtypeid");
        }
        set {
            SetId("qm_tylegislationtypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the organization</para>
    /// <para>Display Name: Organization Id</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organization Id")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("qm_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string qm_name {
        get {
            return GetAttributeValue<string>("qm_name");
        }
        set {
            SetAttributeValue("qm_name", value);
        }
    }
    
    /// <summary>
    /// <para>Status of the Legislation Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public qm_tylegislationtypeState? statecode {
        get {
            return GetOptionSetValue<qm_tylegislationtypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Legislation Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public qm_tylegislationtype_statuscode? statuscode {
        get {
            return GetOptionSetValue<qm_tylegislationtype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_qm_tylegislationtype_createdby")]
    public SystemUser lk_qm_tylegislationtype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationtype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationtype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationtype_createdonbehalfby")]
    public SystemUser lk_qm_tylegislationtype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationtype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationtype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_qm_tylegislationtype_modifiedby")]
    public SystemUser lk_qm_tylegislationtype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationtype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationtype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_qm_tylegislationtype_modifiedonbehalfby")]
    public SystemUser lk_qm_tylegislationtype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_qm_tylegislationtype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_qm_tylegislationtype_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationtype_ProcessSession")]
    public IEnumerable<ProcessSession> qm_tylegislationtype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("qm_tylegislationtype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationtype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationtype_SyncErrors")]
    public IEnumerable<SyncError> qm_tylegislationtype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("qm_tylegislationtype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationtype_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("qm_tylegislationtype_rclegislation")]
    public IEnumerable<qm_rclegislation> qm_tylegislationtype_rclegislation {
        get {
            return GetRelatedEntities<qm_rclegislation>("qm_tylegislationtype_rclegislation", null);
        }
        set {
            SetRelatedEntities("qm_tylegislationtype_rclegislation", null, value);
        }
    }
    
    public static qm_tylegislationtype Retrieve(IOrganizationService service, Guid id, params Expression<Func<qm_tylegislationtype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Province</para>
/// </summary>
[EntityLogicalName("tc_province")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class tc_Province : ExtendedEntity<tc_ProvinceState, tc_Province_statuscode> {
    
    public const string EntityLogicalName = "tc_province";
    
    public const int EntityTypeCode = 10422;
    
    public tc_Province() : 
            base(EntityLogicalName) {
    }
    
    public tc_Province(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("tc_provincename");
        }
    }
    
    [AttributeLogicalName("tc_provinceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("tc_provinceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Province</para>
    /// </summary>
    [AttributeLogicalName("tc_provinceid")]
    [DisplayName("Province")]
    public Guid? tc_ProvinceId {
        get {
            return GetAttributeValue<Guid?>("tc_provinceid");
        }
        set {
            SetId("tc_provinceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Province</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public tc_ProvinceState? statecode {
        get {
            return GetOptionSetValue<tc_ProvinceState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Province</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public tc_Province_statuscode? statuscode {
        get {
            return GetOptionSetValue<tc_Province_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("tc_country")]
    [DisplayName("Country")]
    public EntityReference tc_Country {
        get {
            return GetAttributeValue<EntityReference>("tc_country");
        }
        set {
            SetAttributeValue("tc_country", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Province Code</para>
    /// </summary>
    [AttributeLogicalName("tc_provincecode")]
    [DisplayName("Province Code")]
    [MaxLength(100)]
    public string tc_ProvinceCode {
        get {
            return GetAttributeValue<string>("tc_provincecode");
        }
        set {
            SetAttributeValue("tc_provincecode", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Province Name</para>
    /// </summary>
    [AttributeLogicalName("tc_provincename")]
    [DisplayName("Province Name")]
    [MaxLength(100)]
    public string tc_ProvinceName {
        get {
            return GetAttributeValue<string>("tc_provincename");
        }
        set {
            SetAttributeValue("tc_provincename", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Province Name (English)</para>
    /// </summary>
    [AttributeLogicalName("tc_provincenameenglish")]
    [DisplayName("Province Name (English)")]
    [MaxLength(100)]
    public string tc_ProvinceNameEnglish {
        get {
            return GetAttributeValue<string>("tc_provincenameenglish");
        }
        set {
            SetAttributeValue("tc_provincenameenglish", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Province Name (French)</para>
    /// </summary>
    [AttributeLogicalName("tc_provincenamefrench")]
    [DisplayName("Province Name (French)")]
    [MaxLength(100)]
    public string tc_ProvinceNameFrench {
        get {
            return GetAttributeValue<string>("tc_provincenamefrench");
        }
        set {
            SetAttributeValue("tc_provincenamefrench", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_tc_province_createdby")]
    public SystemUser lk_tc_province_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_province_createdby", null);
        }
        set {
            SetRelatedEntity("lk_tc_province_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_tc_province_createdonbehalfby")]
    public SystemUser lk_tc_province_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_province_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_province_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_tc_province_modifiedby")]
    public SystemUser lk_tc_province_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_province_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_tc_province_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_tc_province_modifiedonbehalfby")]
    public SystemUser lk_tc_province_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_province_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_province_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_province_ProcessSession")]
    public IEnumerable<ProcessSession> tc_province_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("tc_province_ProcessSession", null);
        }
        set {
            SetRelatedEntities("tc_province_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_province_SyncErrors")]
    public IEnumerable<SyncError> tc_province_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("tc_province_SyncErrors", null);
        }
        set {
            SetRelatedEntities("tc_province_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_tc_province")]
    public SystemUser user_tc_province {
        get {
            return GetRelatedEntity<SystemUser>("user_tc_province", null);
        }
        set {
            SetRelatedEntity("user_tc_province", null, value);
        }
    }
    
    public static tc_Province Retrieve(IOrganizationService service, Guid id, params Expression<Func<tc_Province,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>A fiscal Year is divided in 12 Fiscal Periods.  Each of them corresponding to a calendar month.  For instance: 2009-2010/01 corresponds to April 2009.  Data available in COREDATA.</para>
/// <para>Display Name: TCFiscalPeriod</para>
/// </summary>
[EntityLogicalName("tc_tcfiscalperiod")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class tc_TCFiscalPeriod : ExtendedEntity<tc_TCFiscalPeriodState, tc_TCFiscalPeriod_statuscode> {
    
    public const string EntityLogicalName = "tc_tcfiscalperiod";
    
    public const int EntityTypeCode = 10436;
    
    public tc_TCFiscalPeriod() : 
            base(EntityLogicalName) {
    }
    
    public tc_TCFiscalPeriod(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("tc_name");
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalperiodid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("tc_tcfiscalperiodid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: TCFiscalPeriodId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalperiodid")]
    [DisplayName("TCFiscalPeriodId")]
    public Guid? tc_TCFiscalPeriodId {
        get {
            return GetAttributeValue<Guid?>("tc_tcfiscalperiodid");
        }
        set {
            SetId("tc_tcfiscalperiodid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the TCFiscalPeriod</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public tc_TCFiscalPeriodState? statecode {
        get {
            return GetOptionSetValue<tc_TCFiscalPeriodState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the TCFiscalPeriod</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public tc_TCFiscalPeriod_statuscode? statuscode {
        get {
            return GetOptionSetValue<tc_TCFiscalPeriod_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>The code value used to represent each Fiscal Period YYYY-(YYYY+1)/PERIOD  Example: 2009-2010/11 for the Feb 2010 period.</para>
    /// <para>Display Name: FiscalPeriodLongLbl</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalperiodlonglbl")]
    [DisplayName("FiscalPeriodLongLbl")]
    [MaxLength(255)]
    public string tc_FiscalPeriodLongLbl {
        get {
            return GetAttributeValue<string>("tc_fiscalperiodlonglbl");
        }
        set {
            SetAttributeValue("tc_fiscalperiodlonglbl", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("tc_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string tc_Name {
        get {
            return GetAttributeValue<string>("tc_name");
        }
        set {
            SetAttributeValue("tc_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TCFiscalQuarterId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalquarterid")]
    [DisplayName("TCFiscalQuarterId")]
    public EntityReference tc_TCFiscalQuarterId {
        get {
            return GetAttributeValue<EntityReference>("tc_tcfiscalquarterid");
        }
        set {
            SetAttributeValue("tc_tcfiscalquarterid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TCFiscalYearId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalyearid")]
    [DisplayName("TCFiscalYearId")]
    public EntityReference tc_TCFiscalYearId {
        get {
            return GetAttributeValue<EntityReference>("tc_tcfiscalyearid");
        }
        set {
            SetAttributeValue("tc_tcfiscalyearid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TCMonthId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcmonthid")]
    [DisplayName("TCMonthId")]
    public EntityReference tc_TCMonthId {
        get {
            return GetAttributeValue<EntityReference>("tc_tcmonthid");
        }
        set {
            SetAttributeValue("tc_tcmonthid", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_createdby")]
    public SystemUser lk_tc_tcfiscalperiod_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalperiod_createdby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalperiod_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_createdonbehalfby")]
    public SystemUser lk_tc_tcfiscalperiod_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalperiod_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalperiod_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_modifiedby")]
    public SystemUser lk_tc_tcfiscalperiod_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalperiod_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalperiod_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalperiod_modifiedonbehalfby")]
    public SystemUser lk_tc_tcfiscalperiod_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalperiod_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalperiod_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalquarterid")]
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCFiscalQuarter")]
    public tc_TCFiscalQuarter tc_TCFiscalPeriod_TCFiscalQuarter {
        get {
            return GetRelatedEntity<tc_TCFiscalQuarter>("tc_TCFiscalPeriod_TCFiscalQuarter", null);
        }
        set {
            SetRelatedEntity("tc_TCFiscalPeriod_TCFiscalQuarter", null, value);
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalyearid")]
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCFiscalYear")]
    public tc_TCFiscalYear tc_TCFiscalPeriod_TCFiscalYear {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("tc_TCFiscalPeriod_TCFiscalYear", null);
        }
        set {
            SetRelatedEntity("tc_TCFiscalPeriod_TCFiscalYear", null, value);
        }
    }
    
    [AttributeLogicalName("tc_tcmonthid")]
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCMonth")]
    public tc_TCMonth tc_TCFiscalPeriod_TCMonth {
        get {
            return GetRelatedEntity<tc_TCMonth>("tc_TCFiscalPeriod_TCMonth", null);
        }
        set {
            SetRelatedEntity("tc_TCFiscalPeriod_TCMonth", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalperiod_ProcessSession")]
    public IEnumerable<ProcessSession> tc_tcfiscalperiod_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("tc_tcfiscalperiod_ProcessSession", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalperiod_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalperiod_SyncErrors")]
    public IEnumerable<SyncError> tc_tcfiscalperiod_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("tc_tcfiscalperiod_SyncErrors", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalperiod_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_tc_tcfiscalperiod")]
    public SystemUser user_tc_tcfiscalperiod {
        get {
            return GetRelatedEntity<SystemUser>("user_tc_tcfiscalperiod", null);
        }
        set {
            SetRelatedEntity("user_tc_tcfiscalperiod", null, value);
        }
    }
    
    public static tc_TCFiscalPeriod Retrieve(IOrganizationService service, Guid id, params Expression<Func<tc_TCFiscalPeriod,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Fiscal Quarter: A three-month fiscal calendar. The Government of Canada is using a fiscal quarter that starts on April 1st and ends March 31st. It has 4 fiscal quarters that align with calendar years.</para>
/// <para>Display Name: TCFiscalQuarter</para>
/// </summary>
[EntityLogicalName("tc_tcfiscalquarter")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class tc_TCFiscalQuarter : ExtendedEntity<tc_TCFiscalQuarterState, tc_TCFiscalQuarter_statuscode> {
    
    public const string EntityLogicalName = "tc_tcfiscalquarter";
    
    public const int EntityTypeCode = 10437;
    
    public tc_TCFiscalQuarter() : 
            base(EntityLogicalName) {
    }
    
    public tc_TCFiscalQuarter(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("tc_name");
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalquarterid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("tc_tcfiscalquarterid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: TCFiscalQuarterId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalquarterid")]
    [DisplayName("TCFiscalQuarterId")]
    public Guid? tc_TCFiscalQuarterId {
        get {
            return GetAttributeValue<Guid?>("tc_tcfiscalquarterid");
        }
        set {
            SetId("tc_tcfiscalquarterid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the TCFiscalQuarter</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public tc_TCFiscalQuarterState? statecode {
        get {
            return GetOptionSetValue<tc_TCFiscalQuarterState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the TCFiscalQuarter</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public tc_TCFiscalQuarter_statuscode? statuscode {
        get {
            return GetOptionSetValue<tc_TCFiscalQuarter_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>A display label that represents the fiscal quarter Q1, Q2</para>
    /// <para>Display Name: FiscalQuarterLbl</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalquarterlbl")]
    [DisplayName("FiscalQuarterLbl")]
    [MaxLength(100)]
    public string tc_FiscalQuarterLbl {
        get {
            return GetAttributeValue<string>("tc_fiscalquarterlbl");
        }
        set {
            SetAttributeValue("tc_fiscalquarterlbl", value);
        }
    }
    
    /// <summary>
    /// <para>A display label that represents the fiscal year and quarter. E.g. 2009-2010-Q2, 2009-2010-Q3</para>
    /// <para>Display Name: FiscalQuarterLongLbl</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalquarterlonglbl")]
    [DisplayName("FiscalQuarterLongLbl")]
    [MaxLength(100)]
    public string tc_FiscalQuarterLongLbl {
        get {
            return GetAttributeValue<string>("tc_fiscalquarterlonglbl");
        }
        set {
            SetAttributeValue("tc_fiscalquarterlonglbl", value);
        }
    }
    
    /// <summary>
    /// <para>The number value used to represent the corresponding Fiscal Quarter.  Exemple: 01 is used to represent the fiscal quarter corresponding to the months of April, May and June at Transport Canada.</para>
    /// <para>Display Name: FiscalQuarterNum</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalquarternum")]
    [DisplayName("FiscalQuarterNum")]
    [Range(1, 4)]
    public int? tc_FiscalQuarterNum {
        get {
            return GetAttributeValue<int?>("tc_fiscalquarternum");
        }
        set {
            SetAttributeValue("tc_fiscalquarternum", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("tc_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string tc_Name {
        get {
            return GetAttributeValue<string>("tc_name");
        }
        set {
            SetAttributeValue("tc_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Quarter End</para>
    /// </summary>
    [AttributeLogicalName("tc_quarterend")]
    [DisplayName("Quarter End")]
    public DateTime? tc_QuarterEnd {
        get {
            return GetAttributeValue<DateTime?>("tc_quarterend");
        }
        set {
            SetAttributeValue("tc_quarterend", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Quarter Start</para>
    /// </summary>
    [AttributeLogicalName("tc_quarterstart")]
    [DisplayName("Quarter Start")]
    public DateTime? tc_QuarterStart {
        get {
            return GetAttributeValue<DateTime?>("tc_quarterstart");
        }
        set {
            SetAttributeValue("tc_quarterstart", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TCFiscalYearId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalyearid")]
    [DisplayName("TCFiscalYearId")]
    public EntityReference tc_TCFiscalYearId {
        get {
            return GetAttributeValue<EntityReference>("tc_tcfiscalyearid");
        }
        set {
            SetAttributeValue("tc_tcfiscalyearid", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_createdby")]
    public SystemUser lk_tc_tcfiscalquarter_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalquarter_createdby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalquarter_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_createdonbehalfby")]
    public SystemUser lk_tc_tcfiscalquarter_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalquarter_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalquarter_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_modifiedby")]
    public SystemUser lk_tc_tcfiscalquarter_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalquarter_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalquarter_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalquarter_modifiedonbehalfby")]
    public SystemUser lk_tc_tcfiscalquarter_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalquarter_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalquarter_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_BookableResourceBooking_PlannedFiscalQuar")]
    public IEnumerable<BookableResourceBooking> ovs_BookableResourceBooking_PlannedFiscalQuar {
        get {
            return GetRelatedEntities<BookableResourceBooking>("ovs_BookableResourceBooking_PlannedFiscalQuar", null);
        }
        set {
            SetRelatedEntities("ovs_BookableResourceBooking_PlannedFiscalQuar", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_BookableResourceBooking_RevisedQuarter_tc")]
    public IEnumerable<BookableResourceBooking> ovs_BookableResourceBooking_RevisedQuarter_tc {
        get {
            return GetRelatedEntities<BookableResourceBooking>("ovs_BookableResourceBooking_RevisedQuarter_tc", null);
        }
        set {
            SetRelatedEntities("ovs_BookableResourceBooking_RevisedQuarter_tc", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_CurrentFiscalQuarter_tc_T", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_FiscalQuarter_tc_TCFiscal", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_tc_tcfiscalquarter_msdyn_workorder")]
    public IEnumerable<msdyn_workorder> ovs_tc_tcfiscalquarter_msdyn_workorder {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_tc_tcfiscalquarter_msdyn_workorder", null);
        }
        set {
            SetRelatedEntities("ovs_tc_tcfiscalquarter_msdyn_workorder", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCFiscalQuarter")]
    public IEnumerable<tc_TCFiscalPeriod> tc_TCFiscalPeriod_TCFiscalQuarter {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("tc_TCFiscalPeriod_TCFiscalQuarter", null);
        }
        set {
            SetRelatedEntities("tc_TCFiscalPeriod_TCFiscalQuarter", null, value);
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalyearid")]
    [RelationshipSchemaName("tc_TCFiscalQuarter_TCFiscalYear")]
    public tc_TCFiscalYear tc_TCFiscalQuarter_TCFiscalYear {
        get {
            return GetRelatedEntity<tc_TCFiscalYear>("tc_TCFiscalQuarter_TCFiscalYear", null);
        }
        set {
            SetRelatedEntity("tc_TCFiscalQuarter_TCFiscalYear", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalquarter_ProcessSession")]
    public IEnumerable<ProcessSession> tc_tcfiscalquarter_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("tc_tcfiscalquarter_ProcessSession", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalquarter_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalquarter_SyncErrors")]
    public IEnumerable<SyncError> tc_tcfiscalquarter_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("tc_tcfiscalquarter_SyncErrors", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalquarter_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_tc_tcfiscalquarter")]
    public SystemUser user_tc_tcfiscalquarter {
        get {
            return GetRelatedEntity<SystemUser>("user_tc_tcfiscalquarter", null);
        }
        set {
            SetRelatedEntity("user_tc_tcfiscalquarter", null, value);
        }
    }
    
    public static tc_TCFiscalQuarter Retrieve(IOrganizationService service, Guid id, params Expression<Func<tc_TCFiscalQuarter,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>A fiscal year (or financial year, or sometimes budget year) is a period used for calculating annual ("yearly") financial statements in businesses and other organizations.</para>
/// <para>Display Name: TCFiscalYear</para>
/// </summary>
[EntityLogicalName("tc_tcfiscalyear")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class tc_TCFiscalYear : ExtendedEntity<tc_TCFiscalYearState, tc_TCFiscalYear_statuscode> {
    
    public const string EntityLogicalName = "tc_tcfiscalyear";
    
    public const int EntityTypeCode = 10438;
    
    public tc_TCFiscalYear() : 
            base(EntityLogicalName) {
    }
    
    public tc_TCFiscalYear(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("tc_name");
        }
    }
    
    [AttributeLogicalName("tc_tcfiscalyearid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("tc_tcfiscalyearid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: TCFiscalYearId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcfiscalyearid")]
    [DisplayName("TCFiscalYearId")]
    public Guid? tc_TCFiscalYearId {
        get {
            return GetAttributeValue<Guid?>("tc_tcfiscalyearid");
        }
        set {
            SetId("tc_tcfiscalyearid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the TCFiscalYear</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public tc_TCFiscalYearState? statecode {
        get {
            return GetOptionSetValue<tc_TCFiscalYearState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the TCFiscalYear</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public tc_TCFiscalYear_statuscode? statuscode {
        get {
            return GetOptionSetValue<tc_TCFiscalYear_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Fiscal End</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalend")]
    [DisplayName("Fiscal End")]
    public DateTime? tc_FiscalEnd {
        get {
            return GetAttributeValue<DateTime?>("tc_fiscalend");
        }
        set {
            SetAttributeValue("tc_fiscalend", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Fiscal Start</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalstart")]
    [DisplayName("Fiscal Start")]
    public DateTime? tc_FiscalStart {
        get {
            return GetAttributeValue<DateTime?>("tc_fiscalstart");
        }
        set {
            SetAttributeValue("tc_fiscalstart", value);
        }
    }
    
    /// <summary>
    /// <para>"A character value used to represent a FISCAL YEAR and includes the last two digits of the calendar year in which the FISCAL YEAR begins and the last two digits of the calendar year in which the FISCAL YEAR ends separated by a dash.   Ex:  10-11 represents the FISCAL YEAR starting April 1, 2010 and </para>
    /// <para>Display Name: FiscalYearLongLbl</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalyearlonglbl")]
    [DisplayName("FiscalYearLongLbl")]
    [MaxLength(100)]
    public string tc_FiscalYearLongLbl {
        get {
            return GetAttributeValue<string>("tc_fiscalyearlonglbl");
        }
        set {
            SetAttributeValue("tc_fiscalyearlonglbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: FiscalYearNum</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalyearnum")]
    [DisplayName("FiscalYearNum")]
    [MaxLength(100)]
    public string tc_FiscalYearNum {
        get {
            return GetAttributeValue<string>("tc_fiscalyearnum");
        }
        set {
            SetAttributeValue("tc_fiscalyearnum", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Is Current Fiscal Year</para>
    /// </summary>
    [AttributeLogicalName("tc_iscurrentfiscalyear")]
    [DisplayName("Is Current Fiscal Year")]
    public bool? tc_IsCurrentFiscalYear {
        get {
            return GetAttributeValue<bool?>("tc_iscurrentfiscalyear");
        }
        set {
            SetAttributeValue("tc_iscurrentfiscalyear", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("tc_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string tc_Name {
        get {
            return GetAttributeValue<string>("tc_name");
        }
        set {
            SetAttributeValue("tc_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Today's Date</para>
    /// </summary>
    [AttributeLogicalName("tc_todaysdate")]
    [DisplayName("Today\'s Date")]
    public DateTime? tc_TodaysDate {
        get {
            return GetAttributeValue<DateTime?>("tc_todaysdate");
        }
        set {
            SetAttributeValue("tc_todaysdate", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_tc_tcfiscalyear_createdby")]
    public SystemUser lk_tc_tcfiscalyear_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalyear_createdby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalyear_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalyear_createdonbehalfby")]
    public SystemUser lk_tc_tcfiscalyear_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalyear_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalyear_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_tc_tcfiscalyear_modifiedby")]
    public SystemUser lk_tc_tcfiscalyear_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalyear_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalyear_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcfiscalyear_modifiedonbehalfby")]
    public SystemUser lk_tc_tcfiscalyear_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcfiscalyear_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcfiscalyear_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea")]
    public IEnumerable<msdyn_workorder> ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea {
        get {
            return GetRelatedEntities<msdyn_workorder>("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea", null);
        }
        set {
            SetRelatedEntities("ovs_msdyn_workorder_FiscalYear_tc_TCFiscalYea", null, value);
        }
    }
    
    [RelationshipSchemaName("ovs_tc_tcfiscalyear_bookableresourcebooking")]
    public IEnumerable<BookableResourceBooking> ovs_tc_tcfiscalyear_bookableresourcebooking {
        get {
            return GetRelatedEntities<BookableResourceBooking>("ovs_tc_tcfiscalyear_bookableresourcebooking", null);
        }
        set {
            SetRelatedEntities("ovs_tc_tcfiscalyear_bookableresourcebooking", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCFiscalYear")]
    public IEnumerable<tc_TCFiscalPeriod> tc_TCFiscalPeriod_TCFiscalYear {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("tc_TCFiscalPeriod_TCFiscalYear", null);
        }
        set {
            SetRelatedEntities("tc_TCFiscalPeriod_TCFiscalYear", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_TCFiscalQuarter_TCFiscalYear")]
    public IEnumerable<tc_TCFiscalQuarter> tc_TCFiscalQuarter_TCFiscalYear {
        get {
            return GetRelatedEntities<tc_TCFiscalQuarter>("tc_TCFiscalQuarter_TCFiscalYear", null);
        }
        set {
            SetRelatedEntities("tc_TCFiscalQuarter_TCFiscalYear", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalyear_ProcessSession")]
    public IEnumerable<ProcessSession> tc_tcfiscalyear_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("tc_tcfiscalyear_ProcessSession", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalyear_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcfiscalyear_SyncErrors")]
    public IEnumerable<SyncError> tc_tcfiscalyear_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("tc_tcfiscalyear_SyncErrors", null);
        }
        set {
            SetRelatedEntities("tc_tcfiscalyear_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_tc_tcfiscalyear")]
    public SystemUser user_tc_tcfiscalyear {
        get {
            return GetRelatedEntity<SystemUser>("user_tc_tcfiscalyear", null);
        }
        set {
            SetRelatedEntity("user_tc_tcfiscalyear", null, value);
        }
    }
    
    public static tc_TCFiscalYear Retrieve(IOrganizationService service, Guid id, params Expression<Func<tc_TCFiscalYear,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>One of the twelve portions into which the year is divided.  1      January   Janvier 2      February  Février 3      March     Mars 4      April     Avril  Data available in COREDATA</para>
/// <para>Display Name: TCMonth</para>
/// </summary>
[EntityLogicalName("tc_tcmonth")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class tc_TCMonth : ExtendedEntity<tc_TCMonthState, tc_TCMonth_statuscode> {
    
    public const string EntityLogicalName = "tc_tcmonth";
    
    public const int EntityTypeCode = 10439;
    
    public tc_TCMonth() : 
            base(EntityLogicalName) {
    }
    
    public tc_TCMonth(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("tc_name");
        }
    }
    
    [AttributeLogicalName("tc_tcmonthid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("tc_tcmonthid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: TCMonthId</para>
    /// </summary>
    [AttributeLogicalName("tc_tcmonthid")]
    [DisplayName("TCMonthId")]
    public Guid? tc_TCMonthId {
        get {
            return GetAttributeValue<Guid?>("tc_tcmonthid");
        }
        set {
            SetId("tc_tcmonthid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the TCMonth</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public tc_TCMonthState? statecode {
        get {
            return GetOptionSetValue<tc_TCMonthState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the TCMonth</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public tc_TCMonth_statuscode? statuscode {
        get {
            return GetOptionSetValue<tc_TCMonth_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: FiscalPeriodNum</para>
    /// </summary>
    [AttributeLogicalName("tc_fiscalperiodnum")]
    [DisplayName("FiscalPeriodNum")]
    [Range(1, 12)]
    public int? tc_FiscalPeriodNum {
        get {
            return GetAttributeValue<int?>("tc_fiscalperiodnum");
        }
        set {
            SetAttributeValue("tc_fiscalperiodnum", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MonthAbbrElbl</para>
    /// </summary>
    [AttributeLogicalName("tc_monthabbrelbl")]
    [DisplayName("MonthAbbrElbl")]
    [MaxLength(100)]
    public string tc_MonthAbbrElbl {
        get {
            return GetAttributeValue<string>("tc_monthabbrelbl");
        }
        set {
            SetAttributeValue("tc_monthabbrelbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MonthAbbrFlbl</para>
    /// </summary>
    [AttributeLogicalName("tc_monthabbrflbl")]
    [DisplayName("MonthAbbrFlbl")]
    [MaxLength(100)]
    public string tc_MonthAbbrFlbl {
        get {
            return GetAttributeValue<string>("tc_monthabbrflbl");
        }
        set {
            SetAttributeValue("tc_monthabbrflbl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MonthEnm</para>
    /// </summary>
    [AttributeLogicalName("tc_monthenm")]
    [DisplayName("MonthEnm")]
    [MaxLength(100)]
    public string tc_MonthEnm {
        get {
            return GetAttributeValue<string>("tc_monthenm");
        }
        set {
            SetAttributeValue("tc_monthenm", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MonthFnm</para>
    /// </summary>
    [AttributeLogicalName("tc_monthfnm")]
    [DisplayName("MonthFnm")]
    [MaxLength(100)]
    public string tc_MonthFnm {
        get {
            return GetAttributeValue<string>("tc_monthfnm");
        }
        set {
            SetAttributeValue("tc_monthfnm", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MonthNum</para>
    /// </summary>
    [AttributeLogicalName("tc_monthnum")]
    [DisplayName("MonthNum")]
    [Range(1, 12)]
    public int? tc_MonthNum {
        get {
            return GetAttributeValue<int?>("tc_monthnum");
        }
        set {
            SetAttributeValue("tc_monthnum", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("tc_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string tc_Name {
        get {
            return GetAttributeValue<string>("tc_name");
        }
        set {
            SetAttributeValue("tc_name", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_tc_tcmonth_createdby")]
    public SystemUser lk_tc_tcmonth_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcmonth_createdby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcmonth_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcmonth_createdonbehalfby")]
    public SystemUser lk_tc_tcmonth_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcmonth_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcmonth_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_tc_tcmonth_modifiedby")]
    public SystemUser lk_tc_tcmonth_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcmonth_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcmonth_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_tc_tcmonth_modifiedonbehalfby")]
    public SystemUser lk_tc_tcmonth_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_tc_tcmonth_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_tc_tcmonth_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_TCFiscalPeriod_TCMonth")]
    public IEnumerable<tc_TCFiscalPeriod> tc_TCFiscalPeriod_TCMonth {
        get {
            return GetRelatedEntities<tc_TCFiscalPeriod>("tc_TCFiscalPeriod_TCMonth", null);
        }
        set {
            SetRelatedEntities("tc_TCFiscalPeriod_TCMonth", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcmonth_ProcessSession")]
    public IEnumerable<ProcessSession> tc_tcmonth_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("tc_tcmonth_ProcessSession", null);
        }
        set {
            SetRelatedEntities("tc_tcmonth_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("tc_tcmonth_SyncErrors")]
    public IEnumerable<SyncError> tc_tcmonth_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("tc_tcmonth_SyncErrors", null);
        }
        set {
            SetRelatedEntities("tc_tcmonth_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_tc_tcmonth")]
    public SystemUser user_tc_tcmonth {
        get {
            return GetRelatedEntity<SystemUser>("user_tc_tcmonth", null);
        }
        set {
            SetRelatedEntity("user_tc_tcmonth", null, value);
        }
    }
    
    public static tc_TCMonth Retrieve(IOrganizationService service, Guid id, params Expression<Func<tc_TCMonth,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Provision Category</para>
/// </summary>
[EntityLogicalName("ts_provisioncategory")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_ProvisionCategory : ExtendedEntity<ts_ProvisionCategoryState, ts_ProvisionCategory_statuscode> {
    
    public const string EntityLogicalName = "ts_provisioncategory";
    
    public const int EntityTypeCode = 10518;
    
    public ts_ProvisionCategory() : 
            base(EntityLogicalName) {
    }
    
    public ts_ProvisionCategory(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_provisioncategoryid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_provisioncategoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Provision Category</para>
    /// </summary>
    [AttributeLogicalName("ts_provisioncategoryid")]
    [DisplayName("Provision Category")]
    public Guid? ts_ProvisionCategoryId {
        get {
            return GetAttributeValue<Guid?>("ts_provisioncategoryid");
        }
        set {
            SetId("ts_provisioncategoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Provision Category</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_ProvisionCategoryState? statecode {
        get {
            return GetOptionSetValue<ts_ProvisionCategoryState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Provision Category</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_ProvisionCategory_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_ProvisionCategory_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_Name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_provisioncategory_createdby")]
    public SystemUser lk_ts_provisioncategory_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_provisioncategory_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_provisioncategory_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_provisioncategory_createdonbehalfby")]
    public SystemUser lk_ts_provisioncategory_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_provisioncategory_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_provisioncategory_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_provisioncategory_modifiedby")]
    public SystemUser lk_ts_provisioncategory_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_provisioncategory_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_provisioncategory_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_provisioncategory_modifiedonbehalfby")]
    public SystemUser lk_ts_provisioncategory_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_provisioncategory_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_provisioncategory_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ProvisionCategory_ts_ProvisionCategory")]
    public IEnumerable<qm_rclegislation> ts_ProvisionCategory_ts_ProvisionCategory {
        get {
            return GetRelatedEntities<qm_rclegislation>("ts_ProvisionCategory_ts_ProvisionCategory", null);
        }
        set {
            SetRelatedEntities("ts_ProvisionCategory_ts_ProvisionCategory", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi")]
    public IEnumerable<ovs_Finding> ts_ovs_Finding_ts_ProvisionCategory_ts_Provi {
        get {
            return GetRelatedEntities<ovs_Finding>("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi", null);
        }
        set {
            SetRelatedEntities("ts_ovs_Finding_ts_ProvisionCategory_ts_Provi", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_provisioncategory_ProcessSession")]
    public IEnumerable<ProcessSession> ts_provisioncategory_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_provisioncategory_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_provisioncategory_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_provisioncategory_SyncErrors")]
    public IEnumerable<SyncError> ts_provisioncategory_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_provisioncategory_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_provisioncategory_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_provisioncategory")]
    public SystemUser user_ts_provisioncategory {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_provisioncategory", null);
        }
        set {
            SetRelatedEntity("user_ts_provisioncategory", null, value);
        }
    }
    
    public static ts_ProvisionCategory Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_ProvisionCategory,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_msdyn_customerasset_msdyn_customerasset")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_msdyn_customerasset_msdyn_customerasset : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_msdyn_customerasset_msdyn_customerasset";
    
    public const int EntityTypeCode = 10561;
    
    public ts_msdyn_customerasset_msdyn_customerasset() : 
            base(EntityLogicalName) {
    }
    
    public ts_msdyn_customerasset_msdyn_customerasset(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_customerasset_msdyn_customerassetid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_msdyn_customerasset_msdyn_customerassetid", value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_customerasset_msdyn_customerassetid")]
    public Guid? ts_msdyn_customerasset_msdyn_customerassetId {
        get {
            return GetAttributeValue<Guid?>("ts_msdyn_customerasset_msdyn_customerassetid");
        }
        set {
            SetId("ts_msdyn_customerasset_msdyn_customerassetid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetidone")]
    public Guid? msdyn_customerassetidOne {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetidone");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetidtwo")]
    public Guid? msdyn_customerassetidTwo {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetidtwo");
        }
    }
    
    public static ts_msdyn_customerasset_msdyn_customerasset Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_msdyn_customerasset_msdyn_customerasset,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_msdyn_customerasset_msdyn_workorder")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_msdyn_customerasset_msdyn_workorder : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_msdyn_customerasset_msdyn_workorder";
    
    public const int EntityTypeCode = 10549;
    
    public ts_msdyn_customerasset_msdyn_workorder() : 
            base(EntityLogicalName) {
    }
    
    public ts_msdyn_customerasset_msdyn_workorder(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_customerasset_msdyn_workorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_msdyn_customerasset_msdyn_workorderid", value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_customerasset_msdyn_workorderid")]
    public Guid? ts_msdyn_customerasset_msdyn_workorderId {
        get {
            return GetAttributeValue<Guid?>("ts_msdyn_customerasset_msdyn_workorderid");
        }
        set {
            SetId("ts_msdyn_customerasset_msdyn_workorderid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_customerassetid")]
    public Guid? msdyn_customerassetid {
        get {
            return GetAttributeValue<Guid?>("msdyn_customerassetid");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderid")]
    public Guid? msdyn_workorderid {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderid");
        }
    }
    
    public static ts_msdyn_customerasset_msdyn_workorder Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_msdyn_customerasset_msdyn_workorder,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_msdyn_workorder_ovs_operation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_msdyn_workorder_ovs_operation : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_msdyn_workorder_ovs_operation";
    
    public const int EntityTypeCode = 10577;
    
    public ts_msdyn_workorder_ovs_operation() : 
            base(EntityLogicalName) {
    }
    
    public ts_msdyn_workorder_ovs_operation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_workorder_ovs_operationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_msdyn_workorder_ovs_operationid", value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_workorder_ovs_operationid")]
    public Guid? ts_msdyn_workorder_ovs_operationId {
        get {
            return GetAttributeValue<Guid?>("ts_msdyn_workorder_ovs_operationid");
        }
        set {
            SetId("ts_msdyn_workorder_ovs_operationid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_workorderid")]
    public Guid? msdyn_workorderid {
        get {
            return GetAttributeValue<Guid?>("msdyn_workorderid");
        }
    }
    
    [AttributeLogicalName("ovs_operationid")]
    public Guid? ovs_operationid {
        get {
            return GetAttributeValue<Guid?>("ovs_operationid");
        }
    }
    
    public static ts_msdyn_workorder_ovs_operation Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_msdyn_workorder_ovs_operation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_msdyn_workordertype_msdyn_incidenttype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_msdyn_workordertype_msdyn_incidenttype : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_msdyn_workordertype_msdyn_incidenttype";
    
    public const int EntityTypeCode = 10563;
    
    public ts_msdyn_workordertype_msdyn_incidenttype() : 
            base(EntityLogicalName) {
    }
    
    public ts_msdyn_workordertype_msdyn_incidenttype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_workordertype_msdyn_incidenttypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_msdyn_workordertype_msdyn_incidenttypeid", value);
        }
    }
    
    [AttributeLogicalName("ts_msdyn_workordertype_msdyn_incidenttypeid")]
    public Guid? ts_msdyn_workordertype_msdyn_incidenttypeId {
        get {
            return GetAttributeValue<Guid?>("ts_msdyn_workordertype_msdyn_incidenttypeid");
        }
        set {
            SetId("ts_msdyn_workordertype_msdyn_incidenttypeid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeid")]
    public Guid? msdyn_incidenttypeid {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeid");
        }
    }
    
    [AttributeLogicalName("msdyn_workordertypeid")]
    public Guid? msdyn_workordertypeid {
        get {
            return GetAttributeValue<Guid?>("msdyn_workordertypeid");
        }
    }
    
    public static ts_msdyn_workordertype_msdyn_incidenttype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_msdyn_workordertype_msdyn_incidenttype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_ovs_operation_ovs_operation")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_ovs_operation_ovs_operation : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_ovs_operation_ovs_operation";
    
    public const int EntityTypeCode = 10576;
    
    public ts_ovs_operation_ovs_operation() : 
            base(EntityLogicalName) {
    }
    
    public ts_ovs_operation_ovs_operation(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_ovs_operation_ovs_operationid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_ovs_operation_ovs_operationid", value);
        }
    }
    
    [AttributeLogicalName("ts_ovs_operation_ovs_operationid")]
    public Guid? ts_ovs_operation_ovs_operationId {
        get {
            return GetAttributeValue<Guid?>("ts_ovs_operation_ovs_operationid");
        }
        set {
            SetId("ts_ovs_operation_ovs_operationid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("ovs_operationidone")]
    public Guid? ovs_operationidOne {
        get {
            return GetAttributeValue<Guid?>("ovs_operationidone");
        }
    }
    
    [AttributeLogicalName("ovs_operationidtwo")]
    public Guid? ovs_operationidTwo {
        get {
            return GetAttributeValue<Guid?>("ovs_operationidtwo");
        }
    }
    
    public static ts_ovs_operation_ovs_operation Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_ovs_operation_ovs_operation,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[EntityLogicalName("ts_ovs_operationtypes_msdyn_incidenttypes")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_ovs_operationtypes_msdyn_incidenttypes : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "ts_ovs_operationtypes_msdyn_incidenttypes";
    
    public const int EntityTypeCode = 10593;
    
    public ts_ovs_operationtypes_msdyn_incidenttypes() : 
            base(EntityLogicalName) {
    }
    
    public ts_ovs_operationtypes_msdyn_incidenttypes(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("ts_ovs_operationtypes_msdyn_incidenttypesid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_ovs_operationtypes_msdyn_incidenttypesid", value);
        }
    }
    
    [AttributeLogicalName("ts_ovs_operationtypes_msdyn_incidenttypesid")]
    public Guid? ts_ovs_operationtypes_msdyn_incidenttypesId {
        get {
            return GetAttributeValue<Guid?>("ts_ovs_operationtypes_msdyn_incidenttypesid");
        }
        set {
            SetId("ts_ovs_operationtypes_msdyn_incidenttypesid", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("msdyn_incidenttypeid")]
    public Guid? msdyn_incidenttypeid {
        get {
            return GetAttributeValue<Guid?>("msdyn_incidenttypeid");
        }
    }
    
    [AttributeLogicalName("ovs_operationtypeid")]
    public Guid? ovs_operationtypeid {
        get {
            return GetAttributeValue<Guid?>("ovs_operationtypeid");
        }
    }
    
    public static ts_ovs_operationtypes_msdyn_incidenttypes Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_ovs_operationtypes_msdyn_incidenttypes,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Contains all versions of a questionnaire</para>
/// <para>Display Name: Questionnaire Version</para>
/// </summary>
[EntityLogicalName("ts_questionnaireversion")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_questionnaireversion : ExtendedEntity<ts_questionnaireversionState, ts_questionnaireversion_statuscode> {
    
    public const string EntityLogicalName = "ts_questionnaireversion";
    
    public const int EntityTypeCode = 10516;
    
    public ts_questionnaireversion() : 
            base(EntityLogicalName) {
    }
    
    public ts_questionnaireversion(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_questionnaireversionid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_questionnaireversionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Questionnaire Version</para>
    /// </summary>
    [AttributeLogicalName("ts_questionnaireversionid")]
    [DisplayName("Questionnaire Version")]
    public Guid? ts_questionnaireversionId {
        get {
            return GetAttributeValue<Guid?>("ts_questionnaireversionid");
        }
        set {
            SetId("ts_questionnaireversionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Questionnaire Version</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_questionnaireversionState? statecode {
        get {
            return GetOptionSetValue<ts_questionnaireversionState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Questionnaire Version</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_questionnaireversion_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_questionnaireversion_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Document Version</para>
    /// </summary>
    [AttributeLogicalName("ts_documentversion")]
    [DisplayName("Document Version")]
    [MaxLength(100)]
    public string ts_DocumentVersion {
        get {
            return GetAttributeValue<string>("ts_documentversion");
        }
        set {
            SetAttributeValue("ts_documentversion", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Change Comments</para>
    /// </summary>
    [AttributeLogicalName("ts_changecomments")]
    [DisplayName("Change Comments")]
    public string ts_changecomments {
        get {
            return GetAttributeValue<string>("ts_changecomments");
        }
        set {
            SetAttributeValue("ts_changecomments", value);
        }
    }
    
    /// <summary>
    /// <para>Date of when questionnaire version effectively ends</para>
    /// <para>Display Name: Effective End Date</para>
    /// </summary>
    [AttributeLogicalName("ts_effectiveenddate")]
    [DisplayName("Effective End Date")]
    public DateTime? ts_effectiveenddate {
        get {
            return GetAttributeValue<DateTime?>("ts_effectiveenddate");
        }
        set {
            SetAttributeValue("ts_effectiveenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Start date when questionnaire version is effective</para>
    /// <para>Display Name: Effective Start Date</para>
    /// </summary>
    [AttributeLogicalName("ts_effectivestartdate")]
    [DisplayName("Effective Start Date")]
    public DateTime? ts_effectivestartdate {
        get {
            return GetAttributeValue<DateTime?>("ts_effectivestartdate");
        }
        set {
            SetAttributeValue("ts_effectivestartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire</para>
    /// </summary>
    [AttributeLogicalName("ts_ovs_questionnaire")]
    [DisplayName("Questionnaire")]
    public EntityReference ts_ovs_questionnaire {
        get {
            return GetAttributeValue<EntityReference>("ts_ovs_questionnaire");
        }
        set {
            SetAttributeValue("ts_ovs_questionnaire", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Questionnaire Definition</para>
    /// </summary>
    [AttributeLogicalName("ts_questionnairedefinition")]
    [DisplayName("Questionnaire Definition")]
    public string ts_questionnairedefinition {
        get {
            return GetAttributeValue<string>("ts_questionnairedefinition");
        }
        set {
            SetAttributeValue("ts_questionnairedefinition", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_questionnaireversion_createdby")]
    public SystemUser lk_ts_questionnaireversion_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_questionnaireversion_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_questionnaireversion_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_questionnaireversion_createdonbehalfby")]
    public SystemUser lk_ts_questionnaireversion_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_questionnaireversion_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_questionnaireversion_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_questionnaireversion_modifiedby")]
    public SystemUser lk_ts_questionnaireversion_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_questionnaireversion_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_questionnaireversion_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_questionnaireversion_modifiedonbehalfby")]
    public SystemUser lk_ts_questionnaireversion_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_questionnaireversion_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_questionnaireversion_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ts_ovs_questionnaire")]
    [RelationshipSchemaName("ts_ovs_questionnaire_ovs_questionnaire")]
    public ovs_Questionnaire ts_ovs_questionnaire_ovs_questionnaire {
        get {
            return GetRelatedEntity<ovs_Questionnaire>("ts_ovs_questionnaire_ovs_questionnaire", null);
        }
        set {
            SetRelatedEntity("ts_ovs_questionnaire_ovs_questionnaire", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_questionnaireversion_ProcessSession")]
    public IEnumerable<ProcessSession> ts_questionnaireversion_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_questionnaireversion_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_questionnaireversion_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_questionnaireversion_SyncErrors")]
    public IEnumerable<SyncError> ts_questionnaireversion_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_questionnaireversion_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_questionnaireversion_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_questionnaireversion")]
    public SystemUser user_ts_questionnaireversion {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_questionnaireversion", null);
        }
        set {
            SetRelatedEntity("user_ts_questionnaireversion", null, value);
        }
    }
    
    public static ts_questionnaireversion Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_questionnaireversion,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Request</para>
/// </summary>
[EntityLogicalName("ts_request")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_request : ExtendedEntity<ts_requestState, ts_request_statuscode> {
    
    public const string EntityLogicalName = "ts_request";
    
    public const int EntityTypeCode = 10559;
    
    public ts_request() : 
            base(EntityLogicalName) {
    }
    
    public ts_request(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_requestid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_requestid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Request</para>
    /// </summary>
    [AttributeLogicalName("ts_requestid")]
    [DisplayName("Request")]
    public Guid? ts_requestId {
        get {
            return GetAttributeValue<Guid?>("ts_requestid");
        }
        set {
            SetId("ts_requestid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Request</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_requestState? statecode {
        get {
            return GetOptionSetValue<ts_requestState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Request</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_request_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_request_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Required name field</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    /// <summary>
    /// <para>Describes the request</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("ts_requestdescription")]
    [DisplayName("Description")]
    public string ts_requestdescription {
        get {
            return GetAttributeValue<string>("ts_requestdescription");
        }
        set {
            SetAttributeValue("ts_requestdescription", value);
        }
    }
    
    /// <summary>
    /// <para>Type of this request</para>
    /// <para>Display Name: Request Type</para>
    /// </summary>
    [AttributeLogicalName("ts_requesttype")]
    [DisplayName("Request Type")]
    public ts_requesttype? ts_requesttype {
        get {
            return GetOptionSetValue<ts_requesttype>("ts_requesttype");
        }
        set {
            SetOptionSetValue("ts_requesttype", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_request_createdby")]
    public SystemUser lk_ts_request_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_request_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_request_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_request_createdonbehalfby")]
    public SystemUser lk_ts_request_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_request_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_request_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_request_modifiedby")]
    public SystemUser lk_ts_request_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_request_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_request_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_request_modifiedonbehalfby")]
    public SystemUser lk_ts_request_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_request_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_request_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_ActivityPointers")]
    public IEnumerable<ActivityPointer> ts_request_ActivityPointers {
        get {
            return GetRelatedEntities<ActivityPointer>("ts_request_ActivityPointers", null);
        }
        set {
            SetRelatedEntities("ts_request_ActivityPointers", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_Appointments")]
    public IEnumerable<Appointment> ts_request_Appointments {
        get {
            return GetRelatedEntities<Appointment>("ts_request_Appointments", null);
        }
        set {
            SetRelatedEntities("ts_request_Appointments", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_Emails")]
    public IEnumerable<Email> ts_request_Emails {
        get {
            return GetRelatedEntities<Email>("ts_request_Emails", null);
        }
        set {
            SetRelatedEntities("ts_request_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_PhoneCalls")]
    public IEnumerable<PhoneCall> ts_request_PhoneCalls {
        get {
            return GetRelatedEntities<PhoneCall>("ts_request_PhoneCalls", null);
        }
        set {
            SetRelatedEntities("ts_request_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_ProcessSession")]
    public IEnumerable<ProcessSession> ts_request_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_request_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_request_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_RecurringAppointmentMasters")]
    public IEnumerable<RecurringAppointmentMaster> ts_request_RecurringAppointmentMasters {
        get {
            return GetRelatedEntities<RecurringAppointmentMaster>("ts_request_RecurringAppointmentMasters", null);
        }
        set {
            SetRelatedEntities("ts_request_RecurringAppointmentMasters", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_ServiceAppointments")]
    public IEnumerable<ServiceAppointment> ts_request_ServiceAppointments {
        get {
            return GetRelatedEntities<ServiceAppointment>("ts_request_ServiceAppointments", null);
        }
        set {
            SetRelatedEntities("ts_request_ServiceAppointments", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_SyncErrors")]
    public IEnumerable<SyncError> ts_request_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_request_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_request_SyncErrors", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_Tasks")]
    public IEnumerable<Task> ts_request_Tasks {
        get {
            return GetRelatedEntities<Task>("ts_request_Tasks", null);
        }
        set {
            SetRelatedEntities("ts_request_Tasks", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_msdyn_bookingalerts")]
    public IEnumerable<msdyn_bookingalert> ts_request_msdyn_bookingalerts {
        get {
            return GetRelatedEntities<msdyn_bookingalert>("ts_request_msdyn_bookingalerts", null);
        }
        set {
            SetRelatedEntities("ts_request_msdyn_bookingalerts", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_request_msfp_alerts")]
    public IEnumerable<msfp_alert> ts_request_msfp_alerts {
        get {
            return GetRelatedEntities<msfp_alert>("ts_request_msfp_alerts", null);
        }
        set {
            SetRelatedEntities("ts_request_msfp_alerts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_request")]
    public SystemUser user_ts_request {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_request", null);
        }
        set {
            SetRelatedEntity("user_ts_request", null, value);
        }
    }
    
    public static ts_request Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_request,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Trade Name</para>
/// </summary>
[EntityLogicalName("ts_tradename")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_tradename : ExtendedEntity<ts_tradenameState, ts_tradename_statuscode> {
    
    public const string EntityLogicalName = "ts_tradename";
    
    public const int EntityTypeCode = 10582;
    
    public ts_tradename() : 
            base(EntityLogicalName) {
    }
    
    public ts_tradename(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_tradenameid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_tradenameid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Trade Name</para>
    /// </summary>
    [AttributeLogicalName("ts_tradenameid")]
    [DisplayName("Trade Name")]
    public Guid? ts_tradenameId {
        get {
            return GetAttributeValue<Guid?>("ts_tradenameid");
        }
        set {
            SetId("ts_tradenameid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Trade Name</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_tradenameState? statecode {
        get {
            return GetOptionSetValue<ts_tradenameState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Trade Name</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_tradename_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_tradename_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Stakeholder</para>
    /// </summary>
    [AttributeLogicalName("ts_stakeholderid")]
    [DisplayName("Stakeholder")]
    public EntityReference ts_StakeholderId {
        get {
            return GetAttributeValue<EntityReference>("ts_stakeholderid");
        }
        set {
            SetAttributeValue("ts_stakeholderid", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_tradename_createdby")]
    public SystemUser lk_ts_tradename_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_tradename_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_tradename_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_tradename_createdonbehalfby")]
    public SystemUser lk_ts_tradename_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_tradename_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_tradename_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_tradename_modifiedby")]
    public SystemUser lk_ts_tradename_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_tradename_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_tradename_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_tradename_modifiedonbehalfby")]
    public SystemUser lk_ts_tradename_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_tradename_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_tradename_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_msdyn_workorder_ts_tradenameId_ts_tradena")]
    public IEnumerable<msdyn_workorder> ts_msdyn_workorder_ts_tradenameId_ts_tradena {
        get {
            return GetRelatedEntities<msdyn_workorder>("ts_msdyn_workorder_ts_tradenameId_ts_tradena", null);
        }
        set {
            SetRelatedEntities("ts_msdyn_workorder_ts_tradenameId_ts_tradena", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_tradename_ProcessSession")]
    public IEnumerable<ProcessSession> ts_tradename_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_tradename_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_tradename_ProcessSession", null, value);
        }
    }
    
    [AttributeLogicalName("ts_stakeholderid")]
    [RelationshipSchemaName("ts_tradename_StakeholderId_Account")]
    public Account ts_tradename_StakeholderId_Account {
        get {
            return GetRelatedEntity<Account>("ts_tradename_StakeholderId_Account", null);
        }
        set {
            SetRelatedEntity("ts_tradename_StakeholderId_Account", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_tradename_SyncErrors")]
    public IEnumerable<SyncError> ts_tradename_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_tradename_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_tradename_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_tradename")]
    public SystemUser user_ts_tradename {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_tradename", null);
        }
        set {
            SetRelatedEntity("user_ts_tradename", null, value);
        }
    }
    
    public static ts_tradename Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_tradename,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Work Order Activity Type</para>
/// </summary>
[EntityLogicalName("ts_workorderactivitytype")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_workorderactivitytype : ExtendedEntity<ts_workorderactivitytypeState, ts_workorderactivitytype_statuscode> {
    
    public const string EntityLogicalName = "ts_workorderactivitytype";
    
    public const int EntityTypeCode = 10568;
    
    public ts_workorderactivitytype() : 
            base(EntityLogicalName) {
    }
    
    public ts_workorderactivitytype(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_workorderactivitytypeid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_workorderactivitytypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Work Order Activity Type</para>
    /// </summary>
    [AttributeLogicalName("ts_workorderactivitytypeid")]
    [DisplayName("Work Order Activity Type")]
    public Guid? ts_workorderactivitytypeId {
        get {
            return GetAttributeValue<Guid?>("ts_workorderactivitytypeid");
        }
        set {
            SetId("ts_workorderactivitytypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Activity Type</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_workorderactivitytypeState? statecode {
        get {
            return GetOptionSetValue<ts_workorderactivitytypeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Activity Type</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_workorderactivitytype_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_workorderactivitytype_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Incident Type associated with Work Order Activity Type.</para>
    /// <para>Display Name: Activity Type</para>
    /// </summary>
    [AttributeLogicalName("ts_activitytypeid")]
    [DisplayName("Activity Type")]
    public EntityReference ts_ActivityTypeId {
        get {
            return GetAttributeValue<EntityReference>("ts_activitytypeid");
        }
        set {
            SetAttributeValue("ts_activitytypeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Create Work Order</para>
    /// </summary>
    [AttributeLogicalName("ts_createworkorder")]
    [DisplayName("Create Work Order")]
    public bool? ts_CreateWorkOrder {
        get {
            return GetAttributeValue<bool?>("ts_createworkorder");
        }
        set {
            SetAttributeValue("ts_createworkorder", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Creation Wizard associated with Work Order Activity Type.</para>
    /// <para>Display Name: Work Order Wizard</para>
    /// </summary>
    [AttributeLogicalName("ts_workorderwizardid")]
    [DisplayName("Work Order Wizard")]
    public EntityReference ts_WorkOrderWizardId {
        get {
            return GetAttributeValue<EntityReference>("ts_workorderwizardid");
        }
        set {
            SetAttributeValue("ts_workorderwizardid", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_workorderactivitytype_createdby")]
    public SystemUser lk_ts_workorderactivitytype_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workorderactivitytype_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workorderactivitytype_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_workorderactivitytype_createdonbehalfby")]
    public SystemUser lk_ts_workorderactivitytype_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workorderactivitytype_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workorderactivitytype_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_workorderactivitytype_modifiedby")]
    public SystemUser lk_ts_workorderactivitytype_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workorderactivitytype_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workorderactivitytype_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_workorderactivitytype_modifiedonbehalfby")]
    public SystemUser lk_ts_workorderactivitytype_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workorderactivitytype_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workorderactivitytype_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ts_activitytypeid")]
    [RelationshipSchemaName("ts_msdyn_incidenttype_ts_workorderactivityty")]
    public msdyn_incidenttype ts_msdyn_incidenttype_ts_workorderactivityty {
        get {
            return GetRelatedEntity<msdyn_incidenttype>("ts_msdyn_incidenttype_ts_workorderactivityty", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_incidenttype_ts_workorderactivityty", null, value);
        }
    }
    
    [AttributeLogicalName("ts_workorderwizardid")]
    [RelationshipSchemaName("ts_ts_workordercreationwizard_ts_workorderac")]
    public ts_workordercreationwizard ts_ts_workordercreationwizard_ts_workorderac {
        get {
            return GetRelatedEntity<ts_workordercreationwizard>("ts_ts_workordercreationwizard_ts_workorderac", null);
        }
        set {
            SetRelatedEntity("ts_ts_workordercreationwizard_ts_workorderac", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_workorderactivitytype_ProcessSession")]
    public IEnumerable<ProcessSession> ts_workorderactivitytype_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_workorderactivitytype_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_workorderactivitytype_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_workorderactivitytype_SyncErrors")]
    public IEnumerable<SyncError> ts_workorderactivitytype_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_workorderactivitytype_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_workorderactivitytype_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_workorderactivitytype")]
    public SystemUser user_ts_workorderactivitytype {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_workorderactivitytype", null);
        }
        set {
            SetRelatedEntity("user_ts_workorderactivitytype", null, value);
        }
    }
    
    public static ts_workorderactivitytype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_workorderactivitytype,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Display Name: Work Order Wizard</para>
/// </summary>
[EntityLogicalName("ts_workordercreationwizard")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class ts_workordercreationwizard : ExtendedEntity<ts_workordercreationwizardState, ts_workordercreationwizard_statuscode> {
    
    public const string EntityLogicalName = "ts_workordercreationwizard";
    
    public const int EntityTypeCode = 10564;
    
    public ts_workordercreationwizard() : 
            base(EntityLogicalName) {
    }
    
    public ts_workordercreationwizard(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("ts_name");
        }
    }
    
    [AttributeLogicalName("ts_workordercreationwizardid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("ts_workordercreationwizardid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Work Order Creation Wizard</para>
    /// </summary>
    [AttributeLogicalName("ts_workordercreationwizardid")]
    [DisplayName("Work Order Creation Wizard")]
    public Guid? ts_workordercreationwizardId {
        get {
            return GetAttributeValue<Guid?>("ts_workordercreationwizardid");
        }
        set {
            SetId("ts_workordercreationwizardid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Created By")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Created On")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Created By (Delegate)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Import Sequence Number")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modified By")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modified On")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modified By (Delegate)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Record Created On")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Owner")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Owning Business Unit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Owning Team")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Owning User")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Time Zone Rule Version Number")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("UTC Conversion Time Zone Code")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Version Number")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Work Order Creation Wizard</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Status")]
    public ts_workordercreationwizardState? statecode {
        get {
            return GetOptionSetValue<ts_workordercreationwizardState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Work Order Creation Wizard</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Status Reason")]
    public ts_workordercreationwizard_statuscode? statuscode {
        get {
            return GetOptionSetValue<ts_workordercreationwizard_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Case associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [AttributeLogicalName("ts_caseid")]
    [DisplayName("Case")]
    public EntityReference ts_CaseId {
        get {
            return GetAttributeValue<EntityReference>("ts_caseid");
        }
        set {
            SetAttributeValue("ts_caseid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Country associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Country</para>
    /// </summary>
    [AttributeLogicalName("ts_countryid")]
    [DisplayName("Country")]
    public EntityReference ts_CountryId {
        get {
            return GetAttributeValue<EntityReference>("ts_countryid");
        }
        set {
            SetAttributeValue("ts_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Functional Location associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Functional Location</para>
    /// </summary>
    [AttributeLogicalName("ts_functionallocationid")]
    [DisplayName("Functional Location")]
    public EntityReference ts_FunctionalLocationId {
        get {
            return GetAttributeValue<EntityReference>("ts_functionallocationid");
        }
        set {
            SetAttributeValue("ts_functionallocationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Customer Asset associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Operation</para>
    /// </summary>
    [AttributeLogicalName("ts_operationid")]
    [DisplayName("Operation")]
    public EntityReference ts_OperationId {
        get {
            return GetAttributeValue<EntityReference>("ts_operationid");
        }
        set {
            SetAttributeValue("ts_operationid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Region associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Region</para>
    /// </summary>
    [AttributeLogicalName("ts_regionid")]
    [DisplayName("Region")]
    public EntityReference ts_RegionId {
        get {
            return GetAttributeValue<EntityReference>("ts_regionid");
        }
        set {
            SetAttributeValue("ts_regionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Functional Location associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("ts_siteid")]
    [DisplayName("Site")]
    public EntityReference ts_SiteId {
        get {
            return GetAttributeValue<EntityReference>("ts_siteid");
        }
        set {
            SetAttributeValue("ts_siteid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Account associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Stakeholder</para>
    /// </summary>
    [AttributeLogicalName("ts_stakeholderid")]
    [DisplayName("Stakeholder")]
    public EntityReference ts_StakeholderId {
        get {
            return GetAttributeValue<EntityReference>("ts_stakeholderid");
        }
        set {
            SetAttributeValue("ts_stakeholderid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Work Order Type associated with Work Order Creation Wizard.</para>
    /// <para>Display Name: Work Order Type</para>
    /// </summary>
    [AttributeLogicalName("ts_workordertypeid")]
    [DisplayName("Work Order Type")]
    public EntityReference ts_WorkOrderTypeId {
        get {
            return GetAttributeValue<EntityReference>("ts_workordertypeid");
        }
        set {
            SetAttributeValue("ts_workordertypeid", value);
        }
    }
    
    /// <summary>
    /// <para>The name of the custom entity.</para>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("ts_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string ts_name {
        get {
            return GetAttributeValue<string>("ts_name");
        }
        set {
            SetAttributeValue("ts_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Operation Type</para>
    /// </summary>
    [AttributeLogicalName("ts_ovs_operationtype")]
    [DisplayName("Operation Type")]
    public EntityReference ts_ovs_operationtype {
        get {
            return GetAttributeValue<EntityReference>("ts_ovs_operationtype");
        }
        set {
            SetAttributeValue("ts_ovs_operationtype", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_ts_workordercreationwizard_createdby")]
    public SystemUser lk_ts_workordercreationwizard_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workordercreationwizard_createdby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workordercreationwizard_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_ts_workordercreationwizard_createdonbehalfby")]
    public SystemUser lk_ts_workordercreationwizard_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workordercreationwizard_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workordercreationwizard_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_ts_workordercreationwizard_modifiedby")]
    public SystemUser lk_ts_workordercreationwizard_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workordercreationwizard_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workordercreationwizard_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_ts_workordercreationwizard_modifiedonbehalfby")]
    public SystemUser lk_ts_workordercreationwizard_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_ts_workordercreationwizard_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_ts_workordercreationwizard_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("ts_stakeholderid")]
    [RelationshipSchemaName("ts_account_ts_workordercreationwizard")]
    public Account ts_account_ts_workordercreationwizard {
        get {
            return GetRelatedEntity<Account>("ts_account_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntity("ts_account_ts_workordercreationwizard", null, value);
        }
    }
    
    [AttributeLogicalName("ts_caseid")]
    [RelationshipSchemaName("ts_incident_ts_workordercreationwizard")]
    public Incident ts_incident_ts_workordercreationwizard {
        get {
            return GetRelatedEntity<Incident>("ts_incident_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntity("ts_incident_ts_workordercreationwizard", null, value);
        }
    }
    
    [AttributeLogicalName("ts_operationid")]
    [RelationshipSchemaName("ts_msdyn_customerasset_ts_workordercreationw")]
    public msdyn_customerasset ts_msdyn_customerasset_ts_workordercreationw {
        get {
            return GetRelatedEntity<msdyn_customerasset>("ts_msdyn_customerasset_ts_workordercreationw", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_customerasset_ts_workordercreationw", null, value);
        }
    }
    
    [AttributeLogicalName("ts_siteid")]
    [RelationshipSchemaName("ts_msdyn_functionallocation_ts_workordercrea")]
    public msdyn_FunctionalLocation ts_msdyn_functionallocation_ts_workordercrea {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_msdyn_functionallocation_ts_workordercrea", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_functionallocation_ts_workordercrea", null, value);
        }
    }
    
    [AttributeLogicalName("ts_functionallocationid")]
    [RelationshipSchemaName("ts_msdyn_functionallocation_ts_workordercw")]
    public msdyn_FunctionalLocation ts_msdyn_functionallocation_ts_workordercw {
        get {
            return GetRelatedEntity<msdyn_FunctionalLocation>("ts_msdyn_functionallocation_ts_workordercw", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_functionallocation_ts_workordercw", null, value);
        }
    }
    
    [AttributeLogicalName("ts_workordertypeid")]
    [RelationshipSchemaName("ts_msdyn_workordertype_ts_workordercreationw")]
    public msdyn_workordertype ts_msdyn_workordertype_ts_workordercreationw {
        get {
            return GetRelatedEntity<msdyn_workordertype>("ts_msdyn_workordertype_ts_workordercreationw", null);
        }
        set {
            SetRelatedEntity("ts_msdyn_workordertype_ts_workordercreationw", null, value);
        }
    }
    
    [AttributeLogicalName("ts_ovs_operationtype")]
    [RelationshipSchemaName("ts_ovs_operationtype_ts_workordercreationwiz")]
    public ovs_operationtype ts_ovs_operationtype_ts_workordercreationwiz {
        get {
            return GetRelatedEntity<ovs_operationtype>("ts_ovs_operationtype_ts_workordercreationwiz", null);
        }
        set {
            SetRelatedEntity("ts_ovs_operationtype_ts_workordercreationwiz", null, value);
        }
    }
    
    [AttributeLogicalName("ts_regionid")]
    [RelationshipSchemaName("ts_territory_ts_workordercreationwizard")]
    public Territory ts_territory_ts_workordercreationwizard {
        get {
            return GetRelatedEntity<Territory>("ts_territory_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntity("ts_territory_ts_workordercreationwizard", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ts_workordercreationwizard_msdyn_workorde")]
    public IEnumerable<msdyn_workorder> ts_ts_workordercreationwizard_msdyn_workorde {
        get {
            return GetRelatedEntities<msdyn_workorder>("ts_ts_workordercreationwizard_msdyn_workorde", null);
        }
        set {
            SetRelatedEntities("ts_ts_workordercreationwizard_msdyn_workorde", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_ts_workordercreationwizard_ts_workorderac")]
    public IEnumerable<ts_workorderactivitytype> ts_ts_workordercreationwizard_ts_workorderac {
        get {
            return GetRelatedEntities<ts_workorderactivitytype>("ts_ts_workordercreationwizard_ts_workorderac", null);
        }
        set {
            SetRelatedEntities("ts_ts_workordercreationwizard_ts_workorderac", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_workordercreationwizard_ProcessSession")]
    public IEnumerable<ProcessSession> ts_workordercreationwizard_ProcessSession {
        get {
            return GetRelatedEntities<ProcessSession>("ts_workordercreationwizard_ProcessSession", null);
        }
        set {
            SetRelatedEntities("ts_workordercreationwizard_ProcessSession", null, value);
        }
    }
    
    [RelationshipSchemaName("ts_workordercreationwizard_SyncErrors")]
    public IEnumerable<SyncError> ts_workordercreationwizard_SyncErrors {
        get {
            return GetRelatedEntities<SyncError>("ts_workordercreationwizard_SyncErrors", null);
        }
        set {
            SetRelatedEntities("ts_workordercreationwizard_SyncErrors", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_ts_workordercreationwizard")]
    public SystemUser user_ts_workordercreationwizard {
        get {
            return GetRelatedEntity<SystemUser>("user_ts_workordercreationwizard", null);
        }
        set {
            SetRelatedEntity("user_ts_workordercreationwizard", null, value);
        }
    }
    
    public static ts_workordercreationwizard Retrieve(IOrganizationService service, Guid id, params Expression<Func<ts_workordercreationwizard,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

public partial class Xrm : ExtendedOrganizationServiceContext {
    
    public Xrm(IOrganizationService service) : 
            base(service) {
    }
    
    public IQueryable<Account> AccountSet {
        get {
            return CreateQuery<Account>();
        }
    }
    
    public IQueryable<AccountLeads> AccountLeadsSet {
        get {
            return CreateQuery<AccountLeads>();
        }
    }
    
    public IQueryable<ActivityParty> ActivityPartySet {
        get {
            return CreateQuery<ActivityParty>();
        }
    }
    
    public IQueryable<ActivityPointer> ActivityPointerSet {
        get {
            return CreateQuery<ActivityPointer>();
        }
    }
    
    public IQueryable<Appointment> AppointmentSet {
        get {
            return CreateQuery<Appointment>();
        }
    }
    
    public IQueryable<BookableResource> BookableResourceSet {
        get {
            return CreateQuery<BookableResource>();
        }
    }
    
    public IQueryable<BookableResourceBooking> BookableResourceBookingSet {
        get {
            return CreateQuery<BookableResourceBooking>();
        }
    }
    
    public IQueryable<BulkOperationLog> BulkOperationLogSet {
        get {
            return CreateQuery<BulkOperationLog>();
        }
    }
    
    public IQueryable<Campaign> CampaignSet {
        get {
            return CreateQuery<Campaign>();
        }
    }
    
    public IQueryable<CampaignActivity> CampaignActivitySet {
        get {
            return CreateQuery<CampaignActivity>();
        }
    }
    
    public IQueryable<CampaignActivityItem> CampaignActivityItemSet {
        get {
            return CreateQuery<CampaignActivityItem>();
        }
    }
    
    public IQueryable<CampaignItem> CampaignItemSet {
        get {
            return CreateQuery<CampaignItem>();
        }
    }
    
    public IQueryable<CampaignResponse> CampaignResponseSet {
        get {
            return CreateQuery<CampaignResponse>();
        }
    }
    
    public IQueryable<Contact> ContactSet {
        get {
            return CreateQuery<Contact>();
        }
    }
    
    public IQueryable<ContactInvoices> ContactInvoicesSet {
        get {
            return CreateQuery<ContactInvoices>();
        }
    }
    
    public IQueryable<ContactLeads> ContactLeadsSet {
        get {
            return CreateQuery<ContactLeads>();
        }
    }
    
    public IQueryable<ContactOrders> ContactOrdersSet {
        get {
            return CreateQuery<ContactOrders>();
        }
    }
    
    public IQueryable<ContactQuotes> ContactQuotesSet {
        get {
            return CreateQuery<ContactQuotes>();
        }
    }
    
    public IQueryable<Contract> ContractSet {
        get {
            return CreateQuery<Contract>();
        }
    }
    
    public IQueryable<ContractDetail> ContractDetailSet {
        get {
            return CreateQuery<ContractDetail>();
        }
    }
    
    public IQueryable<Email> EmailSet {
        get {
            return CreateQuery<Email>();
        }
    }
    
    public IQueryable<Entitlement> EntitlementSet {
        get {
            return CreateQuery<Entitlement>();
        }
    }
    
    public IQueryable<EntitlementContacts> EntitlementContactsSet {
        get {
            return CreateQuery<EntitlementContacts>();
        }
    }
    
    public IQueryable<EntitlementProducts> EntitlementProductsSet {
        get {
            return CreateQuery<EntitlementProducts>();
        }
    }
    
    public IQueryable<EntitlementTemplate> EntitlementTemplateSet {
        get {
            return CreateQuery<EntitlementTemplate>();
        }
    }
    
    public IQueryable<EntitlementTemplateProducts> EntitlementTemplateProductsSet {
        get {
            return CreateQuery<EntitlementTemplateProducts>();
        }
    }
    
    public IQueryable<Incident> IncidentSet {
        get {
            return CreateQuery<Incident>();
        }
    }
    
    public IQueryable<Invoice> InvoiceSet {
        get {
            return CreateQuery<Invoice>();
        }
    }
    
    public IQueryable<KbArticle> KbArticleSet {
        get {
            return CreateQuery<KbArticle>();
        }
    }
    
    public IQueryable<Lead> LeadSet {
        get {
            return CreateQuery<Lead>();
        }
    }
    
    public IQueryable<LeadProduct> LeadProductSet {
        get {
            return CreateQuery<LeadProduct>();
        }
    }
    
    public IQueryable<Opportunity> OpportunitySet {
        get {
            return CreateQuery<Opportunity>();
        }
    }
    
    public IQueryable<PhoneCall> PhoneCallSet {
        get {
            return CreateQuery<PhoneCall>();
        }
    }
    
    public IQueryable<ProcessSession> ProcessSessionSet {
        get {
            return CreateQuery<ProcessSession>();
        }
    }
    
    public IQueryable<Product> ProductSet {
        get {
            return CreateQuery<Product>();
        }
    }
    
    public IQueryable<ProductSalesLiterature> ProductSalesLiteratureSet {
        get {
            return CreateQuery<ProductSalesLiterature>();
        }
    }
    
    public IQueryable<Queue> QueueSet {
        get {
            return CreateQuery<Queue>();
        }
    }
    
    public IQueryable<QueueMembership> QueueMembershipSet {
        get {
            return CreateQuery<QueueMembership>();
        }
    }
    
    public IQueryable<Quote> QuoteSet {
        get {
            return CreateQuery<Quote>();
        }
    }
    
    public IQueryable<RecurringAppointmentMaster> RecurringAppointmentMasterSet {
        get {
            return CreateQuery<RecurringAppointmentMaster>();
        }
    }
    
    public IQueryable<SalesLiterature> SalesLiteratureSet {
        get {
            return CreateQuery<SalesLiterature>();
        }
    }
    
    public IQueryable<SalesOrder> SalesOrderSet {
        get {
            return CreateQuery<SalesOrder>();
        }
    }
    
    public IQueryable<ServiceAppointment> ServiceAppointmentSet {
        get {
            return CreateQuery<ServiceAppointment>();
        }
    }
    
    public IQueryable<ServiceContractContacts> ServiceContractContactsSet {
        get {
            return CreateQuery<ServiceContractContacts>();
        }
    }
    
    public IQueryable<SyncError> SyncErrorSet {
        get {
            return CreateQuery<SyncError>();
        }
    }
    
    public IQueryable<SystemUser> SystemUserSet {
        get {
            return CreateQuery<SystemUser>();
        }
    }
    
    public IQueryable<Task> TaskSet {
        get {
            return CreateQuery<Task>();
        }
    }
    
    public IQueryable<Territory> TerritorySet {
        get {
            return CreateQuery<Territory>();
        }
    }
    
    public IQueryable<msdyn_FunctionalLocation> msdyn_FunctionalLocationSet {
        get {
            return CreateQuery<msdyn_FunctionalLocation>();
        }
    }
    
    public IQueryable<msdyn_agreement> msdyn_agreementSet {
        get {
            return CreateQuery<msdyn_agreement>();
        }
    }
    
    public IQueryable<msdyn_agreementbookingproduct> msdyn_agreementbookingproductSet {
        get {
            return CreateQuery<msdyn_agreementbookingproduct>();
        }
    }
    
    public IQueryable<msdyn_agreementbookingservice> msdyn_agreementbookingserviceSet {
        get {
            return CreateQuery<msdyn_agreementbookingservice>();
        }
    }
    
    public IQueryable<msdyn_agreementinvoiceproduct> msdyn_agreementinvoiceproductSet {
        get {
            return CreateQuery<msdyn_agreementinvoiceproduct>();
        }
    }
    
    public IQueryable<msdyn_bookingalert> msdyn_bookingalertSet {
        get {
            return CreateQuery<msdyn_bookingalert>();
        }
    }
    
    public IQueryable<msdyn_bookingjournal> msdyn_bookingjournalSet {
        get {
            return CreateQuery<msdyn_bookingjournal>();
        }
    }
    
    public IQueryable<msdyn_customerasset> msdyn_customerassetSet {
        get {
            return CreateQuery<msdyn_customerasset>();
        }
    }
    
    public IQueryable<msdyn_customerassetcategory> msdyn_customerassetcategorySet {
        get {
            return CreateQuery<msdyn_customerassetcategory>();
        }
    }
    
    public IQueryable<msdyn_incident_msdyn_customerasset> msdyn_incident_msdyn_customerassetSet {
        get {
            return CreateQuery<msdyn_incident_msdyn_customerasset>();
        }
    }
    
    public IQueryable<msdyn_incidenttype> msdyn_incidenttypeSet {
        get {
            return CreateQuery<msdyn_incidenttype>();
        }
    }
    
    public IQueryable<msdyn_incidenttypeproduct> msdyn_incidenttypeproductSet {
        get {
            return CreateQuery<msdyn_incidenttypeproduct>();
        }
    }
    
    public IQueryable<msdyn_incidenttypeservice> msdyn_incidenttypeserviceSet {
        get {
            return CreateQuery<msdyn_incidenttypeservice>();
        }
    }
    
    public IQueryable<msdyn_incidenttypeservicetask> msdyn_incidenttypeservicetaskSet {
        get {
            return CreateQuery<msdyn_incidenttypeservicetask>();
        }
    }
    
    public IQueryable<msdyn_msdyn_functionallocation_account> msdyn_msdyn_functionallocation_accountSet {
        get {
            return CreateQuery<msdyn_msdyn_functionallocation_account>();
        }
    }
    
    public IQueryable<msdyn_orderinvoicingproduct> msdyn_orderinvoicingproductSet {
        get {
            return CreateQuery<msdyn_orderinvoicingproduct>();
        }
    }
    
    public IQueryable<msdyn_propertyassetassociation> msdyn_propertyassetassociationSet {
        get {
            return CreateQuery<msdyn_propertyassetassociation>();
        }
    }
    
    public IQueryable<msdyn_propertylog> msdyn_propertylogSet {
        get {
            return CreateQuery<msdyn_propertylog>();
        }
    }
    
    public IQueryable<msdyn_purchaseorder> msdyn_purchaseorderSet {
        get {
            return CreateQuery<msdyn_purchaseorder>();
        }
    }
    
    public IQueryable<msdyn_purchaseorderproduct> msdyn_purchaseorderproductSet {
        get {
            return CreateQuery<msdyn_purchaseorderproduct>();
        }
    }
    
    public IQueryable<msdyn_quoteinvoicingproduct> msdyn_quoteinvoicingproductSet {
        get {
            return CreateQuery<msdyn_quoteinvoicingproduct>();
        }
    }
    
    public IQueryable<msdyn_rma> msdyn_rmaSet {
        get {
            return CreateQuery<msdyn_rma>();
        }
    }
    
    public IQueryable<msdyn_servicetasktype> msdyn_servicetasktypeSet {
        get {
            return CreateQuery<msdyn_servicetasktype>();
        }
    }
    
    public IQueryable<msdyn_timeoffrequest> msdyn_timeoffrequestSet {
        get {
            return CreateQuery<msdyn_timeoffrequest>();
        }
    }
    
    public IQueryable<msdyn_workorder> msdyn_workorderSet {
        get {
            return CreateQuery<msdyn_workorder>();
        }
    }
    
    public IQueryable<msdyn_workorderincident> msdyn_workorderincidentSet {
        get {
            return CreateQuery<msdyn_workorderincident>();
        }
    }
    
    public IQueryable<msdyn_workorderproduct> msdyn_workorderproductSet {
        get {
            return CreateQuery<msdyn_workorderproduct>();
        }
    }
    
    public IQueryable<msdyn_workorderservice> msdyn_workorderserviceSet {
        get {
            return CreateQuery<msdyn_workorderservice>();
        }
    }
    
    public IQueryable<msdyn_workorderservicetask> msdyn_workorderservicetaskSet {
        get {
            return CreateQuery<msdyn_workorderservicetask>();
        }
    }
    
    public IQueryable<msdyn_workordersubstatus> msdyn_workordersubstatusSet {
        get {
            return CreateQuery<msdyn_workordersubstatus>();
        }
    }
    
    public IQueryable<msdyn_workordertype> msdyn_workordertypeSet {
        get {
            return CreateQuery<msdyn_workordertype>();
        }
    }
    
    public IQueryable<msfp_alert> msfp_alertSet {
        get {
            return CreateQuery<msfp_alert>();
        }
    }
    
    public IQueryable<ovs_AirCarrier> ovs_AirCarrierSet {
        get {
            return CreateQuery<ovs_AirCarrier>();
        }
    }
    
    public IQueryable<ovs_Finding> ovs_FindingSet {
        get {
            return CreateQuery<ovs_Finding>();
        }
    }
    
    public IQueryable<ovs_Questionnaire> ovs_QuestionnaireSet {
        get {
            return CreateQuery<ovs_Questionnaire>();
        }
    }
    
    public IQueryable<ovs_SiteType> ovs_SiteTypeSet {
        get {
            return CreateQuery<ovs_SiteType>();
        }
    }
    
    public IQueryable<ovs_TYRational> ovs_TYRationalSet {
        get {
            return CreateQuery<ovs_TYRational>();
        }
    }
    
    public IQueryable<ovs_lob> ovs_lobSet {
        get {
            return CreateQuery<ovs_lob>();
        }
    }
    
    public IQueryable<ovs_msdyn_servicetasktype_qm_rclegislation> ovs_msdyn_servicetasktype_qm_rclegislationSet {
        get {
            return CreateQuery<ovs_msdyn_servicetasktype_qm_rclegislation>();
        }
    }
    
    public IQueryable<ovs_operation> ovs_operationSet {
        get {
            return CreateQuery<ovs_operation>();
        }
    }
    
    public IQueryable<ovs_operationtype> ovs_operationtypeSet {
        get {
            return CreateQuery<ovs_operationtype>();
        }
    }
    
    public IQueryable<ovs_workorderservicetaskprovision> ovs_workorderservicetaskprovisionSet {
        get {
            return CreateQuery<ovs_workorderservicetaskprovision>();
        }
    }
    
    public IQueryable<ppp_Traveller> ppp_TravellerSet {
        get {
            return CreateQuery<ppp_Traveller>();
        }
    }
    
    public IQueryable<qm_account_tylegislationcharacteristic> qm_account_tylegislationcharacteristicSet {
        get {
            return CreateQuery<qm_account_tylegislationcharacteristic>();
        }
    }
    
    public IQueryable<qm_rclegislation> qm_rclegislationSet {
        get {
            return CreateQuery<qm_rclegislation>();
        }
    }
    
    public IQueryable<qm_rclegislation_tylegislationcharacterist> qm_rclegislation_tylegislationcharacteristSet {
        get {
            return CreateQuery<qm_rclegislation_tylegislationcharacterist>();
        }
    }
    
    public IQueryable<qm_tylegislationcharacteristic> qm_tylegislationcharacteristicSet {
        get {
            return CreateQuery<qm_tylegislationcharacteristic>();
        }
    }
    
    public IQueryable<qm_tylegislationsource> qm_tylegislationsourceSet {
        get {
            return CreateQuery<qm_tylegislationsource>();
        }
    }
    
    public IQueryable<qm_tylegislationtype> qm_tylegislationtypeSet {
        get {
            return CreateQuery<qm_tylegislationtype>();
        }
    }
    
    public IQueryable<tc_Province> tc_ProvinceSet {
        get {
            return CreateQuery<tc_Province>();
        }
    }
    
    public IQueryable<tc_TCFiscalPeriod> tc_TCFiscalPeriodSet {
        get {
            return CreateQuery<tc_TCFiscalPeriod>();
        }
    }
    
    public IQueryable<tc_TCFiscalQuarter> tc_TCFiscalQuarterSet {
        get {
            return CreateQuery<tc_TCFiscalQuarter>();
        }
    }
    
    public IQueryable<tc_TCFiscalYear> tc_TCFiscalYearSet {
        get {
            return CreateQuery<tc_TCFiscalYear>();
        }
    }
    
    public IQueryable<tc_TCMonth> tc_TCMonthSet {
        get {
            return CreateQuery<tc_TCMonth>();
        }
    }
    
    public IQueryable<ts_ProvisionCategory> ts_ProvisionCategorySet {
        get {
            return CreateQuery<ts_ProvisionCategory>();
        }
    }
    
    public IQueryable<ts_msdyn_customerasset_msdyn_customerasset> ts_msdyn_customerasset_msdyn_customerassetSet {
        get {
            return CreateQuery<ts_msdyn_customerasset_msdyn_customerasset>();
        }
    }
    
    public IQueryable<ts_msdyn_customerasset_msdyn_workorder> ts_msdyn_customerasset_msdyn_workorderSet {
        get {
            return CreateQuery<ts_msdyn_customerasset_msdyn_workorder>();
        }
    }
    
    public IQueryable<ts_msdyn_workorder_ovs_operation> ts_msdyn_workorder_ovs_operationSet {
        get {
            return CreateQuery<ts_msdyn_workorder_ovs_operation>();
        }
    }
    
    public IQueryable<ts_msdyn_workordertype_msdyn_incidenttype> ts_msdyn_workordertype_msdyn_incidenttypeSet {
        get {
            return CreateQuery<ts_msdyn_workordertype_msdyn_incidenttype>();
        }
    }
    
    public IQueryable<ts_ovs_operation_ovs_operation> ts_ovs_operation_ovs_operationSet {
        get {
            return CreateQuery<ts_ovs_operation_ovs_operation>();
        }
    }
    
    public IQueryable<ts_ovs_operationtypes_msdyn_incidenttypes> ts_ovs_operationtypes_msdyn_incidenttypesSet {
        get {
            return CreateQuery<ts_ovs_operationtypes_msdyn_incidenttypes>();
        }
    }
    
    public IQueryable<ts_questionnaireversion> ts_questionnaireversionSet {
        get {
            return CreateQuery<ts_questionnaireversion>();
        }
    }
    
    public IQueryable<ts_request> ts_requestSet {
        get {
            return CreateQuery<ts_request>();
        }
    }
    
    public IQueryable<ts_tradename> ts_tradenameSet {
        get {
            return CreateQuery<ts_tradename>();
        }
    }
    
    public IQueryable<ts_workorderactivitytype> ts_workorderactivitytypeSet {
        get {
            return CreateQuery<ts_workorderactivitytype>();
        }
    }
    
    public IQueryable<ts_workordercreationwizard> ts_workordercreationwizardSet {
        get {
            return CreateQuery<ts_workordercreationwizard>();
        }
    }
}

[DataContract()]
public enum AccountState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum Account_AccountCategoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Preferred Customer", Index=0)]
    PreferredCustomer = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Standard", Index=1)]
    Standard = 2,
}

[DataContract()]
public enum Account_AccountClassificationCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_AccountRatingCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Bill To", Index=0)]
    BillTo = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Ship To", Index=1)]
    ShipTo = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Primary", Index=2)]
    Primary = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=3)]
    Other = 4,
}

[DataContract()]
public enum Account_Address1_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FOB", Index=0)]
    FOB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("No Charge", Index=1)]
    NoCharge = 2,
}

[DataContract()]
public enum Account_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Airborne", Index=0)]
    Airborne = 1,
    
    [EnumMember()]
    [OptionSetMetadata("DHL", Index=1)]
    DHL = 2,
    
    [EnumMember()]
    [OptionSetMetadata("FedEx", Index=2)]
    FedEx = 3,
    
    [EnumMember()]
    [OptionSetMetadata("UPS", Index=3)]
    UPS = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Postal Mail", Index=4)]
    PostalMail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Full Load", Index=5)]
    FullLoad = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Will Call", Index=6)]
    WillCall = 7,
}

[DataContract()]
public enum Account_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_Address2_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_BusinessTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_CustomerSizeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_CustomerTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Security Partner", Index=0)]
    SecurityPartner = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=1)]
    Other = 12,
    
    [EnumMember()]
    [OptionSetMetadata("Regulated Entity", Index=2, Color="#0000ff")]
    RegulatedEntity = 948010000,
}

[DataContract()]
public enum Account_IndustryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Accounting", Index=0)]
    Accounting = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1)]
    AgricultureandNonpetrolNaturalResourceExtraction = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2)]
    BroadcastingPrintingandPublishing = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Brokers", Index=3)]
    Brokers = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Building Supply Retail", Index=4)]
    BuildingSupplyRetail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Business Services", Index=5)]
    BusinessServices = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Consulting", Index=6)]
    Consulting = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Consumer Services", Index=7)]
    ConsumerServices = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Design, Direction and Creative Management", Index=8)]
    DesignDirectionandCreativeManagement = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9)]
    DistributorsDispatchersandProcessors = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10)]
    DoctorsOfficesandClinics = 11,
    
    [EnumMember()]
    [OptionSetMetadata("Durable Manufacturing", Index=11)]
    DurableManufacturing = 12,
    
    [EnumMember()]
    [OptionSetMetadata("Eating and Drinking Places", Index=12)]
    EatingandDrinkingPlaces = 13,
    
    [EnumMember()]
    [OptionSetMetadata("Entertainment Retail", Index=13)]
    EntertainmentRetail = 14,
    
    [EnumMember()]
    [OptionSetMetadata("Equipment Rental and Leasing", Index=14)]
    EquipmentRentalandLeasing = 15,
    
    [EnumMember()]
    [OptionSetMetadata("Financial", Index=15)]
    Financial = 16,
    
    [EnumMember()]
    [OptionSetMetadata("Food and Tobacco Processing", Index=16)]
    FoodandTobaccoProcessing = 17,
    
    [EnumMember()]
    [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17)]
    InboundCapitalIntensiveProcessing = 18,
    
    [EnumMember()]
    [OptionSetMetadata("Inbound Repair and Services", Index=18)]
    InboundRepairandServices = 19,
    
    [EnumMember()]
    [OptionSetMetadata("Insurance", Index=19)]
    Insurance = 20,
    
    [EnumMember()]
    [OptionSetMetadata("Legal Services", Index=20)]
    LegalServices = 21,
    
    [EnumMember()]
    [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21)]
    NonDurableMerchandiseRetail = 22,
    
    [EnumMember()]
    [OptionSetMetadata("Outbound Consumer Service", Index=22)]
    OutboundConsumerService = 23,
    
    [EnumMember()]
    [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23)]
    PetrochemicalExtractionandDistribution = 24,
    
    [EnumMember()]
    [OptionSetMetadata("Service Retail", Index=24)]
    ServiceRetail = 25,
    
    [EnumMember()]
    [OptionSetMetadata("SIG Affiliations", Index=25)]
    SIGAffiliations = 26,
    
    [EnumMember()]
    [OptionSetMetadata("Social Services", Index=26)]
    SocialServices = 27,
    
    [EnumMember()]
    [OptionSetMetadata("Special Outbound Trade Contractors", Index=27)]
    SpecialOutboundTradeContractors = 28,
    
    [EnumMember()]
    [OptionSetMetadata("Specialty Realty", Index=28)]
    SpecialtyRealty = 29,
    
    [EnumMember()]
    [OptionSetMetadata("Transportation", Index=29)]
    Transportation = 30,
    
    [EnumMember()]
    [OptionSetMetadata("Utility Creation and Distribution", Index=30)]
    UtilityCreationandDistribution = 31,
    
    [EnumMember()]
    [OptionSetMetadata("Vehicle Retail", Index=31)]
    VehicleRetail = 32,
    
    [EnumMember()]
    [OptionSetMetadata("Wholesale", Index=32)]
    Wholesale = 33,
}

[DataContract()]
public enum Account_OwnershipCode {
    
    [EnumMember()]
    [OptionSetMetadata("Public", Index=0)]
    Public = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Private", Index=1)]
    Private = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Subsidiary", Index=2)]
    Subsidiary = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=3)]
    Other = 4,
}

[DataContract()]
public enum Account_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30", Index=0)]
    Net30 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("2% 10, Net 30", Index=1)]
    _210Net30 = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Net 45", Index=2)]
    Net45 = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60", Index=3)]
    Net60 = 4,
}

[DataContract()]
public enum Account_PreferredAppointmentDayCode {
    
    [EnumMember()]
    [OptionSetMetadata("Sunday", Index=0)]
    Sunday = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Monday", Index=1)]
    Monday = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Tuesday", Index=2)]
    Tuesday = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Wednesday", Index=3)]
    Wednesday = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Thursday", Index=4)]
    Thursday = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Friday", Index=5)]
    Friday = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Saturday", Index=6)]
    Saturday = 6,
}

[DataContract()]
public enum Account_PreferredAppointmentTimeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Morning", Index=0)]
    Morning = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Afternoon", Index=1)]
    Afternoon = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Evening", Index=2)]
    Evening = 3,
}

[DataContract()]
public enum Account_PreferredContactMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Any", Index=0)]
    Any = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=1)]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=2)]
    Phone = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=3)]
    Fax = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Mail", Index=4)]
    Mail = 5,
}

[DataContract()]
public enum Account_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Account_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum Account_TerritoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum ActivityParty_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum ActivityParty_ParticipationTypeMask {
    
    [EnumMember()]
    [OptionSetMetadata("Sender", Index=0)]
    Sender = 1,
    
    [EnumMember()]
    [OptionSetMetadata("To Recipient", Index=1)]
    ToRecipient = 2,
    
    [EnumMember()]
    [OptionSetMetadata("CC Recipient", Index=2)]
    CCRecipient = 3,
    
    [EnumMember()]
    [OptionSetMetadata("BCC Recipient", Index=3)]
    BCCRecipient = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Required attendee", Index=4)]
    Requiredattendee = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Optional attendee", Index=5)]
    Optionalattendee = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Organizer", Index=6)]
    Organizer = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Regarding", Index=7)]
    Regarding = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Owner", Index=8)]
    Owner = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Resource", Index=9)]
    Resource = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Customer", Index=10)]
    Customer = 11,
}

[DataContract()]
public enum ActivityPointerState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum ActivityPointer_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum ActivityPointer_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum ActivityPointer_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 4,
}

[DataContract()]
public enum AppointmentState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum Appointment_AttachmentErrors {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("The appointment was saved as a Microsoft Dynamics 365 appointment record, but not" +
        " all the attachments could be saved with it. An attachment cannot be saved if it" +
        " is blocked or if its file type is invalid.", Index=1)]
    TheappointmentwassavedasaMicrosoftDynamics365appointmentrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
}

[DataContract()]
public enum Appointment_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum Appointment_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum Appointment_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Free", Index=0, Color="#3b79b7")]
    Free = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Tentative", Index=1, Color="#db3923")]
    Tentative = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=2, Color="#358717")]
    Completed = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3, Color="#666666")]
    Canceled = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Busy", Index=4, Color="#ea0600")]
    Busy = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Out of Office", Index=5, Color="#6a1e7a")]
    OutofOffice = 6,
}

[DataContract()]
public enum BookableResourceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum BookableResource_ResourceType {
    
    [EnumMember()]
    [OptionSetMetadata("Generic", Index=0)]
    Generic = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Contact", Index=1)]
    Contact = 2,
    
    [EnumMember()]
    [OptionSetMetadata("User", Index=2)]
    User = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Equipment", Index=3)]
    Equipment = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Account", Index=4)]
    Account = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Crew", Index=5)]
    Crew = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Facility", Index=6)]
    Facility = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Pool", Index=7)]
    Pool = 8,
}

[DataContract()]
public enum BookableResource_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum BookableResourceBookingState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum BookableResourceBooking_BookingType {
    
    [EnumMember()]
    [OptionSetMetadata("Solid", Index=1)]
    Solid = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Liquid", Index=0)]
    Liquid = 2,
}

[DataContract()]
public enum BookableResourceBooking_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum CampaignState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum Campaign_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Proposed", Index=0)]
    Proposed = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Ready To Launch", Index=1)]
    ReadyToLaunch = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Launched", Index=2)]
    Launched = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=3)]
    Completed = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Suspended", Index=5)]
    Suspended = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=6)]
    Inactive = 6,
}

[DataContract()]
public enum Campaign_TypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Advertisement", Index=0)]
    Advertisement = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Direct Marketing", Index=1)]
    DirectMarketing = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Event", Index=2)]
    Event = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Co-branding", Index=3)]
    Cobranding = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=4)]
    Other = 5,
}

[DataContract()]
public enum CampaignActivityState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=1)]
    Closed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
}

[DataContract()]
public enum CampaignActivity_ChannelTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=0)]
    Phone = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Appointment", Index=1)]
    Appointment = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Letter", Index=2)]
    Letter = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Letter via Mail Merge(deprecated)", Index=3)]
    LetterviaMailMergedeprecated = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=4)]
    Fax = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Fax via Mail Merge(deprecated)", Index=5)]
    FaxviaMailMergedeprecated = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=6)]
    Email = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Email via Mail Merge(deprecated)", Index=7)]
    EmailviaMailMergedeprecated = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=8)]
    Other = 9,
}

[DataContract()]
public enum CampaignActivity_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum CampaignActivity_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum CampaignActivity_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=1)]
    InProgress = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Proposed", Index=0)]
    Proposed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=2)]
    Closed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3)]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Pending", Index=4)]
    Pending = 4,
    
    [EnumMember()]
    [OptionSetMetadata("System Aborted", Index=5)]
    SystemAborted = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=6)]
    Completed = 6,
}

[DataContract()]
public enum CampaignActivity_TypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Research", Index=0)]
    Research = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Content Preparation", Index=1)]
    ContentPreparation = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Target Marketing List Creation", Index=2)]
    TargetMarketingListCreation = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Lead Qualification", Index=3)]
    LeadQualification = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Content Distribution", Index=4)]
    ContentDistribution = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Direct Initial Contact", Index=5)]
    DirectInitialContact = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Direct Follow-Up Contact", Index=6)]
    DirectFollowUpContact = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Reminder Distribution", Index=7)]
    ReminderDistribution = 8,
}

[DataContract()]
public enum CampaignResponseState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=1)]
    Closed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
}

[DataContract()]
public enum CampaignResponse_ChannelTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=0)]
    Email = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=1)]
    Phone = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=2)]
    Fax = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Letter", Index=3)]
    Letter = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Appointment", Index=4)]
    Appointment = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Others", Index=5)]
    Others = 6,
}

[DataContract()]
public enum CampaignResponse_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum CampaignResponse_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum CampaignResponse_ResponseCode {
    
    [EnumMember()]
    [OptionSetMetadata("Interested", Index=0)]
    Interested = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Not Interested", Index=1)]
    NotInterested = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Do Not Send Marketing Materials", Index=2)]
    DoNotSendMarketingMaterials = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Error", Index=3)]
    Error = 4,
}

[DataContract()]
public enum CampaignResponse_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=1)]
    Closed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 3,
}

[DataContract()]
public enum ContactState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum Contact_AccountRoleCode {
    
    [EnumMember()]
    [OptionSetMetadata("Decision Maker", Index=0)]
    DecisionMaker = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Employee", Index=1)]
    Employee = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Influencer", Index=2)]
    Influencer = 3,
}

[DataContract()]
public enum Contact_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Bill To", Index=0)]
    BillTo = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Ship To", Index=1)]
    ShipTo = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Primary", Index=2)]
    Primary = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=3)]
    Other = 4,
}

[DataContract()]
public enum Contact_Address1_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FOB", Index=0)]
    FOB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("No Charge", Index=1)]
    NoCharge = 2,
}

[DataContract()]
public enum Contact_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Airborne", Index=0)]
    Airborne = 1,
    
    [EnumMember()]
    [OptionSetMetadata("DHL", Index=1)]
    DHL = 2,
    
    [EnumMember()]
    [OptionSetMetadata("FedEx", Index=2)]
    FedEx = 3,
    
    [EnumMember()]
    [OptionSetMetadata("UPS", Index=3)]
    UPS = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Postal Mail", Index=4)]
    PostalMail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Full Load", Index=5)]
    FullLoad = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Will Call", Index=6)]
    WillCall = 7,
}

[DataContract()]
public enum Contact_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_Address2_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_Address3_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_Address3_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_Address3_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_CustomerSizeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_CustomerTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_EducationCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_FamilyStatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Single", Index=0)]
    Single = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Married", Index=1)]
    Married = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Divorced", Index=2)]
    Divorced = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Widowed", Index=3)]
    Widowed = 4,
}

[DataContract()]
public enum Contact_GenderCode {
    
    [EnumMember()]
    [OptionSetMetadata("Male", Index=0)]
    Male = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Female", Index=1)]
    Female = 2,
}

[DataContract()]
public enum Contact_HasChildrenCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_LeadSourceCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30", Index=0)]
    Net30 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("2% 10, Net 30", Index=1)]
    _210Net30 = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Net 45", Index=2)]
    Net45 = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60", Index=3)]
    Net60 = 4,
}

[DataContract()]
public enum Contact_PreferredAppointmentDayCode {
    
    [EnumMember()]
    [OptionSetMetadata("Sunday", Index=0)]
    Sunday = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Monday", Index=1)]
    Monday = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Tuesday", Index=2)]
    Tuesday = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Wednesday", Index=3)]
    Wednesday = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Thursday", Index=4)]
    Thursday = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Friday", Index=5)]
    Friday = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Saturday", Index=6)]
    Saturday = 6,
}

[DataContract()]
public enum Contact_PreferredAppointmentTimeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Morning", Index=0)]
    Morning = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Afternoon", Index=1)]
    Afternoon = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Evening", Index=2)]
    Evening = 3,
}

[DataContract()]
public enum Contact_PreferredContactMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Any", Index=0)]
    Any = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=1)]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=2)]
    Phone = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=3)]
    Fax = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Mail", Index=4)]
    Mail = 5,
}

[DataContract()]
public enum Contact_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum Contact_TerritoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Contact_msdyn_orgchangestatus {
    
    [EnumMember()]
    [OptionSetMetadata("No Feedback", Index=0, Color="#0000ff")]
    NoFeedback = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Not at Company", Index=1, Color="#0000ff")]
    NotatCompany = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Ignore", Index=2, Color="#0000ff")]
    Ignore = 2,
}

[DataContract()]
public enum ContractState {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Invoiced", Index=1)]
    Invoiced = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=2)]
    Active = 2,
    
    [EnumMember()]
    [OptionSetMetadata("On Hold", Index=3)]
    OnHold = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=5)]
    Expired = 5,
}

[DataContract()]
public enum Contract_AllotmentTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Number of Cases", Index=0)]
    NumberofCases = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Time", Index=1)]
    Time = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Coverage Dates", Index=2)]
    CoverageDates = 3,
}

[DataContract()]
public enum Contract_BillingFrequencyCode {
    
    [EnumMember()]
    [OptionSetMetadata("Monthly", Index=0)]
    Monthly = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Bimonthly", Index=1)]
    Bimonthly = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Quarterly", Index=2)]
    Quarterly = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Semiannually", Index=3)]
    Semiannually = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Annually", Index=4)]
    Annually = 5,
}

[DataContract()]
public enum Contract_ContractServiceLevelCode {
    
    [EnumMember()]
    [OptionSetMetadata("Gold", Index=0)]
    Gold = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Silver", Index=1)]
    Silver = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Bronze", Index=2)]
    Bronze = 3,
}

[DataContract()]
public enum Contract_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Invoiced", Index=1)]
    Invoiced = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=2)]
    Active = 3,
    
    [EnumMember()]
    [OptionSetMetadata("On Hold", Index=3)]
    OnHold = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=5)]
    Expired = 6,
}

[DataContract()]
public enum ContractDetailState {
    
    [EnumMember()]
    [OptionSetMetadata("Existing", Index=0)]
    Existing = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Renewed", Index=1)]
    Renewed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=3)]
    Expired = 3,
}

[DataContract()]
public enum ContractDetail_ServiceContractUnitsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum ContractDetail_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=0)]
    New = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Renewed", Index=1)]
    Renewed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=3)]
    Expired = 4,
}

[DataContract()]
public enum EmailState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
}

[DataContract()]
public enum Email_CorrelationMethod {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Skipped", Index=1)]
    Skipped = 1,
    
    [EnumMember()]
    [OptionSetMetadata("XHeader", Index=2)]
    XHeader = 2,
    
    [EnumMember()]
    [OptionSetMetadata("InReplyTo", Index=3)]
    InReplyTo = 3,
    
    [EnumMember()]
    [OptionSetMetadata("TrackingToken", Index=4)]
    TrackingToken = 4,
    
    [EnumMember()]
    [OptionSetMetadata("ConversationIndex", Index=5)]
    ConversationIndex = 5,
    
    [EnumMember()]
    [OptionSetMetadata("SmartMatching", Index=6)]
    SmartMatching = 6,
    
    [EnumMember()]
    [OptionSetMetadata("CustomCorrelation", Index=7)]
    CustomCorrelation = 7,
}

[DataContract()]
public enum Email_EmailReminderStatus {
    
    [EnumMember()]
    [OptionSetMetadata("NotSet", Index=0)]
    NotSet = 0,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderSet", Index=1)]
    ReminderSet = 1,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderExpired", Index=2)]
    ReminderExpired = 2,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderInvalid", Index=3)]
    ReminderInvalid = 3,
}

[DataContract()]
public enum Email_EmailReminderType {
    
    [EnumMember()]
    [OptionSetMetadata("If I do not receive a reply by", Index=0)]
    IfIdonotreceiveareplyby = 0,
    
    [EnumMember()]
    [OptionSetMetadata("If the email is not opened by", Index=1)]
    Iftheemailisnotopenedby = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Remind me anyways at", Index=2)]
    Remindmeanywaysat = 2,
}

[DataContract()]
public enum Email_Notifications {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("The message was saved as a Microsoft Dynamics 365 email record, but not all the a" +
        "ttachments could be saved with it. An attachment cannot be saved if it is blocke" +
        "d or if its file type is invalid.", Index=1)]
    ThemessagewassavedasaMicrosoftDynamics365emailrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Truncated body.", Index=2)]
    Truncatedbody = 2,
}

[DataContract()]
public enum Email_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum Email_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0, Color="#3b79b7")]
    Draft = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1, Color="#358717")]
    Completed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Sent", Index=2, Color="#358717")]
    Sent = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Received", Index=3, Color="#358717")]
    Received = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4, Color="#666666")]
    Canceled = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Pending Send", Index=5, Color="#bf991f")]
    PendingSend = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Sending", Index=6, Color="#bf991f")]
    Sending = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Failed", Index=7, Color="#ea0600")]
    Failed = 8,
}

[DataContract()]
public enum EntitlementState {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=1)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Cancelled", Index=2)]
    Cancelled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=3)]
    Expired = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Waiting", Index=4)]
    Waiting = 4,
}

[DataContract()]
public enum Entitlement_AllocationTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Number of cases", Index=0, Description="Numberofcases", Color="")]
    Numberofcases = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Number of hours", Index=1, Description="Numberofhours", Color="")]
    Numberofhours = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Discount % and Price List", Index=2, Description="DiscountandPriceList", Color="#0000ff")]
    DiscountandPriceList = 192350000,
}

[DataContract()]
public enum Entitlement_DecreaseRemainingOn {
    
    [EnumMember()]
    [OptionSetMetadata("Case Resolution", Index=0)]
    CaseResolution = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Case Creation", Index=1)]
    CaseCreation = 1,
}

[DataContract()]
public enum Entitlement_KbAccessLevel {
    
    [EnumMember()]
    [OptionSetMetadata("Standard", Index=0, Description="Standard")]
    Standard = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Premium", Index=1, Description="Premium")]
    Premium = 1,
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=2, Description="None")]
    None = 2,
}

[DataContract()]
public enum Entitlement_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=1)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Cancelled", Index=2)]
    Cancelled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=3)]
    Expired = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Waiting", Index=4)]
    Waiting = 1200,
}

[DataContract()]
public enum EntitlementTemplate_AllocationTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Number of cases", Index=0, Description="Numberofcases")]
    Numberofcases = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Number of hours", Index=1, Description="Numberofhours")]
    Numberofhours = 1,
}

[DataContract()]
public enum EntitlementTemplate_DecreaseRemainingOn {
    
    [EnumMember()]
    [OptionSetMetadata("Case Resolution", Index=0)]
    CaseResolution = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Case Creation", Index=1)]
    CaseCreation = 1,
}

[DataContract()]
public enum EntitlementTemplate_KbAccessLevel {
    
    [EnumMember()]
    [OptionSetMetadata("Standard", Index=0, Description="Standard")]
    Standard = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Premium", Index=1, Description="Premium")]
    Premium = 1,
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=2, Description="None")]
    None = 2,
}

[DataContract()]
public enum IncidentState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0, Color="#D91E18")]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Resolved", Index=1, Color="#358717")]
    Resolved = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Cancelled", Index=2, Color="#666666")]
    Cancelled = 2,
}

[DataContract()]
public enum Incident_CaseTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Question", Index=0, Color="#FF8C00")]
    Question = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Problem", Index=1, Color="#E71022")]
    Problem = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Request", Index=2, Color="#0072C6")]
    Request = 3,
}

[DataContract()]
public enum Incident_ContractServiceLevelCode {
    
    [EnumMember()]
    [OptionSetMetadata("Gold", Index=0)]
    Gold = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Silver", Index=1)]
    Silver = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Bronze", Index=2)]
    Bronze = 3,
}

[DataContract()]
public enum Incident_CustomerSatisfactionCode {
    
    [EnumMember()]
    [OptionSetMetadata("Very Dissatisfied", Index=4)]
    VeryDissatisfied = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Dissatisfied", Index=3)]
    Dissatisfied = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Neutral", Index=2)]
    Neutral = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Satisfied", Index=1)]
    Satisfied = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Very Satisfied", Index=0)]
    VerySatisfied = 5,
}

[DataContract()]
public enum Incident_FirstResponseSLAStatus {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=0)]
    InProgress = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Nearing Noncompliance", Index=1)]
    NearingNoncompliance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Succeeded", Index=2)]
    Succeeded = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Noncompliant", Index=3)]
    Noncompliant = 4,
}

[DataContract()]
public enum Incident_IncidentStageCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Incident_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=0)]
    High = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=2)]
    Low = 3,
}

[DataContract()]
public enum Incident_ResolveBySLAStatus {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=0)]
    InProgress = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Nearing Noncompliance", Index=1)]
    NearingNoncompliance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Succeeded", Index=2)]
    Succeeded = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Noncompliant", Index=3)]
    Noncompliant = 4,
}

[DataContract()]
public enum Incident_SeverityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Incident_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=4, Color="#3B79B7")]
    InProgress = 1,
    
    [EnumMember()]
    [OptionSetMetadata("On Hold", Index=5, Color="#D43900")]
    OnHold = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Waiting for Details", Index=6, Color="#8C24B5")]
    WaitingforDetails = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Researching", Index=7, Color="#007A7C")]
    Researching = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Problem Solved", Index=0, Color="#358717")]
    ProblemSolved = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Cancelled", Index=2, Color="#666666")]
    Cancelled = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Information Provided", Index=1, Color="#358717")]
    InformationProvided = 1000,
    
    [EnumMember()]
    [OptionSetMetadata("Merged", Index=3, Color="#806c00")]
    Merged = 2000,
}

[DataContract()]
public enum InvoiceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Closed (deprecated)", Index=1)]
    Closeddeprecated = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Paid", Index=2)]
    Paid = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3)]
    Canceled = 3,
}

[DataContract()]
public enum Invoice_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30", Index=0)]
    Net30 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("2% 10, Net 30", Index=1)]
    _210Net30 = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Net 45", Index=2)]
    Net45 = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60", Index=3)]
    Net60 = 4,
}

[DataContract()]
public enum Invoice_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Invoice_ShipTo_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Invoice_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Airborne", Index=0)]
    Airborne = 1,
    
    [EnumMember()]
    [OptionSetMetadata("DHL", Index=1)]
    DHL = 2,
    
    [EnumMember()]
    [OptionSetMetadata("FedEx", Index=2)]
    FedEx = 3,
    
    [EnumMember()]
    [OptionSetMetadata("UPS", Index=3)]
    UPS = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Postal Mail", Index=4)]
    PostalMail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Full Load", Index=5)]
    FullLoad = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Will Call", Index=6)]
    WillCall = 7,
}

[DataContract()]
public enum Invoice_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=0)]
    New = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Partially Shipped", Index=1)]
    PartiallyShipped = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled (deprecated)", Index=5)]
    Canceleddeprecated = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Billed", Index=2)]
    Billed = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Booked (applies to services)", Index=3)]
    Bookedappliestoservices = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Installed (applies to services)", Index=4)]
    Installedappliestoservices = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Paid in Full (deprecated)", Index=6)]
    PaidinFulldeprecated = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Complete", Index=7)]
    Complete = 100001,
    
    [EnumMember()]
    [OptionSetMetadata("Partial", Index=8)]
    Partial = 100002,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=9)]
    Canceled = 100003,
}

[DataContract()]
public enum Invoice_msdyn_OrderType {
    
    [EnumMember()]
    [OptionSetMetadata("Item based", Index=0)]
    Itembased = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Service-Maintenance Based", Index=1)]
    ServiceMaintenanceBased = 690970002,
}

[DataContract()]
public enum KbArticleState {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Unapproved", Index=1)]
    Unapproved = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Published", Index=2)]
    Published = 3,
}

[DataContract()]
public enum KbArticle_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Unapproved", Index=1)]
    Unapproved = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Published", Index=2)]
    Published = 3,
}

[DataContract()]
public enum LeadState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Qualified", Index=1)]
    Qualified = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Disqualified", Index=2)]
    Disqualified = 2,
}

[DataContract()]
public enum Lead_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_IndustryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Accounting", Index=0)]
    Accounting = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1)]
    AgricultureandNonpetrolNaturalResourceExtraction = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2)]
    BroadcastingPrintingandPublishing = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Brokers", Index=3)]
    Brokers = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Building Supply Retail", Index=4)]
    BuildingSupplyRetail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Business Services", Index=5)]
    BusinessServices = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Consulting", Index=6)]
    Consulting = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Consumer Services", Index=7)]
    ConsumerServices = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Design, Direction and Creative Management", Index=8)]
    DesignDirectionandCreativeManagement = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9)]
    DistributorsDispatchersandProcessors = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10)]
    DoctorsOfficesandClinics = 11,
    
    [EnumMember()]
    [OptionSetMetadata("Durable Manufacturing", Index=11)]
    DurableManufacturing = 12,
    
    [EnumMember()]
    [OptionSetMetadata("Eating and Drinking Places", Index=12)]
    EatingandDrinkingPlaces = 13,
    
    [EnumMember()]
    [OptionSetMetadata("Entertainment Retail", Index=13)]
    EntertainmentRetail = 14,
    
    [EnumMember()]
    [OptionSetMetadata("Equipment Rental and Leasing", Index=14)]
    EquipmentRentalandLeasing = 15,
    
    [EnumMember()]
    [OptionSetMetadata("Financial", Index=15)]
    Financial = 16,
    
    [EnumMember()]
    [OptionSetMetadata("Food and Tobacco Processing", Index=16)]
    FoodandTobaccoProcessing = 17,
    
    [EnumMember()]
    [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17)]
    InboundCapitalIntensiveProcessing = 18,
    
    [EnumMember()]
    [OptionSetMetadata("Inbound Repair and Services", Index=18)]
    InboundRepairandServices = 19,
    
    [EnumMember()]
    [OptionSetMetadata("Insurance", Index=19)]
    Insurance = 20,
    
    [EnumMember()]
    [OptionSetMetadata("Legal Services", Index=20)]
    LegalServices = 21,
    
    [EnumMember()]
    [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21)]
    NonDurableMerchandiseRetail = 22,
    
    [EnumMember()]
    [OptionSetMetadata("Outbound Consumer Service", Index=22)]
    OutboundConsumerService = 23,
    
    [EnumMember()]
    [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23)]
    PetrochemicalExtractionandDistribution = 24,
    
    [EnumMember()]
    [OptionSetMetadata("Service Retail", Index=24)]
    ServiceRetail = 25,
    
    [EnumMember()]
    [OptionSetMetadata("SIG Affiliations", Index=25)]
    SIGAffiliations = 26,
    
    [EnumMember()]
    [OptionSetMetadata("Social Services", Index=26)]
    SocialServices = 27,
    
    [EnumMember()]
    [OptionSetMetadata("Special Outbound Trade Contractors", Index=27)]
    SpecialOutboundTradeContractors = 28,
    
    [EnumMember()]
    [OptionSetMetadata("Specialty Realty", Index=28)]
    SpecialtyRealty = 29,
    
    [EnumMember()]
    [OptionSetMetadata("Transportation", Index=29)]
    Transportation = 30,
    
    [EnumMember()]
    [OptionSetMetadata("Utility Creation and Distribution", Index=30)]
    UtilityCreationandDistribution = 31,
    
    [EnumMember()]
    [OptionSetMetadata("Vehicle Retail", Index=31)]
    VehicleRetail = 32,
    
    [EnumMember()]
    [OptionSetMetadata("Wholesale", Index=32)]
    Wholesale = 33,
}

[DataContract()]
public enum Lead_LeadQualityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Hot", Index=0)]
    Hot = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Warm", Index=1)]
    Warm = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Cold", Index=2)]
    Cold = 3,
}

[DataContract()]
public enum Lead_LeadSourceCode {
    
    [EnumMember()]
    [OptionSetMetadata("Advertisement", Index=0)]
    Advertisement = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Employee Referral", Index=1)]
    EmployeeReferral = 2,
    
    [EnumMember()]
    [OptionSetMetadata("External Referral", Index=2)]
    ExternalReferral = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Partner", Index=3)]
    Partner = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Public Relations", Index=4)]
    PublicRelations = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Seminar", Index=5)]
    Seminar = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Trade Show", Index=6)]
    TradeShow = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Web", Index=7)]
    Web = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Word of Mouth", Index=8)]
    WordofMouth = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=9)]
    Other = 10,
}

[DataContract()]
public enum Lead_PreferredContactMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Any", Index=0)]
    Any = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=1)]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=2)]
    Phone = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=3)]
    Fax = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Mail", Index=4)]
    Mail = 5,
}

[DataContract()]
public enum Lead_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_SalesStageCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Lead_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=0)]
    New = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Contacted", Index=1)]
    Contacted = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Qualified", Index=2)]
    Qualified = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Lost", Index=3)]
    Lost = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Cannot Contact", Index=4)]
    CannotContact = 5,
    
    [EnumMember()]
    [OptionSetMetadata("No Longer Interested", Index=5)]
    NoLongerInterested = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=6)]
    Canceled = 7,
}

[DataContract()]
public enum Lead_msdyn_ordertype {
    
    [EnumMember()]
    [OptionSetMetadata("Item based", Index=0, Color="#0000ff")]
    Itembased = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Service-Maintenance Based", Index=1, Color="#0000ff")]
    ServiceMaintenanceBased = 690970002,
}

[DataContract()]
public enum OpportunityState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Won", Index=1)]
    Won = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Lost", Index=2)]
    Lost = 2,
}

[DataContract()]
public enum Opportunity_OpportunityRatingCode {
    
    [EnumMember()]
    [OptionSetMetadata("Hot", Index=0)]
    Hot = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Warm", Index=1)]
    Warm = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Cold", Index=2)]
    Cold = 3,
}

[DataContract()]
public enum Opportunity_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Opportunity_SalesStageCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Opportunity_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=0)]
    InProgress = 1,
    
    [EnumMember()]
    [OptionSetMetadata("On Hold", Index=1)]
    OnHold = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Won", Index=2)]
    Won = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3)]
    Canceled = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Out-Sold", Index=4)]
    OutSold = 5,
}

[DataContract()]
public enum Opportunity_TimeLine {
    
    [EnumMember()]
    [OptionSetMetadata("Immediate", Index=0)]
    Immediate = 0,
    
    [EnumMember()]
    [OptionSetMetadata("This Quarter", Index=1)]
    ThisQuarter = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Next Quarter", Index=2)]
    NextQuarter = 2,
    
    [EnumMember()]
    [OptionSetMetadata("This Year", Index=3)]
    ThisYear = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Not known", Index=4)]
    Notknown = 4,
}

[DataContract()]
public enum Opportunity_msdyn_OrderType {
    
    [EnumMember()]
    [OptionSetMetadata("Item based", Index=0, Color="")]
    Itembased = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Service-Maintenance Based", Index=1, Color="")]
    ServiceMaintenanceBased = 690970002,
}

[DataContract()]
public enum Opportunity_msdyn_forecastcategory {
    
    [EnumMember()]
    [OptionSetMetadata("Pipeline", Index=0, Color="#0000ff")]
    Pipeline = 100000001,
    
    [EnumMember()]
    [OptionSetMetadata("Best case", Index=1, Color="#0000ff")]
    Bestcase = 100000002,
    
    [EnumMember()]
    [OptionSetMetadata("Committed", Index=2, Color="#0000ff")]
    Committed = 100000003,
    
    [EnumMember()]
    [OptionSetMetadata("Omitted", Index=3, Color="#0000ff")]
    Omitted = 100000004,
    
    [EnumMember()]
    [OptionSetMetadata("Won", Index=4, Color="#0000ff")]
    Won = 100000005,
    
    [EnumMember()]
    [OptionSetMetadata("Lost", Index=5, Color="#0000ff")]
    Lost = 100000006,
}

[DataContract()]
public enum PhoneCallState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
}

[DataContract()]
public enum PhoneCall_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum PhoneCall_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0, Color="#3b79b7")]
    Open = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Made", Index=1, Color="#358717")]
    Made = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2, Color="#666666")]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Received", Index=3, Color="#358717")]
    Received = 4,
}

[DataContract()]
public enum ProcessSessionState {
    
    [EnumMember()]
    [OptionSetMetadata("Incomplete", Index=0)]
    Incomplete = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Complete", Index=1)]
    Complete = 1,
}

[DataContract()]
public enum ProcessSession_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Started", Index=0)]
    NotStarted = 1,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=1)]
    InProgress = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Paused", Index=2)]
    Paused = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=3)]
    Completed = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Failed", Index=5)]
    Failed = 6,
}

[DataContract()]
public enum ProductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Retired", Index=1)]
    Retired = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=2)]
    Draft = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Under Revision", Index=3)]
    UnderRevision = 3,
}

[DataContract()]
public enum Product_ProductStructure {
    
    [EnumMember()]
    [OptionSetMetadata("Product", Index=0)]
    Product = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Product Family", Index=1)]
    ProductFamily = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Product Bundle", Index=2)]
    ProductBundle = 3,
}

[DataContract()]
public enum Product_ProductTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Sales Inventory", Index=0)]
    SalesInventory = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Miscellaneous Charges", Index=1)]
    MiscellaneousCharges = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Services", Index=2)]
    Services = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Flat Fees", Index=3)]
    FlatFees = 4,
}

[DataContract()]
public enum Product_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=2)]
    Draft = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Retired", Index=1)]
    Retired = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Under Revision", Index=3)]
    UnderRevision = 3,
}

[DataContract()]
public enum QueueState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum Queue_EmailRouterAccessApproval {
    
    [EnumMember()]
    [OptionSetMetadata("Empty", Index=0)]
    Empty = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Approved", Index=1)]
    Approved = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Pending Approval", Index=2)]
    PendingApproval = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Rejected", Index=3)]
    Rejected = 3,
}

[DataContract()]
public enum Queue_IncomingEmailDeliveryMethod {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=1)]
    ServerSideSynchronizationorEmailRouter = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Forward Mailbox", Index=2)]
    ForwardMailbox = 3,
}

[DataContract()]
public enum Queue_IncomingEmailFilteringMethod {
    
    [EnumMember()]
    [OptionSetMetadata("All email messages", Index=0)]
    Allemailmessages = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Email messages in response to Dynamics 365 email", Index=1)]
    EmailmessagesinresponsetoDynamics365email = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Email messages from Dynamics 365 Leads, Contacts and Accounts", Index=2)]
    EmailmessagesfromDynamics365LeadsContactsandAccounts = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Email messages from Dynamics 365 records that are email enabled", Index=3)]
    EmailmessagesfromDynamics365recordsthatareemailenabled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("No email messages", Index=4)]
    Noemailmessages = 4,
}

[DataContract()]
public enum Queue_OutgoingEmailDeliveryMethod {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=1)]
    ServerSideSynchronizationorEmailRouter = 2,
}

[DataContract()]
public enum Queue_QueueTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Queue_QueueViewType {
    
    [EnumMember()]
    [OptionSetMetadata("Public", Index=0)]
    Public = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Private", Index=1)]
    Private = 1,
}

[DataContract()]
public enum Queue_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=1)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=0)]
    Inactive = 2,
}

[DataContract()]
public enum QuoteState {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=1)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Won", Index=2)]
    Won = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=3)]
    Closed = 3,
}

[DataContract()]
public enum Quote_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FOB", Index=0)]
    FOB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("No Charge", Index=1)]
    NoCharge = 2,
}

[DataContract()]
public enum Quote_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30", Index=0)]
    Net30 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("2% 10, Net 30", Index=1)]
    _210Net30 = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Net 45", Index=2)]
    Net45 = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60", Index=3)]
    Net60 = 4,
}

[DataContract()]
public enum Quote_ShipTo_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum Quote_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Airborne", Index=0)]
    Airborne = 1,
    
    [EnumMember()]
    [OptionSetMetadata("DHL", Index=1)]
    DHL = 2,
    
    [EnumMember()]
    [OptionSetMetadata("FedEx", Index=2)]
    FedEx = 3,
    
    [EnumMember()]
    [OptionSetMetadata("UPS", Index=3)]
    UPS = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Postal Mail", Index=4)]
    PostalMail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Full Load", Index=5)]
    FullLoad = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Will Call", Index=6)]
    WillCall = 7,
}

[DataContract()]
public enum Quote_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=6)]
    InProgress_2 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=0)]
    InProgress = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=1)]
    Open = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Won", Index=2)]
    Won = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Lost", Index=3)]
    Lost = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Revised", Index=5)]
    Revised = 7,
}

[DataContract()]
public enum Quote_msdyn_OrderType {
    
    [EnumMember()]
    [OptionSetMetadata("Item based", Index=0, Color="")]
    Itembased = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Service-Maintenance Based", Index=1, Color="")]
    ServiceMaintenanceBased = 690970002,
}

[DataContract()]
public enum RecurringAppointmentMasterState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum RecurringAppointmentMaster_ExpansionStateCode {
    
    [EnumMember()]
    [OptionSetMetadata("Unexpanded", Index=0)]
    Unexpanded = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Partial", Index=1)]
    Partial = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Full", Index=2)]
    Full = 2,
}

[DataContract()]
public enum RecurringAppointmentMaster_Instance {
    
    [EnumMember()]
    [OptionSetMetadata("First", Index=0)]
    First = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Second", Index=1)]
    Second = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Third", Index=2)]
    Third = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Fourth", Index=3)]
    Fourth = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Last", Index=4)]
    Last = 5,
}

[DataContract()]
public enum RecurringAppointmentMaster_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum RecurringAppointmentMaster_PatternEndType {
    
    [EnumMember()]
    [OptionSetMetadata("No End Date", Index=0)]
    NoEndDate = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Occurrences", Index=1)]
    Occurrences = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Pattern End Date", Index=2)]
    PatternEndDate = 3,
}

[DataContract()]
public enum RecurringAppointmentMaster_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum RecurringAppointmentMaster_RecurrencePatternType {
    
    [EnumMember()]
    [OptionSetMetadata("Daily", Index=0)]
    Daily = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Weekly", Index=1)]
    Weekly = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Monthly", Index=2)]
    Monthly = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Yearly", Index=3)]
    Yearly = 3,
}

[DataContract()]
public enum RecurringAppointmentMaster_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Free", Index=0)]
    Free = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Tentative", Index=1)]
    Tentative = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=2)]
    Completed = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3)]
    Canceled = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Busy", Index=4)]
    Busy = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Out of Office", Index=5)]
    OutofOffice = 6,
}

[DataContract()]
public enum SalesLiterature_LiteratureTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Presentation", Index=0)]
    Presentation = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Product Sheet", Index=1)]
    ProductSheet = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Policies And Procedures", Index=2)]
    PoliciesAndProcedures = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Sales Literature", Index=3)]
    SalesLiterature = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Spreadsheets", Index=4)]
    Spreadsheets = 4,
    
    [EnumMember()]
    [OptionSetMetadata("News", Index=5)]
    News = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Bulletins", Index=6)]
    Bulletins = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Price Sheets", Index=7)]
    PriceSheets = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Manuals", Index=8)]
    Manuals = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Company Background", Index=9)]
    CompanyBackground = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Marketing Collateral", Index=10)]
    MarketingCollateral = 100001,
}

[DataContract()]
public enum SalesOrderState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Submitted", Index=1)]
    Submitted = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Fulfilled", Index=3)]
    Fulfilled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Invoiced", Index=4)]
    Invoiced = 4,
}

[DataContract()]
public enum SalesOrder_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FOB", Index=0)]
    FOB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("No Charge", Index=1)]
    NoCharge = 2,
}

[DataContract()]
public enum SalesOrder_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30", Index=0)]
    Net30 = 1,
    
    [EnumMember()]
    [OptionSetMetadata("2% 10, Net 30", Index=1)]
    _210Net30 = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Net 45", Index=2)]
    Net45 = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60", Index=3)]
    Net60 = 4,
}

[DataContract()]
public enum SalesOrder_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SalesOrder_ShipTo_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SalesOrder_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Airborne", Index=0)]
    Airborne = 1,
    
    [EnumMember()]
    [OptionSetMetadata("DHL", Index=1)]
    DHL = 2,
    
    [EnumMember()]
    [OptionSetMetadata("FedEx", Index=2)]
    FedEx = 3,
    
    [EnumMember()]
    [OptionSetMetadata("UPS", Index=3)]
    UPS = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Postal Mail", Index=4)]
    PostalMail = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Full Load", Index=5)]
    FullLoad = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Will Call", Index=6)]
    WillCall = 7,
}

[DataContract()]
public enum SalesOrder_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=0, Color="#0000ff")]
    New = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Pending", Index=1, Color="#0000ff")]
    Pending = 2,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=3, Color="#0000ff")]
    InProgress = 3,
    
    [EnumMember()]
    [OptionSetMetadata("No Money", Index=4, Color="#0000ff")]
    NoMoney = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Complete", Index=5, Color="#0000ff")]
    Complete = 100001,
    
    [EnumMember()]
    [OptionSetMetadata("Partial", Index=6, Color="#0000ff")]
    Partial = 100002,
    
    [EnumMember()]
    [OptionSetMetadata("Invoiced", Index=7, Color="#0000ff")]
    Invoiced = 100003,
    
    [EnumMember()]
    [OptionSetMetadata("On hold", Index=2, Color="#0000ff")]
    Onhold = 690970000,
}

[DataContract()]
public enum SalesOrder_msdyn_ordertype {
    
    [EnumMember()]
    [OptionSetMetadata("Item based", Index=0, Color="")]
    Itembased = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Service-Maintenance Based", Index=1, Color="")]
    ServiceMaintenanceBased = 690970002,
}

[DataContract()]
public enum ServiceAppointmentState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=1)]
    Closed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum ServiceAppointment_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum ServiceAppointment_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum ServiceAppointment_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Requested", Index=0, Color="#849CE7")]
    Requested = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Tentative", Index=1, Color="#CCCCCC")]
    Tentative = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Pending", Index=2, Color="#A5CEC6")]
    Pending = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Reserved", Index=3, Color="#848284")]
    Reserved = 4,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=4, Color="#669999")]
    InProgress = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Arrived", Index=5, Color="#C6A5F7")]
    Arrived = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=6, Color="#A5DE63")]
    Completed = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=7, Color="#FF9484")]
    Canceled = 9,
    
    [EnumMember()]
    [OptionSetMetadata("No Show", Index=8, Color="#FFB573")]
    NoShow = 10,
}

[DataContract()]
public enum SyncErrorState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Resolved", Index=1)]
    Resolved = 1,
}

[DataContract()]
public enum SyncError_ErrorType {
    
    [EnumMember()]
    [OptionSetMetadata("Conflict", Index=0)]
    Conflict = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Record not found", Index=1)]
    Recordnotfound = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Record already exists", Index=2)]
    Recordalreadyexists = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Others", Index=3)]
    Others = 3,
}

[DataContract()]
public enum SyncError_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Fixed", Index=1)]
    Fixed = 1,
}

[DataContract()]
public enum SystemUser_AccessMode {
    
    [EnumMember()]
    [OptionSetMetadata("Read-Write", Index=0)]
    ReadWrite = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Administrative", Index=1)]
    Administrative = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Read", Index=2)]
    Read = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Support User", Index=3)]
    SupportUser = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Non-interactive", Index=4)]
    Noninteractive = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Delegated Admin", Index=5)]
    DelegatedAdmin = 5,
}

[DataContract()]
public enum SystemUser_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_CALType {
    
    [EnumMember()]
    [OptionSetMetadata("Professional", Index=0)]
    Professional = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Administrative", Index=1)]
    Administrative = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Basic", Index=2)]
    Basic = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Device Professional", Index=3)]
    DeviceProfessional = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Device Basic", Index=4)]
    DeviceBasic = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Essential", Index=5)]
    Essential = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Device Essential", Index=6)]
    DeviceEssential = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Enterprise", Index=7)]
    Enterprise = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Device Enterprise", Index=8)]
    DeviceEnterprise = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Sales", Index=9)]
    Sales = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Service", Index=10)]
    Service = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Field Service", Index=11)]
    FieldService = 11,
    
    [EnumMember()]
    [OptionSetMetadata("Project Service", Index=12)]
    ProjectService = 12,
}

[DataContract()]
public enum SystemUser_EmailRouterAccessApproval {
    
    [EnumMember()]
    [OptionSetMetadata("Empty", Index=0)]
    Empty = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Approved", Index=1)]
    Approved = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Pending Approval", Index=2)]
    PendingApproval = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Rejected", Index=3)]
    Rejected = 3,
}

[DataContract()]
public enum SystemUser_IncomingEmailDeliveryMethod {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
    MicrosoftDynamics365forOutlook = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
    ServerSideSynchronizationorEmailRouter = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Forward Mailbox", Index=3)]
    ForwardMailbox = 3,
}

[DataContract()]
public enum SystemUser_InviteStatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Not Sent", Index=0)]
    InvitationNotSent = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Invited", Index=1)]
    Invited = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Near Expired", Index=2)]
    InvitationNearExpired = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Expired", Index=3)]
    InvitationExpired = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Accepted", Index=4)]
    InvitationAccepted = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Rejected", Index=5)]
    InvitationRejected = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Invitation Revoked", Index=6)]
    InvitationRevoked = 6,
}

[DataContract()]
public enum SystemUser_OutgoingEmailDeliveryMethod {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
    MicrosoftDynamics365forOutlook = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
    ServerSideSynchronizationorEmailRouter = 2,
}

[DataContract()]
public enum SystemUser_PreferredAddressCode {
    
    [EnumMember()]
    [OptionSetMetadata("Mailing Address", Index=0)]
    MailingAddress = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Other Address", Index=1)]
    OtherAddress = 2,
}

[DataContract()]
public enum SystemUser_PreferredEmailCode {
    
    [EnumMember()]
    [OptionSetMetadata("Default Value", Index=0)]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_PreferredPhoneCode {
    
    [EnumMember()]
    [OptionSetMetadata("Main Phone", Index=0)]
    MainPhone = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Other Phone", Index=1)]
    OtherPhone = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Home Phone", Index=2)]
    HomePhone = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Mobile Phone", Index=3)]
    MobilePhone = 4,
}

[DataContract()]
public enum TaskState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
}

[DataContract()]
public enum Task_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum Task_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Started", Index=0)]
    NotStarted = 2,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=1)]
    InProgress = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Waiting on someone else", Index=2)]
    Waitingonsomeoneelse = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=3)]
    Completed = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=4)]
    Canceled = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Deferred", Index=5)]
    Deferred = 7,
}

[DataContract()]
public enum msdyn_FunctionalLocationState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_FunctionalLocation_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_FunctionalLocation_ts_Class {
    
    [EnumMember()]
    [OptionSetMetadata("International", Index=0, Color="#0000ff")]
    International = 717750000,
    
    [EnumMember()]
    [OptionSetMetadata("1", Index=1, Color="#0000ff")]
    _1 = 717750001,
    
    [EnumMember()]
    [OptionSetMetadata("2", Index=2, Color="#0000ff")]
    _2 = 717750002,
    
    [EnumMember()]
    [OptionSetMetadata("3", Index=3, Color="#0000ff")]
    _3 = 717750003,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=4, Color="#0000ff")]
    Other = 717750004,
}

[DataContract()]
public enum msdyn_agreementState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_agreement_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_agreementbookingproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_agreementbookingproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_agreementbookingserviceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_agreementbookingservice_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_agreementinvoiceproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_agreementinvoiceproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_bookingalertState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum msdyn_bookingalert_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum msdyn_bookingalert_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum msdyn_bookingalert_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 4,
}

[DataContract()]
public enum msdyn_bookingjournalState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_bookingjournal_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_customerassetState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_customerasset_msdyn_RegistrationStatus {
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=0, Description="Adefaultvaluethatsusedwhentheassetsregistrationstatusisunknown", Color="#0000ff")]
    Unknown = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Unregistered", Index=1, Description="NoneofthedevicesconnectedtotheassetareregisteredwiththeIoTprovider", Color="#0000ff")]
    Unregistered = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=2, Description="AtleastoneoftheconnecteddevicesofthisassetisbeingregisteredwiththeIoTprovider", Color="#0000ff")]
    InProgress = 192350002,
    
    [EnumMember()]
    [OptionSetMetadata("Registered", Index=3, Description="DevicesconnectedtothisassetaresuccessfullyregisteredwiththeIoTprovider", Color="#0000ff")]
    Registered = 192350003,
    
    [EnumMember()]
    [OptionSetMetadata("Error", Index=4, Description="AnerroroccurredwhileregisteringoneofthedevicesconnectedtotheassetwiththeIoTprovid" +
        "er", Color="#0000ff")]
    Error = 192350004,
}

[DataContract()]
public enum msdyn_customerasset_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_customerassetcategoryState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_customerassetcategory_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_incidenttypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_incidenttype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_incidenttypeproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_incidenttypeproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_incidenttypeserviceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_incidenttypeservice_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_incidenttypeservicetaskState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_incidenttypeservicetask_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_orderinvoicingproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_orderinvoicingproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_propertyassetassociationState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_propertyassetassociation_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_propertylogState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_propertylog_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_purchaseorderState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_purchaseorder_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_purchaseorderproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_purchaseorderproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_quoteinvoicingproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_quoteinvoicingproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_rmaState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_rma_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_servicetasktypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_servicetasktype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_timeoffrequestState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_timeoffrequest_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_workorderState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workorder_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0, Color="#0000ff")]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1, Color="#0000ff")]
    Inactive = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=2, Color="#0000ff")]
    Closed = 918640000,
}

[DataContract()]
public enum msdyn_workorderincidentState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workorderincident_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_workorderproductState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workorderproduct_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_workorderserviceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workorderservice_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_workorderservicetaskState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workorderservicetask_msdyn_InspectionResult {
    
    [EnumMember()]
    [OptionSetMetadata("Pass", Index=0, Color="#0000ff")]
    Pass = 100000000,
    
    [EnumMember()]
    [OptionSetMetadata("Fail", Index=1, Color="#0000ff")]
    Fail = 100000001,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid", Index=2, Color="#0000ff")]
    Invalid = 100000002,
}

[DataContract()]
public enum msdyn_workorderservicetask_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0, Color="#0000ff")]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=4, Color="#0000ff")]
    Inactive = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Complete", Index=1, Color="#0000ff")]
    Complete = 918640002,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=5, Color="#0000ff")]
    Closed = 918640003,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=2, Color="#0000ff")]
    InProgress = 918640004,
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=3, Color="#0000ff")]
    New = 918640005,
}

[DataContract()]
public enum msdyn_workordersubstatusState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workordersubstatus_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_workordertypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum msdyn_workordertype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msfp_alertState {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 3,
}

[DataContract()]
public enum msfp_alert_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Recurring", Index=0)]
    NotRecurring = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Master", Index=1)]
    RecurringMaster = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Instance", Index=2)]
    RecurringInstance = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Exception", Index=3)]
    RecurringException = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Future Exception", Index=4)]
    RecurringFutureException = 4,
}

[DataContract()]
public enum msfp_alert_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum msfp_alert_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Open", Index=0)]
    Open = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Completed", Index=1)]
    Completed = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Scheduled", Index=3)]
    Scheduled = 4,
}

[DataContract()]
public enum ovs_AirCarrierState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_AirCarrier_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_FindingState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_Finding_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_Finding_ts_EnforcementAction {
    
    [EnumMember()]
    [OptionSetMetadata("No Enforcement", Index=0, Color="#0000ff")]
    NoEnforcement = 717750000,
    
    [EnumMember()]
    [OptionSetMetadata("Verbal Warning", Index=1, Color="#0000ff")]
    VerbalWarning = 717750001,
    
    [EnumMember()]
    [OptionSetMetadata("Written Warning", Index=2, Color="#0000ff")]
    WrittenWarning = 717750002,
    
    [EnumMember()]
    [OptionSetMetadata("AMP", Index=3, Color="#0000ff")]
    AMP = 717750003,
    
    [EnumMember()]
    [OptionSetMetadata("Suspension of CAD", Index=4, Color="#0000ff")]
    SuspensionofCAD = 717750004,
    
    [EnumMember()]
    [OptionSetMetadata("Cancelation of CAD", Index=5, Color="#0000ff")]
    CancelationofCAD = 717750005,
}

[DataContract()]
public enum ovs_QuestionnaireState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_Questionnaire_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_SiteTypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_SiteType_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_TYRationalState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_TYRational_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_lobState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_lob_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_operationState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_operation_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_operationtypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_operationtype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ovs_workorderservicetaskprovisionState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ovs_workorderservicetaskprovision_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ppp_TravellerState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ppp_Traveller_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum qm_rclegislationState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum qm_rclegislation_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum qm_tylegislationcharacteristicState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum qm_tylegislationcharacteristic_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum qm_tylegislationsourceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum qm_tylegislationsource_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum qm_tylegislationtypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum qm_tylegislationtype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum tc_ProvinceState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum tc_Province_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum tc_TCFiscalPeriodState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum tc_TCFiscalPeriod_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum tc_TCFiscalQuarterState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum tc_TCFiscalQuarter_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum tc_TCFiscalYearState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum tc_TCFiscalYear_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum tc_TCMonthState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum tc_TCMonth_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ts_ProvisionCategoryState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_ProvisionCategory_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ts_questionnaireversionState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_questionnaireversion_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ts_requestState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_request_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0, Color="#0000ff")]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=1, Color="#0000ff")]
    Closed = 2,
}

[DataContract()]
public enum ts_tradenameState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_tradename_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ts_workorderactivitytypeState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_workorderactivitytype_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum ts_workordercreationwizardState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 1,
}

[DataContract()]
public enum ts_workordercreationwizard_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=0)]
    Active = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive", Index=1)]
    Inactive = 2,
}

[DataContract()]
public enum msdyn_travelchargetype {
    
    [EnumMember()]
    [OptionSetMetadata("Hourly", Index=0)]
    Hourly = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Mileage", Index=1)]
    Mileage = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Fixed", Index=2)]
    Fixed = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=3)]
    None = 690970003,
}

[DataContract()]
public enum activitypointer_activitytypecode {
    
    [EnumMember()]
    [OptionSetMetadata("Appointment", Index=4)]
    Appointment = 4201,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=2)]
    Email = 4202,
    
    [EnumMember()]
    [OptionSetMetadata("Fax", Index=0)]
    Fax = 4204,
    
    [EnumMember()]
    [OptionSetMetadata("Case Resolution", Index=10)]
    CaseResolution = 4206,
    
    [EnumMember()]
    [OptionSetMetadata("Letter", Index=3)]
    Letter = 4207,
    
    [EnumMember()]
    [OptionSetMetadata("Opportunity Close", Index=12)]
    OpportunityClose = 4208,
    
    [EnumMember()]
    [OptionSetMetadata("Order Close", Index=13)]
    OrderClose = 4209,
    
    [EnumMember()]
    [OptionSetMetadata("Phone Call", Index=1)]
    PhoneCall = 4210,
    
    [EnumMember()]
    [OptionSetMetadata("Quote Close", Index=14)]
    QuoteClose = 4211,
    
    [EnumMember()]
    [OptionSetMetadata("Task", Index=5)]
    Task = 4212,
    
    [EnumMember()]
    [OptionSetMetadata("Service Activity", Index=11)]
    ServiceActivity = 4214,
    
    [EnumMember()]
    [OptionSetMetadata("Recurring Appointment", Index=6)]
    RecurringAppointment = 4251,
    
    [EnumMember()]
    [OptionSetMetadata("Campaign Response", Index=9)]
    CampaignResponse = 4401,
    
    [EnumMember()]
    [OptionSetMetadata("Campaign Activity", Index=8)]
    CampaignActivity = 4402,
    
    [EnumMember()]
    [OptionSetMetadata("Quick Campaign", Index=7)]
    QuickCampaign = 4406,
    
    [EnumMember()]
    [OptionSetMetadata("Customer Voice alert", Index=15)]
    CustomerVoicealert = 10235,
    
    [EnumMember()]
    [OptionSetMetadata("Customer Voice survey invite", Index=16)]
    CustomerVoicesurveyinvite = 10245,
    
    [EnumMember()]
    [OptionSetMetadata("Customer Voice survey response", Index=17)]
    CustomerVoicesurveyresponse = 10247,
    
    [EnumMember()]
    [OptionSetMetadata("Booking Alert", Index=18)]
    BookingAlert = 10256,
}

[DataContract()]
public enum activitypointer_deliveryprioritycode {
    
    [EnumMember()]
    [OptionSetMetadata("Low", Index=0)]
    Low = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normal", Index=1)]
    Normal = 1,
    
    [EnumMember()]
    [OptionSetMetadata("High", Index=2)]
    High = 2,
}

[DataContract()]
public enum socialprofile_community {
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=2, Description="Otherdefault")]
    Other = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Facebook", Index=0, Description="Facebookitem")]
    Facebook = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Twitter", Index=1, Description="Twitter")]
    Twitter = 2,
}

[DataContract()]
public enum msdyn_crewstrategy {
    
    [EnumMember()]
    [OptionSetMetadata("Cascade and Accept Cascade Completely (Not Recommended)", Index=2, Description="CascadeandAcceptCascadeCompletelyNotRecommended", Color="#0000ff")]
    CascadeandAcceptCascadeCompletelyNotRecommended = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Crew Leader Management", Index=0, Description="CrewLeaderManagement", Color="#0000ff")]
    CrewLeaderManagement = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("Crew Member Self-Management", Index=1, Description="CrewMemberSelfManagement", Color="#0000ff")]
    CrewMemberSelfManagement = 192350002,
}

[DataContract()]
public enum msdyn_enableappointmentsoption {
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=0, Color="#0000ff")]
    No = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=1, Color="#0000ff")]
    Yes = 192350001,
}

[DataContract()]
public enum msdyn_generictype {
    
    [EnumMember()]
    [OptionSetMetadata("Service Center", Index=0, Color="#0000ff")]
    ServiceCenter = 690970000,
}

[DataContract()]
public enum msdyn_pooltype {
    
    [EnumMember()]
    [OptionSetMetadata("Account", Index=0, Color="#0000ff")]
    Account = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Contact", Index=1, Color="#0000ff")]
    Contact = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("User", Index=2, Color="#0000ff")]
    User = 192350002,
    
    [EnumMember()]
    [OptionSetMetadata("Equipment", Index=3, Color="#0000ff")]
    Equipment = 192350003,
    
    [EnumMember()]
    [OptionSetMetadata("Facility", Index=4, Color="#0000ff")]
    Facility = 192350004,
}

[DataContract()]
public enum msdyn_workstartlocationtype {
    
    [EnumMember()]
    [OptionSetMetadata("Resource Address", Index=1, Color="")]
    ResourceAddress = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Organizational Unit Address", Index=2, Color="")]
    OrganizationalUnitAddress = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Location Agnostic", Index=0, Color="#0000ff")]
    LocationAgnostic = 690970002,
}

[DataContract()]
public enum msdyn_crewmembertype {
    
    [EnumMember()]
    [OptionSetMetadata("Leader", Index=0, Description="CrewsLeader", Color="#0000ff")]
    Leader = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Member", Index=1, Description="Crewsmember", Color="#0000ff")]
    Member = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=2, Color="#0000ff")]
    None = 192350002,
}

[DataContract()]
public enum msdyn_quicknote_type {
    
    [EnumMember()]
    [OptionSetMetadata("none", Index=0)]
    none = 100000000,
    
    [EnumMember()]
    [OptionSetMetadata("text", Index=1)]
    text = 100000001,
    
    [EnumMember()]
    [OptionSetMetadata("photo", Index=2)]
    photo = 100000002,
    
    [EnumMember()]
    [OptionSetMetadata("video", Index=3)]
    video = 100000003,
    
    [EnumMember()]
    [OptionSetMetadata("audio", Index=4)]
    audio = 100000004,
    
    [EnumMember()]
    [OptionSetMetadata("file", Index=5)]
    file = 100000005,
}

[DataContract()]
public enum msdyn_resourceschedulesource {
    
    [EnumMember()]
    [OptionSetMetadata("Resource Scheduling Optimization", Index=0)]
    ResourceSchedulingOptimization = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Schedule Board", Index=2)]
    ScheduleBoard = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Mobile", Index=3)]
    Mobile = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Manual", Index=4)]
    Manual = 690970003,
    
    [EnumMember()]
    [OptionSetMetadata("Schedule Assistant", Index=5)]
    ScheduleAssistant = 690970004,
    
    [EnumMember()]
    [OptionSetMetadata("System - Agreement Schedule", Index=1)]
    SystemAgreementSchedule = 690970005,
}

[DataContract()]
public enum msdyn_traveltimetype {
    
    [EnumMember()]
    [OptionSetMetadata("Bing Maps without historical traffic", Index=0, Color="#0000ff")]
    BingMapswithouthistoricaltraffic = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Bing Maps with historical traffic", Index=1, Color="#0000ff")]
    BingMapswithhistoricaltraffic = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("Custom Map Provider", Index=2, Color="#0000ff")]
    CustomMapProvider = 192350002,
    
    [EnumMember()]
    [OptionSetMetadata("Approximate", Index=3, Color="#0000ff")]
    Approximate = 192350003,
}

[DataContract()]
public enum msdyn_worklocation {
    
    [EnumMember()]
    [OptionSetMetadata("Onsite", Index=0, Color="")]
    Onsite = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Facility", Index=1, Color="")]
    Facility = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Location Agnostic", Index=2, Color="#0000ff")]
    LocationAgnostic = 690970002,
}

[DataContract()]
public enum entitytype {
    
    [EnumMember()]
    [OptionSetMetadata("Case", Index=1, Color="#0000ff")]
    Case = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Work Order", Index=0, Description="WorkOrder", Color="#0000ff")]
    WorkOrder = 192350000,
}

[DataContract()]
public enum msdyn_entitlementappliesto {
    
    [EnumMember()]
    [OptionSetMetadata("Work Order Products", Index=0, Color="#0000ff")]
    WorkOrderProducts = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Work Order Services", Index=1, Color="#0000ff")]
    WorkOrderServices = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Both Work Order Products & Services", Index=2, Color="#0000ff")]
    BothWorkOrderProductsServices = 690970002,
}

[DataContract()]
public enum incident_caseorigincode {
    
    [EnumMember()]
    [OptionSetMetadata("Phone", Index=0, Color="#FCD116")]
    Phone = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Email", Index=1, Color="#00B294")]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Web", Index=2, Color="#FF8C00")]
    Web = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facebook", Index=3, Color="#0086FF")]
    Facebook = 2483,
    
    [EnumMember()]
    [OptionSetMetadata("Twitter", Index=4, Color="#0086FF")]
    Twitter = 3986,
    
    [EnumMember()]
    [OptionSetMetadata("IoT", Index=5, Color="#0000ff")]
    IoT = 700610000,
}

[DataContract()]
public enum servicestage {
    
    [EnumMember()]
    [OptionSetMetadata("Identify", Index=0)]
    Identify = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Research", Index=1)]
    Research = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Resolve", Index=2)]
    Resolve = 2,
}

[DataContract()]
public enum socialactivity_postmessagetype {
    
    [EnumMember()]
    [OptionSetMetadata("Public Message", Index=0)]
    PublicMessage = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Private Message", Index=1)]
    PrivateMessage = 1,
}

[DataContract()]
public enum qooi_pricingerrorcode {
    
    [EnumMember()]
    [OptionSetMetadata("None", Index=0)]
    None = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Detail Error", Index=1)]
    DetailError = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Price Level", Index=2)]
    MissingPriceLevel = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive Price Level", Index=3)]
    InactivePriceLevel = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Quantity", Index=4)]
    MissingQuantity = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Unit Price", Index=5)]
    MissingUnitPrice = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Product", Index=6)]
    MissingProduct = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Product", Index=7)]
    InvalidProduct = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Pricing Code", Index=8)]
    MissingPricingCode = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Pricing Code", Index=9)]
    InvalidPricingCode = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Missing UOM", Index=10)]
    MissingUOM = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Product Not In Price Level", Index=11)]
    ProductNotInPriceLevel = 11,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Price Level Amount", Index=12)]
    MissingPriceLevelAmount = 12,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Price Level Percentage", Index=13)]
    MissingPriceLevelPercentage = 13,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Price", Index=14)]
    MissingPrice = 14,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Current Cost", Index=15)]
    MissingCurrentCost = 15,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Standard Cost", Index=16)]
    MissingStandardCost = 16,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Price Level Amount", Index=17)]
    InvalidPriceLevelAmount = 17,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Price Level Percentage", Index=18)]
    InvalidPriceLevelPercentage = 18,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Price", Index=19)]
    InvalidPrice = 19,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Current Cost", Index=20)]
    InvalidCurrentCost = 20,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Standard Cost", Index=21)]
    InvalidStandardCost = 21,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Rounding Policy", Index=22)]
    InvalidRoundingPolicy = 22,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Rounding Option", Index=23)]
    InvalidRoundingOption = 23,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Rounding Amount", Index=24)]
    InvalidRoundingAmount = 24,
    
    [EnumMember()]
    [OptionSetMetadata("Price Calculation Error", Index=25)]
    PriceCalculationError = 25,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Discount Type", Index=26)]
    InvalidDiscountType = 26,
    
    [EnumMember()]
    [OptionSetMetadata("Discount Type Invalid State", Index=27)]
    DiscountTypeInvalidState = 27,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Discount", Index=28)]
    InvalidDiscount = 28,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Quantity", Index=29)]
    InvalidQuantity = 29,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Pricing Precision", Index=30)]
    InvalidPricingPrecision = 30,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Product Default UOM", Index=31)]
    MissingProductDefaultUOM = 31,
    
    [EnumMember()]
    [OptionSetMetadata("Missing Product UOM Schedule ", Index=32)]
    MissingProductUOMSchedule = 32,
    
    [EnumMember()]
    [OptionSetMetadata("Inactive Discount Type", Index=33)]
    InactiveDiscountType = 33,
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Price Level Currency", Index=34)]
    InvalidPriceLevelCurrency = 34,
    
    [EnumMember()]
    [OptionSetMetadata("Price Attribute Out Of Range", Index=35)]
    PriceAttributeOutOfRange = 35,
    
    [EnumMember()]
    [OptionSetMetadata("Base Currency Attribute Overflow", Index=36)]
    BaseCurrencyAttributeOverflow = 36,
    
    [EnumMember()]
    [OptionSetMetadata("Base Currency Attribute Underflow", Index=37)]
    BaseCurrencyAttributeUnderflow = 37,
    
    [EnumMember()]
    [OptionSetMetadata("Transaction currency is not set for the product price list item", Index=38)]
    Transactioncurrencyisnotsetfortheproductpricelistitem = 38,
}

[DataContract()]
public enum qooi_skippricecalculation {
    
    [EnumMember()]
    [OptionSetMetadata("DoPriceCalcAlways", Index=0)]
    DoPriceCalcAlways = 0,
    
    [EnumMember()]
    [OptionSetMetadata("SkipPriceCalcOnRetrieve", Index=1)]
    SkipPriceCalcOnRetrieve = 1,
}

[DataContract()]
public enum budgetstatus {
    
    [EnumMember()]
    [OptionSetMetadata("No Committed Budget", Index=0)]
    NoCommittedBudget = 0,
    
    [EnumMember()]
    [OptionSetMetadata("May Buy", Index=1)]
    MayBuy = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Can Buy", Index=2)]
    CanBuy = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Will Buy", Index=3)]
    WillBuy = 3,
}

[DataContract()]
public enum initialcommunication {
    
    [EnumMember()]
    [OptionSetMetadata("Contacted", Index=0)]
    Contacted = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Not Contacted", Index=1)]
    NotContacted = 1,
}

[DataContract()]
public enum lead_salesstage {
    
    [EnumMember()]
    [OptionSetMetadata("Qualify", Index=0)]
    Qualify = 0,
}

[DataContract()]
public enum need {
    
    [EnumMember()]
    [OptionSetMetadata("Must have", Index=0)]
    Musthave = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Should have", Index=1)]
    Shouldhave = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Good to have", Index=2)]
    Goodtohave = 2,
    
    [EnumMember()]
    [OptionSetMetadata("No need", Index=3)]
    Noneed = 3,
}

[DataContract()]
public enum purchaseprocess {
    
    [EnumMember()]
    [OptionSetMetadata("Individual", Index=0)]
    Individual = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Committee", Index=1)]
    Committee = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=2)]
    Unknown = 2,
}

[DataContract()]
public enum purchasetimeframe {
    
    [EnumMember()]
    [OptionSetMetadata("Immediate", Index=0)]
    Immediate = 0,
    
    [EnumMember()]
    [OptionSetMetadata("This Quarter", Index=1)]
    ThisQuarter = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Next Quarter", Index=2)]
    NextQuarter = 2,
    
    [EnumMember()]
    [OptionSetMetadata("This Year", Index=3)]
    ThisYear = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=4)]
    Unknown = 4,
}

[DataContract()]
public enum opportunity_salesstage {
    
    [EnumMember()]
    [OptionSetMetadata("Qualify", Index=0)]
    Qualify = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Develop", Index=1)]
    Develop = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Propose", Index=2)]
    Propose = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Close", Index=3)]
    Close = 3,
}

[DataContract()]
public enum msdyn_fieldserviceproducttype {
    
    [EnumMember()]
    [OptionSetMetadata("Inventory", Index=0)]
    Inventory = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Non-Inventory", Index=1)]
    NonInventory = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Service", Index=2)]
    Service = 690970002,
}

[DataContract()]
public enum recurrencerule_monthofyear {
    
    [EnumMember()]
    [OptionSetMetadata("Invalid Month Of Year", Index=0)]
    InvalidMonthOfYear = 0,
    
    [EnumMember()]
    [OptionSetMetadata("January", Index=1)]
    January = 1,
    
    [EnumMember()]
    [OptionSetMetadata("February", Index=2)]
    February = 2,
    
    [EnumMember()]
    [OptionSetMetadata("March", Index=3)]
    March = 3,
    
    [EnumMember()]
    [OptionSetMetadata("April", Index=4)]
    April = 4,
    
    [EnumMember()]
    [OptionSetMetadata("May", Index=5)]
    May = 5,
    
    [EnumMember()]
    [OptionSetMetadata("June", Index=6)]
    June = 6,
    
    [EnumMember()]
    [OptionSetMetadata("July", Index=7)]
    July = 7,
    
    [EnumMember()]
    [OptionSetMetadata("August", Index=8)]
    August = 8,
    
    [EnumMember()]
    [OptionSetMetadata("September", Index=9)]
    September = 9,
    
    [EnumMember()]
    [OptionSetMetadata("October", Index=10)]
    October = 10,
    
    [EnumMember()]
    [OptionSetMetadata("November", Index=11)]
    November = 11,
    
    [EnumMember()]
    [OptionSetMetadata("December", Index=12)]
    December = 12,
}

[DataContract()]
public enum msdyn_agreementsystemstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Estimate", Index=0)]
    Estimate = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=1)]
    Active = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Expired", Index=2)]
    Expired = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=3)]
    Canceled = 690970003,
}

[DataContract()]
public enum msdyn_bookingjournaltype {
    
    [EnumMember()]
    [OptionSetMetadata("Working Hours", Index=0)]
    WorkingHours = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Break", Index=1)]
    Break = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Travel", Index=2)]
    Travel = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Overtime", Index=3)]
    Overtime = 690970003,
    
    [EnumMember()]
    [OptionSetMetadata("Business Closure", Index=4)]
    BusinessClosure = 690970004,
}

[DataContract()]
public enum ts_assetcategorytype {
    
    [EnumMember()]
    [OptionSetMetadata("Operation", Index=0)]
    Operation = 717750000,
    
    [EnumMember()]
    [OptionSetMetadata("Physical", Index=1)]
    Physical = 717750001,
}

[DataContract()]
public enum msdyn_poapprovalstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Approved", Index=0)]
    Approved = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Rejected", Index=1)]
    Rejected = 690970001,
}

[DataContract()]
public enum msdyn_poshiptotype {
    
    [EnumMember()]
    [OptionSetMetadata("Site", Index=0)]
    Site = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Business Unit", Index=1)]
    BusinessUnit = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Service Account", Index=2)]
    ServiceAccount = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=3)]
    Other = 690970003,
}

[DataContract()]
public enum msdyn_posystemstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=0)]
    Draft = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Submitted", Index=1)]
    Submitted = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Products Received", Index=3)]
    ProductsReceived = 690970003,
    
    [EnumMember()]
    [OptionSetMetadata("Billed", Index=4)]
    Billed = 690970004,
}

[DataContract()]
public enum msdyn_purchaseorderproductstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Pending", Index=0)]
    Pending = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Received", Index=1)]
    Received = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=2)]
    Canceled = 690970002,
}

[DataContract()]
public enum msdyn_rmaprocessingaction {
    
    [EnumMember()]
    [OptionSetMetadata("Create RTV", Index=0)]
    CreateRTV = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Return to Warehouse", Index=1)]
    ReturntoWarehouse = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Change Asset Ownership", Index=2)]
    ChangeAssetOwnership = 690970002,
}

[DataContract()]
public enum msdyn_rmasystemstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Pending", Index=0)]
    Pending = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Canceled", Index=1)]
    Canceled = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Products Received", Index=2)]
    ProductsReceived = 690970002,
}

[DataContract()]
public enum msdyn_wosystemstatus {
    
    [EnumMember()]
    [OptionSetMetadata("Open - Unscheduled", Index=0)]
    OpenUnscheduled = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Open - Scheduled", Index=1)]
    OpenScheduled = 690970001,
    
    [EnumMember()]
    [OptionSetMetadata("Open - In Progress", Index=2)]
    OpenInProgress = 690970002,
    
    [EnumMember()]
    [OptionSetMetadata("Open - Completed", Index=3)]
    OpenCompleted = 690970003,
    
    [EnumMember()]
    [OptionSetMetadata("Closed - Posted", Index=4)]
    ClosedPosted = 690970004,
    
    [EnumMember()]
    [OptionSetMetadata("Closed - Canceled", Index=5)]
    ClosedCanceled = 690970005,
}

[DataContract()]
public enum msdyn_productservicestatus {
    
    [EnumMember()]
    [OptionSetMetadata("Estimated", Index=0)]
    Estimated = 690970000,
    
    [EnumMember()]
    [OptionSetMetadata("Used", Index=1)]
    Used = 690970001,
}

[DataContract()]
public enum msdyn_inspectionresult {
    
    [EnumMember()]
    [OptionSetMetadata("Pass", Index=0, Color="#0000ff")]
    Pass = 192350000,
    
    [EnumMember()]
    [OptionSetMetadata("Fail", Index=1, Color="#0000ff")]
    Fail = 192350001,
    
    [EnumMember()]
    [OptionSetMetadata("Partial Success", Index=2, Color="#0000ff")]
    PartialSuccess = 192350002,
    
    [EnumMember()]
    [OptionSetMetadata("NA", Index=3, Color="#0000ff")]
    NA = 192350003,
}

[DataContract()]
public enum ts_findingtype {
    
    [EnumMember()]
    [OptionSetMetadata("Undecided", Index=0)]
    Undecided = 717750000,
    
    [EnumMember()]
    [OptionSetMetadata("Observation", Index=1)]
    Observation = 717750001,
    
    [EnumMember()]
    [OptionSetMetadata("Non-compliance", Index=2)]
    Noncompliance = 717750002,
}

[DataContract()]
public enum ppp_calltype {
    
    [EnumMember()]
    [OptionSetMetadata("Traveller Validation", Index=0, Color="")]
    TravellerValidation = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Inspector Test", Index=1, Color="")]
    InspectorTest = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Air Carrier Inquiry", Index=2, Color="")]
    AirCarrierInquiry = 927820002,
}

[DataContract()]
public enum ppp_casebriefoptions {
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Denied Boarding", Index=0)]
    DirectionDeniedBoarding = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Additional Screening", Index=1)]
    DirectionAdditionalScreening = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Allowed - Other Response Measure", Index=2)]
    AllowedOtherResponseMeasure = 927820002,
}

[DataContract()]
public enum ppp_directionoptions {
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Denied Boarding", Index=0)]
    DirectionDeniedBoarding = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Additional Screening", Index=1)]
    DirectionAdditionalScreening = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Allowed - Other Response Measure", Index=2)]
    AllowedOtherResponseMeasure = 927820002,
}

[DataContract()]
public enum ppp_gender {
    
    [EnumMember()]
    [OptionSetMetadata("M", Index=0)]
    M = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("F", Index=1)]
    F = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("X", Index=2)]
    X = 927820002,
    
    [EnumMember()]
    [OptionSetMetadata("U", Index=3)]
    U = 927820003,
}

[DataContract()]
public enum ppp_idsused {
    
    [EnumMember()]
    [OptionSetMetadata("Passport", Index=0, Color="")]
    Passport = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Drivers Licence", Index=1, Color="")]
    DriversLicence = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Other (Provide Details)", Index=3, Color="")]
    OtherProvideDetails = 927820003,
    
    [EnumMember()]
    [OptionSetMetadata("Government Issued ID (Provide Details)", Index=2, Color="")]
    GovernmentIssuedIDProvideDetails = 927820004,
}

[DataContract()]
public enum ppp_matchfound {
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=0)]
    Yes = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=1)]
    No = 927820001,
}

[DataContract()]
public enum ppp_nameprovidedoptions {
    
    [EnumMember()]
    [OptionSetMetadata("Primary", Index=0)]
    Primary = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Alias / Name Variant", Index=1)]
    AliasNameVariant = 927820001,
}

[DataContract()]
public enum ppp_nominatingagencyadditional {
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=0)]
    Yes = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=1)]
    No = 927820001,
}

[DataContract()]
public enum ppp_nominatingagencyoptions {
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Denied Boarding", Index=0)]
    DirectionDeniedBoarding = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Direction - Additional Screening", Index=1)]
    DirectionAdditionalScreening = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Allowed - Other Response Measure", Index=2)]
    AllowedOtherResponseMeasure = 927820002,
}

[DataContract()]
public enum ppp_opensourceadditional {
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=0)]
    Yes = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=1)]
    No = 927820001,
}

[DataContract()]
public enum ppp_otherconsiderationsdropdown {
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=0)]
    Yes = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=1)]
    No = 927820001,
}

[DataContract()]
public enum ppp_paymentmethod {
    
    [EnumMember()]
    [OptionSetMetadata("Cash", Index=0)]
    Cash = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Credit Card", Index=1)]
    CreditCard = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Debit Card", Index=2)]
    DebitCard = 927820002,
}

[DataContract()]
public enum ppp_recordstatus {
    
    [EnumMember()]
    [OptionSetMetadata("New", Index=0)]
    New = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Draft", Index=2)]
    Draft = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Closed", Index=3)]
    Closed = 927820002,
    
    [EnumMember()]
    [OptionSetMetadata("In Progress", Index=4)]
    InProgress = 927820003,
    
    [EnumMember()]
    [OptionSetMetadata("Further Action Required", Index=1)]
    FurtherActionRequired = 927820004,
    
    [EnumMember()]
    [OptionSetMetadata("Unresolved", Index=5)]
    Unresolved = 927820005,
}

[DataContract()]
public enum ppp_seatrequestmade {
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=2, Color="")]
    Unknown = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("No", Index=1, Color="")]
    No = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Yes", Index=0, Color="")]
    Yes = 927820002,
}

[DataContract()]
public enum ppp_ticketpurchasemethod {
    
    [EnumMember()]
    [OptionSetMetadata("Online", Index=0)]
    Online = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Travel Agency", Index=1)]
    TravelAgency = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Directly from Air Carrier", Index=2)]
    DirectlyfromAirCarrier = 927820002,
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=3)]
    Unknown = 927820003,
}

[DataContract()]
public enum ppp_tickettype {
    
    [EnumMember()]
    [OptionSetMetadata("One-way", Index=0, Color="")]
    Oneway = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Return", Index=1, Color="")]
    Return = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Unknown", Index=2, Color="")]
    Unknown = 927820002,
}

[DataContract()]
public enum ppp_travelpurpose {
    
    [EnumMember()]
    [OptionSetMetadata("Business", Index=0)]
    Business = 927820000,
    
    [EnumMember()]
    [OptionSetMetadata("Pleasure", Index=1)]
    Pleasure = 927820001,
    
    [EnumMember()]
    [OptionSetMetadata("Other", Index=2)]
    Other = 927820002,
}

[DataContract()]
public enum ts_requesttype {
    
    [EnumMember()]
    [OptionSetMetadata("Create Stakeholder", Index=0)]
    CreateStakeholder = 717750000,
    
    [EnumMember()]
    [OptionSetMetadata("Update Stakeholder", Index=1)]
    UpdateStakeholder = 717750001,
    
    [EnumMember()]
    [OptionSetMetadata("Remove Stakeholder", Index=2)]
    RemoveStakeholder = 717750002,
    
    [EnumMember()]
    [OptionSetMetadata("Create Work Order", Index=3)]
    CreateWorkOrder = 717750003,
    
    [EnumMember()]
    [OptionSetMetadata("Update Work Order", Index=4)]
    UpdateWorkOrder = 717750004,
    
    [EnumMember()]
    [OptionSetMetadata("Remove Work Order", Index=5)]
    RemoveWorkOrder = 717750005,
    
    [EnumMember()]
    [OptionSetMetadata("Create Site", Index=6)]
    CreateSite = 717750006,
    
    [EnumMember()]
    [OptionSetMetadata("Update Site", Index=7)]
    UpdateSite = 717750007,
    
    [EnumMember()]
    [OptionSetMetadata("Remove Site", Index=8)]
    RemoveSite = 717750008,
    
    [EnumMember()]
    [OptionSetMetadata("Create Operation", Index=9)]
    CreateOperation = 717750009,
    
    [EnumMember()]
    [OptionSetMetadata("Update Operation", Index=10)]
    UpdateOperation = 717750010,
    
    [EnumMember()]
    [OptionSetMetadata("Remove Operation", Index=11)]
    RemoveOperation = 717750011,
}
